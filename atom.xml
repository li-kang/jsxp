<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>技术学派</title>
  
  <subtitle>学习，因为我还有梦想。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.JiShuXuePai.com/"/>
  <updated>2018-07-12T07:44:06.000Z</updated>
  <id>http://www.JiShuXuePai.com/</id>
  
  <author>
    <name>技术学派</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>零基础程序员自学编程的6种方法，你知道吗？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%A8%8B%E5%BA%8F%E5%91%98%E8%87%AA%E5%AD%A6%E7%BC%96%E7%A8%8B%E7%9A%846%E7%A7%8D%E6%96%B9%E6%B3%95%EF%BC%8C%E4%BD%A0%E7%9F%A5%E9%81%93%E5%90%97%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/零基础程序员自学编程的6种方法，你知道吗？/</id>
    <published>2018-07-11T01:52:18.000Z</published>
    <updated>2018-07-12T07:44:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>随着互联网日趋迅猛，编程已经在我们生活当中无处不在了。众所周知，程序员的工资都很不错，于是越来越多的人，都想加入到编程的行业中来。那么如何加入到程序员的行业当中？</p><p>PHP从入门到放弃，C语言从入门到放弃，Java从入门到放弃，Python从入门到放弃…</p><p>在自学编程的过程中，一部分程序员遇到冰冷的英语字母，枯燥的编程教程，果断选择了放弃。</p><p>但其实自学编程不是那么难，只要是逻辑思维或者理科比较好的还行的小伙伴，编程入门完全可以。</p><p>下面小编就介绍一些自学编程的小方法，希望能对你有帮助：</p><p>首先我们要明确自己的学习目标，不管我我们学习什么样的知识，都要有一个明确的目标，我们需要朝着目标前进，才能少走弯路，从而在学习中得到提升。</p><img src="/blog/学习答疑/学习答疑/零基础程序员自学编程的6种方法，你知道吗？/01.jpg" title="Markdown 语法"><h3 id="0-最好的学习方式"><a href="#0-最好的学习方式" class="headerlink" title="0.最好的学习方式"></a>0.最好的学习方式</h3><p>对于初学者来说，可以采用视频+书籍的方式进行学习。这两种方式形成互补关系。另外阅读代码也可以帮助你解决问题，了解最佳做法，这里的阅读代码是指书籍，博客文章，开源代码等等。</p><p>编程教学视频可以让你迅速掌握编程语法等等，但通常比较生动、浅显，不成系统。而书本是比较系统，深入，但是枯燥，所以最好的方法是书和视频结合。</p><p><strong>当你已经过了入门期之后，看书、看视频、看博客就可以随心所欲。</strong></p><p>但在阅读代码后，你需要自己实际去写代码。可以是任何东西。可以是小的编码任务或者是一个小模块，必须确保你能将之付诸于实践，并用某种方式使用你学到的东西。如果你不这样做，你会发现自己面对编辑器会无从下手。知识等待使用的时间越长，知识这把斧头就越钝。等待学习新知识的时间越久，你就越难以将其融入到代码中。</p><h3 id="1-入门期坚持学习"><a href="#1-入门期坚持学习" class="headerlink" title="1.入门期坚持学习"></a>1.入门期坚持学习</h3><p>自学编程难免遇到这种现象：学了一两个月，发现自己会的不多。</p><p>编程在一开始不会有那么大的反馈，这种现象非常正常！关键是你要坚持个三个月到半年的时间，熬过这个艰难的入门期。</p><p>小编推荐三件事情以避免僵局。第一是试着阅读更多关于技术的文章，并总体掌握正在发生什么。通常，当你陷入困境时，意味着你对需要澄清的事情做出了不正确的假设。第二是咨询互联网。这一点很显然是值得一提。在网上查找并询问有过这个问题的人是一个非常重要的技能。Stackoverflow可以说是互联网上最好的网站。不要害怕在那里问自己的问题。通常，只要尽力正确地阐述你的问题就OK了。小编的第三个建议是向你认识的人请求帮助。通常，你或许已经理解了技术，而且有了问题，但是你可能需要更高层次的上下文才能真正解开谜团。不要胆怯，大着胆子上前去问吧。</p><p><img src="02.jpg" alt=""></p><h3 id="2-初学者尽量不要钻牛角尖"><a href="#2-初学者尽量不要钻牛角尖" class="headerlink" title="2.初学者尽量不要钻牛角尖"></a>2.初学者尽量不要钻牛角尖</h3><p>对于人生来说，其中任何目标的实现都离不开耐心。编程学习就如其它任何学习任务一样，都需要反复努力并投入大量时间。</p><p>如果遇到难题，耗了半天时间还是没弄懂，可以暂时跳过，知识积累到一定程度，回头再进行解决你会发现简单多了。不要一味的去钻牛角尖，一定要解决，这样会耗费大量的时间与精力。</p><h3 id="3-寻找良师益友"><a href="#3-寻找良师益友" class="headerlink" title="3.寻找良师益友"></a>3.寻找良师益友</h3><p>学习编程的一个很好的方法就是和其他的程序员交谈。不必谈论任何特定的内容。可以是你正在学习的东西，也可以是你认为很酷的东西，更可以是你正在工作的东西，皆可。你会发现很多程序员并不喜欢只是聊编程。这样做可能会让你学到很多关于库，服务器，编程语言和模式方面的知识。但是，最重要的是，你将了解到其他人是如何看待编程的。你会发现，你认为理所当然或从来没有考虑的事情在人与人之间是非常不同的。</p><p>还有你遇到的那些小问题，已经有无数前辈也曾遇到过，他们总结了并分享在互联网上了，前人的经验是你的宝贵资源，要善于利用谷歌等软件。</p><p><img src="03.jpg" alt=""></p><h3 id="4-有目的的练习"><a href="#4-有目的的练习" class="headerlink" title="4.有目的的练习"></a>4.有目的的练习</h3><p>不要想着学习完就可以赚1w+这样很容易放弃编程，编程语言是一个很大的知识库，需要你不断的学习。</p><p>最好是奔着一个小项目而学习编程，当你把作品做出来了，有了成就感，同时基本上具备找工作的能力，就找个初级的开发岗位，再进阶，你的自学之路功与名都有了。</p><p>没有什么可以与工作于自己的项目以学习编程更有用的了。有了一个点子并试图实现这个点子是非常具有挑战性的。它需要很强的自律心及耐心。但是，通过尝试实际做一件事情，你可以学到如何分解问题并应用技术。你面对的各种问题，以及你如何解决它们才真正是所谓的编程。此外，想要完成项目的驱动力是继续学习的动力。从业余项目获得的满足感远远超过你在抽象中学习东西的满足感。</p><p>小编建议，选择你感兴趣的同时你也有想法如何实现的东西。能够在开始之前表达实现总是有助于保持我的动力。在此旅途之中你一定会学到很多！</p><h3 id="5-完美主义者和搬运工的区别"><a href="#5-完美主义者和搬运工的区别" class="headerlink" title="5.完美主义者和搬运工的区别"></a>5.完美主义者和搬运工的区别</h3><p>编程是一门手艺，需要反复练习，脱离书本和视频看是否能独立实现？学到最后的境界无非就是：我亦无他，惟手熟尔 。</p><p>有两种类型的程序员：完美主义者和搬运工。有些人希望一切都是正确的，他们希望完美，他们希望遵循所有的最佳实践，并写出漂亮的优雅的代码。他们想要理解每一行代码。有别于那些不管三七二十一，只要自己的代码能工作即可，即使对代码库有损害的人。平衡这两种技能是非常重要的。有时你应该深入钻研一个问题或项目，看看发生了什么。有时你应该让它工作即可，即使你不知道发生了什么。</p><p>每当你花费太多时间在某个东西上时，那就问问自己：我应该采取哪种方法？在大多数情况下，你会想取中间值。你想提供一个好的、坚实的解决方案，同时你可以自信地理解和修改，但没有耗费荒谬的时间。随着你作为开发人员的成长，你会更好地明白什么时候就此离开就可以，以及什么时候需要以某些方法完成。</p><p><img src="04.jpg" alt=""></p><h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>这些方法可以帮助新手在他们漫长的学习旅程中起到至关重要的作用。我知道需要学习的东西还很多，并将继续学习。最重要的事情说三遍，请继续，不要放弃，不要放弃，不要放弃。当然，说说容易，因为学习编程有时可能会令人非常沮丧！不要担心。这是正常的。每个人都经历过这样的心情。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;随着互联网日趋迅猛，编程已经在我们生活当中无处不在了。众所周知，程序员的工资都很不错，于是越来越多的人，都想加入到编程的行业中来。那么如何加入到程序员的行业当中？&lt;/p&gt;&lt;p&gt;PHP从入门到放弃，C语言从入门到放弃，Java从入门到放弃，Python从入门到放弃…&lt;/p&gt;&lt;
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
  </entry>
  
  <entry>
    <title>什么是数据分析？数据分析的作用是什么？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E4%BB%80%E4%B9%88%E6%98%AF%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%EF%BC%9F%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%9A%84%E4%BD%9C%E7%94%A8%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/什么是数据分析？数据分析的作用是什么？/</id>
    <published>2018-07-11T01:36:16.000Z</published>
    <updated>2018-07-12T07:41:51.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-什么是数据分析？"><a href="#1-什么是数据分析？" class="headerlink" title="1.什么是数据分析？"></a>1.什么是数据分析？</h3><img src="/blog/学习答疑/学习答疑/什么是数据分析？数据分析的作用是什么？/01.jpg" title="Markdown 语法"><p>数据分析的目的是把隐藏在一些看似杂乱无章的数据背后的信息提炼出来，总结出所研究对象的内在规律。在实际工作中，数据分析能够帮助管理者进行判断和决策，以便采取适当策略与行动。比如：企业的高管希望通过市场分析和研究，把握当前产品的市场动向，从而制定合理的产品研发和销售计划，这就必须依赖数据分析才能够完成。</p><p>简单的说，就是对数据进行分析，比较专业的说法是，数据分析是指用适当的统计分析方法对收集来的大量数据进行分析，未提取有用信息和形成结论而对数据加以详细研究和概括总结的过程。以求最大化地开发数据的功能，发挥数据的作用。</p><p>数据分析包含“数据”和“分析”两个方面一方面包括加工和整理数据，另一方面也包括分析数据，从中提取有价值的信息并形成对业务有帮助的结论。</p><p>数据分析的成果通常以分析报告的形式呈现。对于数据分析报告，分析就是论点，数据就是论据，两者缺一不可。</p><h3 id="2-数据分析类别"><a href="#2-数据分析类别" class="headerlink" title="2.数据分析类别"></a>2.数据分析类别</h3><p>其中，探索性数据分析侧重于在数据中发现新的特征，而验证性数据分析则侧重于验证已有假设的真伪证明。</p><p>数据分析的划分：描述性数据分析、探索性数据分析、验证性数据分析。</p><p><img src="02.jpg" alt=""></p><p>1）描述性数据分析：属于初级数据分析，常见的分析方法有对比分析法、平均分析法、交叉分析法。</p><p>2）探索性数据分析：侧重于再数据之中发现新的特征</p><p>3）验证性数据分析：侧重于验证已有假设的真伪证明</p><p><strong>其中探索性数据分析和验证性数据分析属于高级数据分析，常见的分析方法有相关分析、因子分析、回归分析等等。</strong></p><p><strong>3.数据分析的作用</strong></p><p>数据分析在日常企业运营中主要有三大作用：</p><p><img src="03.jpg" alt=""></p><p><strong>1.现状分析</strong></p><p>简单的说就是告诉你过去发生了什么。</p><p>具体表现在：</p><p>第一，告诉你企业现阶段的整体运营情况，通过各个经营指标的完成情况来衡量企业的运营状态，以说明企业整体运营是更好了还是坏了，好的程度是如何，坏的程度又到哪里。</p><p>第二，告诉你企业各项业务的构成，让你了解企业各项业务的发展及变动情况，对企业经营状况有更深入的了解。</p><p>现状分析一般通过日常通报来完成，如日报、周报、月报等形式。</p><p><strong>2.原因分析</strong></p><p>简单的说就是告诉你某一现状为什么发生。经过第一阶段的现状分析，我们对企业的运营情况有了一个基本的了解，但是不知道运营情况具体好在哪里，差在哪里，是什么原因引起的。这时候我们就需要开展原因分析，以进一步确定业务变动的具体原因。</p><blockquote><p>原因分析一般通过专题分析来完成，根据企业运营情况选择针对某一现状进行原因分析。</p></blockquote><p><strong>3.预测分析</strong></p><p>简单来说就是告诉你将来会发生什么。</p><p>在了解企业运营现状后，有时候还需要对企业未来发展趋势做出预测，为企业制定经营目标以及提供有效的策略参考与决策依据，以确保企业的可持续健康发展。</p><p>预测分析一般通过专题分析来完成，通常在制定企业季度、年度等计划时进行，其开展的频率没有现状分析及原因分析高。</p><blockquote><p>什么时候开展什么样的数据分析，需要根据自身的需求及目的来确定。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-什么是数据分析？&quot;&gt;&lt;a href=&quot;#1-什么是数据分析？&quot; class=&quot;headerlink&quot; title=&quot;1.什么是数据分析？&quot;&gt;&lt;/a&gt;1.什么是数据分析？&lt;/h3&gt;&lt;img src=&quot;/blog/学习答疑/学习答疑/什么是数据分析？数据分析的作用
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
  </entry>
  
  <entry>
    <title>9张图让初学者读懂目前最火的编程语言及区别，你pick谁？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/9%E5%BC%A0%E5%9B%BE%E8%AE%A9%E5%88%9D%E5%AD%A6%E8%80%85%E8%AF%BB%E6%87%82%E7%9B%AE%E5%89%8D%E6%9C%80%E7%81%AB%E7%9A%84%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%8F%8A%E5%8C%BA%E5%88%AB%EF%BC%8C%E4%BD%A0pick%E8%B0%81%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/9张图让初学者读懂目前最火的编程语言及区别，你pick谁？/</id>
    <published>2018-07-09T06:51:32.000Z</published>
    <updated>2018-07-10T09:37:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文囊括了9种目前市面上最主流的编程语言：C、C++、C#、Java、Python、Ruby、JavaScript、PHP以及Objective-C，用图表的方式展示了由其打造的顶级应用成果和该语言的优势与弊端。</p><img src="/blog/学习答疑/学习答疑/9张图让初学者读懂目前最火的编程语言及区别，你pick谁？/01.jpg" title="Markdown 语法"><h3 id="接下来是9种语言的图片对比"><a href="#接下来是9种语言的图片对比" class="headerlink" title="接下来是9种语言的图片对比"></a>接下来是9种语言的图片对比</h3><p><img src="02.jpg" alt=""></p><p><img src="03.jpg" alt=""></p><p><img src="04.jpg" alt=""></p><p><img src="05.jpg" alt=""></p><p><img src="06.jpg" alt=""></p><p><img src="07.jpg" alt=""></p><p><img src="08.jpg" alt=""></p><p><img src="09.jpg" alt=""></p><p><img src="10.jpg" alt=""></p><p><strong>看完这9张图，您pick哪种编程语言呢？欢迎大家提出不同的观点和看法，我们共同讨论，共同学习。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文囊括了9种目前市面上最主流的编程语言：C、C++、C#、Java、Python、Ruby、JavaScript、PHP以及Objective-C，用图表的方式展示了由其打造的顶级应用成果和该语言的优势与弊端。&lt;/p&gt;&lt;img src=&quot;/blog/学习答疑/学习答疑/9
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
  </entry>
  
  <entry>
    <title>12道必会的Python面试题，附详细讲解</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/12%E9%81%93%E5%BF%85%E4%BC%9A%E7%9A%84Python%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%99%84%E8%AF%A6%E7%BB%86%E8%AE%B2%E8%A7%A3/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/12道必会的Python面试题，附详细讲解/</id>
    <published>2018-07-09T06:11:18.000Z</published>
    <updated>2018-07-11T00:52:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>无论是应聘Python方向的web开发，还是爬虫工程师，或是数据分析，还是自动化运维，都涉及到一些基础的知识！小编挑了一些Python的基础面试题，看看你能不能的答上来，也许面试的同学用的着！</p><img src="/blog/学习答疑/学习答疑/12道必会的Python面试题，附详细讲解/01.jpg" title="Markdown 语法"><h3 id="1-Python这么好，说说它的特性吧"><a href="#1-Python这么好，说说它的特性吧" class="headerlink" title="1.Python这么好，说说它的特性吧"></a>1.Python这么好，说说它的特性吧</h3><p>关键特性</p><ul><li>Python是一种解释型语言，这意味着，与C，C++不同，Python不需要在运行之前进行编译。它是边运行边解释的。</li><li>Python是动态类型化的，这意味着当你声明它们或类似的东西时，你不需要声明变量的类型。你可以x=1 ，然后x=”abc”是没有错误。</li><li>Python非常适合面向对象编程，因为它允许定义类以及组合和继承。Python没有访问修饰符。</li><li>在Python中函数是一等对象，这意味着它们可以在运行时动态创建，能赋值给变量或者作为参数传给函数，还能作为函数的返回值。</li><li>Python代码容易上手，开发速度很快，但运行速度通常比编译语言慢。幸运的是，Python允许包含基于C的扩展，所以瓶颈可以被优化掉。</li></ul><h3 id="2-单引号、双引号和三引号之间的区别"><a href="#2-单引号、双引号和三引号之间的区别" class="headerlink" title="2.单引号、双引号和三引号之间的区别"></a>2.单引号、双引号和三引号之间的区别</h3><p>单引号和双引号主要是用来表示字符串</p><p>比如:</p><ul><li>单引号:’python’</li><li>双引号:”python”</li></ul><p>区别:</p><p>若你的字符串里面本身包含单引号,必须用双引号包裹。</p><p>比如:”can’t find the log “</p><p>三引号</p><ul><li>三单引号:’’’python ‘’’,也可以表示字符串一般用来输入多行文本,或者用于大段的注释。</li><li>三双引号：”””python”””，一般用在类里面,用来注释类,这样省的写文档,直接用类的对象doc访问获得文档。</li></ul><h3 id="3-Python里面如何拷贝一个对象？"><a href="#3-Python里面如何拷贝一个对象？" class="headerlink" title="3.Python里面如何拷贝一个对象？"></a>3.Python里面如何拷贝一个对象？</h3><p>标准库中的copy模块提供了两个方法来实现拷贝.一个方法是copy,它返回和参数包含内容一样的对象.</p><p>使用deepcopy方法,对象中的属性也被复制</p><h3 id="4-Python的参数传递，是值传递还是引用传递？"><a href="#4-Python的参数传递，是值传递还是引用传递？" class="headerlink" title="4.Python的参数传递，是值传递还是引用传递？"></a>4.Python的参数传递，是值传递还是引用传递？</h3><p>Python的参数传递有：</p><ul><li>位置参数</li><li>默认参数</li><li>可变参数</li><li>关键字参数</li></ul><p>函数的传值到底是值传递还是引用传递，要看情况</p><p>不可变参数用值传递：</p><p>比如像整数和字符串这样的不可变对象，是通过拷贝进行传递的，因为你无论如何都不可能在原处改变不可变对象。</p><p>可变参数是用引用传递：</p><p>比如像列表，字典这样的对象是通过引用传递，和C语言里面的用指针传递数组很相似，可变对象能在函数内部改变。<br><img src="02.jpg" alt=""></p><h3 id="5-什么是lambda函数？它的好处是什么"><a href="#5-什么是lambda函数？它的好处是什么" class="headerlink" title="5.什么是lambda函数？它的好处是什么?"></a>5.什么是lambda函数？它的好处是什么?</h3><p>lambda 表达式，通常是在需要一个函数，但是又不想费神去命名一个函数的场合下使用，也就是指匿名函数。</p><p>lambda函数：首要用途是指点短小的回调函数。</p><blockquote><p>lambda [arguments]:expression</p><blockquote><blockquote><p>a=lambdax,y:x+y</p></blockquote></blockquote><blockquote><blockquote><p>a(3,11)</p></blockquote></blockquote></blockquote><p>好处：</p><p>lambda能和def做同样种类的工作，特别是对于那些逻辑简单的函数，直接用lambda会更简洁，而且省去取函数名的麻烦。</p><h3 id="6-字符串格式化-和-format的区别是什么？"><a href="#6-字符串格式化-和-format的区别是什么？" class="headerlink" title="6.字符串格式化: %和 .format的区别是什么？"></a>6.字符串格式化: %和 .format的区别是什么？</h3><p>字符串的format函数非常灵活，很强大,可以接受的参数不限个数，并且位置可以不按顺序，而且有较为强大的格式限定符(比如:填充、对齐、精度等)。</p><h3 id="7-Python是如何进行内存管理的？"><a href="#7-Python是如何进行内存管理的？" class="headerlink" title="7.Python是如何进行内存管理的？"></a>7.Python是如何进行内存管理的？</h3><p>Python引用了一个内存池(memory pool)机制，即Pymalloc机制(malloc:n.分配内存)，用于管理对小块内存的申请和释放</p><p>内存池（memory pool）的概念：</p><p>当创建大量消耗小内存的对象时，频繁调用new/malloc会导致大量的内存碎片，致使效率降低。内存池的概念就是预先在内存中申请一定数量的，大小相等 的内存块留作备用，当有新的内存需求时，就先从内存池中分配内存给这个需求，不够了之后再申请新的内存。这样做最显著的优势就是能够减少内存碎片，提升效率。</p><p>内存池的实现方式有很多，性能和适用范围也不一样。</p><p>python中的内存管理机制——Pymalloc：</p><p>python中的内存管理机制都有两套实现，一套是针对小对象，就是大小小于256bits时,pymalloc会在内存池中申请内存空间；当大于256bits，则会直接执行new/malloc的行为来申请内存空间。 关于释放内存方面，当一个对象的引用计数变为0时，python就会调用它的析构函数。在析构时，也采用了内存池机制，从内存池来的内存会被归还到内存池中，以避免频繁地释放动作。</p><h3 id="8-如何用Python来进行查询和替换一个文本字符串？"><a href="#8-如何用Python来进行查询和替换一个文本字符串？" class="headerlink" title="8.如何用Python来进行查询和替换一个文本字符串？"></a>8.如何用Python来进行查询和替换一个文本字符串？</h3><p>可以使用sub()方法来进行查询和替换，sub方法的格式为：sub(replacement, string[, count=0])</p><p>replacement是被替换成的文本</p><p>string是需要被替换的文本</p><p>count是一个可选参数，指最大被替换的数量</p><h3 id="9-Python里面search-和match-的区别？"><a href="#9-Python里面search-和match-的区别？" class="headerlink" title="9.Python里面search()和match()的区别？"></a>9.Python里面search()和match()的区别？</h3><p>match()函数只检测RE是不是在string的开始位置匹配，search()会扫描整个string查找匹配, 也就是说match()只有在0位置匹配成功的话才有返回，如果不是开始位置匹配成功的话，match()就返回none 。<br><img src="03.jpg" alt=""></p><h3 id="10-线程如何在Python中实现"><a href="#10-线程如何在Python中实现" class="headerlink" title="10.线程如何在Python中实现"></a>10.线程如何在Python中实现</h3><p>Python有一个多线程包threading，可以使用多线程来加快你的代码。但是Python有一个叫做Global Interpreter Lock（GIL）的构造。GIL确保只有一个’线程’可以在任何时候执行。</p><p>线程获取GIL，做一些工作，然后将GIL传递到下一个线程。这种情况发生得非常快，所以对于人眼而言，它可能看起来像你的线程并行执行，但它们实际上只是轮流使用相同的CPU内核。因此GIL的存在使得Python中的多线程无法真正的利用多核的优势来提高性能。</p><p>对于IO密集型操作，在等待操作系统返回的时候会释放GIL；再比如爬虫因为有等待的服务器的响应时间，可以利用多线程来加速！但是对于CPU密集型操作，只能通过多进程Multiprocess来加速。</p><h3 id="11-Python的参数传递，是值传递还是引用传递？"><a href="#11-Python的参数传递，是值传递还是引用传递？" class="headerlink" title="11.Python的参数传递，是值传递还是引用传递？"></a>11.Python的参数传递，是值传递还是引用传递？</h3><p>Python的参数传递有：</p><ul><li>位置参数</li><li>默认参数</li><li>可变参数</li><li>关键字参数</li></ul><p>函数的传值到底是值传递还是引用传递，要看情况</p><p>不可变参数用值传递：</p><p>比如像整数和字符串这样的不可变对象，是通过拷贝进行传递的，因为你无论如何都不可能在原处改变不可变对象。</p><p>可变参数是用引用传递：</p><p>比如像列表，字典这样的对象是通过引用传递，和C语言里面的用指针传递数组很相似，可变对象能在函数内部改变。</p><h3 id="12-数据仓库是什么？"><a href="#12-数据仓库是什么？" class="headerlink" title="12.数据仓库是什么？"></a>12.数据仓库是什么？</h3><p>数据仓库是一个面向主题的、集成的、稳定的、反映历史变化的、随着时间的流逝发生变化的数据集合。它主要支持管理人员的决策分析。</p><p>数据仓库收集了企业相关内部和外部各个业务系统数据源、归档文件等一系列历史数据，最后转化成企业需要的战略决策信息。</p><h3 id="特点："><a href="#特点：" class="headerlink" title="特点："></a>特点：</h3><ol><li><strong>面向主题</strong>：根据业务的不同而进行的内容划分；</li><li><strong>集成特性</strong>：因为不同的业务源数据具有不同的数据特点，当业务源数据进入到数据仓库时，需要采用统一的编码格式进行数据加载，从而保证数据仓库中数据的唯一性；</li><li><strong>非易失性</strong>：数据仓库通过保存数据不同历史的各种状态，并不对数据进行任何更新操作。</li><li><strong>历史特性</strong>：数据保留时间戳字段，记录每个数据在不同时间内的各种状态。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;无论是应聘Python方向的web开发，还是爬虫工程师，或是数据分析，还是自动化运维，都涉及到一些基础的知识！小编挑了一些Python的基础面试题，看看你能不能的答上来，也许面试的同学用的着！&lt;/p&gt;&lt;img src=&quot;/blog/学习答疑/学习答疑/12道必会的Pytho
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
  </entry>
  
  <entry>
    <title>新手程序员不知道的小技巧？你知道多少？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E6%96%B0%E6%89%8B%E7%A8%8B%E5%BA%8F%E5%91%98%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9F%E4%BD%A0%E7%9F%A5%E9%81%93%E5%A4%9A%E5%B0%91%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/新手程序员不知道的小技巧？你知道多少？/</id>
    <published>2018-07-09T06:05:16.000Z</published>
    <updated>2018-07-10T09:34:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>对于一个新手程序员来说，多学习一些技巧，可以让自己的技能日渐成熟！毕竟技多不压身，多学一些技巧，总能为工作增加不少便捷。接下来小编就为大家总结了一些对新手程序员来说比较实用的一些小技巧。</p><img src="/blog/学习答疑/学习答疑/新手程序员不知道的小技巧？你知道多少？/01.jpg" title="Markdown 语法"><ol><li>项目交付之前偷偷测试一遍。</li><li>先用profiler调查，才能开始谈优化。</li><li>学习的时候一定要使用云笔记，这里推荐印象笔记或者有道云笔记。下载平板，手机和PC版本，同步，随时随地看。</li><li>注释贵精不贵多。漫山遍野的碎碎念注释，实际就是背景噪音。好的命名就能注释一切。</li><li>想要提升脑容量，那就开始查看工作日志。养成记工作日志的习惯。</li><li><strong>普通程序员+google=超级程序员</strong>。</li><li>提问前先做调研。节约大家的时间。</li><li>重构是程序员的主力技能。</li><li><strong>不要先写框架再写实现</strong>。最好反过来，从原型中提炼框架。</li><li>好的项目作风硬派，一键测试，一键发布，一键部署; 烂的项目生性猥琐，口口相传，不立文字，神神秘秘。</li><li>养成良好的代码风格以及变量名、函数名命名风格。</li><li><strong>重构/优化/修复Bug，同时只能作一件</strong>。</li><li>翻墙是程序员必备技能，多翻墙去看看国外的最新技术和素材库，常充电。程序员只有一种死法：土死的。</li><li>程序不等于数据结构加算法，而是搜索引擎加英语。</li><li>简单模块注意封装，复杂模块注意分层。</li><li>注意代码缩进，好的代码缩进不单美观，还能够加快你阅读代码的效率。</li><li>迭代速度决定工作强度。想多快好省，就从简化开发流程，加快迭代速度开始。</li><li>最好的工具是纸笔，其次好的是M<strong>arkdown</strong>。</li><li>最有用的语言是English。其次的可能是<strong>Python</strong>。</li><li><strong>Git是最棒的。简单，可靠，免费</strong>。</li><li>资源、代码应一道受版本管理。资源匹配错误远比代码匹配错误更难排查。</li><li>不要基于想象开发， 要基于原型开发。原型的价值是快速验证想法，帮大家节省时间。</li><li>编译器永远比你懂微观优化。只能向它不擅长的方向努力。</li><li>与主流意见/方法/风格/习惯相悖时，先检讨自己最可靠。</li><li>出现Bug主动查，不管是不是你的。这能让你业务能力猛涨、个人形象飙升。</li><li>Log要写时间与分类。并且要能重定向输出。</li><li>编写函数不超过50行。</li><li>code review最好以小组/结对的形式。对业务有一定了解，建议会更有价值（但不绝对）。而且不会成为负担。管理员个人review则很容易成team的瓶颈。</li><li>造轮子是很好的锻炼方法。不过前提是见过别的轮子。</li><li>永远别小看程序媛。</li></ol><p><img src="02.jpg" alt=""></p><h3 id="老程序员和新手程序员的区别"><a href="#老程序员和新手程序员的区别" class="headerlink" title="老程序员和新手程序员的区别"></a>老程序员和新手程序员的区别</h3><p>老程序员和新手程序员相比一个很大的区别来自于<strong>DEBUG的能力。</strong></p><p><strong>1.从高往底找错</strong></p><p>很多新手遇到程序执行结果不对，先认为是机器毛病（浮点精度、硬件故障），然后认为是驱动有错，再认为是系统有错，最后才开始排查自己的程序。其实99%的情况下是自己程序有错，然后那1%里面的99%是系统有Bug，再接着那1%里的99%是驱动有bug，最后到硬件问题，已经微乎其微了。应该从高层往底层查，而不是反过来。</p><p><strong>2.科学的方法</strong></p><p>DEBUG一般来说都是知道现象，但原因却不知道。这一点和很多自然科学的情况一样，完全也可以用科学的方法来：</p><p><strong>提假说 -&gt; 根据假说做出预言 -&gt; 做实验肯定或否定预言</strong></p><p>对应于DEBUG，那就是假设是某个地方有问题，那么推断它一定会导致除了你看到的现象之外的其他现象，运行程序看你的推断是否成立。</p><p>掌握这个方法后DEBUG不在变成瞎找瞎试，而是有迹可循有系统可依赖的方法。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;对于一个新手程序员来说，多学习一些技巧，可以让自己的技能日渐成熟！毕竟技多不压身，多学一些技巧，总能为工作增加不少便捷。接下来小编就为大家总结了一些对新手程序员来说比较实用的一些小技巧。&lt;/p&gt;&lt;img src=&quot;/blog/学习答疑/学习答疑/新手程序员不知道的小技巧？你
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
  </entry>
  
  <entry>
    <title>C++、Java、Python，哪个更适合编程初学者入门？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/C++%E3%80%81Java%E3%80%81Python%EF%BC%8C%E5%93%AA%E4%B8%AA%E6%9B%B4%E9%80%82%E5%90%88%E7%BC%96%E7%A8%8B%E5%88%9D%E5%AD%A6%E8%80%85%E5%85%A5%E9%97%A8%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/C++、Java、Python，哪个更适合编程初学者入门？/</id>
    <published>2018-07-09T03:50:06.000Z</published>
    <updated>2018-07-09T03:57:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>对于一个零基础想转行做IT的小白来说，学什么编程语言入门比较好呢？相信这是困扰很多想成为程序员的第一个问题。面对各种各样的编程语言，究竟哪一种最适合零基础的人学习呢？</p><p>很多刚入门的新手可能都听说过C++，Java，Python这三门编程语言，那我们不可能去一一学习，其实我们不需要每种编程语言都熟悉了解，在当前形式下，只要掌握时下对自己来说最需要的编程语言就可以了。但这三门语言如何选择，很多人却无从下手。</p><img src="/blog/学习答疑/学习答疑/C++、Java、Python，哪个更适合编程初学者入门？/01.jpg" title="Markdown 语法"><p><strong>具体如何选择哪种语言就要看你学编程的目的是什么了。</strong></p><h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><p>目前几乎涉猎领域最广的语言，Java常常跟”企业”联系在一起, 因为具备一些很好的语言特性, 以及丰富的框架, 在企业应用中最被青睐。Java可以用来做网站开发，可以做游戏开发。目前市场对Java开发者的需求量很大，而且Java很好找工作。Java具有面向对象，稳定，平台无关等特点。使用Java编程无需考虑底层是怎么处理的，通通用对象操作，入门也很简单。目前，从市场上的需求来看，对于好的Java程序员的需求，仍然是供不应求的。</p><p><img src="02.jpg" alt=""></p><h3 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h3><p>C++是在C语言基础上有了初级的面向对象的思想，不建议一开始就上手C++。刚开始学习C可能会觉得很难，因为C有很多跟底层打交道的东西，就相当于高级汇编。你要自己去分配内存，回收垃圾，了解程序是怎么在你计算机上运行的。学习C语言，就像你刚生下来学会爬行一样。只有会爬了，才能走的更稳，跑的更快。对C语言有了一定了解后，再学习其他语言，像Python之类的都很简单了。语言都是一通百通的，何况那些高级语言都有很强大的库可供调用，不必事事躬亲。但是，如果是彻头彻尾的小白，还是建议从Python开始入门。</p><p><img src="03.jpg" alt=""></p><h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><p>Python是一种面向对象的解释型计算机程序设计语言，语法简洁清晰，又具有丰富和强大的库，它又叫做作胶水语言。Python比较简单，容易学习和掌握，对于没有编程基础的人来说比较容易上手。Python很适合做个爬虫爬数据之类的，很适合用于网络的辅助，抓数据，找资源，利用python是非常好的。Python开发快，简单易学，没有很多技巧，好玩又有趣，很适合培养兴趣。对于零基础的同学来说Python是一个不错的选择。</p><p><img src="04.jpg" alt=""></p><p>其实现在大多公司招人目的就是能干活，能快速干活、解决问题就能拿高薪，不过如果没有全面的知识体系很难通过面试。 程序员最主要的还是得有产品思路，不要知道领导指一下动一下，这样技术再好，工资照样拿不高，产品的目的是为了市场，有市场的产品再小白也能赚钱。</p><p>另外，俗话说“好记性不如烂笔头”，对于初学者而言，养成每天写笔记总结，在技术博客上更新的习惯非常重要。笔记虽然很零散，但只要写，就相当于复习巩固了当天所学内容。同样内容也不在多，哪怕一句话都行。有时候只要开始写第一句话，就会接着写第二句、第三句……第N句。</p><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p>C++对于初学者自学有点难。想当初在大学里读的是计算机软件专业，一学期下来，能够掌握C++的不超过5%。</p><p>Java对于初学者来说也不是很容易，特别是面向对象的概念，在编程初学者连逻辑线性思维都没掌握的时候，是不太容易理解的。而且编译型语言都比较麻烦一点。</p><p>Python是解释性语言，环境配置简单，语法简洁明了。开发速度快，简单易学，没有很多技巧，好玩又有趣，很适合入门编程员培养兴趣。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;对于一个零基础想转行做IT的小白来说，学什么编程语言入门比较好呢？相信这是困扰很多想成为程序员的第一个问题。面对各种各样的编程语言，究竟哪一种最适合零基础的人学习呢？&lt;/p&gt;&lt;p&gt;很多刚入门的新手可能都听说过C++，Java，Python这三门编程语言，那我们不可能去一一学
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
      <category term="C" scheme="http://www.JiShuXuePai.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>作为程序员，你的未来职业规划是什么？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E4%BD%9C%E4%B8%BA%E7%A8%8B%E5%BA%8F%E5%91%98%EF%BC%8C%E4%BD%A0%E7%9A%84%E6%9C%AA%E6%9D%A5%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/作为程序员，你的未来职业规划是什么？/</id>
    <published>2018-07-09T03:38:10.000Z</published>
    <updated>2018-07-09T03:59:31.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>职业规划是什么？</p><p>职业规划是对职业生涯乃至人生进行持续的系统的计划的过程。</p><p>那么程序员的职业规划是怎么样的？</p><p>是做技术，还是管理？是做开发还是运维？成为项目经理还是技术经理…….</p></blockquote><img src="/blog/学习答疑/学习答疑/作为程序员，你的未来职业规划是什么？/01.jpg" title="Markdown 语法"><h3 id="明确的发展方向"><a href="#明确的发展方向" class="headerlink" title="明确的发展方向"></a>明确的发展方向</h3><p><strong>1.帮别人挣钱</strong></p><p>不管你是刚入职的新人，还是管人的经理，甚至是吓唬人的总监，都属于这一阶段。</p><p>通常程序员在这一阶段的职业发展分两条线，技术线和管理线。技术线主要跟机器打交道，搞搞性能调优，高并发处理等等高精细的问题；管理线主要跟人打交道，了解下属的状态，控制资源和进度。</p><p>这一阶段的特点是稳定，低风险也低门槛。缺点是有天花板，一切都按部就班，不会有太大的起伏。收入可以稳定预估，除非是公司上市凭期权小赚一笔。</p><p><strong>2.为自己挣钱</strong></p><p>比打工风险更大，要操更多的心，如果做的事情一直挣不到钱就要饿肚子了。</p><p>想活的舒心就要摸索出技巧：如果做外包，要有客户渠道；依赖于大平台的项目最好花点钱能成为平台的合作伙伴。</p><p>如果不懂搞关系，没有渠道，可以考虑免费或收费模式，把要做的事情中的基本功能抽出来做成产品免费传播，再向定制部分收费。如果能用心定位，抓住细分市场，还是能活的非常不错的。</p><p><strong>3.雇别人挣钱</strong></p><p>没有在创业公司呆过的不建议直接尝试。</p><p>如果你没有独立做过能非常赚钱的软件，上万用户的免费APP，粉丝数6、7万以上的大号，那就先别离职创业，先业余时间搞一搞感受一下。不是每个人都真正喜欢并享受创业的。</p><p>还有一个低风险的做法是去创业公司做CTO，不像CEO压力那么大，而且即使公司做不下去了，他们也可以换家创业公司接着来。</p><p><strong>4.跳槽</strong></p><p>不推荐求职者单纯地通过薪资的高低来进行选择雇主，原因有两个：</p><ul><li>工作是生活的一部分</li><li>职业不可逆性</li></ul><p>别的事情错了我们可以重来，而职业选择上，每走一步都是好几年的时光。一旦走下去，就很难回头，因为一旦换职业方向，哪怕是换个开发语言，这都意味着你之前的积累很可能前功尽弃。所以眼光放长远点，不要只看眼前的高薪，更要看好未来的发展，方向错了，跑得越快输得越狠。</p><p>跳槽不是找工作，而是换工作，它是有很大成本的，需要放弃原来公司的期权，需要重新熟悉业务，重新和同事搞好人际关系。跳槽要考虑好自己的付出和收益，衡量好得失，没事别搞裸辞。</p><p>跳槽不是加薪的砝码。不要以跳槽为砝码去谈加薪，这种迫胁性的谈薪资方式会使主管对你丧失信任。相似的，当你提跳槽时，如果你的主管通过加薪来挽留你，你最好也不要同意。</p><p><strong>永远不要因为”现在很差“而跳槽，要因为”未来更好“而跳槽。只有这样才能保证你一直往上走。</strong></p><p><img src="02.jpg" alt=""></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><strong>1.程序员</strong>：你确实很喜欢代码与开发，你也可以一直做开发，但是你要考虑你以后的发展，你必须要时刻保持学习，并且深入到研究技术。</p><p><strong>2.架构师</strong>：是往真正技术大牛的方向发展的职业线路。若未来你想成为架构师就需要不断专研技术和积累研发经验。不是随便开发人员凭借10年开发经验就可以成为架构师的。成为架构师需要完善和扎实的技术体系，具备较好系统分析和设计能力，丰富的项目研发经验。建议前期可以先去项目外包类型的公司，然后再去互联网平台类型的公司。</p><p><strong>3.技术经理</strong>：是往技术加团队管理的方向发展的职业线路。向此线路发展的同学，需要一定的技术能力和团队管理能力。做管理与性格有关，首先得分析自己性格是不是适合做管理的工作，这点也是很多做技术出身的人员，转型时的最大挑战。有技术经理岗位的存在，一般都是搭配偏需求、产品的项目经理进行项目实施。技术经理的技术可以不用深入研究，但是需要具备一定的广度和项目开发经验。</p><p><strong>4.项目经理</strong>：是往管理的方向发展的职业线路，一般项目经理主要侧重项目管理工作，项目经理很关键的能力就是计划、沟通及组织协调的能力。沟通和表达是开发人员短柄，所以想往此线路发展的同学，从日常的工作、生活中就得逐步加强锻炼这方面能力，其次学习一些项目管理的知识。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;&lt;p&gt;职业规划是什么？&lt;/p&gt;&lt;p&gt;职业规划是对职业生涯乃至人生进行持续的系统的计划的过程。&lt;/p&gt;&lt;p&gt;那么程序员的职业规划是怎么样的？&lt;/p&gt;&lt;p&gt;是做技术，还是管理？是做开发还是运维？成为项目经理还是技术经理…….&lt;/p&gt;&lt;/blockquote&gt;&lt;
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
  </entry>
  
  <entry>
    <title>数据分析师的未来就业前景怎么样？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%B8%88%E7%9A%84%E6%9C%AA%E6%9D%A5%E5%B0%B1%E4%B8%9A%E5%89%8D%E6%99%AF%E6%80%8E%E4%B9%88%E6%A0%B7%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/数据分析师的未来就业前景怎么样？/</id>
    <published>2018-07-06T07:54:28.000Z</published>
    <updated>2018-07-06T08:05:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>随着大数据的快速发展，数据分析师也成了近几年的热门行业，数据分析师的未来发展前景非常乐观，作为一名数据分析师工作内容包括数据的采集、清洗、整理、分析、建模、挖掘、可视化等等。数据分析的目的是把隐没在一大批看来杂乱无章的数据中的信息集中、萃取和提炼出来，以找出所研究对象的内在规律，能够从数据中发掘出有价值的信息。</p><img src="/blog/学习答疑/学习答疑/数据分析师的未来就业前景怎么样？/01.jpg" title="Markdown 语法"><h3 id="什么是数据分析"><a href="#什么是数据分析" class="headerlink" title="什么是数据分析"></a>什么是数据分析</h3><p>数据分析是指用适当的统计方法对收集来的大量数据进行分析，以求最大化地开发数据资料的功能，发挥其数据的作用。数据分析的目的是把隐没在一大批看来杂乱无章的数据中的信息集中、萃取和提炼出来，以找出所研究对象的内在规律。为决策层的决策提供有力的依据，对产品或服务的发展方向起到积极作用，有力推动企业的科学化、信息化管理。</p><p><img src="02.jpg" alt=""></p><p>数据分析，作为一个新的行业领域，正在全球迅速发展，它开辟了人类获取知识的新途径。</p><h3 id="数据分析师如此抢手的原因何在呢？"><a href="#数据分析师如此抢手的原因何在呢？" class="headerlink" title="数据分析师如此抢手的原因何在呢？"></a>数据分析师如此抢手的原因何在呢？</h3><p>最简单的原因就是社会越发达，人们对数据的依赖就越多，无论是政府决策，还是公司运营，科学研究还是媒体宣传，都需要数据支持。那么，对数据有如此大的依赖，这就必然导致对数据分析的大量需求。因此，将数据转化为知识、结论和规律，就是数据分析师的作用和价值。</p><p>这些数据分析师已经对业务有一定的理解，对业务也相对比较熟悉，更多帮业务方建立一套分析体系，或者更高级是做成数据产品。例如：营销活动。分析师会告诉业务方，在活动前你应该分析哪些数据，从而制定恰当的营销计划。在营销过程中，你应该看哪些数据，从而及时做出营销活动调整。在营销活动，应该如何进行活动效果评估。</p><p><img src="03.jpg" alt=""></p><h3 id="数据究竟会庞大到什么地步呢？"><a href="#数据究竟会庞大到什么地步呢？" class="headerlink" title="数据究竟会庞大到什么地步呢？"></a>数据究竟会庞大到什么地步呢？</h3><p>据国际知名咨询公司估计，到2020年，全球每年产生的数据量将达到3500万亿GB，比如，用普通的DVD一张一张的摞起来，可以从地球摞到月球两次。</p><p>面对这样庞大的数据，对数据分析师的要求就不仅仅是单纯做分析了，更重要的是与相关业务部门进行合作，将数据真正应用到业务中，根据实际的业务发展情况，识别哪些数据可用，哪些不适用，而不是孤立的在“真空环境”下进行分析。这就要求数据分析师不仅具备洞察数据的能力，还要对相关业务的背景有深入的了解，明白客户或业务部门的需求，从而将数据信息化、可视化，最后转化为生产力，帮助企业获得利润，这就是整个数据“供应链”，当然数据分析师也要理解这个“供应链”。</p><p><img src="04.jpg" alt=""></p><h3 id="数据分析师需要具备的技能有哪些？"><a href="#数据分析师需要具备的技能有哪些？" class="headerlink" title="数据分析师需要具备的技能有哪些？"></a>数据分析师需要具备的技能有哪些？</h3><p>首先就是数据分析，“数据分析”是数据分析师最基本的技能。数据库是第二大所需的技能，数据库知识、基本的统计分析知识、EXCEL要相当熟悉，对SPSS或SAS有一定的了解，对于与网站相关的业务还可能要求掌握GA等网站分析工具，当然PPT也是必备的。第三种就是商业智能，商业智能是通过收集数据来影响业务决策的做法。最后需要建立数据仓库，目的就是将大量数据组合到一个地方进行分析。</p><p><img src="05.jpg" alt=""></p><h3 id="数据分析师的发展前景如何？"><a href="#数据分析师的发展前景如何？" class="headerlink" title="数据分析师的发展前景如何？"></a>数据分析师的发展前景如何？</h3><p>数据分析师的发展前景，不管是国内还是国外，数据以及大数据的有关人才都是达不到企业用人的需求，依据有关报告称，在美国市场大数据人才和高级数据分析专家的人才缺口将在20万左右，另外企业还需要150万能够提出正确问题和运用大数据分析结果的相关管理人才。</p><p>另外数据分析师的工作方向比较广泛，数据信息广泛分布在各行各业，数据分析师也有不同的工作，可能就是做报表的，有做些偏ETL的，也有做行业研究的，也有做偏向数据挖掘的，具体做哪个跟岗位的要求有关，也跟自己的特点，能力有关。</p><p>数据分析师在职业的选择上更加富有弹性，在工作内容强度上也不必像算法工程师一样，埋头苦干，绞尽脑汁，更多的是碎片化的时间，也经常和业务打成一遍，不纯属技术，更有业务的乐趣，所以说数据分析师是最适合女生和新入行者作为入门大数据的职业。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;随着大数据的快速发展，数据分析师也成了近几年的热门行业，数据分析师的未来发展前景非常乐观，作为一名数据分析师工作内容包括数据的采集、清洗、整理、分析、建模、挖掘、可视化等等。数据分析的目的是把隐没在一大批看来杂乱无章的数据中的信息集中、萃取和提炼出来，以找出所研究对象的内在
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
      <category term="python" scheme="http://www.JiShuXuePai.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>人工智能、机器学习、数据挖掘以及数据分析有什么联系？（下）</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E3%80%81%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E3%80%81%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E4%BB%A5%E5%8F%8A%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%9C%89%E4%BB%80%E4%B9%88%E8%81%94%E7%B3%BB%EF%BC%9F%EF%BC%88%E4%B8%8B%EF%BC%89/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/人工智能、机器学习、数据挖掘以及数据分析有什么联系？（下）/</id>
    <published>2018-07-05T03:47:03.051Z</published>
    <updated>2018-07-06T07:58:29.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="3-深度学习"><a href="#3-深度学习" class="headerlink" title="3.深度学习"></a>3.深度学习</h3><p>深度学习的概念源于人工神经网络的研究。含多隐层的多层感知器就是一种深度学习结构。深度学习通过组合低层特征形成更加抽象的高层表示属性类别或特征，以发现数据的分布式特征表示。晦涩难懂的概念，略微有些难以理解，但是在其高冷的背后，却有深远的应用场景和未来。</p><p>那深度学习和机器学习是什么关系呢？</p><p>深度学习是实现机器学习的一种方式和一条路径。其动机在于建立、模拟人脑进行分析学习的神经网络，它模仿人脑的机制来解释数据。比如其按特定的物理距离连接；而深度学习使用独立的层、连接，还有数据传播方向，比如最近大火的卷积神经网络是第一个真正多层结构学习算法，它利用空间相对关系减少参数数目以提高训练性能，让机器认知过程逐层进行，逐步抽象，从而大幅度提升识别的准确性和效率。</p><p><strong>神经网络</strong>是<strong>机器学习</strong>的一个<strong>分支</strong>，而<strong>深度学习又是神经网络的一个大分支</strong>，深度学习的<strong>基本结构</strong>是<strong>深度神经网络</strong>。</p><img src="/blog/学习答疑/学习答疑/人工智能、机器学习、数据挖掘以及数据分析有什么联系？（下）/01.jpg" title="Markdown 语法"><h3 id="4-数据分析"><a href="#4-数据分析" class="headerlink" title="4.数据分析"></a>4.数据分析</h3><p>数据分析的概念；基于数据库系统和应用程序，可以直观的查看统计分析系统中的数据，从而可以很快得到我们想要的结果；这个就是最基本的数据分析功能，也是我们在信息化时代了，除了重构业务流程、提升行业效率和降低成本之外，另一个非常重要的数据分析功能，数据可视化。</p><p>比如说，在财务系统的信息化中，基于企业的财务系统，我们可以直观获取企业现金流量表、资产负债表和利润表，这些都来自与我们的数据分析技术。数据分析目前常用的软件是Excel, R, Python等工具。</p><p>数据分析更多的是指从历史数据里面发现有价值的信息，从而提高决策的科学性。数据分析更侧重于通过分析数据的历史分布然后从中得出一些有价值的信息。</p><p>在对比数据分析和数据挖掘时，数据分析则更像是对历史数据的一个统计分析过程，比如我们可以对历史数据进行分析后得到一个粗糙的结论，但当我们想要深入探索为什么会出现这个结论时，就需要进行数据挖掘，探索引起这个结论的种种因素，然后建立起结论和因素之间模型，当有因素有新的值出现时，我们就可以利用这个模型去预测可能产生的结论。</p><p>因此数据分析更像是数据挖掘的一个<strong>中间过程</strong>。</p><p><img src="02.jpg" alt=""></p><h3 id="5-总结"><a href="#5-总结" class="headerlink" title="5.总结"></a>5.总结</h3><p><strong>人工智能与机器学习、深度学习的关系</strong></p><p>严格意义上说，人工智能和机器学习没有直接关系，只不过是机器学习的方法被大量的应用于解决人工智能的问题而已。目前机器学习是人工智能的一种实现方式，也是最重要的实现方式。</p><p>深度学习是机器学习比较火的一个方向，其本身是神经网络算法的衍生，在图像、语音等富媒体的分类和识别上取得了非常好的效果。</p><p><strong>数据挖掘与机器学习的关系</strong></p><p>数据挖掘主要利用机器学习界提供的技术来分析海量数据，利用数据库界提供的技术来管理海量数据。</p><p>机器学习是数据挖掘的一种重要方法，但机器学习是另一门学科，并不从属于数据挖掘，二者相辅相成。</p><p>深度学习、机器学习的发展带了许多实际的商业应用，让虚幻的AI逐步落地，进而影响人类社会发展；</p><p>深度学习、机器学习以及未来的AI技术，将让无人驾驶汽车、更好的预防性治疗技术、更发达智能的疾病治疗诊断系统、更好的人类生活娱乐辅助推荐系统等，逐步融入人类社会的方方面面。</p><p>AI即使是现在，也是未来，不再是一种科幻影像和概念，业界变成了人类社会当下的一种存在，不管人类是否喜欢或者理解，他们都将革命性地改变创造AI的我们人类自身；</p><p><strong>文中若有表述错误的地方欢迎大家留言批评指正。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;3-深度学习&quot;&gt;&lt;a href=&quot;#3-深度学习&quot; class=&quot;headerlink&quot; title=&quot;3.深度学习&quot;&gt;&lt;/a&gt;3.深度学习&lt;/h3&gt;&lt;p&gt;深度学习的概念源于人工神经网络的研究。含多隐层的多层感知器就是一种深度学习结构。深度学习通过组合低层特征形成
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
      <category term="python" scheme="http://www.JiShuXuePai.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python与人工智能间有什么关系？Python相关职位的薪资是多少？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/Python%E4%B8%8E%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%97%B4%E6%9C%89%E4%BB%80%E4%B9%88%E5%85%B3%E7%B3%BB%EF%BC%9FPython%E7%9B%B8%E5%85%B3%E8%81%8C%E4%BD%8D%E7%9A%84%E8%96%AA%E8%B5%84%E6%98%AF%E5%A4%9A%E5%B0%91%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/Python与人工智能间有什么关系？Python相关职位的薪资是多少？/</id>
    <published>2018-07-02T03:48:48.000Z</published>
    <updated>2018-07-03T01:15:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>我们经常听到”Python“与”人工智能“这两个词，也很容易混淆的两个词，那么Python和人工智能有到底什么关系呢？Python人工智能工程师待遇怎么样？今天小编就为大家解答一下。</p><img src="/blog/学习答疑/学习答疑/Python与人工智能间有什么关系？Python相关职位的薪资是多少？/01.jpg" title="Markdown 语法"><h3 id="关于Python"><a href="#关于Python" class="headerlink" title="关于Python"></a>关于Python</h3><p>Python是一门计算机程序语言，目前在人工智能科学领域被广泛应用，广泛应用就表明各种库，各种相关联的框架都是以Python作为主要语言开发出来的。</p><p>谷歌的TensorFlow大部分代码都是Python，其他语言一般只有几千行。</p><p>Python虽然是脚本语言，但是因为容易学，迅速成为科学家的工具，从而积累了大量的工具库、架构，人工智能涉及大量的数据计算，用Python是很自然的，简单高效。</p><p>Python有非常多优秀的深度学习库可用，现在大部分深度学习框架都支持Python，不用Python用什么?</p><p><img src="02.jpg" alt=""></p><h3 id="关于人工智能"><a href="#关于人工智能" class="headerlink" title="关于人工智能"></a>关于人工智能</h3><p>人工智能是计算机科学的一个分支，它企图了解智能的实质，并生产出一种新的能以人类智能相似的方式做出反应的智能机器，该领域的研究包括机器人、语言识别、图像识别、自然语言处理和专家系统等。人工智能从诞生以来，理论和技术日益成熟，应用领域也不断扩大，可以设想，未来人工智能带来的科技产品，将会是人类智慧的“容器”</p><p>简单来说，人工智能是一种未来性的技术。</p><p>人工智能的应用</p><p>从我们日常用的智能音箱，到百度、谷歌等独角兽公司研发的无人驾驶汽车，再到波士顿动力最新的智能机器人，都是人工智能技术的现实应用。</p><p>有人预测，在未来十年，人工智能将主导我们的生活。</p><p>至2027年：</p><p>•自动驾驶已相当成熟，大街上超过30%的汽车是无人驾驶的，很多私家车主在上班期间就把车开启自动架驶模式，让它自己接单挣外快</p><p>•各行业大量使用机器人替代人工，底层的司机、保安、快递、清洁工、超市服务员、护士、制造工人等技术含量较低的工程受到极大冲击。</p><p><img src="03.jpg" alt=""></p><h3 id="Python和人工智能的关系"><a href="#Python和人工智能的关系" class="headerlink" title="Python和人工智能的关系"></a>Python和人工智能的关系</h3><p>其实，简单来说，Python是最适合人工智能开发的编程语言。</p><p>Python由于简单易用，是人工智能领域中使用最广泛的编程语言之一，它可以无缝地与数据结构和其他常用的AI算法一起使用。</p><p>当谈到AI时，Python是一种现代化的选择。为什么呢，除了一般的原因，Python使原型设计变得更加快捷，同时具有更加稳定的架构。举个例子，比如Scikit-learn(一个机器学习库)。 在Python中调试是一个很快的过程。它还提供了对其他语言的应用程序设计接口(API)。Python的大量的库很有帮助，但是你必须精通Python，才能很好地利用它。</p><p>未来10年将是大数据，人工智能爆发的时代，到时将会有大量的数据需要处理,而python最大的优势，就是对数据的处理，有着得天独厚的优势，我相信未来的10年，Python会越来越火。</p><p>Python语言简单易学，支持库丰富强大，这两大支柱从早期就奠定了Python的江湖地位。</p><p>大数据与人工智能时代，掌握Python基础后，我们可以选择数据分析方向、人工智能方向、全栈开发方向…..</p><h3 id="Python的几个发展方向如下："><a href="#Python的几个发展方向如下：" class="headerlink" title="Python的几个发展方向如下："></a>Python的几个发展方向如下：</h3><p><strong>1.Python web全栈工程师</strong></p><p>我们都知道，全栈工程师不管在哪个语言中都是人才中的人才，全栈工程师的薪资在20K左右，而Python web全栈工程师则会高出5k-10K，所以若是你能力足够，首选就是Python web全栈工程师。</p><p><strong>2.Python自动化测试工程师</strong></p><p>只要是和自动化有关系的，Python这门语言都可以发挥出巨大的优势，目前做自动化测试的部分工作者都需要学习Python帮助提高测试效率，作自动化测试的人都明白，会不会Python是两回事。目前Python自动化测试的薪资在15k-25k左右。</p><p><strong>3.大数据工程师</strong></p><p>我们现在是真正的大数据时代，而Python这门语言在大数据上比Java更加有效率，大数据虽然难学，但是Python语言可以更好地和大数据对接。目前大数据工程师的薪资在18k-25k左右。</p><p><strong>4.数据分析师、爬虫工程师</strong></p><p>做数据分析的现在也是需要学习Python的，Python可以更快的提升对数据抓取的精准程度和速度，这对于做数据分析的人来说再好不过了，若是你还在用表格的阶段，可以尝试提升一下自己了。目前数据分析师<strong>、</strong>Python爬虫工程师的薪资是18k-25K。</p><p><strong>5.自动化运维</strong></p><p>根据了解，现在好像没有太多的运维工作者不需求Python，只要还有一点上进心的，想着未来今后的发展，他们根本都在努力学习Python，运维今后不要再问为什么要学习Python了，没有为什么。目前自动化工程师的薪资是15k-20k。</p><p><strong>6.人工智能</strong></p><p>为什么把这个方向留在最后，因为这是咱们即将到来的年代“人工智能年代”机器人扫地，机器人洗碗，这样的年代不会太远，最多五年，而Python正是这个方向首选的语言。目前人工智能开发工程师的薪资在25k-35K。</p><p>上面都是小编根据招聘网站统计的平均工资，供大家参考，当然人工智能（AI）薪资高的月薪50K以上早有报道。Python前景这么好，假如你自制力强、有上进心，想通过学习来改变现状，那么Python 让你点亮高薪人生！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我们经常听到”Python“与”人工智能“这两个词，也很容易混淆的两个词，那么Python和人工智能有到底什么关系呢？Python人工智能工程师待遇怎么样？今天小编就为大家解答一下。&lt;/p&gt;&lt;img src=&quot;/blog/学习答疑/学习答疑/Python与人工智能间有什么关
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
      <category term="python" scheme="http://www.JiShuXuePai.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>什么是GO语言？为什么GO语言是最有潜力的编程语言</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E4%BB%80%E4%B9%88%E6%98%AFGO%E8%AF%AD%E8%A8%80%EF%BC%9F%E4%B8%BA%E4%BB%80%E4%B9%88GO%E8%AF%AD%E8%A8%80%E6%98%AF%E6%9C%80%E6%9C%89%E6%BD%9C%E5%8A%9B%E7%9A%84%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/什么是GO语言？为什么GO语言是最有潜力的编程语言？/</id>
    <published>2018-07-02T03:21:58.000Z</published>
    <updated>2018-07-03T01:13:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>随着时代发展，编程语言种类越来越繁多，老牌强将势头仍然强劲，不过也很难抵挡住新兴编程语言的实力和发展。GO语言就是这样一个年纪很小的实力新星。</p><p>Go语言是谷歌2009发布的第二款开源编程语言。Go语言专门针对多处理器系统应用程序的编程进行了优化，使用Go编译的程序可以媲美C或C++代码的速度，而且更加安全、支持并行进程。</p><p>Go语言的目标是希望提升现有编程语言对程序库等依赖性(dependency)的管理，这些软件元素会被应用程序反复调用。由于存在并行编程模式，因此这一语言也被设计用来解决多处理器的任务。</p><p>GO语言目前的用户群体暂时并不大，不过用过的人对其评价很高，那我们来看看什么是GO语言吧。</p><img src="/blog/学习答疑/学习答疑/什么是GO语言？为什么GO语言是最有潜力的编程语言？/01.jpg" title="Markdown 语法"><h3 id="0-什么是GO？"><a href="#0-什么是GO？" class="headerlink" title="0.什么是GO？"></a>0.什么是GO？</h3><p>Golang （GO）是由Google在2009年推出的编程语言，是一门全新的、现代的、语法简洁并容易上手的编程语言，是具备独立的运行时库，就像C语言一样。</p><p>曾协助实现 Java 的 HotSpot 编译器和 JavaScript V8 引擎的Robert Griesemer，曾是贝尔实验室的 Unix 团队和 Plan9 操作系统成员，与 Thompson 一起创造了 UTF-8 字符编码的Rob Pike 以及技术圣殿的人物，创造了 C 语言和 Unix，获得了 1983 年图灵奖和 1988 国家技术奖的Ken Thompson。</p><p>据说这些大神们创建 Go 语言的初衷是：近十年来开发程序之难让我们有点沮丧。于是 Go 诞生了。</p><p><img src="02.jpg" alt=""></p><h3 id="1-GO的优势？"><a href="#1-GO的优势？" class="headerlink" title="1.GO的优势？"></a>1.GO的优势？</h3><p>可直接编译成机器码，不依赖其他库，glibc的版本有一定要求，部署就是扔一个文件上去就完成了。</p><p>静态类型语言，但是有动态语言的感觉，静态类型的语言就是可以在编译的时候检查出来隐藏的大多数问题，动态语言的感觉就是有很多的包可以使用，写起来的效率很高。</p><p>语言层面支持并发，这个就是Go语言最大的特色，天生的支持并发，天生的基因和整容是有区别的，大家一样美丽，但是你喜欢整容的还是天生基因的美丽呢？Go语言就是基因里面支持的并发，可以充分的利用多核，很容易的使用并发。</p><p>内置runtime，支持垃圾回收，这属于动态语言的特性之一吧，虽然目前来说GC不算完美，但是足以应付我们所能遇到的大多数情况，特别是Go1.1之后的GC。</p><p><img src="03.jpg" alt=""></p><h3 id="2-GO语言适合用来做什么"><a href="#2-GO语言适合用来做什么" class="headerlink" title="2.GO语言适合用来做什么"></a>2.GO语言适合用来做什么</h3><ul><li>服务器编程，用Go语言来做很合适，比如处理日志、数据打包、虚拟机处理、文件系统等；</li><li>分布式系统，数据库代理器等等；</li><li>网络编程，这一块目前应用最广，包括Web应用、API应用、下载应用；</li><li>内存数据库，前一段时间google开发的groupcache，couchbase的部分组建；</li><li>云平台，目前国外很多云平台在采用Go开发，CloudFoundy的部分组建，前VMare的技术总监自己出来搞的apcera云平台；</li></ul><p><img src="04.jpg" alt=""></p><h3 id="3-Go成功的项目"><a href="#3-Go成功的项目" class="headerlink" title="3.Go成功的项目"></a>3.Go成功的项目</h3><ul><li>nsq：bitly开源的消息队列系统，性能非常高，目前他们每天处理数十亿条的消息；</li><li>docker:基于lxc的一个虚拟打包工具，能够实现PAAS平台的组建；</li><li>packer:用来生成不同平台的镜像文件，例如VM、vbox、AWS等，作者是vagrant的作者；</li><li>skynet：分布式调度框架；</li><li>Doozer：分布式同步工具，类似ZooKeeper；</li><li>Heka：mazila开源的日志处理系统；</li><li>cbfs：couchbase开源的分布式文件系统；</li><li>tsuru：开源的PAAS平台，和SAE实现的功能一模一样；</li><li>groupcache：memcahe作者写的用于Google下载系统的缓存系统；</li><li>god：类似redis的缓存系统，但是支持分布式和扩展性；</li><li>gor：网络流量抓包和重放工具；</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;随着时代发展，编程语言种类越来越繁多，老牌强将势头仍然强劲，不过也很难抵挡住新兴编程语言的实力和发展。GO语言就是这样一个年纪很小的实力新星。&lt;/p&gt;&lt;p&gt;Go语言是谷歌2009发布的第二款开源编程语言。Go语言专门针对多处理器系统应用程序的编程进行了优化，使用Go编译的程
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
      <category term="go" scheme="http://www.JiShuXuePai.com/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>人工智能、机器学习、数据挖掘以及数据分析有什么联系？（上）</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E3%80%81%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E3%80%81%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E4%BB%A5%E5%8F%8A%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%9C%89%E4%BB%80%E4%B9%88%E8%81%94%E7%B3%BB%EF%BC%9F%EF%BC%88%E4%B8%8A%EF%BC%89/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/人工智能、机器学习、数据挖掘以及数据分析有什么联系？（上）/</id>
    <published>2018-06-28T01:57:54.000Z</published>
    <updated>2018-07-05T03:46:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>人工智能是目前炙手可热的一个领域，所有的互联网公司以及各路大迦们纷纷表态人工智能将是下一个时代的革命性技术，可与互联网、移动互联网时代的变更相媲美；AlphaGo在围棋领域战胜人类最顶尖的棋手让大众第一次直观的认识到了人工智能的威力和强大，于是大家都不禁在思考到底什么是人工智能， 它将给人类带来怎样的变化和未来?<br><img src="/blog/学习答疑/学习答疑/人工智能、机器学习、数据挖掘以及数据分析有什么联系？（上）/01.jpg" title="Markdown 语法"></p><h3 id="0-人工智能"><a href="#0-人工智能" class="headerlink" title="0.人工智能"></a>0.人工智能</h3><p>人工智能英文缩写为AI，它是研究、开发用于模拟、延伸和扩展人的智能的理论、方法、技术及应用系统的一门新的技术科学。人工智能是计算机科学研究领域的一个重要分支，又是众多学科的一个交叉学科，它企图了解智能的实质，并生产出一种新的能以人类智能相似的方式做出反应的智能机器，该领域的研究包括语音识别、图像识别、机器人、自然语言处理、智能搜索和专家系统等等，人工智能可以对人的意识、思维的信息过程的模拟。人工智能包括众多的分支领域，比如大家熟悉的机器学习、自然语言理解和模式识别等。</p><p><img src="02.jpg" alt=""></p><h3 id="1-机器学习"><a href="#1-机器学习" class="headerlink" title="1.机器学习"></a>1.机器学习</h3><p>机器学习属于人工智能研究与应用的一个分支领域。机器学习的研究更加偏向理论性，其目的更偏向于是研究一种为了让计算机不断从数据中学习知识，而使机器学习得到的结果不断接近目标函数的理论。</p><p>机器学习，引用卡内基梅隆大学机器学习研究领域的著名教授Tom Mitchell的经典定义：</p><blockquote><p>如果一个程序在使用既有的经验E(Experience)来执行某类任务T(Task)的过程中被认为是“具备学习能力的”，那么它一定要展现出：利用现有的经验E，不断改善其完成既定任务T的性能(Performance)的特质。</p></blockquote><p><strong>那机器学习与数据挖掘的关系是什么呢？　</strong></p><p>机器学习已经有了十分广泛的应用，例如：数据挖掘、计算机视觉、自然语言处理、生物特征识别、搜索引擎、医学诊断、检测信用卡欺诈、证券市场分析、DNA序列测序、语音和手写识别、战略游戏和机器人运用。在我们当下的生活中，语音输入识别、手写输入识别等技术，识别率相比之前若干年的技术识别率提升非常巨大，达到了将近97%以上，大家可以在各自的手机上体验这些功能，这些技术来自于机器学习技术的应用。</p><p>那机器学习与数据挖掘的联系是什么呢？</p><p>机器学习为数据挖掘提供了理论方法，而数据挖掘技术是机器学习技术的一个实际应用。逐步开发和应用了若干新的分析方法逐步演变而来形成的；这两个领域彼此之间交叉渗透，彼此都会利用对方发展起来的技术方法来实现业务目标，数据挖掘的概念更广，机器学习只是数据挖掘领域中的一个新兴分支与细分领域，只不过基于大数据技术让其逐渐成为了当下显学和主流。</p><p><img src="03.jpg" alt=""></p><h3 id="2-数据挖掘"><a href="#2-数据挖掘" class="headerlink" title="2.数据挖掘"></a>2.数据挖掘</h3><p>数据挖掘一般是指从大量的数据中通过算法搜索隐藏于其中信息的过程。数据挖掘本质上像是机器学习和人工智能的基础，它的主要目的是从各种各样的数据来源中，提取出超集的信息，然后将这些信息合并让你发现你从来没有想到过的模式和内在关系。这就意味着，数据挖掘不是一种用来证明假说的方法，而是用来构建各种各样的假说的方法。数据挖掘不能告诉你这些问题的答案，他只能告诉你，A和B可能存在相关关系，但是它无法告诉你A和B存在什么相关关系。机器学习是从假设空间H中寻找假设函数g近似目标函数f。数据挖掘是从大量的数据中寻找数据相互之间的特性。</p><p>数据挖掘是基于数据库系统的数据发现过程，立足与数据分析技术之上，提供给为高端和高级的规律趋势发现以及预测功能；同时数据量将变得更为庞大，依赖于模式识别等计算机前沿的技术；其还有另外一个名称为商业智能(BI, Business Intelligence)，依托于超大型数据库以及数据仓库、数据集市等数据库技术来完成。</p><p>主要挖掘方法有: 分类 、 估计、预测、相关性分组或关联规则、 聚类、复杂数据类型挖掘(Text, Web ,图形图像，视频，音频等)等技术。</p><p><img src="04.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;人工智能是目前炙手可热的一个领域，所有的互联网公司以及各路大迦们纷纷表态人工智能将是下一个时代的革命性技术，可与互联网、移动互联网时代的变更相媲美；AlphaGo在围棋领域战胜人类最顶尖的棋手让大众第一次直观的认识到了人工智能的威力和强大，于是大家都不禁在思考到底什么是人工
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
      <category term="python" scheme="http://www.JiShuXuePai.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>人工智能领域的职业所需技能是什么？你知道吗？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%A2%86%E5%9F%9F%E7%9A%84%E8%81%8C%E4%B8%9A%E6%89%80%E9%9C%80%E6%8A%80%E8%83%BD%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F%E4%BD%A0%E7%9F%A5%E9%81%93%E5%90%97%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/人工智能领域的职业所需技能是什么？你知道吗？/</id>
    <published>2018-06-26T01:37:26.000Z</published>
    <updated>2018-06-27T01:21:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>人工智现在是一个热搜词，的确，科学的进步和发展在人工智能领域得到了最完美的体现，而科学的发展进程和发展方向往往是可预见的，就如同一个个科幻电影中的桥段逐渐变成了现实一样。</p><p>人工智能是一个广泛的术语，一般包括计算机科学，机器学习，专业系统，数据处理等等。</p><img src="/blog/学习答疑/学习答疑/人工智能领域的职业所需技能是什么？你知道吗？/01.jpg" title="Markdown 语法"><p>如果您正在评估这个领域的职业，请阅读这篇文章就计算机科学的这些主要职位，以及您必须具备的这些职位所需的技能做一些解读。</p><h3 id="1-机器学习工程师："><a href="#1-机器学习工程师：" class="headerlink" title="1.机器学习工程师："></a>1.机器学习工程师：</h3><p>机器学习工程师是人工智能领域最受欢迎的职位之一，他们应该拥有坚固的软件包技能，并且能够应用预测模型并利用自然语言过程来处理大型信息集。</p><p>机器学习工程师最让人欲罢不能的特征或许就是这个岗位角色拥有看起来无所不能的广泛适应性。包括教育行业、计算机科学还有更多领域在内的很多行业已经受到了机器学习的积极影响。实际上你会发现没有哪个领域不会应用机器学习技术。</p><p>对于机器学习工程师的需求正在呈现指数型的增长趋势。世间充满了复杂的挑战，并因此需要更加复杂的系统才可以将这些挑战迎刃而解。而机器学习工程师们就是可以建造这些系统的最佳人选。</p><h3 id="2-机器人科学家："><a href="#2-机器人科学家：" class="headerlink" title="2.机器人科学家："></a>2.机器人科学家：</h3><p>未来科学历史学家将会把21世纪的开端标记为一个机器人和人类科学家并举的时代。</p><p>程序员已经让电脑变成了相当强大的工具，虽然它不会说话，但它相当聪明。人工智能方案可以处理相当复杂的数据，数据复杂的程度是人类无法独立完成相关分析的。人工智能甚至能自己提出假说，即一些促进科学发展的可测试的问题。</p><p>正如机器是人类器官的延伸，能生产所需的各类产品，人类同样也希望机器能拓展智能，揭开更多科学的奥秘，加速科技突破。</p><p>机器人科学家通常非常喜欢具有坚固的编程技能，专业数学技能，云应用程序和计算机语言信息，精彩的沟通和分析技能以及机器学习等认证的专业人员。</p><p>所需的其他必要技能包括编写和操作计算机程序，与不同专家合作以及开发原型。</p><p><img src="02.jpg" alt=""></p><h3 id="3-数据科学家："><a href="#3-数据科学家：" class="headerlink" title="3.数据科学家："></a>3.数据科学家：</h3><p>数据科学家是指能采用科学方法、运用数据挖掘工具对复杂多量的数字、符号、文字、网址、音频或视频等信息进行数字化重现与认识，并能寻找新的数据洞察的工程师或专家。一个优秀的数据科学家需要具备的素质有：懂数据采集、懂数学算法、懂数学软件、懂数据分析、懂预测分析、懂市场应用、懂决策分析等。</p><p>数据科学家通过利用机器学习和预测分析来收集，分析和解释大量信息，以实现对应用数学分析远端的见解。</p><p>数据科学家能够熟练掌握编程语言以及结构化命令语言Python，Scala和Perl以及统计计算语言。</p><p>最需要的技术技能是深入了解SAS或者R，Python加密技术，Hadoop平台，在Amazon S3等云工具上执行的专业知识，以及掌握非结构化信息的能力。</p><p>所需的非技术技能包括坚固的沟通和分析技能，对知识的好奇心和商业敏锐度。</p><h3 id="4-研究科学家："><a href="#4-研究科学家：" class="headerlink" title="4.研究科学家："></a>4.研究科学家：</h3><p>这个领域包括深度学习，图形模型，强化学习，计算机感知，自然语言处理和数据表示。</p><p>优先考虑的资格：计算机科学硕士或博士学位，或在非常相关的技术领域或具有同等理智的专业知识是这一角色的基本需求。</p><p>公司还倾向于选择拥有并行计算，人工智能，机器学习，算法信息和分布式计算和基准测试等技能的专业人员。</p><h3 id="5-商业智能开发者："><a href="#5-商业智能开发者：" class="headerlink" title="5.商业智能开发者："></a>5.商业智能开发者：</h3><p>他们不仅要掌握坚固的技术和分析技能，还要拥有良好的沟通和解决问题的能力。</p><p>优先资格:计算机科学、工程或相关专业的学位；或者结合认证和在职专业知识最适合这个角色。</p><p>在数据仓库设计，数据处理，BI技术信息，SQL查询，SQL Server覆盖率服务和SQL Server Integration Services以及广受欢迎的数据科学认证方面拥有专业知识的候选人最受欢迎。</p><h3 id="6-数据分析师："><a href="#6-数据分析师：" class="headerlink" title="6.数据分析师："></a>6.数据分析师：</h3><p>数据分析师的目的是把隐藏在一些看似杂乱无章的数据背后的信息提炼出来，总结出所研究对象的内在规律。在实际工作中，数据分析能够帮助管理者进行判断和决策，以便采取适当策略与行动。比如：企业的高管希望通过市场分析和研究，把握当前产品的市场动向，从而制定合理的产品研发和销售计划，这就必须依赖数据分析才能够完成。</p><p><img src="03.jpg" alt=""></p><p><strong>1.现状分析</strong></p><p>简单的说就是告诉你过去发生了什么。</p><p><strong>2.原因分析</strong></p><p>简单的说就是告诉你某一现状为什么发生。经过第一阶段的现状分析，我们对企业的运营情况有了一个基本的了解，但是不知道运营情况具体好在哪里，差在哪里，是什么原因引起的。这时候我们就需要开展原因分析，以进一步确定业务变动的具体原因。</p><p><strong>3.预测分析</strong></p><p>简单来说就是告诉你将来会发生什么。预测分析一般通过专题分析来完成，通常在制定企业季度、年度等计划时进行，其开展的频率没有现状分析及原因分析高。</p><h3 id="结论："><a href="#结论：" class="headerlink" title="结论："></a>结论：</h3><p>对于所有新手，小企业或学生来说，有许多职业选择可供选择。本文为您提供了一个关于人工智能领域中可以探索哪些职业以及如何实现这些职业的简洁想法。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;人工智现在是一个热搜词，的确，科学的进步和发展在人工智能领域得到了最完美的体现，而科学的发展进程和发展方向往往是可预见的，就如同一个个科幻电影中的桥段逐渐变成了现实一样。&lt;/p&gt;&lt;p&gt;人工智能是一个广泛的术语，一般包括计算机科学，机器学习，专业系统，数据处理等等。&lt;/p&gt;&lt;
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
  </entry>
  
  <entry>
    <title>PHP定时器那点事</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/PHP%E5%AE%9A%E6%97%B6%E5%99%A8%E9%82%A3%E7%82%B9%E4%BA%8B/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/PHP定时器那点事/</id>
    <published>2018-06-22T08:07:34.000Z</published>
    <updated>2018-06-23T08:56:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>常见的定时器有两种：一种周期性定时执行，例如每天的凌晨三点出报表；另一种在指定时间后执行（一次），例如会员登录系统五分钟后发放每日登录奖励。两种情况对应shell中的<code>cron</code>和<code>at</code>命令，与<code>JavaScript</code>中的<code>setInterval</code>和<code>setTimeout</code>函数类似（严格来说<code>setInterval</code>是周期性执行，指定时间点执行需要自行处理）。</p><img src="/blog/学习答疑/学习答疑/PHP定时器那点事/01.jpg" title="Markdown 语法"><p>做web开发的PHP程序员对JavaScript中的两个定时器函数应该都还熟悉，回到PHP层面就有点傻眼：PHP中有<code>sleep</code>，但是没有（内置）定时器函数可用。<code>sleep</code>函数勉强可以做到，但会导致进程阻塞，期间不能做其他事（或无响应）。为什么PHP没能提供定时器（Timer）这个功能呢？</p><h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>web开发中PHP不能使用定时器的本质原因是<strong>可控</strong> <strong>常驻内存运行环境</strong>的缺失。两个要点：第一常驻内存，第二可控。CGI模式下，进程执行完脚本后直接退出，不能指望其到指定时间运行任务；PHP-FPM模式下，进程（绝大多数）常驻内存，但不可控。</p><p>不可控的意思是执行PHP的进程不受PHP代码影响，进程的入口点和退出时机由额外的程序控制。例如FPM模式下，PHP脚本中的<code>exit</code>、<code>die</code>函数只中断脚本的执行，不会对执行脚本的进程产生特别的影响（内存泄露除外）。PHP开发人员编写的脚本是进程的执行体，执行完毕后就从进程的执行上下文中卸载出去。这种情况下，执行PHP脚本的时机仍然由外部驱动，没有外部请求PHP代码就安详的躺在硬盘上，什么都不做，也就定时任务。</p><p>由于PHP主要面向web开发，PHP这种执行模式稳定可靠，开发效率快。比如省去资源释放这一步，就避免了开发中很多工作量和坑。想想某些第三方库代码中改时区、字符编码等还不还原，在常驻内存运行环境下几乎肯定会导致后续请求有问题。但在FPM模式下，这种坑无意中直接趟平，省去许多调试时间，为程序员保住发际线做出了不小的贡献。</p><p>问题已经了解，那么PHP中如何使用定时器执行定时任务？</p><h3 id="危险的做法"><a href="#危险的做法" class="headerlink" title="危险的做法"></a>危险的做法</h3><p>在web环境下，PHP脚本默认有超时时间。去掉超时设置，就可以让程序一直在后台运行（如果进程不退出的话）。例如以下代码在响应请求后继续后台运行，并且每五秒钟输出一次时间到文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># test.php</span><br><span class="line">set_time_limit(0); # 取消超时设置，让脚本可一直运行</span><br><span class="line"></span><br><span class="line">echo &apos;This is a background run forever script. Now you can leave me alone.&apos;;</span><br><span class="line"></span><br><span class="line">fastcgi_finish_request();   # 结束当前请求</span><br><span class="line"></span><br><span class="line">do&#123;</span><br><span class="line">   file_put_contents(&quot;/tmp/out.dat&quot;, &quot;test script, now:&quot; . date(&quot;Y-m-d H:i:s&quot;) . &quot;\n&quot;, FILE_APPEND);</span><br><span class="line">   sleep(5);</span><br><span class="line">&#125;while(true);</span><br></pre></td></tr></table></figure><p>请求<code>http://localhost:8080/test.php</code>文件后，监测<code>/tmp/out.dat</code>文件，会发现不断有内容输出，无论客户端是否断开连接、关闭浏览器或者重启电脑（不能重启服务器）。这说明程序一直在执行，并且也实现了我们想要的定时器功能。如果把<code>sleep</code>改成<code>usleep</code>、<code>time_nanosleep</code>，还能实现微秒、纳秒级定时器，岂不美哉？</p><p>实践中应当尽量避免用这种方式实现定时器，不仅因为低效，还略有危险。原因之一是每次请求会占用一个进程，请求十万次需要十万个进程，基本上会导致系统崩溃或后续请求无响应；另外如果打开了session，但是忘记调用<code>session_write_close</code>，会导致同一个用户的后续请求被hang住（session活跃时处于加锁状态，不关闭session会导致后续进程无法打开session）。</p><p>web开发应当越快响应用户的请求越好，在web开发中用这种方式强行实现定时器，会让整个web应用处于不稳定、不可靠或不可预测状态。孟子曰：知而慎行，君子不立于危墙之下。不靠谱的做法要尽量避免，顺带也避免背锅和甩锅。</p><p>接下来看看PHP中使用定时器的正确姿势。</p><h3 id="正确的姿势"><a href="#正确的姿势" class="headerlink" title="正确的姿势"></a>正确的姿势</h3><p>PHP实现定时器的做法可简单归结为如下几种：</p><ol><li>使用cron、Jenkins等调度工具做周期性定时任务（既可以是执行脚本，也可以是请求某个网址）；</li><li>一次性执行任务通过消息队列、数据库等方式投递给第三方程序执行；</li><li>像WordPress一样模拟定时任务，但要记住这种方式依赖于客户端请求，并需自行处理好进程并发问题；</li><li>使用常驻内存型方式运行PHP程序，即CLI模式。</li></ol><p>除了第三种做法，其他方式都是推荐的，具体方案请结合实际需求。作为PHP程序员，当然还是首选用PHP来做，也就是CLI模式。</p><h3 id="CLI模式"><a href="#CLI模式" class="headerlink" title="CLI模式"></a>CLI模式</h3><p>摸着良心说，CLI模式让PHP发挥的空间拓展不少。在CLI模式下，程序的入口点就是脚本，且代码可以常驻内存，进程完全由PHP代码控制。在这种形式下，实现定时器就有多种玩法。本文列出几种做法，抛砖引玉：</p><ol><li>使用<code>swoole</code>、<code>workerman</code>等框架，内置（高精度）定时器；</li><li>使用多进程（池）/多线程（池）技术（<code>pcntl</code>、<code>pthreads</code>拓展在CLI模式下才可用）；</li><li>处理tick或者alarm等信号；</li><li>使用<code>libevent</code>、<code>libev</code>等事件驱动库；</li><li><code>sleep</code>加循环或自己实现事件循环。</li></ol><p>想折腾的话自己用2-5方案，不想折腾<code>swoole</code>、<code>workerman</code>等框架是首选，稳定可靠。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>区分HTTP请求和任务的关系，实现定时任务就简单了。至于用不用PHP来实现，那是另外一回事。当然作为web开发的首选语言，PHP实现定时任务也是轻而易举的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;常见的定时器有两种：一种周期性定时执行，例如每天的凌晨三点出报表；另一种在指定时间后执行（一次），例如会员登录系统五分钟后发放每日登录奖励。两种情况对应shell中的&lt;code&gt;cron&lt;/code&gt;和&lt;code&gt;at&lt;/code&gt;命令，与&lt;code&gt;JavaScript&lt;
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
      <category term="php" scheme="http://www.JiShuXuePai.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>用python写一个简单的推荐系统</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E7%94%A8Python%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/用Python写一个简单的推荐系统/</id>
    <published>2018-06-22T07:44:06.000Z</published>
    <updated>2018-06-23T08:54:18.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="传统推荐系统算法"><a href="#传统推荐系统算法" class="headerlink" title="传统推荐系统算法"></a>传统推荐系统算法</h3><img src="/blog/学习答疑/学习答疑/用Python写一个简单的推荐系统/01.jpg" title="Markdown 语法"><p>首先介绍一下传统的推荐系统方法，之所以叫它传统，是因为大部分学习资料上都是用这一个方法。</p><p>我们来假设有这么一个矩阵(用<code>python</code>的列表表示):</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[# A B C D E</span><br><span class="line">  [2,0,0,4,4], #1</span><br><span class="line">  [5,5,5,3,3], #2</span><br><span class="line">  [2,4,2,1,2]  #3</span><br><span class="line">  ......</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>矩阵的行代表用户，列表示物品，其交点表示用户对该物品的评分。</p><p>假设现在<strong>用户1</strong>需要选商品，推荐系统则假设其会选择并未选择过的商品，因此，系统会在第一行中寻找评分为0的物品，显然会找到<strong>B</strong>和<strong>C</strong>。这时，该怎么知道是推荐<strong>B</strong>还是<strong>C</strong>呢？(假设用户只需推荐一个),这时则需要计算B、C和用户以前选择过的物品(已评分)的相似度。</p><p><strong>仅仅算出相似度还不够，因为你不能判断这到底是好的那一部分相似还是坏的部分相似。</strong>所以这时，我们需要<strong>引入用户的评分作为相似度计算的权重</strong>，<code>评分X相似度</code>得到最后的得分（该得分会一直累加，<strong>则B的推荐得分会是B与A，D，E的相似得分的累加和</strong>）。这样一来，评分低物品的最后得分自然就低，评分高的物品自然得分就高，这时问题就简化成排序问题了。</p><p>显然，上述问题的核心在于如何计算相似度。</p><p>这里给出计算相似度的两种方法：</p><ul><li><p>欧式距离法<br>以<strong>B</strong>和<strong>A</strong>的相似度为例：<br><code>similar = 1/sqrt((0-2)^2 + (5-5)^2 + (4-2)^2 ……)</code> 最后B与A的相似得分还得乘上评分，<code>score = similar * 2</code></p></li><li><p>余弦相似度</p><p>costheta=fracAcdotB||A||||B||</p><p>​</p><p>AB为两列向量，||A||表示A的2范数</p><p>​</p><p>特别注意一点的是，cos的取值是-1~1,我们需要将其归一化，即把范围弄成在0~1上。于是相似度计算公司变成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0.5 + 0.5*cos</span><br></pre></td></tr></table></figure></li></ul><h3 id="少用户推荐系统的创新"><a href="#少用户推荐系统的创新" class="headerlink" title="少用户推荐系统的创新"></a>少用户推荐系统的创新</h3><p>在上述的内容中，我们可以发现传统的方法有一个特出的问题，<strong>传统的算法需要大量的用户评分，即矩阵的行数需要较多才能得出的结果才值得参考</strong>。这一个需求咋看起来是没什么问题，也符合我们的逻辑，唯有数据量足够，我们才能找到较为准确的规律嘛。</p><p>但回到我的需求上来说，这可是一个明显的缺点，在前言我说明的需求上说过<strong>这是一个给宿舍甚至是个人使用的推荐系统。</strong></p><p>也就是说:</p><ul><li>我们无法提供大量数据。</li><li>我们很懒，我们最可能是告诉系统我从它的推荐中采纳了哪一部的电影，而不会去评分，我们可能告诉它质量是否可以接受，但不会像豆瓣用户那样给出0~10的准确分数。</li></ul><p>因此，传统的推荐算法有很多不适合我需求的地方，但是看问题要看本质。<strong>无非就是根据用户的特性，或者根据商品特性，进行与训练好的模型进行相似性比较。</strong>抓住这些特点，我做了少少的”创新”</p><ul><li>不基于用户的评分作相似度，而是用商品的<code>label</code>做标准<br>现在很多商品尤其是音乐或者电影，都会具有自己的<code>label</code>，比如说<code>喜剧</code>，<code>悬疑</code>，其次还有<code>主演</code>，<code>导演</code>等可以作为其特征。电商平台上也有诸如商品种类<code>衣服</code>,<code>女鞋</code>，<code>包包</code>,等，而某些物品，例如衣服，那么衣服的<code>品牌</code>，<code>size</code>，都可以作为用户的一个选择的特征。</li></ul><ul><li>用户模型是动态更新的<br>这一点不难理解，如果一个用户长期使用使用该系统，那么他的选择中很可能已经覆盖了大量的label，这时基于label的推荐系统则很难区分该用户的喜好。这时我们有两个解决方法。第一个是允许用户自定义label，比如SF就可以自定义问题或文章的标签，这样增大了label的多样性。当然，这个解决方案只能算一个缓解的方案，要想彻底解决，我觉得需要给特征选定有效期。<br>增加有效期后，用户的选择可以反应出一个时间段内的需求。<strong>假设这样一个场景，一名用户准备去旅游了，他可能会大量浏览旅游用品的出售页面，例如一次性牙膏等，这时，就可以向该用户推荐出售旅行用品的网站了。而超过了特征的有效期，例如一周，这时用户已经旅游回来，因为特征已经无效，推荐系统不再推荐旅游用品（这样用户不会觉得莫名其妙。个人经历，现在某些网站就往往会出现明显已经超过我感兴趣时限的推荐），而是开始重新收集用户新一周浏览的特征，动态构建用户模型，推荐用户下一阶段他可能需要的物品</strong></li></ul><p>实现上述想法，在python中，我们可以这么做,实现如下字典</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">record = &#123;</span><br><span class="line">    &quot;labelName&quot;:(weight,time),</span><br><span class="line">    &quot;labelName2&quot;:(weight,time)</span><br><span class="line">    ……</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#labelName是标签名称，在该标签下有一个元组，元组的第一个字段是这个标签的权重。</span><br><span class="line">#权重越大，表示用户越喜欢这个标签。</span><br><span class="line">#第二个字段是创建该标签的起始时间</span><br></pre></td></tr></table></figure><p>在实现推荐时，则较为容易实现，给定<code>testList</code>。这时需要:</p><ul><li>创建名<code>res</code>的空字典</li><li>遍历<code>testList</code>，每一个对象命名为<code>t</code></li><li>遍历<code>t</code>具有的<code>label</code>，根据<code>label</code>从<code>record</code>上获取信息。</li><li>同时获取当前时间<code>time2</code>，如果<code>time2-time</code>超出了规定时限，则该标签的信息无效，忽略该<code>label</code>，同时删除<code>record</code>里面的对应的字段。</li><li>若该标签有效，则<code>t</code>的得分加1，并将t的下标<code>index</code>作为<code>key</code>假如到一个<code>res</code>中</li><li>遍历完成后，对<code>res</code>字典按<code>value</code>排序</li><li>最后，可以根据需要对排序结果进行访问。比如只获取最高的前5名。</li></ul><p>这样，一个<strong>适合少用户的推荐系统</strong>就弄出来啦~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;传统推荐系统算法&quot;&gt;&lt;a href=&quot;#传统推荐系统算法&quot; class=&quot;headerlink&quot; title=&quot;传统推荐系统算法&quot;&gt;&lt;/a&gt;传统推荐系统算法&lt;/h3&gt;&lt;img src=&quot;/blog/学习答疑/学习答疑/用Python写一个简单的推荐系统/01.jp
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
      <category term="python" scheme="http://www.JiShuXuePai.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>零基础如何学习数据分析？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/零基础如何学习数据分析？/</id>
    <published>2018-06-19T02:06:16.000Z</published>
    <updated>2018-06-19T03:19:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>目前市场对大数据相关人才的需求与日俱增，岗位的增多，也导致了大数据相关人才出现了供不应求的状况，从而引发了一波关于大数据学习的浪潮。那么什么是数据分析？为什么要学习数据分析呢？</p><p><strong>数据分析</strong>是基于商业目的，有目的的进行收集、整理、加工和分析数据，提炼有价信息的一个过程。</p><p>一个分析项目，你的数据对象是谁？商业目的是什么？要解决什么业务问题？数据分析师对这些都要了然于心。基于商业的理解，整理分析框架和分析思路。例如，减少新客户的流失、优化活动效果、提高客户响应率等等。不同的项目对数据的要求，使用的分析手段也是不一样的。</p><img src="/blog/学习答疑/学习答疑/零基础如何学习数据分析？/01.jpg" title="Markdown 语法"><h3 id="1-数据分析师是什么？为什么要做数据分析师？"><a href="#1-数据分析师是什么？为什么要做数据分析师？" class="headerlink" title="1.数据分析师是什么？为什么要做数据分析师？"></a>1.数据分析师是什么？为什么要做数据分析师？</h3><p>数据分析师是指的是不同行业中，专门从事行业数据搜集、整理、分析，并依据数据做出行业研究、评估和预测的专业人员。</p><p>近些年，随着互联网行业发展日趋迅猛，互联网公司的对数据分析师岗位的需求越来越多，这不是偶然。</p><p>在过去的十年里，中国互联网行业靠着人口红利和流量红利急剧生长；而随着流量获取成本的不断提高、运营效率的不断下降，这种粗放式经营模式已经不再可行。互联网企业迫切需要通过数据分析来实现精细化运营，降低成本、提高效率。</p><p><img src="02.jpg" alt=""></p><h3 id="2-如何学习数据分析？"><a href="#2-如何学习数据分析？" class="headerlink" title="2.如何学习数据分析？"></a>2.如何学习数据分析？</h3><p><strong>任何一门技术或学科都有其内部规律，需要有计划，有先后，循序渐进来学。</strong></p><p>一个初级数据分析师需要掌握的技能有：</p><ol><li>统计学基础</li><li>Python语言</li><li>网页分析</li><li>数据库技术</li><li>常用模型理论</li></ol><p>数据分析入门并不难，难的是之后的积累才是重点，如何在实际工作、项目中真正发挥数据分析的作用，产生价值。</p><p><img src="03.jpg" alt=""></p><h3 id="3-数据分析师需具备的核心能力"><a href="#3-数据分析师需具备的核心能力" class="headerlink" title="3.数据分析师需具备的核心能力"></a>3.数据分析师需具备的核心能力</h3><p>数据分析师要具备六种核心能力：1.基础科学的能力；2.使用分析工具的能力；3.掌握编程语言的能力；4.逻辑思维的能力；5.数据可视化的能力；6.模型评估的能力；</p><p><strong>1.基础科学的能力</strong></p><p>可以说，在数据决策的时代，数据分析几乎渗透到企业的每个业务环节中。</p><p>掌握统计学，我们才能知道每一种数据分析的模型，什么样的输入，什么样的输出，有什么样的作用，开始我们并不一定要把每个算法都弄懂。</p><p><strong>2.使用分析工具的能力</strong></p><p>任何数据分析师从事业务方向的工作都必须会统计学，统计学的学习最好辅助SPSS或其他SAS来学，做到数据分析基本功扎实，兼顾实战性。</p><p>任何数据分析师从事技术方向的工作都必会SQL，不单是数据分析师，每一个运营、产品经理、尤其是互联网行业，一定要会SQL，基本知名互联网公司的产品经理都能写SQL。</p><p>学习中，要掌握SQL的基础语法、中级语法和常用函数，结合关系数据库系统来学习SQL语句。</p><p><strong>3.掌握编程语言的能力</strong></p><p>Python主要掌握基础语法，pandas操作、numpy操作、sklearn建模，学会用python编写网络爬虫爬取数据等等。</p><p><img src="04.jpg" alt=""></p><p><strong>4.逻辑思维的能力</strong></p><p>逻辑思维对于数据分析来说特别重要。反映商业数据里，大家可以理解为去搭建商业框架或者说是故事线，有逻辑的推进，结果才会另人信服。</p><p><strong>5.数据可视化的能力</strong></p><p>有了Python的基础，我们就可以学习数据可视化了。运营和产品都需要学习可视化，可视化说白了，就是画图，但做为数据分析师来说，我们不能用EXCEL 来实现可视化，因为它的局限性太大了。这里也不建议花太多时间学习给非专业人士展示的Tableau，有1个小时学会Tableau足够。</p><p>Python中可视化的工具有matplotlib,seaborn,ploltly;</p><p><strong>6.模型评估的能力</strong></p><p>Model建模，知道模型建好后应该怎样去评估，掌握怎样用一些定量的指标，数据、数值来衡量模型建好后到底有多准确，或者说到底有多错误。模型评估的指标或计算方式选择正确与否，能够直接影响到整个项目获模型是否有效。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;目前市场对大数据相关人才的需求与日俱增，岗位的增多，也导致了大数据相关人才出现了供不应求的状况，从而引发了一波关于大数据学习的浪潮。那么什么是数据分析？为什么要学习数据分析呢？&lt;/p&gt;&lt;p&gt;&lt;strong&gt;数据分析&lt;/strong&gt;是基于商业目的，有目的的进行收集、整理、加
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
      <category term="python" scheme="http://www.JiShuXuePai.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>5个常用的大数据可视化分析工具，你知道吗？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/5%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7%EF%BC%8C%E4%BD%A0%E7%9F%A5%E9%81%93%E5%90%97%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/5个常用的大数据可视化分析工具，你知道吗？/</id>
    <published>2018-06-19T01:35:34.000Z</published>
    <updated>2018-06-26T01:23:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>大数据及移动互联网时代，每一个使用移动终端的人无时无刻不在生产数据，而作为互联网服务提供的产品来说，也在持续不断的积累数据。数据如同人工智能一样，往往能表现出更为客观、理性的一面，数据可以让人更加直观、清晰的认识世界，数据也可以指导人更加理智的做出决策。</p><p>而在大数据时代的今天，最有价值的商品则是数据。那么今天小编在这里给大家推荐一些常用于数据分析的必备神器。</p><img src="/blog/学习答疑/学习答疑/5个常用的大数据可视化分析工具，你知道吗？/01.jpg" title="Markdown 语法"><p><strong>1.Tableau</strong></p><p><img src="Tableau01.jpg" alt=""></p><p><img src="Tableau02.jpg" alt=""></p><p>Tableau 帮助人们快速分析、可视化并分享信息。它的程序很容易上手，各公司可以用它将大量数据拖放到数字“画布”上，转眼间就能创建好各种图表。数以万计的用户使用 Tableau Public 在博客与网站中分享数据。</p><blockquote><p>项目地址：<a href="https://www.tableau.com/" target="_blank" rel="noopener">https://www.tableau.com/</a></p></blockquote><p><strong>2.ECharts</strong></p><p><img src="ECharts01.jpg" alt=""></p><p><img src="ECharts02.jpg" alt=""></p><p>Echarts可以运用于散点图、折线图、柱状图等这些常用的图表的制作。Echarts的优点在于，文件体积比较小，打包的方式灵活，可以自由选择你需要的图表和组件。而且图表在移动端有良好的自适应效果，还有专为移动端打造的交互体验。</p><blockquote><p>项目地址：<a href="http://echarts.baidu.com/" target="_blank" rel="noopener">http://echarts.baidu.com/</a></p></blockquote><p><strong>3.Highcharts</strong></p><p><img src="Highcharts01.jpg" alt=""></p><p><img src="Highcharts02.jpg" alt=""></p><p>Highcharts的图表类型是很丰富的，线图、柱形图、饼图、散点图、仪表图、雷达图、热力图、混合图等类型的图表都可以制作，也可以制作实时更新的曲线图。</p><p>另外，Highcharts是对非商用免费的，对于个人网站，学校网站和非盈利机构，可以不经过授权直接使用 Highcharts 系列软件。Highcharts还有一个好处在于，它完全基于 HTML5 技术，不需要安装任何插件，也不需要配置 PHP、Java 等运行环境，只需要两个 JS 文件即可使用。</p><blockquote><p>项目地址：<a href="https://www.hcharts.cn/" target="_blank" rel="noopener">https://www.hcharts.cn/</a></p></blockquote><p><strong>4.魔镜</strong></p><p><img src="魔镜01.jpg" alt=""></p><p>​<img src="魔镜02.jpg" alt=""></p><p>魔镜是中国最流行的大数据可视化分析挖掘平台，帮助企业处理海量数据价值，让人人都能做数据分析。</p><p>魔镜基础企业版适用于中小企业内部使用，基础功能免费，可代替报表工具和传统BI，使用更简单化，可视化效果更绚丽易读。</p><blockquote><p>项目地址：<a href="http://www.moojnn.com/" target="_blank" rel="noopener">http://www.moojnn.com/</a></p></blockquote><p><strong>5.图表秀</strong></p><p><img src="图表秀01.jpg" alt=""></p><p><img src="图表秀02.jpg" alt=""></p><p>图表秀的操作简单易懂， 而且站内包含多种图表，涉及各行各业的报表数据都可以用图表秀实现， 支持自由编辑和Excel、csv等表格一键导入，同时可以实现多个图表之间联动， 使数据在我们的软件辅助下变的更加生动直观，是目前国内先进的图表制作工具。</p><blockquote><p>项目地址：<a href="http://www.tubiaoxiu.com/" target="_blank" rel="noopener">http://www.tubiaoxiu.com/</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;大数据及移动互联网时代，每一个使用移动终端的人无时无刻不在生产数据，而作为互联网服务提供的产品来说，也在持续不断的积累数据。数据如同人工智能一样，往往能表现出更为客观、理性的一面，数据可以让人更加直观、清晰的认识世界，数据也可以指导人更加理智的做出决策。&lt;/p&gt;&lt;p&gt;而在大
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
  </entry>
  
  <entry>
    <title>为什么程序员喜欢在夜间写代码？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E4%B8%BA%E4%BB%80%E4%B9%88%E7%A8%8B%E5%BA%8F%E5%91%98%E5%96%9C%E6%AC%A2%E5%9C%A8%E5%A4%9C%E9%97%B4%E5%86%99%E4%BB%A3%E7%A0%81%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/为什么程序员喜欢在夜间写代码？/</id>
    <published>2018-06-19T01:23:46.000Z</published>
    <updated>2018-06-25T01:24:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>曾经有人说：“<strong>程序员是一种能把咖啡转换成代码的机器</strong>“。</p><p>程序员们自己也常说，工作效率最高的时候总是在深夜，不是在凌晨4点入睡，就是凌晨4点起床。</p><p>深夜之所以工作效率高是因为不易分心，其实仔细想想晚上和白天并无多大区别，但程序员们也总是有自己的理由，大致分为一下三点。</p><img src="/blog/学习答疑/学习答疑/为什么程序员喜欢在夜间写代码？/01.jpg" title="Markdown 语法"><h3 id="1-生产型时间表"><a href="#1-生产型时间表" class="headerlink" title="1.生产型时间表"></a><strong>1.生产型时间表</strong></h3><p>记得曾看过一篇关于时间表的文章，他们把时间基本分为两类：管理型和生产型时间表，所谓的管理型时间表是把一天的时间分成每小时来安排，就算是有别的事打扰到你也只是浪费了这一点时间。</p><p>而生产型时间表就不一样了，这段时间是程序员需要全身心的投入到工作中去，不希望在这之中有任何人去打搅到自己的时间，因为一旦被打搅到了，之前的所有思绪可能要花上很大一分部时间来整理清楚。</p><p>所以，很多的大人物也都是如此，他们也发现如果想在白天好好工作是不太可能的，因为一整天当中自己要应付很多人的打扰，所以他们只能在晚上别人都睡觉的时候，才能好好的静下来完成大多的工作。</p><p><img src="02.jpg" alt=""></p><h3 id="2-晚上大脑最为专注"><a href="#2-晚上大脑最为专注" class="headerlink" title="2.晚上大脑最为专注"></a><strong>2.晚上大脑最为专注</strong></h3><p>但就算是程序员，到了晚上也该睡觉的。既然如此，为什么程序员会喜欢在深夜写代码呢？反而在大脑最亢奋、最清醒的时候完成相对简单的任务呢？</p><p>因为，白天程序员们真的有足够时间写代码么？产品经理、设计师、前端以及后端开发需要经常沟通，整个团队得开会，有时还需要与同事交流技术问题。这样下来，写代码的思路经常会被打断，而留给你真正写代码的时间并不多。</p><p>可能很多程序员都有感触，尤其在深夜人比较疲倦的时候编程效率更高，因为当你的大脑累的时候，没有多于的精力照顾到其他的时候，你就会只选择一样去专注。反而是白天精力充沛的时候却不能专心做一件事情。</p><h3 id="3-明亮的屏幕会刺激你的大脑"><a href="#3-明亮的屏幕会刺激你的大脑" class="headerlink" title="3.明亮的屏幕会刺激你的大脑"></a><strong>3.明亮的屏幕会刺激你的大脑</strong></h3><p>这个问题就好理解了在一个明亮的光源下，他会刺激你的大脑延迟你睡眠的时间。在不知不觉工作中，你会暂时忘记了困意，时间就会慢慢“流逝”，当你看表的时候，你会诧异这已经是凌晨3点了。长久下去，你的生物钟就会适应了这个新的周期，让你能在此环境下保证工作效率。</p><p><img src="03.jpg" alt=""></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a><strong>总结</strong></h3><p>总而言之，大部分程序员喜欢夜间写代码，是因为，<strong>安静、效率高，没人打扰</strong>。在这种放松的环境下，程序员的大脑也能保持清醒，并且将全部注意力集中在明亮的屏幕上。</p><p>其实所谓的熬夜效率高也指的是后半夜，也就是凌晨2点到凌晨4点。但是我们可以早睡早起可以达到相同效果，所以小编相信有更好的方式利用这个“<strong>高效率的后半夜</strong>”。</p><p>你们还有什么原因喜欢夜间写代码？可以在评论区和小编讨论。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;曾经有人说：“&lt;strong&gt;程序员是一种能把咖啡转换成代码的机器&lt;/strong&gt;“。&lt;/p&gt;&lt;p&gt;程序员们自己也常说，工作效率最高的时候总是在深夜，不是在凌晨4点入睡，就是凌晨4点起床。&lt;/p&gt;&lt;p&gt;深夜之所以工作效率高是因为不易分心，其实仔细想想晚上和白天并无多大区别
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
  </entry>
  
  <entry>
    <title>Python语言越来越火，零基础也能学会（附学习路线）</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/Python%E8%AF%AD%E8%A8%80%E8%B6%8A%E6%9D%A5%E8%B6%8A%E7%81%AB%EF%BC%8C%E9%9B%B6%E5%9F%BA%E7%A1%80%E4%B9%9F%E8%83%BD%E5%AD%A6%E4%BC%9A%EF%BC%88%E9%99%84%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF%EF%BC%89/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/Python语言越来越火，零基础也能学会（附学习路线）/</id>
    <published>2018-06-19T01:14:08.000Z</published>
    <updated>2018-06-21T09:49:27.146Z</updated>
    
    <content type="html"><![CDATA[<p>目前的IT行业发展日趋迅猛，IT产业的产值成倍增长，在最具潜力的薪酬职业排行中，前二十名里面IT行业总是占有很大比重。而这其中又属人工智能非常之热门。如果你想要在人工智能这个方向发展，那么建议就先从Python编程语言的学习开始！</p><img src="/blog/学习答疑/学习答疑/Python语言越来越火，零基础也能学会（附学习路线）/01.jpg" title="Markdown 语法"><p><strong>首先让我们先来了解一下编程的基础概念</strong></p><blockquote><p>我们先普及一下编程语言的基础知识。编程语言就是来开发程序的，说白了就是让计算机干活，比如我们要编写一篇文章，下载一首MP3等，而计算机干活的CPU只认识机器的指令，所以，尽管不同的编程语言差异极大，最后都得“翻译”成CPU可以执行的机器指令。理论上任何语言干任何事情几乎都可以, 但是主要干什么那就不一样了。</p></blockquote><h3 id="Python语言"><a href="#Python语言" class="headerlink" title="Python语言"></a>Python语言</h3><p>Python由于具有丰富和强大的库，它又叫做作胶水语言，能够把用其他语言制作的各种模块（尤其是C/C++）很轻松地联结在一起。常见的一种应用情形是，使用Python快速生成程序的原型（有时甚至是程序的最终界面），然后对其中有特别要求的部分，用更合适的语言改写，比如3D游戏中的图形渲染模块，性能要求特别高，就可以用C/C++重写，而后封装为Python可以调用的扩展类库。Python被广泛地用于系统运维、图形处理、数学处理、文本处理、数据库编程、网络编程、Web编程、多媒体应用、pymo引擎、爬虫编写、人工智能等，加上人工智能（AI）的持续火热，Python作为通用开发语言，地位也是水涨船高。Python又易于阅读和编写，所以经常被称为实用主义，就算是非程序员或开发人员也很容易上手。</p><p><img src="02.jpg" alt=""></p><p>其实学习编程有很多种方法，那今天技术学派就整理了一些学习思路和方法。希望能够为大家开阔一些学习Python的思维方式。</p><h3 id="阶段一：师傅领进门"><a href="#阶段一：师傅领进门" class="headerlink" title="阶段一：师傅领进门"></a>阶段一：师傅领进门</h3><p>零基础学习Python，看视频跟着老师的操作是个不错的选择，边看视频边敲代码，熟练语法，快速入门，跟着老师的思路，实现功能，每一步骤都不会落下。而且通过视频的方式，很多的知识点理解起来也会比较容易。</p><p>在学习的过程中，做好笔记，保存好写过的代码，方便日后复习，每天给自己定个小任务，比如说，今天必须完成哪一些章节，保证一定的代码量。坚持和实践才是硬道理。</p><h3 id="阶段二：看书辅助学习"><a href="#阶段二：看书辅助学习" class="headerlink" title="阶段二：看书辅助学习"></a>阶段二：看书辅助学习</h3><p>在学习的过程中，可以看一些相关的书籍，也不必整本书都看，可以把书放到手边，等到需要的时候可以当作工具书来用。</p><p>因为有基础书籍，所以可以很快就完成初步语法的学习和使用。太复杂的特性还是在使用中逐步掌握就可以的。</p><h3 id="阶段三：确定学习方向"><a href="#阶段三：确定学习方向" class="headerlink" title="阶段三：确定学习方向"></a>阶段三：确定学习方向</h3><p>把合适的语言用到合适的地方。</p><p>Python职业学习方向很多，职业方向大体上分为以下六个：</p><p>Web全栈工程师、爬虫开发工程师、人工智能工程师、Python开发工程师、游戏开发工程师、搜索引擎工程师。</p><h3 id="阶段四：用Python多做练习"><a href="#阶段四：用Python多做练习" class="headerlink" title="阶段四：用Python多做练习"></a>阶段四：用Python多做练习</h3><p>比如Python搜索文件，Python批量处理等，使用最多的还是re模块和socket相关模块。写了大量的例子，让自己对Python更加喜爱，也更加熟悉。此时翻阅最多的是《Python Doc》的指南。不管是语言参考、库参考、Demo参考，都有大量可使用的内容，内容质量很高堪比JDK。</p><p>PS：这个其实就是Python的项目实践阶段，自学的话，还是困难，如果有老师带领，那么就会事半功倍。项目经验才是你提升技术能力的最快捷径。</p><h3 id="阶段五：生产上马"><a href="#阶段五：生产上马" class="headerlink" title="阶段五：生产上马"></a>阶段五：生产上马</h3><p>只会埋头敲代码的Python开发肯定不是各大公司抢着要的，谨记：多找项目多找项目多找项目！多练手多练手多练手！只有自己多动手写具体项目，才能更多的犯错，解决问题，现在练习踩的坑越多，以后和HR谈薪资的时候才会更有底气。</p><p>Github内的项目丰富，想找什么样的项目可以先去Github上面搜索，例如：你想写一个知乎爬虫，在搜索框搜索“知乎”，然后在语言那一栏里选择Python就可以找到你想要的项目了。</p><p><strong>学习 + 实践 + 总结 = 掌握语言的法宝</strong></p><p><strong>“编程是门手艺活”。什么意思？得练啊。</strong></p><p><img src="03.jpg" alt=""></p><h3 id="适合Python初学者练习的项目"><a href="#适合Python初学者练习的项目" class="headerlink" title="适合Python初学者练习的项目"></a>适合Python初学者练习的项目</h3><p>首先有两点建议：</p><p><strong>最好不要写太应用的程序练手，要思考什么更像是知识，老只会写写爬虫是无用的，但是完全不写也不行。</strong></p><p>对于练手的程序，要注意简化和抽象，但是如果简化不得当的话，很容易看几篇教程就被懒得下手了。</p><p>接下来就给大家介绍几种适合新手的练手项目。</p><p><strong>1.算法系列－排序与查找</strong></p><p>Python写swap很方便，就一句话（a， b = b， a），于是写基于比较的排序能短小精悍。刚上手一门新语言练算法最合适不过了，还能顺便刷题，利于找工作。简单的练习，让你受益无穷。</p><p><strong>2.分布式系统/计网系列</strong></p><p><img src="04.jpg" alt=""></p><p>这系列的项目，第一步可以从写一个简单的HTTP客户端开始，原因很简单，因为HTTP大概是最简单的应用层协议了。然后可以考虑实现一个基本的ssh，你大概每天都会用ssh，难道不想做一个自己的简易版本吗？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;目前的IT行业发展日趋迅猛，IT产业的产值成倍增长，在最具潜力的薪酬职业排行中，前二十名里面IT行业总是占有很大比重。而这其中又属人工智能非常之热门。如果你想要在人工智能这个方向发展，那么建议就先从Python编程语言的学习开始！&lt;/p&gt;&lt;img src=&quot;/blog/学习
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
      <category term="python" scheme="http://www.JiShuXuePai.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>如何有效的学习Web前端开发？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%A6%82%E4%BD%95%E6%9C%89%E6%95%88%E7%9A%84%E5%AD%A6%E4%B9%A0Web%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/如何有效的学习Web前端开发？/</id>
    <published>2018-06-13T09:36:00.000Z</published>
    <updated>2018-06-13T09:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>一个好的Web前端工程师在知识体系上既要有广度，又要有深度，所以很多大公司即使出高薪也很难招聘到理想的前端开发工程师。那么如何系统的学习企业实用的web前端技术呢？</p><p>当大家有了一些HTML的静态布局的基础，那么我们学完HTML、CSS这些最简单的东西就算是有了小小的入门，知道了Web前端到底是做什么的，那么我们入门之后应该学习哪些系统的前端知识体系呢？如果我们大家选择自学，那么我们就应该根据个人的学习能力，制定好每天学习“量”，今天技术学派帮大家梳理了一条学习路线。</p><img src="/blog/学习答疑/学习答疑/如何有效的学习Web前端开发？/01.jpg" title="Markdown 语法"><h3 id="第一阶段-HTML、CSS、JavaScript"><a href="#第一阶段-HTML、CSS、JavaScript" class="headerlink" title="第一阶段 HTML、CSS、JavaScript"></a>第一阶段 HTML、CSS、JavaScript</h3><p>我们学习Web前端开发系统知识，除了学习JavaScript之外，其他的千万不要买书看，对于html，css看视频学习就可以了，看书完全是在浪费时间，而且也不会动手去写代码，w3cschool是我们学习Web前端开发的标准，可以随时查阅，为什么我说除了学习JavaScript之外其他的知识不用看书，这个你以后工作了之后就会明白，在这里推荐JavaScript书籍《JavaScript权威指南》。建议没有基础的同学可以看看，如果你工作了，或许对你用处并不大。</p><p><img src="02.jpg" alt=""></p><h3 id="第二阶段-学习框架"><a href="#第二阶段-学习框架" class="headerlink" title="第二阶段 学习框架"></a>第二阶段 学习框架</h3><p>Web前端框架都是用JavaScript封装出来的，所以对于JavaScript一定要掌握好，一定要了解es6，和现在比较流行的主流框架如React、Vue、Angular。现在公司都会用框架，但不止于这些，所以不会框架话，在找工作中是很困难的。</p><p><img src="03.jpg" alt=""></p><h3 id="第三阶段-多做几个项目练手"><a href="#第三阶段-多做几个项目练手" class="headerlink" title="第三阶段 多做几个项目练手"></a>第三阶段 多做几个项目练手</h3><p>当我们有了一定的基础后，一定要多做几个项目去练手，这样我们才会有进步，可以找到身边从事前端的朋友要一些完整的项目，然后去分析前端部分，自己尝试去做项目，因为我们目前只会做前端部分，所以后端的代码我们不会，那我们就需要用一些假的数据来填充页面了，所以我们不需要从数据库中获取，我们练习的时候，写固定的数据就可以的，多做几个大型网站让自己更加熟练，然后掌握一些解决问题的能力，如果自己可以独立完成一些网站的项目，那么在一线城市找个7000-8000的工作是没问题的。</p><p><img src="04.jpg" alt=""></p><h3 id="第四阶段-全栈发展"><a href="#第四阶段-全栈发展" class="headerlink" title="第四阶段 全栈发展"></a>第四阶段 全栈发展</h3><p>如果你觉得自己学习能力可以，接受能力也行，那么可以在学习一门后端语言，如：PHP，Java，Python都可以，如果你前后端的知识都可以掌握，那么你就是全栈工程师的材料，以后可以慢慢发展成为全栈工程师，年薪达到30万是可以的，站在全栈的角度上，深入的学习前端和后端，可以更好的了解Web系统的开发流程以及各个阶段的相互作用。</p><p><img src="05.jpg" alt=""></p><h3 id="学习建议"><a href="#学习建议" class="headerlink" title="学习建议"></a>学习建议</h3><ol><li>必须掌握基本的Web前端开发技术，其中包括CSS、HTML、DOM、BOM、Ajax、JavaScript等，在掌握这些技术的同时，还要清楚地了解它们在不同浏览器上的兼容情况、渲染原理和存在的Bug。</li><li>在一名合格的前端工程师的知识结构中，网站性能优化、SEO和服务器端的基础知识也是必须掌握的。</li><li>必须学会运用各种工具进行辅助开发，如：Webpack、Gulp等。</li><li>除了要掌握技术层面的知识，还要掌握理论层面的知识，包括代码的可维护性、组件的易用性、分层语义模板和浏览器分级支持等等。</li></ol><p>代码的质量是前端开发中应该重点考虑的问题之一。例如，实现一个网站界面可能会有无数种方案，但有些方案的维护成本会比较高，有些方案会存在性能问题，而有些方案则更易于维护，而且性能也比较好。这里的关键影响因素就是代码质量。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一个好的Web前端工程师在知识体系上既要有广度，又要有深度，所以很多大公司即使出高薪也很难招聘到理想的前端开发工程师。那么如何系统的学习企业实用的web前端技术呢？&lt;/p&gt;&lt;p&gt;当大家有了一些HTML的静态布局的基础，那么我们学完HTML、CSS这些最简单的东西就算是有了小
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
      <category term="python" scheme="http://www.JiShuXuePai.com/tags/python/"/>
    
  </entry>
  
</feed>
