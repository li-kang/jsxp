<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>技术学派</title>
  
  <subtitle>学习，因为我还有梦想。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.JiShuXuePai.com/"/>
  <updated>2018-06-09T03:29:47.000Z</updated>
  <id>http://www.JiShuXuePai.com/</id>
  
  <author>
    <name>技术学派</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>5个最热门的编程语言，哪个是你的最爱？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/5%E4%B8%AA%E6%9C%80%E7%83%AD%E9%97%A8%E7%9A%84%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%EF%BC%8C%E5%93%AA%E4%B8%AA%E6%98%AF%E4%BD%A0%E7%9A%84%E6%9C%80%E7%88%B1%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/5个最热门的编程语言，哪个是你的最爱？/</id>
    <published>2018-06-09T03:20:44.023Z</published>
    <updated>2018-06-09T03:29:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>先来普及一下编程语言的基础概念。其实不论你用什么编程语言来开发程序，说到底就是“给计算机下达命令”然后让计算机帮你完成你想要达到的效果。这些指令集都是二进制的0和1；后来就有了汇编语言，可以认为它是二进制指令的助记符表示；再后来有了高级编程语言，它们是通过编译器又变回了汇编语言或者机器语言；紧接着一个又一个的高级编程语言也就诞生了。</p><img src="/blog/学习答疑/学习答疑/5个最热门的编程语言，哪个是你的最爱？/01.jpg" title="Markdown 语法"><p>其实每个编程语言没有高低之分，各自都有各自的优点和缺点，接下来技术学派就用最简单的方式来介绍一下目前市面上最流行的几门编程语言以及特点。</p><h3 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h3><p>C++是一种最广泛支持范式的编程语言，但对于零基础的初学者们来说比较难学，因为它涉及到了指针的概念。通常指针对初学者来说会比较头疼。当然如果C语言学的不错的话，那么C++也会很快上手。但C++不支持垃圾回收机制。但在游戏领域和后台都被热衷使用。</p><p><img src="02.jpg" alt=""></p><blockquote><p>C++和C语言一样，语法难度过高，不太推荐想通过学习一门语言转行进入到IT行业的人群！但是还是那句话，如果你在了解过后，对这门语言感兴趣，那么你可以去尝试，兴趣也是很重要的。</p></blockquote><h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><p>java常常是跟”企业”联系在一起, 因为它具备一些很好的语言特性和丰富的框架, 在众多企业应用中最被青睐, 你总可以听到像J2EE, JSP, Hibernate之类的东西的讨论. 同时, Java在手机领域也有一席之地, 在普遍智能化之前, 很多手机就是以支持Java应用作为卖点的, 而智能手机爆发之后, Java手机主场变成了Android, 作为安卓的标准编程语言而存在.</p><p><img src="03.jpg" alt=""></p><blockquote><p>Java程序员其实现在需求量还是非常大呢，但目前Java在招聘上有些门槛，如果你只是通过一段时间的学习然后去从事Java的工作，可能刚起步的工资不会很高，毕竟现在Java的大神太多了。但它仍然是市场上最流行和最火爆的编程语言。</p></blockquote><h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h3><p>世界上最好的语言？php这三个字你常常会在浏览器地址栏里看到, 所以不意外php是用来开发网站的. 也是web后端的王者语言.无数的网站后端都运行着php代码.</p><p><img src="04.jpg" alt=""></p><blockquote><p>简单易学，上手快，也适合零基础去学习，开发Web便捷迅速。不过PHP只适合网站项目。</p></blockquote><h3 id="JavaScript（Web前端开发）"><a href="#JavaScript（Web前端开发）" class="headerlink" title="JavaScript（Web前端开发）"></a>JavaScript（Web前端开发）</h3><p>前端就是你在网站上看到的一切图片、文字、视频。这些都是用前端写的。目前Web前端开发还是市面上很流行的编程语言。JavaScript就是前端中最核心的部分，所以掌握了这门语言，找工作不是什么难事，薪资还可以，最关键的是，这门语言对于零基础的学员来说学起来难度不大。</p><p><img src="05.jpg" alt=""></p><blockquote><p>前端学习曲线是“先快再慢，最后再快”，目前市场缺口最大的是中高级前端，所以要想真的找到工作，需要多学，多敲代码。</p></blockquote><h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><p>Python是动态形的灵活的解释性语言，由于它具有丰富和强大的库，所以它又叫做作胶水语言，能够把用其他语言制作的各种模块（尤其是C/C++）很轻松地联结在一起。使用Python可以快速的生成程序的原型，然后对其中有特别要求的部分，用更合适的语言改写，比如3D游戏中的图形渲染模块，性能要求特别高，就可以用C/C++重写，而后封装为Python可以调用的扩展类库。Python可以做服务器开发与物联网开发。信息安全，大数据处理，数据可视化机器学习，物联网开发，各大软件的api，桌面应用，都需要python。</p><p><img src="06.jpg" alt=""></p><blockquote><p>python非常灵活，而且啥都能干，包括现在非常火的大数据、人工智能都能够运用到，更可怕的是这门语言极其简单，而且python的库非常丰富，很多时候，你根本不用自己敲代码。所以这门语言是非常适合零基础的小伙伴去学习的，目前python工程师的薪资也很高。</p></blockquote><p><strong>总结：</strong></p><p><strong>C++ </strong>进一步扩充和完善了 C 语言，是一种面向对象的程序设计语言。C++在C的基础上增加了数据封装，继承，多态等编程特性。C++ 可运行于多种平台上，如 Windows、MAC 操作系统以及 UNIX 的各种版本。</p><p><strong>Java</strong>不仅仅是安卓开发，这门语言强大在于除了一些极端性能敏感场所，基本上是通用，非常强大的语言。</p><p><strong>PHP</strong>是世界上最好的编程语言，这句话当然有调侃的意味，但是PHP确实非常好用，而且简单易学，所以你对网站项目有兴趣，那么可以考虑PHP。</p><p><strong>JavaScript</strong>属于网络的脚本语言,被广泛用于Web应用开发,通常用来为网页添加各式各样的动态功能,为用户提供更流畅美观的浏览效果。</p><p><strong>Python</strong>同样简单易上手，语法还特别简单，而且适用性也广，如果你是一个零基础的小白，想入门一种编程语言进入到IT行业的话，那么不妨考虑一下Python。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;先来普及一下编程语言的基础概念。其实不论你用什么编程语言来开发程序，说到底就是“给计算机下达命令”然后让计算机帮你完成你想要达到的效果。这些指令集都是二进制的0和1；后来就有了汇编语言，可以认为它是二进制指令的助记符表示；再后来有了高级编程语言，它们是通过编译器又变回了汇编
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
  </entry>
  
  <entry>
    <title>如何判断自己适不适合做一名程序员？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%A6%82%E4%BD%95%E5%88%A4%E6%96%AD%E8%87%AA%E5%B7%B1%E9%80%82%E4%B8%8D%E9%80%82%E5%90%88%E5%81%9A%E4%B8%80%E5%90%8D%E7%A8%8B%E5%BA%8F%E5%91%98%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/如何判断自己适不适合做一名程序员？/</id>
    <published>2018-06-08T03:20:42.116Z</published>
    <updated>2018-06-08T03:38:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>编程是一门非常有技术含量的手艺活，待遇和福利相对来说较为丰厚。由于种种原因想要转行做程序员的人，总会有这样的困惑：我是否适合做程序员呢？</p><img src="/blog/学习答疑/学习答疑/如何判断自己适不适合做一名程序员？/01.jpg" title="Markdown 语法"><p>其实衡量一份工作是否适合自己的标准至少有三个：你所擅长的、你所喜欢的、对你来说最有价值的（能挣钱的）。从程序员这个职业的角度来看，判断一个人是否适合做程序员标准其实有很多。</p><p>几条核心的标准，看看您是否符合：</p><p><strong>1.理解力或自学能力</strong></p><p>如果你从小就养成了一个习惯性思维定势，觉得没有老师手把手的教就学不会，那你不适合当程序员。如果你学了的东西只是为了应付考试，考试之后就再也不看了，那你也不适合当程序员。</p><p>在编程的过程中，像操作系统、IDE、环境、语言等经常会出现各种Bug，你能否不厌其烦地去解决它们?</p><p><strong>2.一定的逻辑能力</strong></p><p>想要学习编程要有一定的逻辑能力，缺乏逻辑能力的人，就不能很快地找到逻辑漏洞，写不出条理清晰的代码。耐心不够的小伙伴会越来越来烦。逻辑能力也决定了程序员天花板的高度。</p><p><img src="02.jpg" alt=""></p><p><strong>3.抽象思维</strong></p><p>这个能力大体可以决定一个程序员的上限。如果没有这个能力是做不到把世界万物皆对象的抽象能力。如果在学代码的过程中，理解指针这个东西的时间超过了一天，那你不适合当程序员。（强调一下，这里不适合是指你无法成为一个优秀的程序员，你想做当然肯定是可以做的。）</p><p><strong>4.专注力</strong></p><p>专注力是兴趣的衍生品，当你对一个东西非常感兴趣的时候，你就会有非常快的进步。打个比方：有一些喜欢玩“LOL”、“吃鸡”的小伙伴，就算你连续玩几个小时还能越打越精神，还会利用业余时间看视频、看攻略，为什么？因为你觉得有兴趣。如果也觉得写代码有意思，那专注自然就不是个事儿。</p><p><img src="03.jpg" alt=""></p><p><strong>5.想象力与记忆力</strong></p><p>记忆里并不是说过目不忘，只是说你大概记得有什么类，有什么函数，每个函数里的大体过程是什么样的。然后走路、坐地铁的时候就可以用想象力在脑子里做代码的重构啊。我听说大神们有时候在梦里也能写代码，小编暂时还没有锻炼出这个技能。当然，这些能力不是必须的。是需要锻炼的。</p><p><strong>6.沟通能力</strong></p><p>很多人都觉得程序员并不需要什么沟通能力，只要可以写好代码就可以。其实只有搬砖码农才不太需要沟通能力。如果你想成为架构的话，你起码要能清楚地解释自己的方案，更好地沟通是能把自己的方案传达下去。当然，如果你已经是一位大神，那你不沟通也没有问题。桃李不言，下自成溪。你一个人把大家的代码都写了，你一句话不讲，大家也会把你当神的。</p><p><img src="04.jpg" alt=""></p><p>其实能把上面提到这几点全部做到很好的人是极少数，能把其中的2-3点做好大体就算“适合”做程序了，能在软件行业找到合适的岗位了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;编程是一门非常有技术含量的手艺活，待遇和福利相对来说较为丰厚。由于种种原因想要转行做程序员的人，总会有这样的困惑：我是否适合做程序员呢？&lt;/p&gt;&lt;img src=&quot;/blog/学习答疑/学习答疑/如何判断自己适不适合做一名程序员？/01.jpg&quot; title=&quot;Markdo
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
  </entry>
  
  <entry>
    <title>想进入大数据领域，大数据的五大问题你了解吗？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E6%83%B3%E8%BF%9B%E5%85%A5%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%A2%86%E5%9F%9F%EF%BC%8C%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%9A%84%E4%BA%94%E5%A4%A7%E9%97%AE%E9%A2%98%E4%BD%A0%E4%BA%86%E8%A7%A3%E5%90%97%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/想进入大数据领域，大数据的五大问题你了解吗？/</id>
    <published>2018-06-07T14:32:34.162Z</published>
    <updated>2018-06-07T14:40:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>大数据已成为一个高速信息社会科技发达，信息流通，人们之间的交流越来越密切，生活也越来越方便的高科技时代产物。那么关于大数据的五大问题你是否了解?今日就跟着技术学派一起来看一看。</p><img src="/blog/学习答疑/学习答疑/想进入大数据领域，大数据的五大问题你了解吗？/01.jpg" title="Markdown 语法"><h3 id="第一，大数据是什么"><a href="#第一，大数据是什么" class="headerlink" title="第一，大数据是什么?"></a>第一，大数据是什么?</h3><p>大数据是指无法在一定时间范围内用常规软件工具进行捕捉、管理和处理的数据集合，是需要新处理模式才能具有更强的决策力、洞察发现力和流程优化能力的海量、高增长率和多样化的信息资产。</p><p>大数据可分成大数据技术、大数据工程、大数据科学和大数据应用等领域。目前人们谈论最多的是大数据技术和大数据应用。工程和科学问题尚未被重视。大数据工程指大数据的规划建设运营管理的系统工程；大数据科学关注大数据网络发展和运营过程中发现和验证大数据的规律及其与自然和社会活动之间的关系。</p><p>大数据不仅仅是大量的数据，还是来自不同来源，存在不同类型，代表不同含义的海量数据。大数据应该动态变化，不断增加，而且能够通过研究分析发现规律产生价值。</p><p><img src="02.jpg" alt=""></p><h3 id="第二，大数据可以做什么"><a href="#第二，大数据可以做什么" class="headerlink" title="第二，大数据可以做什么?"></a>第二，大数据可以做什么?</h3><p>物联网、云计算、移动互联网、车联网、手机、平板电脑、PC以及遍布地球各个角落的各种各样的传感器，无一不是数据来源或者承载的方式。</p><p>大数据能用来收集分析人们的社会需求和生活状态；还可以用大数据的分析来改善城市交通管理；大数据还能分析人们的身体健康情况、保障市民的医疗和健康条件；还可以分析和防止犯罪行为等；可以帮助我们根据对历史情况的分析，发现事物的发展变化规律，可以有助于更好的提高生产效率，预防意外发生，促进营业销售，使我们的工作和生活变得更加高效轻松便利。</p><p><img src="03.jpg" alt=""></p><h3 id="第三，如何使用大数据"><a href="#第三，如何使用大数据" class="headerlink" title="第三，如何使用大数据?"></a>第三，如何使用大数据?</h3><p>我们利用已经收集的数据，建立各种数学模型，然后进行模拟运算，通过代入不同的数据，调整每次代入的数据点，计算可能产生的结果数据，并分析这种数据可能产生的影响。这种过程涉及的数据量和变化都是海量的，因此需要强大的计算和存储能力。</p><p>随着大数据的应用越来越广泛，应用的行业也越来越低，我们每日都可以看到大数据的一些新颖的应用，从而帮助人们从中获取到真正有用的价值。许多组织或者个人都会受到大数据的剖析影响，但是大数据是怎样帮助人们挖掘出有价值的信息呢?</p><p><strong>1.理解客户、满足客户服务需求</strong></p><p>大数据的应用现在在这领域是最广为人知的。重点是怎样应用大数据更好的了解客户以及他们的喜好和行为。企业极度喜欢搜集社交方面的数据、浏览器的日志、剖析出文本和传感器的数据，为了更加全面的了解客户。在通常情况下，创建出数据模型进行预测。好比美国的著名零售商Target就是通过大数据的剖析，获得有价值的信息，精准得预测到客户在什么时间想要小孩。另外，通过大数据的应用，电信公司可以更好预测出流失的客户，沃尔玛则更加精准的预测哪个产品会大卖，汽车保险行业会了解客户的需求和驾驶水平，政府也能了解到选民的偏好。</p><p><strong>2.业务流程优化</strong></p><p>大数据也更多的帮助业务流程的优化。可以通过利用社交媒体数据、网络搜索以及天气预告挖掘出有价值的数据，其中大数据的应用最广泛的就是供应链以及配送路线的优化。在这2个方面，地理定位和无线电频率的识别追踪货物和送货车，利用实时交通路线数据制订更加优化的路线。人力资源业务也通过大数据的剖析来进行改良，这其中就包括了人才招聘的优化。</p><p><strong>3.大数据正在改善我们的生活</strong></p><p>大数据不单单只是应用于企业和政府，同样也适用我们生活当中的每个人。我们可以利用穿着的装备(如智能手表或者智能手环)生成最新的数据，这让我们可以凭据我们热量的消耗以及睡眠模式来进行追踪。而且还利用大数据剖析来寻找属于我们的爱情，大多数时间交友网站就是大数据应用工具来帮助需要的人匹配合适的对象。</p><p><strong>4.提高医疗和研发</strong></p><p>大数据剖析应用的计算能力可以让我们能够在几分钟内就可以解码整个DNA。而且让我们可以制订出最新的治疗方案。同时可以更好的去理解和预测疾病。就好像人们戴上智能手表等可以形成的数据一样，大数据同样可以帮助病人对于病情进行更好的治疗。大数据技术现在已经在医院应用监视早产婴儿和患病婴儿的情况，通过记录和剖析婴儿的心跳，医生针对婴儿的身体可能会出现不适症状做出预测。这样可以帮助医生更好的救助婴儿。</p><p><img src="04.jpg" alt=""></p><h3 id="第四，大数据有哪些应用场景"><a href="#第四，大数据有哪些应用场景" class="headerlink" title="第四，大数据有哪些应用场景?"></a>第四，大数据有哪些应用场景?</h3><p>通过医学数据的积累和分析，预测疾病发生的概率，以及如何更好的治愈;通过人们日常消费数据的积累和分析，预测消费需求，促进销售;通过环境数据的积累和分析，预测未来气候变化，防范自然灾害。</p><p>下面就让我们一起来看看8个价值极度高的大数据的应用，这些都是大数据在剖析应用上的关键领域：</p><ul><li>大数据帮助政府实现市场经济调控、公共卫生安全防范、灾难预警、社会舆论监督；</li><li>大数据帮助城市预防犯罪，实现智慧交通，提升紧急应急能力；</li><li>大数据帮助医疗机构建立患者的疾病风险跟踪机制，帮助医药企业提升药品的临床使用效果，帮助艾滋病研究机构为患者提供定制的药物；</li><li>大数据帮助航空公司节省运营成本，帮助电信企业实现售后服务质量提升，帮助保险企业识别欺诈骗保行为，帮助快递公司监测分析运输车辆的故障险情以提前预警维修，帮助电力公司有效识别预警即将发生故障的设备；</li><li>大数据帮助电商公司向用户推荐商品和服务，帮助旅游网站为旅游者提供心仪的旅游路线，帮助二手市场的买卖双方找到最合适的交易目标，帮助用户找到最合适的商品购买时期、商家和最优惠价格；</li><li>大数据帮助企业提升营销的针对性，降低物流和库存的成本，减少投资的风险，以及帮助企业提升广告投放精准度；</li><li>大数据帮助娱乐行业预测歌手，歌曲，电影，电视剧的受欢迎程度，并为投资者分析评估拍一部电影需要投入多少钱才最合适，否则就有可能收不回成本；</li><li>大数据帮助社交网站提供更准确的好友推荐，为用户提供更精准的企业招聘信息，向用户推荐可能喜欢的游戏以及适合购买的商品。</li></ul><p><img src="05.jpg" alt=""></p><h3 id="第五，大数据概念是什么"><a href="#第五，大数据概念是什么" class="headerlink" title="第五，大数据概念是什么?"></a>第五，大数据概念是什么?</h3><p>大数据就是互联网发展到现今阶段的一种表象或特征而已，没有必要神话它或对它保持敬畏之心，在以云计算为代表的技术创新大幕的衬托下，这些原本很难收集和使用的数据开始容易被利用起来了，通过各行各业的不断创新，大数据会逐步为人类创造更多的价值。</p><p>其次，想要系统的认知大数据，必须要全面而细致的分解它，小编着手从三个层面来展开：</p><p>第一层面是理论，理论是认知的必经途径，也是被广泛认同和传播的基线。在这里从大数据的特征定义理解行业对大数据的整体描绘和定性；从对大数据价值的探讨来深入解析大数据的珍贵所在；洞悉大数据的发展趋势；从大数据隐私这个特别而重要的视角审视人和数据之间的长久博弈。</p><p>第二层面是技术，技术是大数据价值体现的手段和前进的基石。在这里分别从云计算、分布式处理技术、存储技术和感知技术的发展来说明大数据从采集、处理、存储到形成结果的整个过程。</p><p>第三层面是实践，实践是大数据的最终价值体现。在这里分别从互联网的大数据，政府的大数据，企业的大数据和个人的大数据四个方面来描绘大数据已经展现的美好景象及即将实现的蓝图。</p><p><img src="06.jpg" alt=""></p><p>分享 IT 技术和行业经验，请关注-技术学派。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;大数据已成为一个高速信息社会科技发达，信息流通，人们之间的交流越来越密切，生活也越来越方便的高科技时代产物。那么关于大数据的五大问题你是否了解?今日就跟着技术学派一起来看一看。&lt;/p&gt;&lt;img src=&quot;/blog/学习答疑/学习答疑/想进入大数据领域，大数据的五大问题你了
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
  </entry>
  
  <entry>
    <title>Java、Python和大数据，哪个发展前景最好？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/Java%E3%80%81Python%E5%92%8C%E5%A4%A7%E6%95%B0%E6%8D%AE%EF%BC%8C%E5%93%AA%E4%B8%AA%E5%8F%91%E5%B1%95%E5%89%8D%E6%99%AF%E6%9C%80%E5%A5%BD%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/Java、Python和大数据，哪个发展前景最好？/</id>
    <published>2018-06-07T11:19:56.000Z</published>
    <updated>2018-06-08T03:17:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>Java和Python是编程语言，而大数据则是一系列技术的整合，所以应该分开来看，三者并不能直接进行对比。</p><p>三者实际的关系是目标和实现的包含关系。</p><p>所以这个问题应该分为 Java和Python哪个发展前景好？大数据的发展前景如何？</p><h3 id="关于大数据的发展前景"><a href="#关于大数据的发展前景" class="headerlink" title="关于大数据的发展前景"></a>关于大数据的发展前景</h3><img src="/blog/学习答疑/学习答疑/Java、Python和大数据，哪个发展前景最好？/01.jpg" title="Markdown 语法"><p>大数据并不是一种概念，而是一种方法论，一句话概括，就是通过分析和挖掘全量的非抽样的数据辅助决策。</p><p>关于大数据的发展前景，这里引用马云说过的一句话：</p><blockquote><p>未来最大的资源就是数据，不参与大数据十年后一定会后悔。</p></blockquote><p>从这句话中可以看出马云对大数据是多么的推崇，而事实上，大数据在现在乃至未来十年，依然会很火。</p><p>大数据可以实现的应用可以概括为两个方向，一是精准化定制，二是预测。比如通过搜索引擎搜索同样的内容，每个人的结果是不同的，定制新闻服务或网游。再比如精准营销，百度推广，淘宝推广，或者你到了一个地方，自动推荐周边的消费设施等。</p><blockquote><p>大数据能火多久完全决定于他的应用方向能火多久，或者可以说是大数据的取代者何时能火！<br>一、大数据的应用方向和未来趋势<br>1、应用方向：营销、金融、工业、医疗、教育、交通、智慧生活、执法、体育、政府、旅游等等，大数据是真正的覆盖全行业，也就是未来所有的行业都需要大数据的支撑。<br>2、未来趋势：传感器——数据服务——人工智能——社会关系——人类文明<br>从大数据的应用方向和未来发展趋势可以看出来，在未来10年或20年社会及企业发展过程中，大数据是我们无法离开的技术。云服务、人工智能越来越火，没有大数据谈何云服务，没有大数据谈何人工智能？<br>由此看出大数据能火多久的主要决定因素就是有没有他的取代者出现。<br>二、大数据的取代者什么时候能火？<br>就目前科技飞速发展的现状来看，大数据技术会不会出现取代者，相信没有人敢特别肯定的说没有，但也没有人敢肯定的说有，这就如同10几年前的手机，在当时没有人能够想象到手机有一天会成为一部“无所不能”的机器。<br>但是就目前来看，大数据还没有取代者！</p></blockquote><p>不少想学习大数据的零基础学员都知道，学大数据部分课程之前要先学习一种计算机编程语言。大数据的开发需要编程语言的基础，因为大数据的开发基于一些常用的高级语言，比如Java、R语言和python。不论是大数据生态架构，还是数据挖掘，都需要有高级编程语言的基础。因此，如果想学习大数据开发，还是需要着手学习一门高级语言。例如：Python。</p><h3 id="Java的发展前景"><a href="#Java的发展前景" class="headerlink" title="Java的发展前景"></a>Java的发展前景</h3><p><img src="02.gif" alt=""></p><p>Java是一门面向对象编程语言，不仅吸收了C++语言的各种优点，还摒弃了C++里难以理解的多继承、指针等概念，因此Java语言具有功能强大和简单易用两个特征。Java语言作为静态的面向对象编程语言的代表，极好地实现了面向对象的理论，允许程序员以优雅的思维方式进行复杂的编程。Java具有简单性、面向对象、分布式、健壮性、安全性、平台独立与可移植性、多线程、动态性等等特点 。</p><p>Java的发展方向：web开发、大数据开发、安卓开发、服务器开发等等。</p><p>“Java”作为所有编程语言中最热门技术，可以说它无处不在。在所有程序员中，Java开发工程师就占据20%的比例。</p><h3 id="Python的发展前景"><a href="#Python的发展前景" class="headerlink" title="Python的发展前景"></a>Python的发展前景</h3><p><img src="03.jpg" alt=""></p><p>Python是一种面向对象的解释型计算机程序的设计语言, Python具有丰富和强大的库。它常被称为胶水语言，能够把其他语言制作的各种模块很轻松地结合在一起。</p><p>Python可以做日常任务，比如自动备份MP3；可以做网站，很多著名的国外网站YouTube就是Python写的；可以做网络游戏的后台，很多在线游戏的后台都是Python开发的。</p><p>Python的发展方向：数据分析、人工智能、web开发、测试、运维、web安全、游戏制作等等。</p><p>另外说下，Python目前的发展趋势非常好，伴随着大数据和人工智能的发展，Python的应用将得到更广泛的普及，目前在落地应用中已有不少Python开发的项目了。所以就目前的趋势来说，Python要比Java更具前景一些。</p><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>好啦，以上三个目前最火的方向已经给大家都阐述清楚，最终的选择权还在你们自己的手中！但并不是说哪个前景好就去学哪个，最重要的还是兴趣。有句话说得好，“兴趣是最好的老师”，只有你对某个语音感兴趣了，才有学习的动力，才能坚持下去。</p><p>如果仅仅是为了发展前景好就去学习自己不感兴趣的东西，那么很可能半途而废，最终一事无成。适合自己才是最重要的！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Java和Python是编程语言，而大数据则是一系列技术的整合，所以应该分开来看，三者并不能直接进行对比。&lt;/p&gt;&lt;p&gt;三者实际的关系是目标和实现的包含关系。&lt;/p&gt;&lt;p&gt;所以这个问题应该分为 Java和Python哪个发展前景好？大数据的发展前景如何？&lt;/p&gt;&lt;h3 id
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
  </entry>
  
  <entry>
    <title>现在为什么越来越多的人想学编程？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E7%8E%B0%E5%9C%A8%E4%B8%BA%E4%BB%80%E4%B9%88%E8%B6%8A%E6%9D%A5%E8%B6%8A%E5%A4%9A%E7%9A%84%E4%BA%BA%E6%83%B3%E5%AD%A6%E7%BC%96%E7%A8%8B%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/现在为什么越来越多的人想学编程？/</id>
    <published>2018-06-06T09:32:02.044Z</published>
    <updated>2018-06-06T09:41:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>目前的IT行业发展日趋迅猛，IT产业的产值成倍增长，IT就业前景很好，在最具潜力的薪酬职业排行中，前二十名里面IT行业总是占有很大比重。与其他行业相比，IT行业只要有技术，就算是跳槽再就业也是薪资只涨不跌。所以有发展必然会带来人才的需求，因此好多非IT行业的人都想要进入IT行业去发展。</p><img src="/blog/学习答疑/学习答疑/现在为什么越来越多的人想学编程？/01.jpg" title="Markdown 语法"><p>如果说你现在已经有了想学习编程的想法，那接下来技术学派就来谈谈如何去学习编程。为大家提供一个学习思路。</p><h3 id="1-了解编程基础概念"><a href="#1-了解编程基础概念" class="headerlink" title="1.了解编程基础概念"></a>1.了解编程基础概念</h3><p>首先要对计算机有个基本的认识，了解编程基础概念及用编程解决现实问题的基本流程。</p><p>我们先普及一下编程语言的基础知识。编程语言就是来开发程序的，说白了就是让计算机干活，比如我们要编写一篇文章，下载一首MP3等，而计算机干活的CPU只认识机器的指令，所以，尽管不同的编程语言差异极大，最后都得“翻译”成CPU可以执行的机器指令。理论上任何语言干任何事情几乎都可以, 但是主要干什么那就不一样了。</p><h3 id="2-了解计算机的基本组成结构"><a href="#2-了解计算机的基本组成结构" class="headerlink" title="2.了解计算机的基本组成结构"></a>2.了解计算机的基本组成结构</h3><p>计算机是由运算器、控制器、存储器、输入设备和输出设备等五大部件组成计算机硬件系统。</p><p>运算器：又称算术逻辑单元，用来进行算术或逻辑运算以及移位循环等操作。</p><p>控制器：又称控制单元，是全机的指挥控制中心。它负责把指令逐条从存储器中取出，经译码分析后向全机发出取数、执行、存数等控制命令，以保证正确完成程序所要求的功能。与运算器一起成为CPU。</p><p>存储器：（分为内存和外存）是计算机的存储和记忆装置，用来存放指令、原始数据、中间结果和最终结果。</p><p>输入 / 输出设备：是计算机和外界进行信息交换的桥梁。程序、数据及现场信息要通过输入设备输入给计算机；计算机的处理结果要通过输出设备输出，以便用户使用。常用的输入设备有：键盘、鼠标、扫描仪等；常用的输出设备有：显示器、打印机、绘图仪等。</p><h3 id="3-学习基本的数据结构"><a href="#3-学习基本的数据结构" class="headerlink" title="3.学习基本的数据结构"></a>3.学习基本的数据结构</h3><p>虽然编程语言有好多种，但是程序的数据类型都相差不多。</p><h3 id="4-选择一门入门的编程语言"><a href="#4-选择一门入门的编程语言" class="headerlink" title="4.选择一门入门的编程语言"></a>4.选择一门入门的编程语言</h3><p>对于大多数的转行者来说，学习编程的目的就是想找一份高薪的工作，那么肯定是哪个编程语言的就业前景好，就越值得学习。</p><p>就初学者而言，技术学派推荐2个方向</p><p><strong>HTML5+JS（web前端开发）</strong>：目前web前端开发还是市面上很流行的编程语言。所以学习这门语言，找工作不是什么难事，薪资还可以，最关键的是，这门语言对于零基础的学员来说学起来难度不大。</p><p><strong>Python</strong>：Python语言非常灵活，而且什么都能干，包括现在非常火的大数据、人工智能都能够运用到，更可怕的是这门语言极其简单，而且python的库非常丰富，很多时候，你根本不用自己敲代码。所以这门语言是非常适合零基础的小伙伴去学习的，目前python工程师的薪资也很高。</p><h3 id="5-试着用所学的编程语言去做些项目，培养编程思想"><a href="#5-试着用所学的编程语言去做些项目，培养编程思想" class="headerlink" title="5.试着用所学的编程语言去做些项目，培养编程思想"></a>5.试着用所学的编程语言去做些项目，培养编程思想</h3><p>有人会说编程很难，有想学的念头但又放弃了，特别是对编程毫不了解，身边也没有从事软件开发行业朋友的人，认为编程写代码会是一个很难的工作。那编程真的很难吗？其实一个完全没有基础的外行人，在一个IT培训机构里培训5个月左右完全可以找到一份开发的工作，进入到IT行业。有人会说，培训完可能只学会一点皮毛，并不会成为一个编程大神。其实，通过一段时间的培训是否可以成为一个编程大牛，这个也是看个人。更多的是为了帮助一些没有基础非IT专业的外行人可以进入到IT行业，之后是否会在IT行业作出多高的成就，就要看在真正工作中的积累和自学能力了。所以难的不是编程，难的是决心和毅力。</p><p>分享 IT 技术和行业经验，请关注-技术学派。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;目前的IT行业发展日趋迅猛，IT产业的产值成倍增长，IT就业前景很好，在最具潜力的薪酬职业排行中，前二十名里面IT行业总是占有很大比重。与其他行业相比，IT行业只要有技术，就算是跳槽再就业也是薪资只涨不跌。所以有发展必然会带来人才的需求，因此好多非IT行业的人都想要进入IT
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
  </entry>
  
  <entry>
    <title>C语言与C++、C#究竟是什么关系？（附福利）</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/C%E8%AF%AD%E8%A8%80%E4%B8%8EC++%E3%80%81C%20Sharp%E7%A9%B6%E7%AB%9F%E6%98%AF%E4%BB%80%E4%B9%88%E5%85%B3%E7%B3%BB%EF%BC%9F%EF%BC%88%E9%99%84%E7%A6%8F%E5%88%A9%EF%BC%89/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/C语言与C++、C Sharp究竟是什么关系？（附福利）/</id>
    <published>2018-06-06T09:11:23.432Z</published>
    <updated>2018-06-06T09:27:41.726Z</updated>
    
    <content type="html"><![CDATA[<p><strong>简单来说，C++就像是C语言的亲弟弟，而C Sharp（C#）就是他们二者的远房亲戚（其实它更像是Java的表兄弟）。</strong>这三门语言都是十分优秀的编程语言，也都有很高的运行效率。这三种编程语言的应用范围很广阔，接下来技术学派就分别介绍一下三种语言的来历以及应用领域。</p><img src="/blog/学习答疑/学习答疑/C语言与C++、C%20Sharp究竟是什么关系？（附福利）/01.jpg" title="Markdown 语法"><h3 id="C语言"><a href="#C语言" class="headerlink" title="C语言"></a>C语言</h3><p>C语言诞生在大名鼎鼎的美国贝尔实验室，它的前身是B语言。C语言从诞生之初就获得了广大程序员的青睐，由于其简洁的语法，高效的执行效率（比较接近汇编的性能），它既具有高级语言的特点，又具有汇编语言的特点。在很多领域获得了广泛应用。比如操作系统，图像处理算法，硬件驱动，嵌入式设备编程等等。（底部有彩蛋）</p><p><img src="02.jpg" alt=""></p><h3 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h3><p>尽管C语言已经足够优秀，但它毕竟是一门面向过程的编程语言，不符合人的思维习惯（人脑的思维习惯有点像面向对象）。于是在这种背景下就诞生了更加强大的C++,之所以说C++是C语言的亲弟弟，是因为C++同样诞生在贝尔实验室。C++在C的基础上增加了数据封装，继承，多态等编程特性，同时又全部兼容了C语言，使之成为C++的一个子集。C++是一种最广泛支持范式的编程语言，比较难学，涉及到了指针的概念。指针会比较头疼。当然如果C学的不错，C++上手也会快。但C++不支持垃圾回收机制。C++语言被广泛用在操作系统，大型应用软件的开发中。</p><p><img src="03.png" alt=""></p><h3 id="C-1"><a href="#C-1" class="headerlink" title="C"></a>C</h3><p>C#是由微软公司开发出来用来抗衡Java的一款现代编程语言（具有安全，稳定，简单的特点）。它吸收了很多Java语言的优点，但微软公司为了避免法律纠纷，下意识的将其语法规则向C++看齐（C#其实就是C++++）。C#的语法简单，可以快速上手，开发效率很高，被广泛应用在了各类应用软件，游戏开发之中。</p><p><img src="04.jpg" alt=""></p><p><strong>总结：</strong></p><ol><li>C语言是完全面向过程的语言，用于开发较小规模的程序效率会很高，但是规模较大的程序，就显得代码量臃肿，编写效率就会下降。</li><li>C++是半面相对象，引入了类的封装性、继承性、多态性大大简化程序编写，提到了代码重用率。<br>C语言和C++的关系：C++既是面向过程又是面向对象，而且它还继承了C语言的所有优点，并且对C语言功能做了很多扩充，可以认为C++就是C语言的增强版。</li><li>C#是完全面向对象的语言，简单易学，开发效率非常高。<br>关于这三种语言的关系就介绍这么多，想要阅读这3本书籍的小伙伴，可以点击技术学派头像-右上角-私信我发送“C语言电子书”即可。</li></ol><p>分享 IT 技术和行业经验，请关注-技术学派。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;简单来说，C++就像是C语言的亲弟弟，而C Sharp（C#）就是他们二者的远房亲戚（其实它更像是Java的表兄弟）。&lt;/strong&gt;这三门语言都是十分优秀的编程语言，也都有很高的运行效率。这三种编程语言的应用范围很广阔，接下来技术学派就分别介绍一下三种语
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
      <category term="C" scheme="http://www.JiShuXuePai.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>6个最高效的语言处理Python库，你用过几个？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E6%8F%92%E4%BB%B6%E8%B5%84%E6%BA%90%E5%BA%93/%E6%8F%92%E4%BB%B6%E8%B5%84%E6%BA%90%E5%BA%93/6%E4%B8%AA%E6%9C%80%E9%AB%98%E6%95%88%E7%9A%84%E8%AF%AD%E8%A8%80%E5%A4%84%E7%90%86Python%E5%BA%93%EF%BC%8C%E4%BD%A0%E7%94%A8%E8%BF%87%E5%87%A0%E4%B8%AA%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/插件资源库/插件资源库/6个最高效的语言处理Python库，你用过几个？/</id>
    <published>2018-06-06T08:40:37.798Z</published>
    <updated>2018-06-06T08:56:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近一段时间Python已经成为数据科学行业中大火的编程语言，今天技术学派收集了一些较为高效的语言处理Python库。下面分享给大家。</p><img src="/blog/插件资源库/插件资源库/6个最高效的语言处理Python库，你用过几个？/01.jpg" title="Markdown 语法"><h3 id="1-NLTK"><a href="#1-NLTK" class="headerlink" title="1.NLTK"></a>1.NLTK</h3><p>NLTK是构建Python程序以处理人类语言数据的领先平台。它提供了易于使用的界面，以及用于分类、标记化、词干化、标记、分析和语义推理的一套文本处理库。用于工业强度NLP库的包装器。</p><p><img src="02.jpg" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 2.Pattern</span><br><span class="line">Pattern是Python编程语言的Web挖掘模块。它多有用于数据挖掘、自然语言处理、机器学习网络分析和`&lt;canvas&gt;`可视化。</span><br><span class="line"></span><br><span class="line">![](03.jpg)</span><br><span class="line"></span><br><span class="line">````项目地址：https://pypi.org/project/pattern3/3.0.0/</span><br></pre></td></tr></table></figure><h3 id="3-Jieba"><a href="#3-Jieba" class="headerlink" title="3.Jieba"></a>3.Jieba</h3><p>“结巴”中文分词：做最好的 Python 中文分词组件。精确模式，试图将句子最精确地切开，适合文本分析；全模式，把句子中所有的可以成词的词语都扫描出来, 速度非常快，但是不能解决歧义；搜索引擎模式，在精确模式的基础上，对长词再次切分，提高召回率，适合用于搜索引擎分词。</p><p><img src="04.jpg" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 4.TextBlob</span><br><span class="line">TextBlob是一个用于处理文本数据的Python库。它提供了一个简单的API用于常见的自然语言处理（NLP）任务，如词性标注，名词短语提取，情感分析，分类，翻译等。</span><br><span class="line"></span><br><span class="line">![](05.png)</span><br><span class="line"></span><br><span class="line">````项目地址：http://textblob.readthedocs.io/en/dev/</span><br></pre></td></tr></table></figure><h3 id="5-SnowNLP"><a href="#5-SnowNLP" class="headerlink" title="5.SnowNLP"></a>5.SnowNLP</h3><p>SnowNLP是一个python写的类库，可以方便的处理中文文本内容，是受到了TextBlob的启发而写的，由于现在大部分的自然语言处理库基本都是针对英文的，于是写了一个方便处理中文的类库，并且和TextBlob不同的是，这里没有用NLTK，所有的算法都是自己实现的，并且自带了一些训练好的字典。注意本程序都是处理的unicode编码，所以使用时请自行decode成unicode。</p><p><img src="06.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 6.TextGrocery</span><br><span class="line">TextGrocery是一个基于LibLinear和结巴分词的短文本分类工具，特点是高效易用，同时支持中文和英文语料。</span><br><span class="line"></span><br><span class="line">![](07.png)</span><br><span class="line"></span><br><span class="line">````项目地址：https://github.com/2shou/TextGrocery</span><br></pre></td></tr></table></figure><p>分享 IT 技术和行业经验，请关注-技术学派。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近一段时间Python已经成为数据科学行业中大火的编程语言，今天技术学派收集了一些较为高效的语言处理Python库。下面分享给大家。&lt;/p&gt;&lt;img src=&quot;/blog/插件资源库/插件资源库/6个最高效的语言处理Python库，你用过几个？/01.jpg&quot; title
      
    
    </summary>
    
      <category term="插件资源库" scheme="http://www.JiShuXuePai.com/categories/%E6%8F%92%E4%BB%B6%E8%B5%84%E6%BA%90%E5%BA%93/"/>
    
    
      <category term="python" scheme="http://www.JiShuXuePai.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>代码量能衡量一个程序员的编程水平吗？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E4%BB%A3%E7%A0%81%E9%87%8F%E8%83%BD%E8%A1%A1%E9%87%8F%E4%B8%80%E4%B8%AA%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E7%BC%96%E7%A8%8B%E6%B0%B4%E5%B9%B3%E5%90%97%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/代码量能衡量一个程序员的编程水平吗？/</id>
    <published>2018-06-04T01:08:08.916Z</published>
    <updated>2018-06-04T01:16:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>其实代码量与”合格”、”优秀”这样关键词根本就没有因果关系。我们不能单纯的用代码编写量去衡量一个程序员编程水平的高低。</p><h3 id="代码少不等于代码不好"><a href="#代码少不等于代码不好" class="headerlink" title="代码少不等于代码不好"></a>代码少不等于代码不好</h3><p>首先这是个很好理解的问题。</p><p>举个例子：想让代码量增多很简单，for 循环 1000 次，你改成 1000 条这样的语句，代码量瞬间多了 1000 倍。把书上的例子照抄到电脑上，这样代码量又增加了。ctrl+c 网上别人的代码，ctrl+v 到自己的工程里，卡卡两下，代码量就多了。把简单的问题搞复杂，本来 10 行代码可以实现的功能，你用 100 行去实现，这妥妥的又多了。</p><p>但这样多出来的代码有多少是真正有效的代码呢？而对应的，对于完成一个特定的功能来说，想让代码多，很容易，去减少它，却很难。</p><img src="/blog/学习答疑/学习答疑/代码量能衡量一个程序员的编程水平吗？/01.jpg" title="Markdown 语法"><h3 id="敲代码越来越少，思考的越来越多"><a href="#敲代码越来越少，思考的越来越多" class="headerlink" title="敲代码越来越少，思考的越来越多"></a>敲代码越来越少，思考的越来越多</h3><p>不可否认，我们在刚学习编程的时候、刚开始工作的时候，确实需要敲大量的代码，已提高自己的编程水平和熟练程度。这是必不可少的步骤，天天看书看视频，就算把书上的例子全部都背下来，也不能算是会编程。</p><p>但是随着工作经验的积累，<strong>我们在代码的总结、思考、优化上的时间越来越多；</strong>甚至有可能一个功能的改造，百分之九十的时间是在思考修改方案，最后只花了十分之一的时间改了几行代码就完成了功能的实现。</p><p><img src="02.jpg" alt=""></p><h3 id="工作经验-工作时间-思考和总结"><a href="#工作经验-工作时间-思考和总结" class="headerlink" title="工作经验=工作时间+思考和总结"></a>工作经验=工作时间+思考和总结</h3><p>从某种意义上说，<strong>编码大部分时候都是一个经验积累的过程</strong>，真正需要全新研究的技术或者业务实现并不太多，君不见，软件公司招聘最看重的就是开发经验，虽然别的因素也会占较大的比重，但是和经验比起来，都不是最重要的。</p><p><img src="03.jpg" alt=""></p><p>那么，和别的行业类似，经验的积累，主要还是靠编码量，写的代码多了，见识的面广了，解决问题的类型和思路也会随之开阔起来，从而让自己的编码水平从量的积累到质的飞跃。</p><p>但是，<strong>光编码量还是不够的，还要学会思考</strong>，这个比单纯累计编码量更重要，比如那重要的23种设计模式，如果没有一定的编程经验，比较难理解，但是，在编码经验的基础上，就能很快融会贯通，对经验系统的总结、分析、提炼，才是能提高自己能力的灵丹妙药。</p><p><strong>总结</strong></p><p>编码量大的不一定是优秀的程序员，但编码量少的肯定不是优秀的程序员。</p><p>分享 IT 技术和行业经验，请关注-技术学派。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;其实代码量与”合格”、”优秀”这样关键词根本就没有因果关系。我们不能单纯的用代码编写量去衡量一个程序员编程水平的高低。&lt;/p&gt;&lt;h3 id=&quot;代码少不等于代码不好&quot;&gt;&lt;a href=&quot;#代码少不等于代码不好&quot; class=&quot;headerlink&quot; title=&quot;代码少不等于
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
  </entry>
  
  <entry>
    <title>刚接触编程的小白最容易进入的误区，看看你中了几条？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%88%9A%E6%8E%A5%E8%A7%A6%E7%BC%96%E7%A8%8B%E7%9A%84%E5%B0%8F%E7%99%BD%E6%9C%80%E5%AE%B9%E6%98%93%E8%BF%9B%E5%85%A5%E7%9A%84%E8%AF%AF%E5%8C%BA%EF%BC%8C%E7%9C%8B%E7%9C%8B%E4%BD%A0%E4%B8%AD%E4%BA%86%E5%87%A0%E6%9D%A1%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/刚接触编程的小白最容易进入的误区，看看你中了几条？/</id>
    <published>2018-06-02T09:42:54.985Z</published>
    <updated>2018-06-02T09:47:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>每一个程序猿，都会经历一个过程，从一个小白慢慢进化为一名程序猿的过程。在这个过程中，我们一定会踩过无数的坑，在我们刚开始接触到编程的时候，最美妙的事物莫过于bug的出现，而bug的出现，莫过于我们语句的错误，那么，在编程中，我们最容易进入哪些误区呢？</p><img src="/blog/学习答疑/学习答疑/刚接触编程的小白最容易进入的误区，看看你中了几条？/01.jpg" title="Markdown 语法"><h3 id="1-语句问题及符号错误"><a href="#1-语句问题及符号错误" class="headerlink" title="1.语句问题及符号错误"></a>1.语句问题及符号错误</h3><p>在刚开始写代码的时候，总是因为一个简简单单的语句问题或者中英文的符号问题而定义错误，其实这个错误是很正常的，每个人刚开始写程序都会遇到，慢慢的多加练习就会好的。只要认真一些，仔细一些，这个阶段很快就会跨过去。</p><p><img src="02.jpg" alt=""></p><h3 id="2-在编程的过程中只要遇到一个问题，就会牢牢不放，不搞定这个问题，誓不罢休"><a href="#2-在编程的过程中只要遇到一个问题，就会牢牢不放，不搞定这个问题，誓不罢休" class="headerlink" title="2.在编程的过程中只要遇到一个问题，就会牢牢不放，不搞定这个问题，誓不罢休"></a>2.在编程的过程中只要遇到一个问题，就会牢牢不放，不搞定这个问题，誓不罢休</h3><p>其实作为一个初学者来说，有这么强大的学习韧劲是对的，但这也正是大多初学者最容易走的弯路，因为刚接触编程，好多东西并非可以通过短暂的查阅、研究就可以弄明白的。上来就寻根问底，会让自己变得疲惫不堪，因为初学小白开始很难具备强大的编程基础，很难把每个知识点都吃的相当透彻，这样做也会在刚开始的学习过程中浪费大量时间，并且还会对学习信心上带来很大负担，会认为编程太难学了。所以开始学习的时候，先了解基本的方向和思路，掌握一些概念或者工具如何使用，然后根据资料先把案例做出来。学习非一日之功，重在循序渐进，随着知识层次的提升，内在的东西就会慢慢掌握，知识系统也就会随之建立起来。</p><p><img src="03.jpg" alt=""></p><h3 id="3-在决定学习一门语言的时候，一直怀疑所学语言到底能不能找到工作，为此中间换了好几种语言"><a href="#3-在决定学习一门语言的时候，一直怀疑所学语言到底能不能找到工作，为此中间换了好几种语言" class="headerlink" title="3.在决定学习一门语言的时候，一直怀疑所学语言到底能不能找到工作，为此中间换了好几种语言"></a>3.在决定学习一门语言的时候，一直怀疑所学语言到底能不能找到工作，为此中间换了好几种语言</h3><p>初学者最喜欢问的一句话“我学的XX语言，到底能不能找到工作”，其实这是一个辩证问题，小编觉得任何一门编程语言只要它还活着，那么就有它存在的必要性。编程语言和语言没啥大的区别，只要学会了任何一门再去学习别的语言都会轻车熟路，简单来说，编程思想是想通的。既然已经花了很多时间在一种语言上学习，就索性学习到底，彻底了解这门语言的属性，学好一门了，也就比较容易做到触类旁通。</p><p><img src="04.jpg" alt=""></p><h3 id="4-在学习过程中可以写出大量的代码，但是排错能力非常差"><a href="#4-在学习过程中可以写出大量的代码，但是排错能力非常差" class="headerlink" title="4.在学习过程中可以写出大量的代码，但是排错能力非常差"></a>4.在学习过程中可以写出大量的代码，但是排错能力非常差</h3><p>初学者最开始的学习方法都是以模仿开始，当代码写完之后，却发现出错了，但怎么看都没问题，最后花费大量的时间才发现了一个非常弱智的问题。初学者出现这种情况是很正常的，但不要养成一个不好的习惯，一旦出现错误，就去找朋友帮助，其实大家很难有这么多的时间和耐心帮着去分析问题和排错的，因为编程语言的变化形式太多，组合方式也是层出不穷，大段的代码很难一眼就找到问题所在。这个时候就需要写代码的人具备debug调试能力，因为在工作中遇到的代码比平常练习的代码复杂程度要多太多，这种情况下很难通过看直接找到问题的根结所在，就需要通过一种手段不断的思考问题出在哪，怎么去解决。基本上能具备完善的调试能力的小伙伴，理论上能独立完成一些小项目的调试，慢慢在向真正的软件工程师迈进了。</p><p><img src="05.jpg" alt=""></p><h3 id="5-学习时看视频看的很懂，一旦关了视频，大脑一片空白"><a href="#5-学习时看视频看的很懂，一旦关了视频，大脑一片空白" class="headerlink" title="5.学习时看视频看的很懂，一旦关了视频，大脑一片空白"></a>5.学习时看视频看的很懂，一旦关了视频，大脑一片空白</h3><p>现在在线视频教程多如牛毛，学习起来比10年前只靠看书方便了太多，很多小伙伴看视频的时候对于里面代码的一些含义都能了解的很彻底，一旦脱离了视频独立写程序的时候，觉得无从下手，典型的实践操作太少，看视频学习编程这个方法没啥问题，但是需要在看的时候，把里面对应的代码在自己的编译器上都敲很多遍，视频讲的再好也只是别人咀嚼好的，看起来很美，但是需要自己在电脑上大量的实践，才能转化为自己的东西，才能纳入自己的知识体系中。</p><p><img src="06.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;每一个程序猿，都会经历一个过程，从一个小白慢慢进化为一名程序猿的过程。在这个过程中，我们一定会踩过无数的坑，在我们刚开始接触到编程的时候，最美妙的事物莫过于bug的出现，而bug的出现，莫过于我们语句的错误，那么，在编程中，我们最容易进入哪些误区呢？&lt;/p&gt;&lt;img src
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
  </entry>
  
  <entry>
    <title>初次求职的程序员该如何准备简历？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%88%9D%E6%AC%A1%E6%B1%82%E8%81%8C%E7%9A%84%E7%A8%8B%E5%BA%8F%E5%91%98%E8%AF%A5%E5%A6%82%E4%BD%95%E5%87%86%E5%A4%87%E7%AE%80%E5%8E%86%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/初次求职的程序员该如何准备简历？/</id>
    <published>2018-06-01T07:33:54.198Z</published>
    <updated>2018-06-01T07:45:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>为什么看上去差不多的技术和资历，有的人可以一个月收到二三十个offer，有的人只有寥寥几个？</p><img src="/blog/学习答疑/学习答疑/初次求职的程序员该如何准备简历？/01.jpg" title="Markdown 语法"><p>今天技术学派为大家分享一下程序员的简历该如何准备。通常HR在筛选简历时主要从公司需求出发，重点不一，不过还是有很多“通用”的套路，为了在30秒内判断出这份简历是否值得跟进，我认为程序员写简历的正确姿势是这样的：</p><h3 id="第一印象"><a href="#第一印象" class="headerlink" title="第一印象"></a>第一印象</h3><p>HR打开简历之后的第一印象很重要，就好比我们看见一个人，会有一个整体的感觉，他是时尚的、小清新的还是老油条？当有了第一印象之后再慢慢分解来看。</p><p><img src="02.jpg" alt=""></p><p>首先我们的简历风格上要简洁明了，逻辑结构清晰。字体的排版，顺畅、清晰整齐就好。最好是PDF格式，兼容性强且不易乱序。如果可以Markdown格式更好了。</p><p><strong>禁忌：</strong></p><ul><li>设计的过于浮夸或者过于简单的。写了十几页，半天都打不开或者加载了半天，打开还乱码。</li><li>简历弄的五颜六色、非常酷炫，却半天找不到联系方式，或是只有个人基本信息和公司名称。</li></ul><h3 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h3><p>基本信息要全：姓名、性别、电话、微信（以防有时候电话打不通哦，时不时会遇到这种情况）、毕业院校、邮箱</p><p><strong>禁忌：</strong></p><ul><li>大部分的基本信息没有写。</li><li>只写了一个Github链接，极致简洁的几句描述，需要通过你的链接来找你的联系方式。</li></ul><h3 id="工作经历-amp-项目经历"><a href="#工作经历-amp-项目经历" class="headerlink" title="工作经历&amp;项目经历"></a>工作经历&amp;项目经历</h3><ul><li><p>效力过哪些公司，在公司的职位</p></li><li><p>擅长的技术语言，应用了哪些技术栈，（Java, PHP，JavaScript, React, Vue, Python…）</p></li><li><p>经历的项目复杂度，及在项目中承担什么样的角色</p></li><li><p>时间节点（尽量不要有空档期）</p></li></ul><p><img src="03.jpg" alt=""></p><p><strong>列子1：</strong></p><p>北京XXX公司 Java工程师 — 2015.2月-2018.5月</p><p>1.MOGU推荐架构数据与缓存层设计开发</p><ul><li>MOGU是一款时尚资讯app,负责推荐页面资讯feed流的展示及用户历史的展示</li><li>负责数据层,处理前端逻辑整个开发工作,分布式rpc服务搭建</li><li>负责进行压测监测、缓存处理,对接又进行改进优化,主用redis缓存</li></ul><p>2.基于Java的电商爬虫开发</p><ul><li>使用java搭建爬虫server平台,进行配置和开发,进行网页改版监测功能开发</li><li>爬取淘宝时尚品牌与其他电商网站商品品牌与详情等</li><li>通过频率、ip池、匿名代理等应对一些网站的反爬</li></ul><p>3.同图搜索Solr服务开发</p><ul><li>基于算法组的同图策略,使用solr做java接又实现rpc服务搭建,进行索引构建和solr实现</li></ul><p><strong>列子2：</strong></p><p>XX公司（全栈工程师）2013.06 — 至今</p><ul><li>参与需求分析及实现方案设计。</li><li>设计数据库表结构，实现后台功能及web页面展示。</li><li>产品线上部署及运维。</li></ul><p>ay 配置管理工程师 2010.03 — 2013.03</p><ul><li><p>负责公司产品性能测试，及线上数据分析</p></li><li><p>负责公司配置管理，环境维护等工作</p></li></ul><p><strong>总结：大家会发现在例子2中，完全看不出来他工作的具体内容，没有逻辑性，甚至不知道他做的什么技术语言。</strong></p><h3 id="工作期望-amp-个人评价"><a href="#工作期望-amp-个人评价" class="headerlink" title="工作期望&amp;个人评价"></a>工作期望&amp;个人评价</h3><p>如果写了个人评价一定要对自己有一个全方位的一个描述总结，让别人更好的解读你。或者在此处，你的优点特长有哪些。即使不写个人评价，也一定记得写上工作期望。</p><p>下面给大家举2个例子大家看一下哪个好？</p><p><strong>例子1：</strong></p><ul><li>为人性格,诚实谦虚，勤奋，能吃苦耐劳，有耐心，有团队意识，能和同学和谐相处，能虚心接受别人的建议的人。</li><li>责任心强，善于沟通，具有良好的团队合作精神；专业扎实，具有较强的钻研精神和学习能力；性格比较乐观外向，喜欢打羽毛球。</li></ul><p><strong>例子2:</strong></p><p>极客、热爱技术、热爱开源</p><ul><li>Ruby on Rails：精通</li><li>Agile/Lean：精通</li><li>ReactJS：掌握</li><li>Docker：掌握</li><li>AWS：掌握</li></ul><p>大家感觉哪个看起来更直观一些呢。虽然第一个例子写的很多，但完全看不出个性特点，写和没写没区别并不大。</p><h3 id="是否有博客，个人技术栈点等"><a href="#是否有博客，个人技术栈点等" class="headerlink" title="是否有博客，个人技术栈点等"></a>是否有博客，个人技术栈点等</h3><ol><li>看到有这项的HR两眼已经放光了，加分项，说明你真正的热爱技术，善于学习总结，乐于分享，且有投入自己的业余时间到软件事业中。</li><li>我喜欢的社区: 图灵社区，知乎，博客园，Stack Over flow，Google Developer Group等；</li><li>我的博客链接、个人作品链接如下:<ul><li><a href="https://github.com/github" target="_blank" rel="noopener">https://github.com/github</a></li><li><a href="http://www.oschina.net/" target="_blank" rel="noopener">http://www.oschina.net/</a></li><li><a href="https://www.cnblogs.com/" target="_blank" rel="noopener">https://www.cnblogs.com/</a></li></ul></li></ol><p><strong>总结</strong></p><ul><li>明白了简历上基本的原则，在写简历的时候切记，所有内容都指向一件事：我可以胜任这个职位。怎么能证明自己的胜任能力，怎么来。</li><li>可以多看几家公司的招聘要求，比较找到共性之处，就是你简历必须有的内容！不要想着自己有什么，要知道人家要什么，尽量往需求上靠！</li><li>个人评价中，不要写套话，要突出自己的与众不同之处，或者至少表达自己对这个职位或互联网行业的热爱。</li></ul><p><strong>想了解更多编程内容，请关注技术学派。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;为什么看上去差不多的技术和资历，有的人可以一个月收到二三十个offer，有的人只有寥寥几个？&lt;/p&gt;&lt;img src=&quot;/blog/学习答疑/学习答疑/初次求职的程序员该如何准备简历？/01.jpg&quot; title=&quot;Markdown 语法&quot;&gt;&lt;p&gt;今天技术学派为大家分享一下
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
  </entry>
  
  <entry>
    <title>机器学习和人工智能的区别你真的知道嘛？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%92%8C%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9A%84%E5%8C%BA%E5%88%AB%E4%BD%A0%E7%9C%9F%E7%9A%84%E7%9F%A5%E9%81%93%E5%98%9B%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/机器学习和人工智能的区别你真的知道嘛？/</id>
    <published>2018-06-01T05:43:06.839Z</published>
    <updated>2018-06-01T06:00:35.162Z</updated>
    
    <content type="html"><![CDATA[<p>大家现在经常会听到别人提起人工智能、机器学习和深度学习。怎样才可以正确的使用这些词呢？他们的区别是什么呢？</p><p>机器学习算法是人工智能背后的推动力量，所有机器学习算法中最关键的是深度学习。</p><p><strong>简单来说，人工智能、机器学习和深度学习都是属于一个领域的一个子集。但是人工智能是机器学习的首要范畴，机器学习是深度学习的首要范畴。</strong></p><img src="/blog/学习答疑/学习答疑/机器学习和人工智能的区别你真的知道嘛？/01.jpg" title="Markdown 语法"><h3 id="人工智能"><a href="#人工智能" class="headerlink" title="人工智能"></a>人工智能</h3><p>人工智能是研究让计算机来模拟人的思维过程和智能行为（比如：学习、推理、思考、规划等）的学科，主要包括计算机实现智能的原理、制造类似于人脑智能的计算机，使计算机能实现更高层次的应用。人工智能将涉及到计算机科学、心理学、哲学等学科。可以说几乎是自然科学和社会科学的所有学科。从思维观点上看，人工智能不仅限于逻辑思维，要考虑形象思维和灵感思维才能促进人工智能的突破性的发展。数学常被认为是多种学科的基础科学，数学也进入语言、思维领域，人工智能学科也必须借用数学工具，数学不仅在标准逻辑、模糊数学等范围发挥作用，数学进入人工智能学科，它们将互相促进而更快地发展。</p><p><img src="02.jpg" alt=""></p><p>机器学习和人工智能的区别你真的知道嘛？</p><p><strong>人工智能的领域：</strong></p><ul><li>机器学习：人工智能的领域，使计算机不用明确编程就可以学习。</li><li>搜索及优化：算法，如梯度下降迭代搜索局部最大值或最小值。</li><li>逻辑推理：人工智能中逻辑推理的例子是模拟人类专家决策能力的专家计算机系统。</li><li>概率推理：将概率论的能力去处理不确定性和演绎逻辑的能力来利用形式论证的结构结合起来。其结果是一个更丰富和更具表现力的形式主义与更广泛应用领域。</li><li>控制理论：一种正式的方法来找到具有可证性的控制器。这通常涉及描述像机器人或飞机这样的物理系统的微分方程组。</li></ul><p><strong>人工智能的目标：</strong></p><ul><li>逻辑推理：让计算机能够完成人类能够完成的复杂心理任务。例如下棋和数学问题。</li><li>知识表达：使计算机能够清楚的描述对象、人员和语言。</li><li>规划和导航：使计算机从A点到B点。例如，第一台自动驾驶机器人建于20世纪60年代初。</li><li>自然语言处理：使计算机能够理解和处理语言。例如把英语翻译中文，或者把中文翻译成英语。</li><li>感知：让电脑通过视觉、听觉、触觉和嗅觉与世界交流。</li></ul><h3 id="机器学习"><a href="#机器学习" class="headerlink" title="机器学习"></a>机器学习</h3><p>机器学习是一门多领域交叉学科。专门研究计算机怎样模拟或实现人类的学习行为，以获取新的知识或技能，重新组织已有的知识结构使之不断改善自身的性能。</p><p>它是人工智能的核心，是使计算机具有智能的根本途径，其应用遍及人工智能的各个领域，它主要使用归纳、综合而不是演绎。</p><p><strong>当我们谈论机器学习时，值得一提的是机器学习算法：神经网络。</strong></p><p>神经网络是机器学习算法的关键部分。神经网络是教计算机以人类的方式思考和理解世界的关键。实质上，神经网络是模拟人类的大脑。这被抽象为由加权边缘（突触）连接的节点（神经元）的图形。</p><p>这个神经网络有一层，三个输入和一个输出。任何神经网络都可以有任何数量的层，输入或输出。</p><p><img src="03.jpg" alt=""></p><h3 id="深度学习"><a href="#深度学习" class="headerlink" title="深度学习"></a>深度学习</h3><p>深度学习是所有机器学习算法中的核心关键。深度学习是采用神经网络，用于解决线性不可分的问题。</p><p>深度学习的概念源于人工神经网络的研究。含多隐层的多层感知器就是一种深度学习结构。深度学习通过组合低层特征形成更加抽象的高层表示属性类别或特征，以发现数据的分布式特征表示。</p><p>这个神经网络有两层，三个输入和一个输出。任何神经网络都可以有任何数量的层，输入或输出。输入神经元和最后一层输出神经元之间的层是深层神经网络的隐藏层。</p><p><img src="04.jpg" alt=""></p><p><strong>总结：机器学习是人工智能的前沿，深度学习是机器学习的前沿。</strong><br><strong>想了解更多编程内容，请关注技术学派。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;大家现在经常会听到别人提起人工智能、机器学习和深度学习。怎样才可以正确的使用这些词呢？他们的区别是什么呢？&lt;/p&gt;&lt;p&gt;机器学习算法是人工智能背后的推动力量，所有机器学习算法中最关键的是深度学习。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;简单来说，人工智能、机器学习和深度学习都是属于一
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
  </entry>
  
  <entry>
    <title>儿童节到了，聊聊你会让孩子去学习编程么？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%84%BF%E7%AB%A5%E8%8A%82%E5%88%B0%E4%BA%86%EF%BC%8C%E8%81%8A%E8%81%8A%E4%BD%A0%E4%BC%9A%E8%AE%A9%E5%AD%A9%E5%AD%90%E5%8E%BB%E5%AD%A6%E4%B9%A0%E7%BC%96%E7%A8%8B%E4%B9%88%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/儿童节到了，聊聊你会让孩子去学习编程么？/</id>
    <published>2018-06-01T04:00:09.146Z</published>
    <updated>2018-06-01T05:41:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>儿童节到了，小朋友们都欢天喜地的拿着父母送给自己喜欢的礼物嬉闹着。今天小编在上班的路上看到了一队队参加儿童节活动的小朋友们，看到每个孩子脸上洋溢着幸福的表情，小编心情也很高兴，今天一定是开心的一天。</p><p>作为一名程序员，作为父母，希望大家今天可以放下手头的工作，按时回家陪陪孩子。也许你会说工作确实太忙，最近项目要上线，但小编觉得今天是非常有意义的一天。大家还是准时下班和老婆孩子一起吃个家庭饭才是王道。</p><img src="/blog/学习答疑/学习答疑/儿童节到了，聊聊你会让孩子去学习编程么？/01.jpg" title="Markdown 语法"><h3 id="你会让孩子去学习编程么？"><a href="#你会让孩子去学习编程么？" class="headerlink" title="你会让孩子去学习编程么？"></a>你会让孩子去学习编程么？</h3><p><strong>接下来小编想问问大家，聊一聊将要为人父母的你，是否会让孩子去学习编程呢？</strong></p><p>在欧美，现在将编程视为学校常规教育的一部分，似乎一夜之间，编程就成为了儿童教育中重要的一环。而国内各种编程教学班也遍地开花。那么孩子真有必要去学习编程么？</p><p>其实小编觉得对于大部分孩子来说，编程并不是“必须”的学习课程。对孩子的成长来说，能够称得上必须要的教育，也就是数学、语言、逻辑和体育了。数学是所有理科的基础，语言是所有文科的基础，逻辑是思维的基础，体育是身体的基础。但编程却是一种不错的兴趣选项，可以帮助孩子掌握一些应用更广泛的基础技能。</p><h3 id="学习编程-≠-培养程序员"><a href="#学习编程-≠-培养程序员" class="headerlink" title="学习编程 ≠ 培养程序员"></a>学习编程 ≠ 培养程序员</h3><p><img src="02.jpg" alt=""></p><p>可能大家会习惯性地认为学习编程只是为了从事程序员的工作。不是的，其实编程本身并不是必要的。但编程确实是一种不错的选修课，可以让孩子掌握一些编程基础技能也是好的。</p><p>小编曾经和一个同事的姐姐聊天，她是一位小学老师，我曾问过她：“什么样的教育才能帮助到孩子未来的职业规划？”她的回答是：<strong>“培养广泛的兴趣，以及那些最基础的能力，这样孩子在未来才有更多的选择空间，才可能适应我们无法预测的未来社会职业分工的变化。”</strong></p><p>其实学习编程也是如此。它并不是把孩子的未来职业发展定向到程序员上，我们要做的是不要缩窄孩子的未来可能性，相反的，通过这种培养尽量扩张孩子未来的选择权。学习编程的意义可以培养孩子一方面在于了解互联网时代的思维逻辑和生存方式，更主要的，还可以培养一些他未来无论做什么工作，都会有帮助的能力。</p><p><strong>1.抽象思维</strong></p><p>其实编程的过程对于孩子来说是非常新奇的，对他们来说，这是他们第一次接触“抽象思维”的过程。</p><p>“抽象思维”经常被当做理工科的特点，因为相对于其他工作，理工科的学习和工作需要大量的“抽象”过程，也就是将具体形象的实物，转变为抽象的模型。这样无论孩子以后做什么职业，这种抽象思维的能力都会起到很大的帮助。</p><p><strong>2.工程能力</strong></p><p>编程还可以让孩子学习如何掌握工程能力，简单的说，就是学会如何做一个小项目经理。</p><p>编程本身虽然是一种技术，但学习编程所要做的，是完成不同的项目工程。比如我们想要把一个球扔进球框里，现实生活中这只是一个下意识的动作，但如果要靠编程来实现的话，就必须选择合适的工具：语句或者控件，不断地去修改参数，调试试错，最终实现目标。这和做一个专业的火山模型科学项目没有什么差别。</p><p><strong>最后在这里，小编祝所有程序员的宝宝们“儿童节快乐！”</strong></p><p><strong>欢迎大家提出不同的观点和看法，我们共同讨论，共同学习。</strong></p><p><strong>分享 IT 技术和行业经验，请关注技术学派。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;儿童节到了，小朋友们都欢天喜地的拿着父母送给自己喜欢的礼物嬉闹着。今天小编在上班的路上看到了一队队参加儿童节活动的小朋友们，看到每个孩子脸上洋溢着幸福的表情，小编心情也很高兴，今天一定是开心的一天。&lt;/p&gt;&lt;p&gt;作为一名程序员，作为父母，希望大家今天可以放下手头的工作，按时
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
  </entry>
  
  <entry>
    <title>Python必会的12道面试题，附详细讲解</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/Python%E5%BF%85%E4%BC%9A%E7%9A%8412%E9%81%93%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%99%84%E8%AF%A6%E7%BB%86%E8%AE%B2%E8%A7%A3/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/Python必会的12道面试题，附详细讲解/</id>
    <published>2018-05-31T08:08:02.177Z</published>
    <updated>2018-05-31T09:45:43.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天技术学派为大家收集了一些Python的面试题，最近好多小伙伴给我留言说在学习Python，希望可以多发一些Python的文章。小编非常欣慰有这么多好学的小伙伴，那大家加油，把Python学好，每天都进步一点点。接下来就把这12道面试题分享给大家。</p><img src="/blog/学习答疑/学习答疑/Python必会的12道面试题，附详细讲解/01.jpg" title="Markdown 语法"><h3 id="1-单引号、双引号和三引号之间的区别"><a href="#1-单引号、双引号和三引号之间的区别" class="headerlink" title="1.单引号、双引号和三引号之间的区别"></a>1.单引号、双引号和三引号之间的区别</h3><p><strong>单引号和双引号主要是用来表示字符串</strong></p><p>比如:</p><p>单引号:’python’</p><p>双引号:”python”</p><p>区别:</p><p>若你的字符串里面本身包含单引号,必须用双引号包裹。</p><p>比如:”can’t find the log “</p><p><strong>三引号</strong></p><p>三单引号:’’’python ‘’’,也可以表示字符串一般用来输入多行文本,或者用于大段的注释。</p><p>三双引号：”””python”””，一般用在类里面,用来注释类,这样省的写文档,直接用类的对象<strong>doc</strong>访问获得文档。</p><h3 id="2-Python的参数传递，是值传递还是引用传递？"><a href="#2-Python的参数传递，是值传递还是引用传递？" class="headerlink" title="2.Python的参数传递，是值传递还是引用传递？"></a>2.Python的参数传递，是值传递还是引用传递？</h3><p>Python的参数传递有：</p><p>位置参数</p><p>默认参数</p><p>可变参数</p><p>关键字参数</p><p>函数的传值到底是值传递还是引用传递，要看情况</p><p><strong>不可变参数用值传递：</strong></p><p>比如像整数和字符串这样的不可变对象，是通过拷贝进行传递的，因为你无论如何都不可能在原处改变不可变对象。</p><p><strong>可变参数是用引用传递：</strong></p><p>比如像列表，字典这样的对象是通过引用传递，和C语言里面的用指针传递数组很相似，可变对象能在函数内部改变。</p><h3 id="3-什么是lambda函数？它的好处是什么"><a href="#3-什么是lambda函数？它的好处是什么" class="headerlink" title="3.什么是lambda函数？它的好处是什么?"></a>3.什么是lambda函数？它的好处是什么?</h3><p>lambda 表达式，通常是在需要一个函数，但是又不想费神去命名一个函数的场合下使用，也就是指匿名函数。</p><p>lambda函数：首要用途是指点短小的回调函数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lambda [arguments]:expression</span><br><span class="line">&gt;&gt;&gt; a=lambdax,y:x+y</span><br><span class="line">&gt;&gt;&gt; a(3,11)</span><br></pre></td></tr></table></figure><p><strong>好处：</strong></p><p>lambda能和def做同样种类的工作，特别是对于那些逻辑简单的函数，直接用lambda会更简洁，而且省去取函数名的麻烦。</p><h3 id="4-字符串格式化-和-format的区别是什么？"><a href="#4-字符串格式化-和-format的区别是什么？" class="headerlink" title="4.字符串格式化: %和 .format的区别是什么？"></a>4.字符串格式化: %和 .format的区别是什么？</h3><p>字符串的format函数非常灵活，很强大,可以接受的参数不限个数，并且位置可以不按顺序，而且有较为强大的格式限定符(比如:填充、对齐、精度等)。</p><h3 id="5-Python是如何进行内存管理的？"><a href="#5-Python是如何进行内存管理的？" class="headerlink" title="5.Python是如何进行内存管理的？"></a>5.Python是如何进行内存管理的？</h3><p>Python内部使用引用计数，来保持追踪内存中的对象，所有对象都有引用计数。</p><p>引用计数增加的情况：</p><p>一个对象分配一个新名称</p><p>将其放入一个容器中（如列表、元组或字典）</p><p>引用计数减少的情况：</p><p>使用del语句对对象别名显示的销毁</p><p>引用超出作用域或被重新赋值</p><p>垃圾回收</p><p>当一个对象的引用计数归零时，它将被垃圾收集机制处理掉。</p><p>内存池机制</p><p>Python提供了对内存的垃圾收集机制，它将不用的内存放到内存池而不是返回给操作系统:</p><p>Pymalloc机制：为了加速Python的执行效率，Python引入了一个内存池机制，用于管理对小块内存的申请和释放。</p><p>对于Python对象，如整数，浮点数和List，都有其独立的私有内存池，对象间不共享他们的内存池。也就是说如果你分配又释放了大量的整数，用于缓存这些整数的内存就不能再分配给浮点数。</p><h3 id="6-介绍一下except的用法和作用"><a href="#6-介绍一下except的用法和作用" class="headerlink" title="6.介绍一下except的用法和作用"></a>6.介绍一下except的用法和作用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">try…except…except…[else…][finally…]</span><br></pre></td></tr></table></figure><p>执行try下的语句，如果引发异常，则执行过程会跳到except语句。对每个except分支顺序尝试执行，如果引发的异常与except中的异常组匹配，执行相应的语句。</p><p>如果所有的except都不匹配，则异常会传递到下一个调用本代码的最高层try代码中。</p><p>try下的语句正常执行，则执行else块代码。如果发生异常，就不会执行。</p><p>如果存在finally语句，最后总是会执行。</p><h3 id="7-下面的代码会不会报错？"><a href="#7-下面的代码会不会报错？" class="headerlink" title="7.下面的代码会不会报错？"></a>7.下面的代码会不会报错？</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">list = [&apos;a&apos;, &apos;b&apos;, &apos;c&apos;, &apos;d&apos;, &apos;e&apos;]</span><br><span class="line">print list[10:]</span><br></pre></td></tr></table></figure><p>当试图访问一个超过列表索引值的成员将导致 IndexError（比如访问以上列表的 list[10]）。尽管如此，试图访问一个列表的以超出列表长度数作为开始索引的切片将不会导致 IndexError，并且将仅仅返回一个空列表。</p><p>一个讨厌的小问题是它会导致出现Bug ，并且这个问题是难以追踪的，因为它在运行时不会引发错误。</p><h3 id="8-以下的代码的输出将是什么-并进行解释"><a href="#8-以下的代码的输出将是什么-并进行解释" class="headerlink" title="8.以下的代码的输出将是什么? 并进行解释"></a>8.以下的代码的输出将是什么? 并进行解释</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">class Parent(object):</span><br><span class="line">x = 1</span><br><span class="line">class Child1(Parent):</span><br><span class="line">pass</span><br><span class="line">class Child2(Parent):</span><br><span class="line">pass</span><br><span class="line">print Parent.x, Child1.x, Child2.x</span><br><span class="line">Child1.x = 2</span><br><span class="line">print Parent.x, Child1.x, Child2.x</span><br><span class="line">Parent.x = 3</span><br><span class="line">print Parent.x, Child1.x, Child2.x</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">1 1 1</span><br><span class="line">1 2 1</span><br><span class="line">3 2 3</span><br></pre></td></tr></table></figure><p>可能使你困惑的应该是最后一行的输出结果是 3 2 3 而不是 3 2 1。为什么改变了 Parent.x 的值还会改变 Child2.x 的值，但是同时 Child1.x 值却没有改变？</p><p>这个答案的关键是：在 Python中，类变量在内部是作为字典处理的。如果一个变量的名字没有在当前类的字典中发现，将搜索祖先类（比如父类）直到被引用的变量名被找到.</p><p>首先，在父类中设置 x = 1 会使得类变量 x 在引用该类和其任何子类中的值为 1。这就是因为第一个 print 语句的输出是 1 1 1</p><p>然后，如果任何它的子类重写了该值（例如，我们执行语句 Child1.x = 2）该值仅仅在子类中被改变。这就是为什么第二个 print 语句的输出是 1 2 1</p><p>最后，如果该值在父类中被改变（例如，我们执行语句 Parent.x = 3），这个改变会影响到任何未重写该值的子类当中的值（在这个示例中被影响的子类是 Child2）。这就是为什么第三个 print 输出是 3 2 3了。</p><h3 id="9-说出下面list1，list2-list3的输出值分别是什么？"><a href="#9-说出下面list1，list2-list3的输出值分别是什么？" class="headerlink" title="9.说出下面list1，list2,list3的输出值分别是什么？"></a>9.说出下面list1，list2,list3的输出值分别是什么？</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">def extendList(val, list=[]):</span><br><span class="line">list.append(val)</span><br><span class="line">return list</span><br><span class="line">list1 = extendList(10)</span><br><span class="line">list2 = extendList(123,[])</span><br><span class="line">list3 = extendList(&apos;a&apos;)</span><br><span class="line">print &quot;list1 = %s&quot; % list1</span><br><span class="line">print &quot;list2 = %s&quot; % list2</span><br><span class="line">print &quot;list3 = %s&quot; % list3</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">list1 = [10, &apos;a&apos;]</span><br><span class="line">list2 = [123]</span><br><span class="line">list3 = [10, &apos;a&apos;]</span><br></pre></td></tr></table></figure><p>许多人会错误的认为 list1 应该等于 [10] 以及 list3 应该等于 [‘a’]。认为 list 的参数会在 extendList 每次被调用的时候会被设置成它的默认值 []。</p><p>尽管如此，实际发生的事情是，新的默认列表仅仅只在函数被定义时创建一次。随后当 extendList 没有被指定的列表参数调用的时候，其使用的是同一个列表。这就是为什么当函数被定义的时候，表达式是用默认参数被计算，而不是它被调用的时候。</p><p>因此，list1 和 list3 是操作的相同的列表。而list2是操作的它创建的独立的列表（通过传递它自己的空列表作为list参数的值）</p><h3 id="10-请写出一段Python代码，实现删除list里面重复的元素"><a href="#10-请写出一段Python代码，实现删除list里面重复的元素" class="headerlink" title="10.请写出一段Python代码，实现删除list里面重复的元素"></a>10.请写出一段Python代码，实现删除list里面重复的元素</h3><ol><li>使用set函数，set(list)</li><li>使用字典函数</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;a=[1,2,4,2,4,5,6,5,7,8,9,0]</span><br><span class="line">&gt;&gt;&gt; b=&#123;&#125;</span><br><span class="line">&gt;&gt;&gt;b=b.fromkeys(a)</span><br><span class="line">&gt;&gt;&gt;c=list(b.keys())</span><br><span class="line">&gt;&gt;&gt; c</span><br></pre></td></tr></table></figure><h3 id="11-用sort进行排序，然后从最后一个元素开始判断"><a href="#11-用sort进行排序，然后从最后一个元素开始判断" class="headerlink" title="11.用sort进行排序，然后从最后一个元素开始判断"></a>11.用sort进行排序，然后从最后一个元素开始判断</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a=[1,2,4,2,4,5,7,10,5,5,7,8,9,0,3]</span><br><span class="line">a.sort()</span><br><span class="line">last=a[-1]</span><br><span class="line">for i inrange(len(a)-2,-1,-1):</span><br><span class="line">if last==a:</span><br><span class="line">del a</span><br><span class="line">else:last=a</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><h3 id="12-写出你认为最Pythonic的代码"><a href="#12-写出你认为最Pythonic的代码" class="headerlink" title="12.写出你认为最Pythonic的代码"></a>12.写出你认为最Pythonic的代码</h3><p>下面给大家列出一些例子</p><p><strong>交互变量</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">非Pythonic</span><br><span class="line">temp = a</span><br><span class="line">a = b</span><br><span class="line">b = temp</span><br><span class="line">pythonic:</span><br><span class="line">a,b=b,a</span><br></pre></td></tr></table></figure><p><strong>判断其值真假</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">name = &apos;Tim&apos;</span><br><span class="line">langs = [&apos;AS3&apos;, &apos;Lua&apos;, &apos;C&apos;]</span><br><span class="line">info = &#123;&apos;name&apos;: &apos;Tim&apos;, &apos;sex&apos;: &apos;Male&apos;, &apos;age&apos;:23 &#125;</span><br><span class="line">非Pythonic</span><br><span class="line">if name != &apos;&apos; and len(langs) &gt; 0 and info != &#123;&#125;:</span><br><span class="line">print(&apos;All True!&apos;)</span><br><span class="line">pythonic:</span><br><span class="line">if name and langs and info:</span><br><span class="line">print(&apos;All True!&apos;)</span><br></pre></td></tr></table></figure><p><strong>列表推导式</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[x for x in range(1,100) if x%2==0]</span><br><span class="line">zip创建键值对</span><br><span class="line">keys = [&apos;Name&apos;, &apos;Sex&apos;, &apos;Age&apos;]</span><br><span class="line">values = [&apos;Jack&apos;, &apos;Male&apos;, 23]</span><br><span class="line">dict(zip(keys,values))</span><br></pre></td></tr></table></figure><p>pythonic的代码其实有很多，这里就给大家举几个典型的例子。</p><p><strong>想了解更多编程内容，请关注-技术学派。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天技术学派为大家收集了一些Python的面试题，最近好多小伙伴给我留言说在学习Python，希望可以多发一些Python的文章。小编非常欣慰有这么多好学的小伙伴，那大家加油，把Python学好，每天都进步一点点。接下来就把这12道面试题分享给大家。&lt;/p&gt;&lt;img src
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
      <category term="python" scheme="http://www.JiShuXuePai.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>前端开发者常用的插件汇总，看看你用过几个？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E6%8F%92%E4%BB%B6%E8%B5%84%E6%BA%90%E5%BA%93/%E6%8F%92%E4%BB%B6%E8%B5%84%E6%BA%90%E5%BA%93/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E8%80%85%E5%B8%B8%E7%94%A8%E7%9A%84%E6%8F%92%E4%BB%B6%E6%B1%87%E6%80%BB%EF%BC%8C%E7%9C%8B%E7%9C%8B%E4%BD%A0%E7%94%A8%E8%BF%87%E5%87%A0%E4%B8%AA%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/插件资源库/插件资源库/前端开发者常用的插件汇总，看看你用过几个？/</id>
    <published>2018-05-29T03:20:00.367Z</published>
    <updated>2018-05-29T03:38:21.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Touch-js"><a href="#Touch-js" class="headerlink" title="Touch.js"></a>Touch.js</h3><blockquote><p>Touch.js是移动设备上的手势识别与事件库, 由百度云Clouda团队维护，也是在百度内部广泛使用的开发工具.</p></blockquote><img src="/blog/插件资源库/插件资源库/前端开发者常用的插件汇总，看看你用过几个？/01.png" title="Markdown 语法"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">网站地址：http://www.bootcdn.cn/touchjs/</span><br></pre></td></tr></table></figure><h3 id="Zepto-js"><a href="#Zepto-js" class="headerlink" title="Zepto.js"></a>Zepto.js</h3><blockquote><p>Zepto的设计目的是提供 jQuery 的类似的API，但并不是100%覆盖 jQuery 。Zepto设计的目的是有一个5-10k的通用库、下载并快速执行、有一个熟悉通用的API，所以你能把你主要的精力放到应用开发上。</p></blockquote><p><img src="02.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">网站地址：http://www.zeptojs.cn/</span><br></pre></td></tr></table></figure><h3 id="iScroll-js"><a href="#iScroll-js" class="headerlink" title="iScroll.js"></a>iScroll.js</h3><blockquote><p>iScroll是一个高性能，资源占用少，无依赖，多平台的javascript滚动插件。它可以在桌面，移动设备和智能电视平台上工作。它一直在大力优化性能和文件大小以便在新旧设备上提供最顺畅的体验。</p></blockquote><p><img src="03.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">网站地址：https://www.cnblogs.com/RuMengkai/p/6593709.html</span><br></pre></td></tr></table></figure><h3 id="Hammer-js"><a href="#Hammer-js" class="headerlink" title="Hammer.js"></a>Hammer.js</h3><blockquote><p>Hammer.js是一个开源的,轻量级的javascript库,它可以在不需要依赖其他东西的情况下识别触摸,鼠标事件。</p></blockquote><p><img src="04.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">网站地址：http://hammerjs.github.io/</span><br></pre></td></tr></table></figure><h3 id="jQuery-Mobile"><a href="#jQuery-Mobile" class="headerlink" title="jQuery Mobile"></a>jQuery Mobile</h3><blockquote><p>jQuery Mobile是一个基于html5的用户界面系统，旨在使所有智能手机、平板电脑和桌面设备都能访问到响应性的网站和应用程序。</p></blockquote><p><img src="05.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">网站地址：http://jquerymobile.com/</span><br></pre></td></tr></table></figure><h3 id="Bootstrap"><a href="#Bootstrap" class="headerlink" title="Bootstrap"></a>Bootstrap</h3><blockquote><p>Bootstrap，来自 Twitter，是目前很受欢迎的前端框架。Bootstrap 是基于 HTML、CSS、JavaScript 的，它简洁灵活，使得 Web 开发更加快捷。</p></blockquote><p><img src="06.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">网站地址：http://www.bootcss.com/</span><br></pre></td></tr></table></figure><h3 id="Swiper"><a href="#Swiper" class="headerlink" title="Swiper"></a>Swiper</h3><blockquote><p>Swiper是纯javascript打造的滑动特效插件，面向手机、平板电脑等移动终端。能实现触屏焦点图、触屏Tab切换、触屏多图切换等常用效果。</p></blockquote><p><img src="07.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">网站地址：http://www.swiper.com.cn/</span><br></pre></td></tr></table></figure><p>在工作中使用插件可以大大提升我们的工作效率。</p><p><strong>建议：但是技术学派在这里提醒大家也不要太依赖插件哦，如果时间允许的话，不要总是直接去用别人写好的插件和库，而是看他们是怎么写的，模仿着他们的写法，多思考人家的思路，再找到自己的风格。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Touch-js&quot;&gt;&lt;a href=&quot;#Touch-js&quot; class=&quot;headerlink&quot; title=&quot;Touch.js&quot;&gt;&lt;/a&gt;Touch.js&lt;/h3&gt;&lt;blockquote&gt;&lt;p&gt;Touch.js是移动设备上的手势识别与事件库, 由百度云Cloud
      
    
    </summary>
    
      <category term="插件资源库" scheme="http://www.JiShuXuePai.com/categories/%E6%8F%92%E4%BB%B6%E8%B5%84%E6%BA%90%E5%BA%93/"/>
    
    
      <category term="web前端" scheme="http://www.JiShuXuePai.com/tags/web%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>C、C++、Java、JavaScript、PHP、Python分别用来开发什么？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/C%E3%80%81C++%E3%80%81Java%E3%80%81JavaScript%E3%80%81PHP%E3%80%81Python%E5%88%86%E5%88%AB%E7%94%A8%E6%9D%A5%E5%BC%80%E5%8F%91%E4%BB%80%E4%B9%88%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/C、C++、Java、JavaScript、PHP、Python分别用来开发什么？/</id>
    <published>2018-05-23T06:07:05.831Z</published>
    <updated>2018-05-23T09:30:21.236Z</updated>
    
    <content type="html"><![CDATA[<p>首先，我们先普及一下编程语言的基础知识。用任何编程语言来开发程序，都是为了让计算机干活，比如编写一篇文章，下载一首MP3等，而计算机干活的CPU只认识机器的指令，所以，尽管不同的编程语言差异极大，最后都得“翻译”成CPU可以执行的机器指令。理论上任何语言干任何事情几乎都可以, 但是主要干什么那就不一样了。</p><h3 id="C和C"><a href="#C和C" class="headerlink" title="C和C++"></a>C和C++</h3><blockquote><p>C/C++理论上说可以做任何开发, 只要有合适的硬件驱动和API，特点是效率高，基本上是编译语言里面效率最高的。除非你的系统中连C/C++编译器都不具备. 某些系统当中C++编译器是不具备的, 但是C一般都具备. 目前而言, C语言主要用来开发底层模块(比如驱动,解码器,算法实现), 服务应用(比如web服务器)和嵌入式应用(比如微波炉里的程序). C++也可以做这些, 不过由于C++的复杂性和标准问题, 人们还是更愿意使用C来做. C++更适合比较复杂但又特别需要高效率的设施，比如大型游戏，一些基础库， 大型桌面应用.</p></blockquote><img src="/blog/学习答疑/学习答疑/C、C++、Java、JavaScript、PHP、Python分别用来开发什么？/c.jpg" title="Markdown 语法"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">总结：</span><br><span class="line">C: 系统底层, 驱动, 嵌入式开发.</span><br><span class="line">C++: 游戏开发, 大规模, 高性能, 分布式要求的程序开发。</span><br></pre></td></tr></table></figure><h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><blockquote><p>java常常跟”企业”联系在一起, 因为具备一些很好的语言特性, 以及丰富的框架, 在企业应用中最被青睐, 你总可以听到关于J2EE, JSP, Hibernate之类的东西的讨论. 同时, java在手机领域也有一席之地, 在普遍智能化之前, 很多手机就是以支持java应用作为卖点的, 而智能手机爆发之后, java手机主场变成了android, 作为安卓的标准编程语言而存在.</p></blockquote><p><img src="java.jpg" alt=""><br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">总结：</span><br><span class="line">Java: 网页, 企业级开发, 普通应用软件, 游戏后台。</span><br></pre></td></tr></table></figure><p></p><h3 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h3><blockquote><p>javascript听起来跟java有关系, 其实并没有任何关系, 只是名字像而已.就好比雷峰塔和雷锋的关系一样，虽然只差一个字。 js最广泛的应用毫无疑问是在web前端. 简单的说, 网站给你传过来的是一堆用各种标签表示格式的文档, 而js负责操纵这些文档实现一些客户端动态效果. js的领地还不仅如此, 现在的Node.js还可以用于服务器端的开发.</p></blockquote><p><img src="js.jpg" alt=""><br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">总结：</span><br><span class="line">JavaScript是浏览器的脚本语言，一般和Html，CSS这些一起学，主要做网站的前端开发，展现各种酷炫的画面。</span><br></pre></td></tr></table></figure><p></p><h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h3><blockquote><p>php这三个字你常常会在浏览器地址栏里看到, 所以不意外php是用来开发网站的. 也是web后端的王者语言.无数的网站后端都运行着php代码.</p></blockquote><p><img src="php.jpg" alt=""><br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">总结：</span><br><span class="line">PHP：主要是网络前端，用于生成网页。也可以整个web服务器都用php，比如很多论坛引擎。</span><br></pre></td></tr></table></figure><p></p><h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><blockquote><p>Python由于具有丰富和强大的库，它又叫做作胶水语言，能够把用其他语言制作的各种模块（尤其是C/C++）很轻松地联结在一起。常见的一种应用情形是，使用Python快速生成程序的原型（有时甚至是程序的最终界面），然后对其中有特别要求的部分，用更合适的语言改写，比如3D游戏中的图形渲染模块，性能要求特别高，就可以用C/C++重写，而后封装为Python可以调用的扩展类库。Python是做服务器开发与物联网开发。信息安全，大数据处理，数据可视化机器学习，物联网开发，各大软件的api，桌面应用，都需要python.</p></blockquote><p><img src="python.jpg" alt=""><br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">总结：</span><br><span class="line">Python：动态解释型，开发效率高，开源，灵活，入门门槛低。</span><br></pre></td></tr></table></figure><p></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首先，我们先普及一下编程语言的基础知识。用任何编程语言来开发程序，都是为了让计算机干活，比如编写一篇文章，下载一首MP3等，而计算机干活的CPU只认识机器的指令，所以，尽管不同的编程语言差异极大，最后都得“翻译”成CPU可以执行的机器指令。理论上任何语言干任何事情几乎都可以
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
  </entry>
  
  <entry>
    <title>十个最受欢迎的机器学习Python库，你知道几个？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E6%8F%92%E4%BB%B6%E8%B5%84%E6%BA%90%E5%BA%93/%E6%8F%92%E4%BB%B6%E8%B5%84%E6%BA%90%E5%BA%93/%E5%8D%81%E4%B8%AA%E6%9C%80%E5%8F%97%E6%AC%A2%E8%BF%8E%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0Python%E5%BA%93%EF%BC%8C%E4%BD%A0%E7%9F%A5%E9%81%93%E5%87%A0%E4%B8%AA%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/插件资源库/插件资源库/十个最受欢迎的机器学习Python库，你知道几个？/</id>
    <published>2018-05-21T09:53:31.105Z</published>
    <updated>2018-05-22T08:50:51.847Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>2018年将会是人工智能和机器学习快速发展的一年，有专家表示：相较之下Python比Java更加接地气，也自然而然地成为机器学习的首选语言。</p></blockquote><p>今天我们就来介绍一下最受欢迎的机器学习库，希望你能够在这里寻找到你未来一段时间内的<strong>“利器”</strong>。</p><h3 id="PyTorch"><a href="#PyTorch" class="headerlink" title="PyTorch"></a>PyTorch</h3><blockquote><p>脸谱网今年推出的，在深入学习社区是非常受欢迎。pytorch是建立在一个受欢迎的火炬框架，特别是基于Python。考虑到过去几年人们一直在使用Python进行数据科学研究，这也是大多数学习库使用Python的原因。</p></blockquote><img src="/blog/插件资源库/插件资源库/十个最受欢迎的机器学习Python库，你知道几个？/PyTorch.png" title="Markdown 语法"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">项目地址：https://pytorch.org/</span><br></pre></td></tr></table></figure><h3 id="Caffe2"><a href="#Caffe2" class="headerlink" title="Caffe2"></a>Caffe2</h3><blockquote><p>今年，脸谱网还发布了另一个DL框架，牛奶。原来的Caffe框架已被广泛使用多年，以其很好的性能和测试代码库。然而，DL最近的趋势使得这个框架在某些方面有所突破。所以牛奶代替了它。</p></blockquote><p><img src="Caffe2.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">项目地址：https://caffe2.ai/</span><br></pre></td></tr></table></figure><h3 id="Pipenv"><a href="#Pipenv" class="headerlink" title="Pipenv"></a>Pipenv</h3><blockquote><p>pipenv是今年初管理依赖官方推荐工具。pipenv最初是一个项目由Kenneth Reitz创建，其目的是整合其他软件包管理器的创新，比如故宫或纱，Python。安装virtualenv和virtualenvwrapper，确保依赖版本的依赖版本的重复性。Pipenv，你可以指定所有的依赖性，通常使用命令来添加，删除或更新的依赖。该工具可以生成一个文件，使您的构建具有确定性，可以帮助您避免难以捕获的bug。</p></blockquote><p><img src="Pipenv.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">项目地址：https://github.com/pypa/pipenv</span><br></pre></td></tr></table></figure><h3 id="Pendulum"><a href="#Pendulum" class="headerlink" title="Pendulum"></a>Pendulum</h3><blockquote><p>一个摆的优点是，它是Python标准DateTime类的直接替代品，所以你可以很容易地将它与现有的代码，只在需要的时候使用它。作者特别注意确保时区得到正确处理，并默认每个实例时区的时区被感知。你也会得到一个扩展timedelta，所以它更容易的日期和时间。</p></blockquote><p><img src="pendulum.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">项目地址：https://github.com/sdispater/pendulum</span><br></pre></td></tr></table></figure><h3 id="Dash"><a href="#Dash" class="headerlink" title="Dash"></a>Dash</h3><blockquote><p>如果你是做科学的数据，你可以使用优秀的工具，如大熊猫、scikit在Python的系统学习。你也可以使用jupyternotebook来管理你的工作流程。但是当你和那些不知道如何使用这些工具的人一起工作时，你会怎么做呢？如何构建一个界面，让人们在整个过程中轻松地播放数据并可视化它们？在过去，您可能需要一个专业的JavaScript前端团队来构建这些GUI。</p></blockquote><p><img src="Dash.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">项目地址：https://kapeli.com/dash</span><br></pre></td></tr></table></figure><h3 id="Fire"><a href="#Fire" class="headerlink" title="Fire"></a>Fire</h3><blockquote><p>火灾是一个开源库。它可以为任何python项目自动生成CLI。钥匙是自动的。您几乎不需要编写任何代码或文档来构建CLI。你只需要调用一个火方法并把它传递给它需要构建的CLI。</p></blockquote><p><img src="Fire.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">项目地址：https://github.com/google/python-fire</span><br></pre></td></tr></table></figure><h3 id="PyFlux"><a href="#PyFlux" class="headerlink" title="PyFlux"></a>PyFlux</h3><blockquote><p>pyflux是一个开源库的Python，特别是时间序列的发展。时间序列研究是统计学和计量经济学的一个分支，它可以描述时间序列是如何表达的（由潜在因素或利益特征表示）和预测未来行为。pyflux允许时间序列建模的使用，和现代时间序列GARCH模型等已实施。</p></blockquote><p><img src="PyFlux.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">项目地址：https://github.com/RJT1990/pyflux</span><br></pre></td></tr></table></figure><h3 id="imbalanced-learn"><a href="#imbalanced-learn" class="headerlink" title="imbalanced-learn"></a>imbalanced-learn</h3><blockquote><p>在理想情况下，我们将得到完全平衡的数据集，但不幸的是，现实世界是不一样的。有些任务的数据非常不平衡。例如，在预测信用卡交易中的欺诈行为时，您期望绝大多数交易（99.9%）是合法的。ML算法的幼稚训练可能会导致令人失望的性能，因此在处理这些类型的数据集时需要特别小心。</p></blockquote><p><img src="imbalanced-learn.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">项目地址：https://github.com/scikit-learn-contrib/</span><br></pre></td></tr></table></figure><h3 id="FlashText"><a href="#FlashText" class="headerlink" title="FlashText"></a>FlashText</h3><blockquote><p>如果你需要寻找一些文本和取代它与其他内容（最喜欢的数据清理刘成中），它通常将正则表达式。通常，正则表达式是解决这个问题的完美方法。但有时会出现这样的情况：需要搜索的术语数是数千个，然后正则表达式可能变得非常缓慢。在这一点上，FlashText是一个更好的选择，大大提高了整个手术的时间（从5到15分钟）。flashtext的优点是，无论多少个搜索条件，运行时间是相同的，而正则表达式的运行时间与条件数线性增长。</p></blockquote><p><img src="FlashText.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">项目地址：https://flashtext.com/</span><br></pre></td></tr></table></figure><h3 id="Luminoth"><a href="#Luminoth" class="headerlink" title="Luminoth"></a>Luminoth</h3><blockquote><p>luminoth是一个开源的计算机视觉，是与TensorFlow和十四行诗内置Python工具包。目前，它能以模型的目标检测支持更快r-cnn。</p></blockquote><p><img src="Luminoth.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">项目地址：https://luminoth.ai/</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;&lt;p&gt;2018年将会是人工智能和机器学习快速发展的一年，有专家表示：相较之下Python比Java更加接地气，也自然而然地成为机器学习的首选语言。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;今天我们就来介绍一下最受欢迎的机器学习库，希望你能够在这里寻找到你未来
      
    
    </summary>
    
      <category term="插件资源库" scheme="http://www.JiShuXuePai.com/categories/%E6%8F%92%E4%BB%B6%E8%B5%84%E6%BA%90%E5%BA%93/"/>
    
    
      <category term="python" scheme="http://www.JiShuXuePai.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>为什么Python是入行人工智能的首选语言？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E4%B8%BA%E4%BB%80%E4%B9%88Python%E6%98%AF%E5%85%A5%E8%A1%8C%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9A%84%E9%A6%96%E9%80%89%E8%AF%AD%E8%A8%80%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/为什么Python是入行人工智能的首选语言？/</id>
    <published>2018-05-18T01:56:26.741Z</published>
    <updated>2018-05-18T02:07:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>其实在所有编程语言里，Python并不算新宠，在1991年就发布了第一个版本，至今已经快30年了。</p><p>最近几年，随着人工智能概念的火爆，Python也迅速升温，成为了众多AI从业者的首选语言。</p><p>根据数据平台 Kaggle发布的机器学习及数据科学调查报告，在工具语言使用方面，Python是数据科学家和人工智能从业者使用最多的语言。<br><img src="/blog/学习答疑/学习答疑/为什么Python是入行人工智能的首选语言？/paihang.jpg" title="Markdown 语法"></p><p>在IEEE Spectrum发布的最受欢迎编程语言列表中，Python同样也位居榜首。</p><p><img src="640.jpg" alt=""></p><h2 id="那为什么Python现在变得这么火爆呢？"><a href="#那为什么Python现在变得这么火爆呢？" class="headerlink" title="那为什么Python现在变得这么火爆呢？"></a>那为什么Python现在变得这么火爆呢？</h2><h3 id="1-Python是一种人性化的语言"><a href="#1-Python是一种人性化的语言" class="headerlink" title="1.Python是一种人性化的语言"></a>1.Python是一种人性化的语言</h3><ul><li><p>开发者不需要关注底层</p></li><li><p>语法简单直观</p></li><li><p>表达形式一致</p></li></ul><blockquote><p>我们以”Hello World”为例，来看一下几种语言的代码：</p></blockquote><h4 id="C-语言的代码："><a href="#C-语言的代码：" class="headerlink" title="C 语言的代码："></a>C 语言的代码：</h4><figure class="highlight plain"><figcaption><span>main()</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123; </span><br><span class="line"> printf(&quot;Hello, World!&quot;);</span><br><span class="line"> return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Java的代码："><a href="#Java的代码：" class="headerlink" title="Java的代码："></a>Java的代码：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">public static void main(String[] args)&#123;</span><br><span class="line">System.out.println(&quot;Hello World!&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Python的代码："><a href="#Python的代码：" class="headerlink" title="Python的代码："></a>Python的代码：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(&quot;Hello World!&quot;)</span><br></pre></td></tr></table></figure><p>当然，仅仅是一个”Hello World”的话，C和Java的代码也多不了几行。可是不要忘了，C和Java的代码要运行，都必须先经过编译的环节。</p><p>而Python则不用编译，直接运行。而且都可以不用写文件，一条条语句可以直接作为命令行运行。</p><h3 id="2-强大的AI支持库"><a href="#2-强大的AI支持库" class="headerlink" title="2.强大的AI支持库"></a>2.强大的AI支持库</h3><p><strong>矩阵运算</strong></p><p>NumPy由数据科学家Travis Oliphant创作，支持维度数组与矩阵运算。结合Python内置的math和random库，堪称AI数据神器！有了它们，就可以放心大胆玩矩阵了！</p><p><strong>ML模型</strong></p><p>用Python实现大多数经典模型，几十上百行代码就够了。</p><p>当然，对于普通用户，也可以连算法都不用管，只是调用Scikit-Learn的接口就可以了。</p><p><strong>支持图表</strong></p><p>Python还有许多图表方面的支持库。用来生成各种图形表格，是非常简单的事情。</p><p><img src="new图表.png" alt=""></p><p>现在，人工智能技术在现代社会中的地位日趋重要，尤其在自动化和数据驱动的诸多领域，如图像识别、机器人学、搜索引擎、自动驾驶技术都有不俗的表现。Python语言借助AI和数据科学，攀爬到了编程语言生态链的顶级位置，可以说Python与AI已经紧密捆绑在了一起。</p><p>Python易于阅读和编写，所以经常被称为实用主义，就算是非程序员或开发人员也很容易上手。除此之外，Python还能够满足各种开发需求，为程序员提供了各种选择，如果你习惯了使用python，很容易从一个行业跳到另外一个行业。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;其实在所有编程语言里，Python并不算新宠，在1991年就发布了第一个版本，至今已经快30年了。&lt;/p&gt;&lt;p&gt;最近几年，随着人工智能概念的火爆，Python也迅速升温，成为了众多AI从业者的首选语言。&lt;/p&gt;&lt;p&gt;根据数据平台 Kaggle发布的机器学习及数据科学调查报告
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
      <category term="python" scheme="http://www.JiShuXuePai.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>2018 最具就业前景的编程语言，转行者了解一下</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/2018%20%E6%9C%80%E5%85%B7%E5%B0%B1%E4%B8%9A%E5%89%8D%E6%99%AF%E7%9A%84%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%EF%BC%8C%E8%BD%AC%E8%A1%8C%E8%80%85%E4%BA%86%E8%A7%A3%E4%B8%80%E4%B8%8B/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/2018 最具就业前景的编程语言，转行者了解一下/</id>
    <published>2018-05-15T07:11:10.335Z</published>
    <updated>2018-05-15T09:02:16.853Z</updated>
    
    <content type="html"><![CDATA[<p>2017年最热门的编程语言莫过于JavaScript和Python了，自然学习这两门技术的人也是最多的，那这个学习趋势在2018年会有怎样的变化呢？</p><h2 id="在2018年最值得学习的编程语言又是哪些呢？"><a href="#在2018年最值得学习的编程语言又是哪些呢？" class="headerlink" title="在2018年最值得学习的编程语言又是哪些呢？"></a>在2018年最值得学习的编程语言又是哪些呢？</h2><img src="/blog/学习答疑/学习答疑/2018%20最具就业前景的编程语言，转行者了解一下/code.jpg" title="Markdown 语法"><p>对于大多数的转行者来说，学习编程的目的就是想找一份高薪的工作，那么肯定是哪个编程语言的就业前景好，就越值得学习。</p><p>在2017年12月底，Coding Dojo发布的2018年最具就业前景的编程语言排行榜，在此次的最有“钱”途的编程语言榜单上，Java排名第一，网红语言Python排名第二，JavaScript排名第三，其次是C++、PHP等。</p><p><img src="pahang.jpg" alt=""><br>对于2018年最有“钱”途的编程语言排行榜，程序员网友们纷纷发表了各自的看法：</p><p>网友一：C# 宇宙第一生产力工具!</p><p>网友二：C# 也有人用?</p><p>网友三：世界上只有两种语言，PHP语言和其它语言。</p><p>网友四：不得不揭晓编程界的秘密：最有前途：C++。目前最火最赚钱：Python。需求量最高：Java。</p><h2 id="那我们就来分析一下这几个最有“钱”途的编程语言"><a href="#那我们就来分析一下这几个最有“钱”途的编程语言" class="headerlink" title="那我们就来分析一下这几个最有“钱”途的编程语言"></a>那我们就来分析一下这几个最有“钱”途的编程语言</h2><h3 id="1-Java"><a href="#1-Java" class="headerlink" title="1.Java"></a>1.Java</h3><p><img src="java.jpg" alt=""></p><p>Java 这种老牌编程语言，虽然一直被诟病语法臃肿，但是其实随着 Java 版本的更新，已经逐渐支持了很多新语言的特性。</p><p>并且在2017年的TIOBE编程语言排行榜上，Java每月总是稳坐第一宝座，毋庸置疑，它仍然是市场上最流行和最火爆的编程语言。</p><p>目前国内的电商行业一片火热，电商平台的数量也十分惊人，由于Java语言开发的电商平台具有安全性高、结构合理，高效、稳定、扩展性强。再者，所有Android应用程序都基于Java。无论是哪一门编程语言，其流行程度短期要超过java都是一件非常困难的事情。</p><h3 id="2-Python"><a href="#2-Python" class="headerlink" title="2.Python"></a>2.Python</h3><p><img src="python.jpg" alt=""></p><p>人工智能（AI）兴起，Python开始大热。<br>Python是一种用于 Web 开发的通用编程语言，Python易于阅读和编写，所以经常被称为实用主义，就算是非程序员或开发人员也很容易上手。除此之外，Python还能够满足各种开发需求，为程序员提供了各种选择，如果你习惯了使用Python，很容易从一个行业跳到另外一个行业，Python被广泛地用于系统运维、图形处理、数学处理、文本处理、数据库编程、网络编程、web编程、多媒体应用、pymo引擎、爬虫编写、人工智能等，加上人工智能（AI）的持续火热，Python作为通用开发语言，地位也是水涨船高。</p><h4 id="当然有人会问了，Python-这么火热，以后会不会竞争很大"><a href="#当然有人会问了，Python-这么火热，以后会不会竞争很大" class="headerlink" title="当然有人会问了，Python 这么火热，以后会不会竞争很大?"></a>当然有人会问了，Python 这么火热，以后会不会竞争很大?</h4><p>Python 之所以这么火热，是因为现在大家都对趋势越来越敏感，大家开始焦虑自己是否会被淘汰，所以很多其他编程语言的从业者都在关注、学习、使用 Python。</p><p>但是真正敢于放弃本职工作，全职转行 Python 开发的人跟整个编程行业的人相比还是少数的，更何况，在一个新的时代即将到来，相对应的需求本就大，所以，一旦人工智能技术有所成熟与突破，Python 的需求还会更大。</p><p>再说到易学性，其实 Python 相比较大部分语言来说，都算是很容易上手的，语法清楚，也没有那么多复杂的概念，非常适合新手学习。</p><h3 id="3-JavaScript"><a href="#3-JavaScript" class="headerlink" title="3.JavaScript"></a>3.JavaScript</h3><p><img src="javascript.jpg" alt=""><br>超过 80％ 的开发者和 95％ 的网站都使用 JavaScript 来实现页面上的动态逻辑。</p><p>随着物联网和移动设备越来越流行，React 和 Vue 等 JavaScript前端框架具有巨大的未来潜力，所以我们可能很快就会看到 JavaScript 的普及。</p><h4 id="小结：综上所述，2018年要转行IT学习编程的人，可以考虑从这3者中选择一个去学习。"><a href="#小结：综上所述，2018年要转行IT学习编程的人，可以考虑从这3者中选择一个去学习。" class="headerlink" title="小结：综上所述，2018年要转行IT学习编程的人，可以考虑从这3者中选择一个去学习。"></a>小结：综上所述，2018年要转行IT学习编程的人，可以考虑从这3者中选择一个去学习。</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;2017年最热门的编程语言莫过于JavaScript和Python了，自然学习这两门技术的人也是最多的，那这个学习趋势在2018年会有怎样的变化呢？&lt;/p&gt;&lt;h2 id=&quot;在2018年最值得学习的编程语言又是哪些呢？&quot;&gt;&lt;a href=&quot;#在2018年最值得学习的编程语言又
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
  </entry>
  
  <entry>
    <title>定位布局的三种运用</title>
    <link href="http://www.JiShuXuePai.com/blog/uncategorized/%E5%AE%9A%E4%BD%8D%E5%B8%83%E5%B1%80%E7%9A%84%E4%B8%89%E7%A7%8D%E8%BF%90%E7%94%A8/"/>
    <id>http://www.JiShuXuePai.com/blog/uncategorized/定位布局的三种运用/</id>
    <published>2018-05-11T08:14:14.240Z</published>
    <updated>2018-05-11T08:14:14.240Z</updated>
    
    <content type="html"><![CDATA[<h3 id="定位布局的三种运用"><a href="#定位布局的三种运用" class="headerlink" title="定位布局的三种运用"></a>定位布局的三种运用</h3><p>2017-11-27</p><hr><p>说到定位布局，自然而然会想起<code>position</code>，会想到<code>position</code> 的三种属性值：<code>relative</code> 、<code>absolute</code> 、<code>fixed</code> ;实际上还有另外一种属性：<code>static</code> ，咦？这是啥玩意，我咋没见过呢，其实这个定位属性呢，还是<code>position</code> 的默认值呢，就是<strong><em>不定位</em></strong> ，O(∩_∩)O哈哈~</p><img src="/blog/uncategorized/定位布局的三种运用/net_pic_1.jpg" title="Markdown 语法"><p>不定位我还写你干啥，所以呢，我们平时是不用<code>static</code>的，我们就好好说说我们的常用的三种属性值<code>relative</code> 、<code>absolute</code> 、<code>fixed</code> 。</p><h4 id="relative：相对定位"><a href="#relative：相对定位" class="headerlink" title="relative：相对定位"></a>relative：相对定位</h4><p>relative相对定位，那么相对于谁定位呢，就是相对于它本身啦，relative是一个很贪心的孩子，占着碗里的还看着锅里的，定位了，还不放弃自己原有的位子╭(╯^╰)╮；为什么它这么霸道呢，因为它自己原来的位置是它的定位基点，它要相对于它原来的位置进行定位。下面我们来看一下效果喽：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box relative"</span>&gt;</span>relative<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span>static<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">2px</span> dashed <span class="number">#000</span>;</span><br><span class="line">  <span class="attribute">background-color</span>:<span class="built_in">rgba</span>(255,0,0,0.5);</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.relative</span>&#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>效果如下：</em></p><p><img src="case_my_1.png" alt="相对定位说明图"></p><p>通过上图可以看出来，<code>relative</code> 真是太贪心了是不是？</p><h4 id="absolute：绝对定位"><a href="#absolute：绝对定位" class="headerlink" title="absolute：绝对定位"></a>absolute：绝对定位</h4><p>相对于relative来说，咱们的<code>absolute</code> 就没有那么贪心啦，但是呢，比较淘气，可以脱离文档流快乐的玩耍。但是也不是没有任何约束的，绝对定位的定位方式是相对于它最近的定位元素来定位的（position: static是不算的！），如果没有定位的祖先元素，它就霸气的按照<code>&lt;body&gt;</code> 来定位啦，说的这么绕，听不懂肿么办？话不多说，上demo！</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 无已定位的祖先元素 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box absolute"</span>&gt;</span>absolute<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span>static<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*无已定位的祖先元素*/</span></span><br><span class="line"><span class="selector-class">.wrap</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">  <span class="attribute">border</span>:<span class="number">2px</span> solid <span class="number">#000</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">2px</span> dashed <span class="number">#000</span>;</span><br><span class="line">  <span class="attribute">background-color</span>:<span class="built_in">rgba</span>(255,0,0,0.9);</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.absolute</span>&#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>效果如下：</em></p><p><img src="case_my_2.png" alt="绝对定位说明图-1"></p><p>我们明明让它向下向右定位的，它竟然跑偏了，好气呀！</p><p>莫气，莫气，这是因为没有已定位的祖先元素约束它，没人管，它就浪开了，相对于<code>&lt;body&gt;</code> 进行绝对定位啦，那么接下来我们就管管它。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrap"</span>&gt;</span><span class="comment">&lt;!-- 定位的祖先元素 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box absolute"</span>&gt;</span>absolute<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span>static<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.wrap</span>&#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;<span class="comment">/*祖先元素的定位样式*/</span></span><br><span class="line">  <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">  <span class="attribute">border</span>:<span class="number">2px</span> solid <span class="number">#000</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">2px</span> dashed <span class="number">#000</span>;</span><br><span class="line">  <span class="attribute">background-color</span>:<span class="built_in">rgba</span>(255,0,0,0.9);</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.absolute</span>&#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>效果如下：</em></p><p><img src="case_my_3.png" alt="绝对定位说明图-2"></p><p>这下有祖先管着它啦，不嘚瑟了吧！</p><h4 id="fixed-：固定定位"><a href="#fixed-：固定定位" class="headerlink" title="fixed ：固定定位"></a>fixed ：固定定位</h4><p>说完了霸气的相对定位，讲罢了淘气的绝对定位，接下来我们要聊一聊高冷的固定定位，为什么说<code>fixed</code> 高冷呢，因为它是相对于浏览器窗口进行定位的，它的定位位置和文档、祖先元素都没有关系，页面怎么滚动，你爱咋咋地，它就认准了一个地方不再移动，任尔上下划鼠标，我就只在这儿飘，嘿嘿。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box fixed"</span>&gt;</span>fixed<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span>static<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">1000px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">2px</span> dashed <span class="number">#000</span>;</span><br><span class="line">  <span class="attribute">background-color</span>:<span class="built_in">rgba</span>(255,0,0,0.5);</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.fixed</span>&#123;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>效果如下：</em></p><p><img src="case_my_4.jpg" alt="固定定位说明图"></p><p>不管滚动条怎么滚动，高冷的<code>fixed</code> 定位的元素依旧固定在原来的位置，一动未动。</p><h4 id="z-index-：不得不说的堆叠顺序"><a href="#z-index-：不得不说的堆叠顺序" class="headerlink" title="z-index ：不得不说的堆叠顺序"></a>z-index ：不得不说的堆叠顺序</h4><p>不管是<code>relative</code> 、<code>absolute</code> 或是<code>fixed</code> 它们都离开了它们原来的位置，显示在定位后的位置，这就导致了抢镜头的现象，会把其它老老实实待在原地的元素给遮挡掉。</p><p><img src="case_my_3.png" alt="绝对定位说明图-2"></p><p>如果我们不想让某个元素未定位的元素被遮挡，应该怎么办呢，很简单：给被挡住的元素添加一个<code>relative</code> 相对定位，不需要加定位位置，然后再加一个<code>z-index</code> 属性就好啦！</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attribute">position</span>:relative;</span><br><span class="line">  <span class="attribute">z-index</span>:<span class="number">2</span>;<span class="comment">/*此处z-index的值要比遮挡住它的定位元素的z-index的值要大才行*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>z-index</code> 属性的值越大，它对应的位置越靠上，越能实力抢镜！</p><p>对于两个已定位的元素的堆叠顺序调整就更简单啦，只要改变<code>z-index</code> 的值就OK啦。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;定位布局的三种运用&quot;&gt;&lt;a href=&quot;#定位布局的三种运用&quot; class=&quot;headerlink&quot; title=&quot;定位布局的三种运用&quot;&gt;&lt;/a&gt;定位布局的三种运用&lt;/h3&gt;&lt;p&gt;2017-11-27&lt;/p&gt;&lt;hr&gt;&lt;p&gt;说到定位布局，自然而然会想起&lt;code&gt;p
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>博文模板</title>
    <link href="http://www.JiShuXuePai.com/blog/uncategorized/%E5%8D%9A%E6%96%87%E6%A8%A1%E6%9D%BF/"/>
    <id>http://www.JiShuXuePai.com/blog/uncategorized/博文模板/</id>
    <published>2018-05-11T08:14:14.232Z</published>
    <updated>2018-05-11T08:14:14.232Z</updated>
    
    <content type="html"><![CDATA[<h1 id="文章参数说明"><a href="#文章参数说明" class="headerlink" title="文章参数说明"></a>文章参数说明</h1><p>在 Markdown 文本文件顶部加入以下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标题</span><br><span class="line">author: 李康</span><br><span class="line">categories:</span><br><span class="line">    - js</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><blockquote><p>大段文字描述，可以使用引用。</p><p>或者是谈一些感想时，可以使用引用。</p></blockquote><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><ul><li>尽量言简意赅的用一句话讲解一个知识点。</li><li>如果使用大段文字描述，可以使用引用。</li><li>必要的关键词可以使用<code>高亮</code>。</li><li>尽量使用图片和表格。</li></ul><h3 id="同级标题间留一个空行"><a href="#同级标题间留一个空行" class="headerlink" title="同级标题间留一个空行"></a>同级标题间留一个空行</h3><ol><li>有序列表项1</li><li>有序列表项2</li><li>有序列表项3</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">// 代码要指定编程语言，方便语法高亮。</span><br><span class="line">// 代码顶头对齐。</span><br><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>无标题文档<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"slideA"</span> <span class="attr">class</span>=<span class="string">"slide"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/01.jpg"</span> <span class="attr">alt</span>=<span class="string">"广告一"</span> /&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"hide"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/02.jpg"</span> <span class="attr">alt</span>=<span class="string">"广告二"</span> /&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"hide"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/03.jpg"</span> <span class="attr">alt</span>=<span class="string">"广告三"</span> /&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"hide"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/04.jpg"</span> <span class="attr">alt</span>=<span class="string">"广告四"</span> /&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"hide"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/05.jpg"</span> <span class="attr">alt</span>=<span class="string">"广告五"</span> /&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"ac"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>5<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> <span class="attr">class</span>=<span class="string">"prevBtn"</span>&gt;</span>&amp;laquo;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> <span class="attr">class</span>=<span class="string">"nextBtn"</span>&gt;</span>&amp;raquo;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="Markdown-语法"><a href="#Markdown-语法" class="headerlink" title="Markdown 语法"></a>Markdown 语法</h1><img src="/blog/uncategorized/博文模板/模板说明.png" title="Markdown 语法">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;文章参数说明&quot;&gt;&lt;a href=&quot;#文章参数说明&quot; class=&quot;headerlink&quot; title=&quot;文章参数说明&quot;&gt;&lt;/a&gt;文章参数说明&lt;/h1&gt;&lt;p&gt;在 Markdown 文本文件顶部加入以下代码&lt;/p&gt;&lt;figure class=&quot;highlight pl
      
    
    </summary>
    
    
  </entry>
  
</feed>
