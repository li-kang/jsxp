<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>技术学派</title>
  
  <subtitle>学习，因为我还有梦想。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.JiShuXuePai.com/"/>
  <updated>2018-06-23T08:56:06.000Z</updated>
  <id>http://www.JiShuXuePai.com/</id>
  
  <author>
    <name>技术学派</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PHP定时器那点事</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/PHP%E5%AE%9A%E6%97%B6%E5%99%A8%E9%82%A3%E7%82%B9%E4%BA%8B/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/PHP定时器那点事/</id>
    <published>2018-06-22T08:07:34.000Z</published>
    <updated>2018-06-23T08:56:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>常见的定时器有两种：一种周期性定时执行，例如每天的凌晨三点出报表；另一种在指定时间后执行（一次），例如会员登录系统五分钟后发放每日登录奖励。两种情况对应shell中的<code>cron</code>和<code>at</code>命令，与<code>JavaScript</code>中的<code>setInterval</code>和<code>setTimeout</code>函数类似（严格来说<code>setInterval</code>是周期性执行，指定时间点执行需要自行处理）。</p><img src="/blog/学习答疑/学习答疑/PHP定时器那点事/01.jpg" title="Markdown 语法"><p>做web开发的PHP程序员对JavaScript中的两个定时器函数应该都还熟悉，回到PHP层面就有点傻眼：PHP中有<code>sleep</code>，但是没有（内置）定时器函数可用。<code>sleep</code>函数勉强可以做到，但会导致进程阻塞，期间不能做其他事（或无响应）。为什么PHP没能提供定时器（Timer）这个功能呢？</p><h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>web开发中PHP不能使用定时器的本质原因是<strong>可控</strong> <strong>常驻内存运行环境</strong>的缺失。两个要点：第一常驻内存，第二可控。CGI模式下，进程执行完脚本后直接退出，不能指望其到指定时间运行任务；PHP-FPM模式下，进程（绝大多数）常驻内存，但不可控。</p><p>不可控的意思是执行PHP的进程不受PHP代码影响，进程的入口点和退出时机由额外的程序控制。例如FPM模式下，PHP脚本中的<code>exit</code>、<code>die</code>函数只中断脚本的执行，不会对执行脚本的进程产生特别的影响（内存泄露除外）。PHP开发人员编写的脚本是进程的执行体，执行完毕后就从进程的执行上下文中卸载出去。这种情况下，执行PHP脚本的时机仍然由外部驱动，没有外部请求PHP代码就安详的躺在硬盘上，什么都不做，也就定时任务。</p><p>由于PHP主要面向web开发，PHP这种执行模式稳定可靠，开发效率快。比如省去资源释放这一步，就避免了开发中很多工作量和坑。想想某些第三方库代码中改时区、字符编码等还不还原，在常驻内存运行环境下几乎肯定会导致后续请求有问题。但在FPM模式下，这种坑无意中直接趟平，省去许多调试时间，为程序员保住发际线做出了不小的贡献。</p><p>问题已经了解，那么PHP中如何使用定时器执行定时任务？</p><h3 id="危险的做法"><a href="#危险的做法" class="headerlink" title="危险的做法"></a>危险的做法</h3><p>在web环境下，PHP脚本默认有超时时间。去掉超时设置，就可以让程序一直在后台运行（如果进程不退出的话）。例如以下代码在响应请求后继续后台运行，并且每五秒钟输出一次时间到文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># test.php</span><br><span class="line">set_time_limit(0); # 取消超时设置，让脚本可一直运行</span><br><span class="line"></span><br><span class="line">echo &apos;This is a background run forever script. Now you can leave me alone.&apos;;</span><br><span class="line"></span><br><span class="line">fastcgi_finish_request();   # 结束当前请求</span><br><span class="line"></span><br><span class="line">do&#123;</span><br><span class="line">   file_put_contents(&quot;/tmp/out.dat&quot;, &quot;test script, now:&quot; . date(&quot;Y-m-d H:i:s&quot;) . &quot;\n&quot;, FILE_APPEND);</span><br><span class="line">   sleep(5);</span><br><span class="line">&#125;while(true);</span><br></pre></td></tr></table></figure><p>请求<code>http://localhost:8080/test.php</code>文件后，监测<code>/tmp/out.dat</code>文件，会发现不断有内容输出，无论客户端是否断开连接、关闭浏览器或者重启电脑（不能重启服务器）。这说明程序一直在执行，并且也实现了我们想要的定时器功能。如果把<code>sleep</code>改成<code>usleep</code>、<code>time_nanosleep</code>，还能实现微秒、纳秒级定时器，岂不美哉？</p><p>实践中应当尽量避免用这种方式实现定时器，不仅因为低效，还略有危险。原因之一是每次请求会占用一个进程，请求十万次需要十万个进程，基本上会导致系统崩溃或后续请求无响应；另外如果打开了session，但是忘记调用<code>session_write_close</code>，会导致同一个用户的后续请求被hang住（session活跃时处于加锁状态，不关闭session会导致后续进程无法打开session）。</p><p>web开发应当越快响应用户的请求越好，在web开发中用这种方式强行实现定时器，会让整个web应用处于不稳定、不可靠或不可预测状态。孟子曰：知而慎行，君子不立于危墙之下。不靠谱的做法要尽量避免，顺带也避免背锅和甩锅。</p><p>接下来看看PHP中使用定时器的正确姿势。</p><h3 id="正确的姿势"><a href="#正确的姿势" class="headerlink" title="正确的姿势"></a>正确的姿势</h3><p>PHP实现定时器的做法可简单归结为如下几种：</p><ol><li>使用cron、Jenkins等调度工具做周期性定时任务（既可以是执行脚本，也可以是请求某个网址）；</li><li>一次性执行任务通过消息队列、数据库等方式投递给第三方程序执行；</li><li>像WordPress一样模拟定时任务，但要记住这种方式依赖于客户端请求，并需自行处理好进程并发问题；</li><li>使用常驻内存型方式运行PHP程序，即CLI模式。</li></ol><p>除了第三种做法，其他方式都是推荐的，具体方案请结合实际需求。作为PHP程序员，当然还是首选用PHP来做，也就是CLI模式。</p><h3 id="CLI模式"><a href="#CLI模式" class="headerlink" title="CLI模式"></a>CLI模式</h3><p>摸着良心说，CLI模式让PHP发挥的空间拓展不少。在CLI模式下，程序的入口点就是脚本，且代码可以常驻内存，进程完全由PHP代码控制。在这种形式下，实现定时器就有多种玩法。本文列出几种做法，抛砖引玉：</p><ol><li>使用<code>swoole</code>、<code>workerman</code>等框架，内置（高精度）定时器；</li><li>使用多进程（池）/多线程（池）技术（<code>pcntl</code>、<code>pthreads</code>拓展在CLI模式下才可用）；</li><li>处理tick或者alarm等信号；</li><li>使用<code>libevent</code>、<code>libev</code>等事件驱动库；</li><li><code>sleep</code>加循环或自己实现事件循环。</li></ol><p>想折腾的话自己用2-5方案，不想折腾<code>swoole</code>、<code>workerman</code>等框架是首选，稳定可靠。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>区分HTTP请求和任务的关系，实现定时任务就简单了。至于用不用PHP来实现，那是另外一回事。当然作为web开发的首选语言，PHP实现定时任务也是轻而易举的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;常见的定时器有两种：一种周期性定时执行，例如每天的凌晨三点出报表；另一种在指定时间后执行（一次），例如会员登录系统五分钟后发放每日登录奖励。两种情况对应shell中的&lt;code&gt;cron&lt;/code&gt;和&lt;code&gt;at&lt;/code&gt;命令，与&lt;code&gt;JavaScript&lt;
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
      <category term="php" scheme="http://www.JiShuXuePai.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>用python写一个简单的推荐系统</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E7%94%A8Python%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/用Python写一个简单的推荐系统/</id>
    <published>2018-06-22T07:44:06.000Z</published>
    <updated>2018-06-23T08:54:18.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="传统推荐系统算法"><a href="#传统推荐系统算法" class="headerlink" title="传统推荐系统算法"></a>传统推荐系统算法</h3><img src="/blog/学习答疑/学习答疑/用Python写一个简单的推荐系统/01.jpg" title="Markdown 语法"><p>首先介绍一下传统的推荐系统方法，之所以叫它传统，是因为大部分学习资料上都是用这一个方法。</p><p>我们来假设有这么一个矩阵(用<code>python</code>的列表表示):</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[# A B C D E</span><br><span class="line">  [2,0,0,4,4], #1</span><br><span class="line">  [5,5,5,3,3], #2</span><br><span class="line">  [2,4,2,1,2]  #3</span><br><span class="line">  ......</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>矩阵的行代表用户，列表示物品，其交点表示用户对该物品的评分。</p><p>假设现在<strong>用户1</strong>需要选商品，推荐系统则假设其会选择并未选择过的商品，因此，系统会在第一行中寻找评分为0的物品，显然会找到<strong>B</strong>和<strong>C</strong>。这时，该怎么知道是推荐<strong>B</strong>还是<strong>C</strong>呢？(假设用户只需推荐一个),这时则需要计算B、C和用户以前选择过的物品(已评分)的相似度。</p><p><strong>仅仅算出相似度还不够，因为你不能判断这到底是好的那一部分相似还是坏的部分相似。</strong>所以这时，我们需要<strong>引入用户的评分作为相似度计算的权重</strong>，<code>评分X相似度</code>得到最后的得分（该得分会一直累加，<strong>则B的推荐得分会是B与A，D，E的相似得分的累加和</strong>）。这样一来，评分低物品的最后得分自然就低，评分高的物品自然得分就高，这时问题就简化成排序问题了。</p><p>显然，上述问题的核心在于如何计算相似度。</p><p>这里给出计算相似度的两种方法：</p><ul><li><p>欧式距离法<br>以<strong>B</strong>和<strong>A</strong>的相似度为例：<br><code>similar = 1/sqrt((0-2)^2 + (5-5)^2 + (4-2)^2 ……)</code> 最后B与A的相似得分还得乘上评分，<code>score = similar * 2</code></p></li><li><p>余弦相似度</p><p>costheta=fracAcdotB||A||||B||</p><p>​</p><p>AB为两列向量，||A||表示A的2范数</p><p>​</p><p>特别注意一点的是，cos的取值是-1~1,我们需要将其归一化，即把范围弄成在0~1上。于是相似度计算公司变成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0.5 + 0.5*cos</span><br></pre></td></tr></table></figure></li></ul><h3 id="少用户推荐系统的创新"><a href="#少用户推荐系统的创新" class="headerlink" title="少用户推荐系统的创新"></a>少用户推荐系统的创新</h3><p>在上述的内容中，我们可以发现传统的方法有一个特出的问题，<strong>传统的算法需要大量的用户评分，即矩阵的行数需要较多才能得出的结果才值得参考</strong>。这一个需求咋看起来是没什么问题，也符合我们的逻辑，唯有数据量足够，我们才能找到较为准确的规律嘛。</p><p>但回到我的需求上来说，这可是一个明显的缺点，在前言我说明的需求上说过<strong>这是一个给宿舍甚至是个人使用的推荐系统。</strong></p><p>也就是说:</p><ul><li>我们无法提供大量数据。</li><li>我们很懒，我们最可能是告诉系统我从它的推荐中采纳了哪一部的电影，而不会去评分，我们可能告诉它质量是否可以接受，但不会像豆瓣用户那样给出0~10的准确分数。</li></ul><p>因此，传统的推荐算法有很多不适合我需求的地方，但是看问题要看本质。<strong>无非就是根据用户的特性，或者根据商品特性，进行与训练好的模型进行相似性比较。</strong>抓住这些特点，我做了少少的”创新”</p><ul><li>不基于用户的评分作相似度，而是用商品的<code>label</code>做标准<br>现在很多商品尤其是音乐或者电影，都会具有自己的<code>label</code>，比如说<code>喜剧</code>，<code>悬疑</code>，其次还有<code>主演</code>，<code>导演</code>等可以作为其特征。电商平台上也有诸如商品种类<code>衣服</code>,<code>女鞋</code>，<code>包包</code>,等，而某些物品，例如衣服，那么衣服的<code>品牌</code>，<code>size</code>，都可以作为用户的一个选择的特征。</li></ul><ul><li>用户模型是动态更新的<br>这一点不难理解，如果一个用户长期使用使用该系统，那么他的选择中很可能已经覆盖了大量的label，这时基于label的推荐系统则很难区分该用户的喜好。这时我们有两个解决方法。第一个是允许用户自定义label，比如SF就可以自定义问题或文章的标签，这样增大了label的多样性。当然，这个解决方案只能算一个缓解的方案，要想彻底解决，我觉得需要给特征选定有效期。<br>增加有效期后，用户的选择可以反应出一个时间段内的需求。<strong>假设这样一个场景，一名用户准备去旅游了，他可能会大量浏览旅游用品的出售页面，例如一次性牙膏等，这时，就可以向该用户推荐出售旅行用品的网站了。而超过了特征的有效期，例如一周，这时用户已经旅游回来，因为特征已经无效，推荐系统不再推荐旅游用品（这样用户不会觉得莫名其妙。个人经历，现在某些网站就往往会出现明显已经超过我感兴趣时限的推荐），而是开始重新收集用户新一周浏览的特征，动态构建用户模型，推荐用户下一阶段他可能需要的物品</strong></li></ul><p>实现上述想法，在python中，我们可以这么做,实现如下字典</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">record = &#123;</span><br><span class="line">    &quot;labelName&quot;:(weight,time),</span><br><span class="line">    &quot;labelName2&quot;:(weight,time)</span><br><span class="line">    ……</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#labelName是标签名称，在该标签下有一个元组，元组的第一个字段是这个标签的权重。</span><br><span class="line">#权重越大，表示用户越喜欢这个标签。</span><br><span class="line">#第二个字段是创建该标签的起始时间</span><br></pre></td></tr></table></figure><p>在实现推荐时，则较为容易实现，给定<code>testList</code>。这时需要:</p><ul><li>创建名<code>res</code>的空字典</li><li>遍历<code>testList</code>，每一个对象命名为<code>t</code></li><li>遍历<code>t</code>具有的<code>label</code>，根据<code>label</code>从<code>record</code>上获取信息。</li><li>同时获取当前时间<code>time2</code>，如果<code>time2-time</code>超出了规定时限，则该标签的信息无效，忽略该<code>label</code>，同时删除<code>record</code>里面的对应的字段。</li><li>若该标签有效，则<code>t</code>的得分加1，并将t的下标<code>index</code>作为<code>key</code>假如到一个<code>res</code>中</li><li>遍历完成后，对<code>res</code>字典按<code>value</code>排序</li><li>最后，可以根据需要对排序结果进行访问。比如只获取最高的前5名。</li></ul><p>这样，一个<strong>适合少用户的推荐系统</strong>就弄出来啦~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;传统推荐系统算法&quot;&gt;&lt;a href=&quot;#传统推荐系统算法&quot; class=&quot;headerlink&quot; title=&quot;传统推荐系统算法&quot;&gt;&lt;/a&gt;传统推荐系统算法&lt;/h3&gt;&lt;img src=&quot;/blog/学习答疑/学习答疑/用Python写一个简单的推荐系统/01.jp
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
      <category term="python" scheme="http://www.JiShuXuePai.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>零基础如何学习数据分析？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/零基础如何学习数据分析？/</id>
    <published>2018-06-19T02:06:16.000Z</published>
    <updated>2018-06-19T03:19:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>目前市场对大数据相关人才的需求与日俱增，岗位的增多，也导致了大数据相关人才出现了供不应求的状况，从而引发了一波关于大数据学习的浪潮。那么什么是数据分析？为什么要学习数据分析呢？</p><p><strong>数据分析</strong>是基于商业目的，有目的的进行收集、整理、加工和分析数据，提炼有价信息的一个过程。</p><p>一个分析项目，你的数据对象是谁？商业目的是什么？要解决什么业务问题？数据分析师对这些都要了然于心。基于商业的理解，整理分析框架和分析思路。例如，减少新客户的流失、优化活动效果、提高客户响应率等等。不同的项目对数据的要求，使用的分析手段也是不一样的。</p><img src="/blog/学习答疑/学习答疑/零基础如何学习数据分析？/01.jpg" title="Markdown 语法"><h3 id="1-数据分析师是什么？为什么要做数据分析师？"><a href="#1-数据分析师是什么？为什么要做数据分析师？" class="headerlink" title="1.数据分析师是什么？为什么要做数据分析师？"></a>1.数据分析师是什么？为什么要做数据分析师？</h3><p>数据分析师是指的是不同行业中，专门从事行业数据搜集、整理、分析，并依据数据做出行业研究、评估和预测的专业人员。</p><p>近些年，随着互联网行业发展日趋迅猛，互联网公司的对数据分析师岗位的需求越来越多，这不是偶然。</p><p>在过去的十年里，中国互联网行业靠着人口红利和流量红利急剧生长；而随着流量获取成本的不断提高、运营效率的不断下降，这种粗放式经营模式已经不再可行。互联网企业迫切需要通过数据分析来实现精细化运营，降低成本、提高效率。</p><p><img src="02.jpg" alt=""></p><h3 id="2-如何学习数据分析？"><a href="#2-如何学习数据分析？" class="headerlink" title="2.如何学习数据分析？"></a>2.如何学习数据分析？</h3><p><strong>任何一门技术或学科都有其内部规律，需要有计划，有先后，循序渐进来学。</strong></p><p>一个初级数据分析师需要掌握的技能有：</p><ol><li>统计学基础</li><li>Python语言</li><li>网页分析</li><li>数据库技术</li><li>常用模型理论</li></ol><p>数据分析入门并不难，难的是之后的积累才是重点，如何在实际工作、项目中真正发挥数据分析的作用，产生价值。</p><p><img src="03.jpg" alt=""></p><h3 id="3-数据分析师需具备的核心能力"><a href="#3-数据分析师需具备的核心能力" class="headerlink" title="3.数据分析师需具备的核心能力"></a>3.数据分析师需具备的核心能力</h3><p>数据分析师要具备六种核心能力：1.基础科学的能力；2.使用分析工具的能力；3.掌握编程语言的能力；4.逻辑思维的能力；5.数据可视化的能力；6.模型评估的能力；</p><p><strong>1.基础科学的能力</strong></p><p>可以说，在数据决策的时代，数据分析几乎渗透到企业的每个业务环节中。</p><p>掌握统计学，我们才能知道每一种数据分析的模型，什么样的输入，什么样的输出，有什么样的作用，开始我们并不一定要把每个算法都弄懂。</p><p><strong>2.使用分析工具的能力</strong></p><p>任何数据分析师从事业务方向的工作都必须会统计学，统计学的学习最好辅助SPSS或其他SAS来学，做到数据分析基本功扎实，兼顾实战性。</p><p>任何数据分析师从事技术方向的工作都必会SQL，不单是数据分析师，每一个运营、产品经理、尤其是互联网行业，一定要会SQL，基本知名互联网公司的产品经理都能写SQL。</p><p>学习中，要掌握SQL的基础语法、中级语法和常用函数，结合关系数据库系统来学习SQL语句。</p><p><strong>3.掌握编程语言的能力</strong></p><p>Python主要掌握基础语法，pandas操作、numpy操作、sklearn建模，学会用python编写网络爬虫爬取数据等等。</p><p><img src="04.jpg" alt=""></p><p><strong>4.逻辑思维的能力</strong></p><p>逻辑思维对于数据分析来说特别重要。反映商业数据里，大家可以理解为去搭建商业框架或者说是故事线，有逻辑的推进，结果才会另人信服。</p><p><strong>5.数据可视化的能力</strong></p><p>有了Python的基础，我们就可以学习数据可视化了。运营和产品都需要学习可视化，可视化说白了，就是画图，但做为数据分析师来说，我们不能用EXCEL 来实现可视化，因为它的局限性太大了。这里也不建议花太多时间学习给非专业人士展示的Tableau，有1个小时学会Tableau足够。</p><p>Python中可视化的工具有matplotlib,seaborn,ploltly;</p><p><strong>6.模型评估的能力</strong></p><p>Model建模，知道模型建好后应该怎样去评估，掌握怎样用一些定量的指标，数据、数值来衡量模型建好后到底有多准确，或者说到底有多错误。模型评估的指标或计算方式选择正确与否，能够直接影响到整个项目获模型是否有效。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;目前市场对大数据相关人才的需求与日俱增，岗位的增多，也导致了大数据相关人才出现了供不应求的状况，从而引发了一波关于大数据学习的浪潮。那么什么是数据分析？为什么要学习数据分析呢？&lt;/p&gt;&lt;p&gt;&lt;strong&gt;数据分析&lt;/strong&gt;是基于商业目的，有目的的进行收集、整理、加
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
      <category term="python" scheme="http://www.JiShuXuePai.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python语言越来越火，零基础也能学会（附学习路线）</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/Python%E8%AF%AD%E8%A8%80%E8%B6%8A%E6%9D%A5%E8%B6%8A%E7%81%AB%EF%BC%8C%E9%9B%B6%E5%9F%BA%E7%A1%80%E4%B9%9F%E8%83%BD%E5%AD%A6%E4%BC%9A%EF%BC%88%E9%99%84%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF%EF%BC%89/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/Python语言越来越火，零基础也能学会（附学习路线）/</id>
    <published>2018-06-19T01:14:08.000Z</published>
    <updated>2018-06-21T09:49:27.146Z</updated>
    
    <content type="html"><![CDATA[<p>目前的IT行业发展日趋迅猛，IT产业的产值成倍增长，在最具潜力的薪酬职业排行中，前二十名里面IT行业总是占有很大比重。而这其中又属人工智能非常之热门。如果你想要在人工智能这个方向发展，那么建议就先从Python编程语言的学习开始！</p><img src="/blog/学习答疑/学习答疑/Python语言越来越火，零基础也能学会（附学习路线）/01.jpg" title="Markdown 语法"><p><strong>首先让我们先来了解一下编程的基础概念</strong></p><blockquote><p>我们先普及一下编程语言的基础知识。编程语言就是来开发程序的，说白了就是让计算机干活，比如我们要编写一篇文章，下载一首MP3等，而计算机干活的CPU只认识机器的指令，所以，尽管不同的编程语言差异极大，最后都得“翻译”成CPU可以执行的机器指令。理论上任何语言干任何事情几乎都可以, 但是主要干什么那就不一样了。</p></blockquote><h3 id="Python语言"><a href="#Python语言" class="headerlink" title="Python语言"></a>Python语言</h3><p>Python由于具有丰富和强大的库，它又叫做作胶水语言，能够把用其他语言制作的各种模块（尤其是C/C++）很轻松地联结在一起。常见的一种应用情形是，使用Python快速生成程序的原型（有时甚至是程序的最终界面），然后对其中有特别要求的部分，用更合适的语言改写，比如3D游戏中的图形渲染模块，性能要求特别高，就可以用C/C++重写，而后封装为Python可以调用的扩展类库。Python被广泛地用于系统运维、图形处理、数学处理、文本处理、数据库编程、网络编程、Web编程、多媒体应用、pymo引擎、爬虫编写、人工智能等，加上人工智能（AI）的持续火热，Python作为通用开发语言，地位也是水涨船高。Python又易于阅读和编写，所以经常被称为实用主义，就算是非程序员或开发人员也很容易上手。</p><p><img src="02.jpg" alt=""></p><p>其实学习编程有很多种方法，那今天技术学派就整理了一些学习思路和方法。希望能够为大家开阔一些学习Python的思维方式。</p><h3 id="阶段一：师傅领进门"><a href="#阶段一：师傅领进门" class="headerlink" title="阶段一：师傅领进门"></a>阶段一：师傅领进门</h3><p>零基础学习Python，看视频跟着老师的操作是个不错的选择，边看视频边敲代码，熟练语法，快速入门，跟着老师的思路，实现功能，每一步骤都不会落下。而且通过视频的方式，很多的知识点理解起来也会比较容易。</p><p>在学习的过程中，做好笔记，保存好写过的代码，方便日后复习，每天给自己定个小任务，比如说，今天必须完成哪一些章节，保证一定的代码量。坚持和实践才是硬道理。</p><h3 id="阶段二：看书辅助学习"><a href="#阶段二：看书辅助学习" class="headerlink" title="阶段二：看书辅助学习"></a>阶段二：看书辅助学习</h3><p>在学习的过程中，可以看一些相关的书籍，也不必整本书都看，可以把书放到手边，等到需要的时候可以当作工具书来用。</p><p>因为有基础书籍，所以可以很快就完成初步语法的学习和使用。太复杂的特性还是在使用中逐步掌握就可以的。</p><h3 id="阶段三：确定学习方向"><a href="#阶段三：确定学习方向" class="headerlink" title="阶段三：确定学习方向"></a>阶段三：确定学习方向</h3><p>把合适的语言用到合适的地方。</p><p>Python职业学习方向很多，职业方向大体上分为以下六个：</p><p>Web全栈工程师、爬虫开发工程师、人工智能工程师、Python开发工程师、游戏开发工程师、搜索引擎工程师。</p><h3 id="阶段四：用Python多做练习"><a href="#阶段四：用Python多做练习" class="headerlink" title="阶段四：用Python多做练习"></a>阶段四：用Python多做练习</h3><p>比如Python搜索文件，Python批量处理等，使用最多的还是re模块和socket相关模块。写了大量的例子，让自己对Python更加喜爱，也更加熟悉。此时翻阅最多的是《Python Doc》的指南。不管是语言参考、库参考、Demo参考，都有大量可使用的内容，内容质量很高堪比JDK。</p><p>PS：这个其实就是Python的项目实践阶段，自学的话，还是困难，如果有老师带领，那么就会事半功倍。项目经验才是你提升技术能力的最快捷径。</p><h3 id="阶段五：生产上马"><a href="#阶段五：生产上马" class="headerlink" title="阶段五：生产上马"></a>阶段五：生产上马</h3><p>只会埋头敲代码的Python开发肯定不是各大公司抢着要的，谨记：多找项目多找项目多找项目！多练手多练手多练手！只有自己多动手写具体项目，才能更多的犯错，解决问题，现在练习踩的坑越多，以后和HR谈薪资的时候才会更有底气。</p><p>Github内的项目丰富，想找什么样的项目可以先去Github上面搜索，例如：你想写一个知乎爬虫，在搜索框搜索“知乎”，然后在语言那一栏里选择Python就可以找到你想要的项目了。</p><p><strong>学习 + 实践 + 总结 = 掌握语言的法宝</strong></p><p><strong>“编程是门手艺活”。什么意思？得练啊。</strong></p><p><img src="03.jpg" alt=""></p><h3 id="适合Python初学者练习的项目"><a href="#适合Python初学者练习的项目" class="headerlink" title="适合Python初学者练习的项目"></a>适合Python初学者练习的项目</h3><p>首先有两点建议：</p><p><strong>最好不要写太应用的程序练手，要思考什么更像是知识，老只会写写爬虫是无用的，但是完全不写也不行。</strong></p><p>对于练手的程序，要注意简化和抽象，但是如果简化不得当的话，很容易看几篇教程就被懒得下手了。</p><p>接下来就给大家介绍几种适合新手的练手项目。</p><p><strong>1.算法系列－排序与查找</strong></p><p>Python写swap很方便，就一句话（a， b = b， a），于是写基于比较的排序能短小精悍。刚上手一门新语言练算法最合适不过了，还能顺便刷题，利于找工作。简单的练习，让你受益无穷。</p><p><strong>2.分布式系统/计网系列</strong></p><p><img src="04.jpg" alt=""></p><p>这系列的项目，第一步可以从写一个简单的HTTP客户端开始，原因很简单，因为HTTP大概是最简单的应用层协议了。然后可以考虑实现一个基本的ssh，你大概每天都会用ssh，难道不想做一个自己的简易版本吗？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;目前的IT行业发展日趋迅猛，IT产业的产值成倍增长，在最具潜力的薪酬职业排行中，前二十名里面IT行业总是占有很大比重。而这其中又属人工智能非常之热门。如果你想要在人工智能这个方向发展，那么建议就先从Python编程语言的学习开始！&lt;/p&gt;&lt;img src=&quot;/blog/学习
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
      <category term="python" scheme="http://www.JiShuXuePai.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>如何有效的学习Web前端开发？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%A6%82%E4%BD%95%E6%9C%89%E6%95%88%E7%9A%84%E5%AD%A6%E4%B9%A0Web%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/如何有效的学习Web前端开发？/</id>
    <published>2018-06-13T09:36:00.000Z</published>
    <updated>2018-06-13T09:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>一个好的Web前端工程师在知识体系上既要有广度，又要有深度，所以很多大公司即使出高薪也很难招聘到理想的前端开发工程师。那么如何系统的学习企业实用的web前端技术呢？</p><p>当大家有了一些HTML的静态布局的基础，那么我们学完HTML、CSS这些最简单的东西就算是有了小小的入门，知道了Web前端到底是做什么的，那么我们入门之后应该学习哪些系统的前端知识体系呢？如果我们大家选择自学，那么我们就应该根据个人的学习能力，制定好每天学习“量”，今天技术学派帮大家梳理了一条学习路线。</p><img src="/blog/学习答疑/学习答疑/如何有效的学习Web前端开发？/01.jpg" title="Markdown 语法"><h3 id="第一阶段-HTML、CSS、JavaScript"><a href="#第一阶段-HTML、CSS、JavaScript" class="headerlink" title="第一阶段 HTML、CSS、JavaScript"></a>第一阶段 HTML、CSS、JavaScript</h3><p>我们学习Web前端开发系统知识，除了学习JavaScript之外，其他的千万不要买书看，对于html，css看视频学习就可以了，看书完全是在浪费时间，而且也不会动手去写代码，w3cschool是我们学习Web前端开发的标准，可以随时查阅，为什么我说除了学习JavaScript之外其他的知识不用看书，这个你以后工作了之后就会明白，在这里推荐JavaScript书籍《JavaScript权威指南》。建议没有基础的同学可以看看，如果你工作了，或许对你用处并不大。</p><p><img src="02.jpg" alt=""></p><h3 id="第二阶段-学习框架"><a href="#第二阶段-学习框架" class="headerlink" title="第二阶段 学习框架"></a>第二阶段 学习框架</h3><p>Web前端框架都是用JavaScript封装出来的，所以对于JavaScript一定要掌握好，一定要了解es6，和现在比较流行的主流框架如React、Vue、Angular。现在公司都会用框架，但不止于这些，所以不会框架话，在找工作中是很困难的。</p><p><img src="03.jpg" alt=""></p><h3 id="第三阶段-多做几个项目练手"><a href="#第三阶段-多做几个项目练手" class="headerlink" title="第三阶段 多做几个项目练手"></a>第三阶段 多做几个项目练手</h3><p>当我们有了一定的基础后，一定要多做几个项目去练手，这样我们才会有进步，可以找到身边从事前端的朋友要一些完整的项目，然后去分析前端部分，自己尝试去做项目，因为我们目前只会做前端部分，所以后端的代码我们不会，那我们就需要用一些假的数据来填充页面了，所以我们不需要从数据库中获取，我们练习的时候，写固定的数据就可以的，多做几个大型网站让自己更加熟练，然后掌握一些解决问题的能力，如果自己可以独立完成一些网站的项目，那么在一线城市找个7000-8000的工作是没问题的。</p><p><img src="04.jpg" alt=""></p><h3 id="第四阶段-全栈发展"><a href="#第四阶段-全栈发展" class="headerlink" title="第四阶段 全栈发展"></a>第四阶段 全栈发展</h3><p>如果你觉得自己学习能力可以，接受能力也行，那么可以在学习一门后端语言，如：PHP，Java，Python都可以，如果你前后端的知识都可以掌握，那么你就是全栈工程师的材料，以后可以慢慢发展成为全栈工程师，年薪达到30万是可以的，站在全栈的角度上，深入的学习前端和后端，可以更好的了解Web系统的开发流程以及各个阶段的相互作用。</p><p><img src="05.jpg" alt=""></p><h3 id="学习建议"><a href="#学习建议" class="headerlink" title="学习建议"></a>学习建议</h3><ol><li>必须掌握基本的Web前端开发技术，其中包括CSS、HTML、DOM、BOM、Ajax、JavaScript等，在掌握这些技术的同时，还要清楚地了解它们在不同浏览器上的兼容情况、渲染原理和存在的Bug。</li><li>在一名合格的前端工程师的知识结构中，网站性能优化、SEO和服务器端的基础知识也是必须掌握的。</li><li>必须学会运用各种工具进行辅助开发，如：Webpack、Gulp等。</li><li>除了要掌握技术层面的知识，还要掌握理论层面的知识，包括代码的可维护性、组件的易用性、分层语义模板和浏览器分级支持等等。</li></ol><p>代码的质量是前端开发中应该重点考虑的问题之一。例如，实现一个网站界面可能会有无数种方案，但有些方案的维护成本会比较高，有些方案会存在性能问题，而有些方案则更易于维护，而且性能也比较好。这里的关键影响因素就是代码质量。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一个好的Web前端工程师在知识体系上既要有广度，又要有深度，所以很多大公司即使出高薪也很难招聘到理想的前端开发工程师。那么如何系统的学习企业实用的web前端技术呢？&lt;/p&gt;&lt;p&gt;当大家有了一些HTML的静态布局的基础，那么我们学完HTML、CSS这些最简单的东西就算是有了小
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
      <category term="python" scheme="http://www.JiShuXuePai.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>什么样的行为出卖了你是一个程序员</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E4%BB%80%E4%B9%88%E6%A0%B7%E7%9A%84%E8%A1%8C%E4%B8%BA%E5%87%BA%E5%8D%96%E4%BA%86%E4%BD%A0%E6%98%AF%E4%B8%80%E4%B8%AA%E7%A8%8B%E5%BA%8F%E5%91%98/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/什么样的行为出卖了你是一个程序员/</id>
    <published>2018-06-12T09:23:38.000Z</published>
    <updated>2018-06-14T01:52:29.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0-在正常交流中掺杂编程规范和语法"><a href="#0-在正常交流中掺杂编程规范和语法" class="headerlink" title="0. 在正常交流中掺杂编程规范和语法"></a>0. 在正常交流中掺杂编程规范和语法</h3><p>每个编程语言都有自己特定的语法，程序员在日常开发中都要遵守这些规范。这些编程习惯可能会影响到程序员的日常文档书写习惯，比如写东西时会用分号来结束一行内容等。</p><h3 id="1-在写文档时，标序号总是从0开始（0、1、2、3-…）"><a href="#1-在写文档时，标序号总是从0开始（0、1、2、3-…）" class="headerlink" title="1. 在写文档时，标序号总是从0开始（0、1、2、3 …）"></a>1. 在写文档时，标序号总是从0开始（0、1、2、3 …）</h3><p>程序语言中数组下标都是从0开始，所以使得程序员在日常生活中数数都是从0开始。</p><img src="/blog/学习答疑/学习答疑/什么样的行为出卖了你是一个程序员/01.jpg" title="Markdown 语法"><h3 id="2-真实生活中习惯操作快捷键"><a href="#2-真实生活中习惯操作快捷键" class="headerlink" title="2. 真实生活中习惯操作快捷键"></a>2. 真实生活中习惯操作快捷键</h3><p>程序员在工作中是习惯使用快捷键，能使用键盘操作的绝对不使用鼠标，如 Cmd-C 表示复制、Cmd-V 表示粘贴。然而这些快捷键有时在程序员的行为和话语中表现的很常见，却在一些场合引起尴尬。</p><p><img src="02.jpg" alt=""></p><h3 id="3-害羞而闷骚"><a href="#3-害羞而闷骚" class="headerlink" title="3. 害羞而闷骚"></a>3. 害羞而闷骚</h3><p>网上聊天猛如虎，现实见面却怂如。。。</p><p>大多数的程序员在网上聊天时状态很嗨，但一见面就害羞脸红不敢说话。总的来说是，闲的时候骚而不闷，忙的时候只闷不骚。</p><p><img src="03.jpg" alt=""></p><h3 id="4-试图优化任何事情"><a href="#4-试图优化任何事情" class="headerlink" title="4. 试图优化任何事情"></a>4. 试图优化任何事情</h3><p>软件开发者会不断优化自己的代码，让它越来越快、越来越高效。</p><p>而在现实生活中，程序员也习惯会尝试优化真实生活中的事情，尽量省力、高效，往往会被认为太懒惰，比如脏衣服经常要堆到一定规模才去清洗。</p><h3 id="5-生活方式不健康"><a href="#5-生活方式不健康" class="headerlink" title="5. 生活方式不健康"></a>5. 生活方式不健康</h3><p>程序员写起程序来有时一坐就是大半天，眼镜不离电脑屏幕，甚至在灵感爆发时熬夜。以致作息无规律，锻炼不足，与外界接触过少。</p><p><img src="04.jpg" alt=""></p><h3 id="6-希望人们都和电脑一样循规蹈矩"><a href="#6-希望人们都和电脑一样循规蹈矩" class="headerlink" title="6. 希望人们都和电脑一样循规蹈矩"></a>6. 希望人们都和电脑一样循规蹈矩</h3><p>计算机会按照程序设定的方式运行，运行出错就是程序出现Bug了。</p><p>程序员有时会忽略人们是和电脑不一样的，人不可能完全按照逻辑和理性来做事，更多的是“跟着感觉走”。</p><p><img src="05.gif" alt=""></p><h3 id="7-价值千金的电子产品"><a href="#7-价值千金的电子产品" class="headerlink" title="7. 价值千金的电子产品"></a>7. 价值千金的电子产品</h3><p>你们懂程序员的电脑、耳机、键盘都是什么牌子的吗？程序员不是不炫富，而是炫富的方式跟我们的不一样罢了，不然我们来查查程序员的电脑、键盘、耳机等价格。</p><p><img src="06.jpg" alt=""></p><h3 id="8-太过于强迫症、完美主义"><a href="#8-太过于强迫症、完美主义" class="headerlink" title="8. 太过于强迫症、完美主义"></a>8. 太过于强迫症、完美主义</h3><p>程序中一般不能使用模糊的语义，因为计算机要求很精确。程序中即使有一点小错误，也会导致程序编译不过、运行不起来。</p><p>程序员日常生活中容易过于认真，不放过任何小细节，“打破沙锅问到底”，这有时会给周围的人造成压力。</p><p><img src="07.gif" alt=""></p><h3 id="9-总想到2的幂次方"><a href="#9-总想到2的幂次方" class="headerlink" title="9. 总想到2的幂次方"></a>9. 总想到2的幂次方</h3><p>计算机都是以二进制存储信息的，基本单位是bit。这导致程序员常常不以10进制而是2进制进行计算。</p><h3 id="10-收藏夹中有-LeetCode"><a href="#10-收藏夹中有-LeetCode" class="headerlink" title="10. 收藏夹中有 LeetCode"></a>10. 收藏夹中有 LeetCode</h3><p>除了逛 Github、CSDN、知乎、今日头条外，就是打开 LeetCode 练习刷题，保养脑细胞，夜生活不玩狼人杀和同事、朋友、同学组团刷！</p><h3 id="11-习惯按Ctrl-S"><a href="#11-习惯按Ctrl-S" class="headerlink" title="11.习惯按Ctrl+S"></a>11.习惯按Ctrl+S</h3><p>有时候看网页看着看着就Ctrl+S一下，之后突然反应过来不对。</p><h3 id="12-注释"><a href="#12-注释" class="headerlink" title="12.注释"></a>12.注释</h3><p>重要地方必须要有注释，注释内容必须要清楚明了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;0-在正常交流中掺杂编程规范和语法&quot;&gt;&lt;a href=&quot;#0-在正常交流中掺杂编程规范和语法&quot; class=&quot;headerlink&quot; title=&quot;0. 在正常交流中掺杂编程规范和语法&quot;&gt;&lt;/a&gt;0. 在正常交流中掺杂编程规范和语法&lt;/h3&gt;&lt;p&gt;每个编程语言都有
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
      <category term="python" scheme="http://www.JiShuXuePai.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python相比Java，谁更胜一筹呢？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/Python%E7%9B%B8%E6%AF%94Java%EF%BC%8C%E8%B0%81%E6%9B%B4%E8%83%9C%E4%B8%80%E7%AD%B9%E5%91%A2%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/Python相比Java，谁更胜一筹呢？/</id>
    <published>2018-06-12T09:12:58.000Z</published>
    <updated>2018-06-13T02:18:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>近几年来，随着人工智能的火爆，Python一直处于各种流行编程语言排名的前列。该语言几乎可以用于任何事情。它旨在提高程序员的生产力，而不是他们编写的代码本身。Python可以用于Web开发、桌面应用程序开发、自动化脚本、复杂计算系统、科学计算、生命支持管理系统、物联网、游戏、机器人、自然语言处理等等。</p><p>对于那些从未写过代码的人来说，Python代码也很简洁易懂。也正是因为这个原因，与其他语言相比，使用Python编写的程序其可维护性也是很不错的。从商业角度来讲，这也可以很大程度上在降低开发成本的同时提高程序员的生产力。</p><img src="/blog/学习答疑/学习答疑/Python相比Java，谁更胜一筹呢？/01.jpg" title="Markdown 语法"><h3 id="谁使用Python？"><a href="#谁使用Python？" class="headerlink" title="谁使用Python？"></a>谁使用Python？</h3><p>Python开发人员不断壮大，语言库的数量也在不断增长。这一切都使得Python语言成为世界上功能最多的编程语言之一，可以轻松适用于任何项目。同时我们也应认识到：Python在数据挖掘和机器学习等领域中十分流行。</p><p>为了更好的认识Python与Java语言的优点，我们将Python语言与流行的Java语言技术做一下比较。</p><p>一些开发人员声称Python比Java更有生产力。但更应先说明的是：<strong>Python和Java有什么区别？</strong></p><p><strong>Python VS Java</strong></p><p>Java是一个典型化的编程语言，这意味着变量名必须显示声明。相比之下，我们有动态类型的Python,它不需要声明变量。对于编程语言的动态和静态类型有很多的争论。</p><p>不过请注意这样一个特征：Python是一个有着简单句法的多样性的语言。这使得Python被广泛应用于多个领域来写脚本，快速开发应用等等。</p><p>Java支持跨平台应用，而Python几乎与所有现代操作系统兼容。Java对于初学者来说要比Python复杂很多。读Python代码也比读Java代码简单。Java比Python复杂得多。如果你没有技术类的背景，学Java是个很艰难的过程。Java和Python都是世界排名前十的语言，关于两门语言的特性，可以说有很多相似的地方，但也有很多本质上的不同。</p><h3 id="那么这两种语言相比，哪一种更胜一筹呢？"><a href="#那么这两种语言相比，哪一种更胜一筹呢？" class="headerlink" title="那么这两种语言相比，哪一种更胜一筹呢？"></a>那么这两种语言相比，哪一种更胜一筹呢？</h3><p><img src="02.jpg" alt=""></p><p><strong>1.开源</strong></p><p>Java和Python都是开源语言，简单地说，你可以自由的阅读它的源代码、对它做改动、把它的一部分用于新的自由软件中。在这一点上，Java和Python是不分上下的，唯一的差别可能在于Java代码的中文版本很多，Python主要是英文版的，所以对于学Python的人来说，英语非常非常重要。</p><p><strong>2.跨平台性</strong></p><p>Java和Python都是跨平台语言，在这一特性上，两者也是相同的，但他们的跨平台是有区别的，Java可以跨平台是因为Java的类库非常多，提供各个平台的接口；绝大多数的Python程序不做任何改变即可在主流计算机平台上运行。这一点来看Python似乎要更彻底一些，可惜并不是所有平台。在这点上看一半一半吧。</p><p><strong>3.面向对象</strong></p><p>Java语言的设计集中于对象及其接口，它提供了简单的类机制以及动态的接口模型。对象中封装了它的状态变量以及相应的方法，实现了模块化和信息隐藏;而类则提供了一类对象的原型，并且通过继承机制，子类可以使用父类所提供的方法，实现了代码的复用。　　</p><p>与Java对比，Python以一种非常强大又简单的方式实现面向对象编程。Python既支持面向过程的函数编程也支持面向对象的抽象编程。在面向过程的语言中，程序是由过程或仅仅是可重用代码的函数构建起来的。在面向对象的语言中，程序是由数据和功能组合而成的对象构建起来的。</p><p><strong>4.可扩展性</strong></p><p>在这一点上，Python和Java都具有良好的可扩展性，两者在这一点上同样可以说相同也可以说不相同。</p><p>Java的设计使它适合于一个不断发展的环境。在类库中可以自由地加入新的方法和实例变量而不会影响用户程序的执行。并且Java通过接口来支持多重继承，使之比严格的类继承具有更灵活的方式和扩展性。</p><p>Python的可扩展性不止于此，如果你需要你的一段关键代码运行得更快或者希望某些算法不公开，你可以把你的部分程序用C或C++编写，然后在你的Python程序中使用它们。你可以把Python嵌入你的C/C++程序，从而向你的程序用户提供脚本功能。</p><p><strong>5.类库</strong></p><p>只要是Java程序员，就没有不了解Java的类库的，Java之所以强大，并不是语法有多完善和强大，主要就是因为它有大量的类库。可以说在各类语言中，这一点上无出其右。其中中大量的规范，大量的库，只需要用基础的语法调用就能解决问题，所以项目上只要你使用的都是基础语法。</p><p>其实Python也是有自己的库的，而且标准库还是很庞大的。python有可定义的第三方库可以使用。它可以帮助你处理各种工作，包括正则表达式、文档生成、单元测试、线程、数据库、网页浏览器、密码系统、GUI、Tk和其他与系统有关的操作。只要安装了Python，所有这些功能都是可用的。这被称作Python的“功能齐全”理念。除了标准库以外，还有许多其他高质量的库，如wxPython、Twisted和Python图像库等等也不少。</p><p><strong>6.可读性</strong></p><p>Java和Python都可以说是很简单的语言，都有很好的可读性。当然这也有不同之处。</p><p>Java的简单是因为Java略去了运算符重载、多重继承等模糊的概念，并且通过实现自动垃圾收集大大简化了程序设计者的内存管理工作，所以学习起来相对要简单不少。</p><p>Python最大名气在于非常适合人类阅读。编程思维几乎完全和生活中的思维习惯一致。阅读一个良好的Python程序就感觉像是在读英语一样。同时虽然Python虽然是用C语言写的，但是它摈弃了C语言中非常复杂的指针，简化了Python的语法，同时Python采用强制缩进的方式使得代码具有极佳的可读性。所以不论是在阅读上还是在学习上，都非常简单容易，当然，这要求要有非常高的英语水平。</p><h3 id="Python人气爆棚的隐秘"><a href="#Python人气爆棚的隐秘" class="headerlink" title="Python人气爆棚的隐秘"></a>Python人气爆棚的隐秘</h3><p>Python之所以排名上的如此之快，和它本身的特色也有关系，他是一种简略、易用但专业、严谨的通用组合言语，或者叫胶水语，让普通人也能够很简单的入门，把各种基本程序元件组装在一起，和谐运作。比如任何一个人，只需情愿学习，能够在几天的时间里学会Python基础部分，然后干出许多许多工作，这种投入产出比可能是其他任何言语都无法相比的而且Python的使用很广，许多职业都会使用。</p><p><img src="03.jpg" alt=""></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>我们可以看出Java和Python的特点有那么一点的相似，语言之间是互通的，都有那么一点的相似地方。Java现在还是第一，我不知道Python以后会不会超越Java，但是现在人们想起人工智能，第一个想借助的语言都会想起Python，所以说未来的Python可能会借助于人工智能超越Java。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;近几年来，随着人工智能的火爆，Python一直处于各种流行编程语言排名的前列。该语言几乎可以用于任何事情。它旨在提高程序员的生产力，而不是他们编写的代码本身。Python可以用于Web开发、桌面应用程序开发、自动化脚本、复杂计算系统、科学计算、生命支持管理系统、物联网、游戏
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
      <category term="python" scheme="http://www.JiShuXuePai.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>零基础学习Python，快速入门篇</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0Python%EF%BC%8C%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E7%AF%87/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/零基础学习Python，快速入门篇/</id>
    <published>2018-06-09T04:35:00.000Z</published>
    <updated>2018-06-12T07:47:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>互联网科技发展蓬勃兴起，人工智能时代来临，Python如今越来越火，很多人都想转行做Python。那么什么是Python?</p><p>Python是一种面向对象的解释型计算机程序设计语言，语法简洁清晰，又具有丰富和强大的库，它又叫做作胶水语言。Python比较简单，容易学习和掌握，对于没有编程基础的人来说比较容易上手。</p><p>有句话叫<strong>万事开头难，所以你一定要做好心理准备。</strong>半途而废就没意思啦，千万不能遇到问题就打退堂鼓，否则你最后也还是一无所获，时间金钱精力倒是耗费了不少。</p><img src="/blog/学习答疑/学习答疑/零基础学习Python，快速入门篇/01.jpg" title="Markdown 语法"><h3 id="第一阶段"><a href="#第一阶段" class="headerlink" title="第一阶段"></a>第一阶段</h3><p>首先我们要明确自己的学习目标，不管我我们学习什么样的知识，都要有一个明确的目标，我们需要朝着目标前进，才能少走弯路，从而在学习中得到提升。</p><h3 id="第二阶段"><a href="#第二阶段" class="headerlink" title="第二阶段"></a>第二阶段</h3><ul><li><p>数据类型</p></li><li><p>流程控制</p></li><li><p>常用模块</p></li><li><p>函数、迭代器、装饰器</p></li><li><p>递归、迭代、反射</p></li><li><p>面向对象编程等等</p></li></ul><p><strong>更高级的技能就不说了，最基础的你需要烂熟于心</strong></p><h3 id="第三阶段"><a href="#第三阶段" class="headerlink" title="第三阶段"></a>第三阶段</h3><p><strong>自学最大的一个问题是，如何运用你的编程</strong></p><p>大多数同学在自学一门编程语言时，是没有应用的场景感。就是不知道学了怎么用，讲不出具体、合理的应用。只有真正的去实践才能理解的更快，理解的更深。如果是有老师带着你学，是没有关系的。因为每一阶段做什么练习，做什么项目，知识点学到什么程度，老师都会帮你规划好。自学不一样，最好每个技能点都要有明确的应用场景感，这样学习起来目标、目的更强，不会出现看不到进步，自我否定而放弃。</p><p>学习Python后，尽快利用Python做点事情，比如看新闻说每年存一万五，四十年可以变亿万富翁，你可以验证下，我们要学以致用。这种学习方法，称之为“设计式操练”。</p><p><img src="02.jpg" alt=""></p><h3 id="结论："><a href="#结论：" class="headerlink" title="结论："></a>结论：</h3><ol><li>Python语言作为工作中效率提升的工具，是非常好用的。</li><li>Python编写代码的速度非常的快，而且非常注重代码的可读性，非常适合多人参与的项目。它具备了比以前传统的脚本语言更好的可重用性，维护起来也很方便。</li><li>如果没有编程语言基础，想学习Python从事开发行业，重点要放在Web开发学习，框架学习上。打好Linux系统的基础，多了解一些Java还是比较有用的。</li><li>Python好用易学，在大数据、人工智能方面具又其他语言无法相比较的优势，如果你是有其他语言编程经验者，学了Python后比其他人更具有竞争优势。</li></ol><p>最后的最后，一定要坚持学习，这样才能成为一个王者。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;互联网科技发展蓬勃兴起，人工智能时代来临，Python如今越来越火，很多人都想转行做Python。那么什么是Python?&lt;/p&gt;&lt;p&gt;Python是一种面向对象的解释型计算机程序设计语言，语法简洁清晰，又具有丰富和强大的库，它又叫做作胶水语言。Python比较简单，容易学
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
      <category term="python" scheme="http://www.JiShuXuePai.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>5个最热门的编程语言，哪个是你的最爱？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/5%E4%B8%AA%E6%9C%80%E7%83%AD%E9%97%A8%E7%9A%84%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%EF%BC%8C%E5%93%AA%E4%B8%AA%E6%98%AF%E4%BD%A0%E7%9A%84%E6%9C%80%E7%88%B1%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/5个最热门的编程语言，哪个是你的最爱？/</id>
    <published>2018-06-09T03:20:44.023Z</published>
    <updated>2018-06-09T03:29:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>先来普及一下编程语言的基础概念。其实不论你用什么编程语言来开发程序，说到底就是“给计算机下达命令”然后让计算机帮你完成你想要达到的效果。这些指令集都是二进制的0和1；后来就有了汇编语言，可以认为它是二进制指令的助记符表示；再后来有了高级编程语言，它们是通过编译器又变回了汇编语言或者机器语言；紧接着一个又一个的高级编程语言也就诞生了。</p><img src="/blog/学习答疑/学习答疑/5个最热门的编程语言，哪个是你的最爱？/01.jpg" title="Markdown 语法"><p>其实每个编程语言没有高低之分，各自都有各自的优点和缺点，接下来技术学派就用最简单的方式来介绍一下目前市面上最流行的几门编程语言以及特点。</p><h3 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h3><p>C++是一种最广泛支持范式的编程语言，但对于零基础的初学者们来说比较难学，因为它涉及到了指针的概念。通常指针对初学者来说会比较头疼。当然如果C语言学的不错的话，那么C++也会很快上手。但C++不支持垃圾回收机制。但在游戏领域和后台都被热衷使用。</p><p><img src="02.jpg" alt=""></p><blockquote><p>C++和C语言一样，语法难度过高，不太推荐想通过学习一门语言转行进入到IT行业的人群！但是还是那句话，如果你在了解过后，对这门语言感兴趣，那么你可以去尝试，兴趣也是很重要的。</p></blockquote><h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><p>java常常是跟”企业”联系在一起, 因为它具备一些很好的语言特性和丰富的框架, 在众多企业应用中最被青睐, 你总可以听到像J2EE, JSP, Hibernate之类的东西的讨论. 同时, Java在手机领域也有一席之地, 在普遍智能化之前, 很多手机就是以支持Java应用作为卖点的, 而智能手机爆发之后, Java手机主场变成了Android, 作为安卓的标准编程语言而存在.</p><p><img src="03.jpg" alt=""></p><blockquote><p>Java程序员其实现在需求量还是非常大呢，但目前Java在招聘上有些门槛，如果你只是通过一段时间的学习然后去从事Java的工作，可能刚起步的工资不会很高，毕竟现在Java的大神太多了。但它仍然是市场上最流行和最火爆的编程语言。</p></blockquote><h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h3><p>世界上最好的语言？php这三个字你常常会在浏览器地址栏里看到, 所以不意外php是用来开发网站的. 也是web后端的王者语言.无数的网站后端都运行着php代码.</p><p><img src="04.jpg" alt=""></p><blockquote><p>简单易学，上手快，也适合零基础去学习，开发Web便捷迅速。不过PHP只适合网站项目。</p></blockquote><h3 id="JavaScript（Web前端开发）"><a href="#JavaScript（Web前端开发）" class="headerlink" title="JavaScript（Web前端开发）"></a>JavaScript（Web前端开发）</h3><p>前端就是你在网站上看到的一切图片、文字、视频。这些都是用前端写的。目前Web前端开发还是市面上很流行的编程语言。JavaScript就是前端中最核心的部分，所以掌握了这门语言，找工作不是什么难事，薪资还可以，最关键的是，这门语言对于零基础的学员来说学起来难度不大。</p><p><img src="05.jpg" alt=""></p><blockquote><p>前端学习曲线是“先快再慢，最后再快”，目前市场缺口最大的是中高级前端，所以要想真的找到工作，需要多学，多敲代码。</p></blockquote><h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><p>Python是动态形的灵活的解释性语言，由于它具有丰富和强大的库，所以它又叫做作胶水语言，能够把用其他语言制作的各种模块（尤其是C/C++）很轻松地联结在一起。使用Python可以快速的生成程序的原型，然后对其中有特别要求的部分，用更合适的语言改写，比如3D游戏中的图形渲染模块，性能要求特别高，就可以用C/C++重写，而后封装为Python可以调用的扩展类库。Python可以做服务器开发与物联网开发。信息安全，大数据处理，数据可视化机器学习，物联网开发，各大软件的api，桌面应用，都需要python。</p><p><img src="06.jpg" alt=""></p><blockquote><p>python非常灵活，而且啥都能干，包括现在非常火的大数据、人工智能都能够运用到，更可怕的是这门语言极其简单，而且python的库非常丰富，很多时候，你根本不用自己敲代码。所以这门语言是非常适合零基础的小伙伴去学习的，目前python工程师的薪资也很高。</p></blockquote><p><strong>总结：</strong></p><p><strong>C++ </strong>进一步扩充和完善了 C 语言，是一种面向对象的程序设计语言。C++在C的基础上增加了数据封装，继承，多态等编程特性。C++ 可运行于多种平台上，如 Windows、MAC 操作系统以及 UNIX 的各种版本。</p><p><strong>Java</strong>不仅仅是安卓开发，这门语言强大在于除了一些极端性能敏感场所，基本上是通用，非常强大的语言。</p><p><strong>PHP</strong>是世界上最好的编程语言，这句话当然有调侃的意味，但是PHP确实非常好用，而且简单易学，所以你对网站项目有兴趣，那么可以考虑PHP。</p><p><strong>JavaScript</strong>属于网络的脚本语言,被广泛用于Web应用开发,通常用来为网页添加各式各样的动态功能,为用户提供更流畅美观的浏览效果。</p><p><strong>Python</strong>同样简单易上手，语法还特别简单，而且适用性也广，如果你是一个零基础的小白，想入门一种编程语言进入到IT行业的话，那么不妨考虑一下Python。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;先来普及一下编程语言的基础概念。其实不论你用什么编程语言来开发程序，说到底就是“给计算机下达命令”然后让计算机帮你完成你想要达到的效果。这些指令集都是二进制的0和1；后来就有了汇编语言，可以认为它是二进制指令的助记符表示；再后来有了高级编程语言，它们是通过编译器又变回了汇编
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
  </entry>
  
  <entry>
    <title>如何判断自己适不适合做一名程序员？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%A6%82%E4%BD%95%E5%88%A4%E6%96%AD%E8%87%AA%E5%B7%B1%E9%80%82%E4%B8%8D%E9%80%82%E5%90%88%E5%81%9A%E4%B8%80%E5%90%8D%E7%A8%8B%E5%BA%8F%E5%91%98%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/如何判断自己适不适合做一名程序员？/</id>
    <published>2018-06-08T03:20:42.116Z</published>
    <updated>2018-06-08T03:38:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>编程是一门非常有技术含量的手艺活，待遇和福利相对来说较为丰厚。由于种种原因想要转行做程序员的人，总会有这样的困惑：我是否适合做程序员呢？</p><img src="/blog/学习答疑/学习答疑/如何判断自己适不适合做一名程序员？/01.jpg" title="Markdown 语法"><p>其实衡量一份工作是否适合自己的标准至少有三个：你所擅长的、你所喜欢的、对你来说最有价值的（能挣钱的）。从程序员这个职业的角度来看，判断一个人是否适合做程序员标准其实有很多。</p><p>几条核心的标准，看看您是否符合：</p><p><strong>1.理解力或自学能力</strong></p><p>如果你从小就养成了一个习惯性思维定势，觉得没有老师手把手的教就学不会，那你不适合当程序员。如果你学了的东西只是为了应付考试，考试之后就再也不看了，那你也不适合当程序员。</p><p>在编程的过程中，像操作系统、IDE、环境、语言等经常会出现各种Bug，你能否不厌其烦地去解决它们?</p><p><strong>2.一定的逻辑能力</strong></p><p>想要学习编程要有一定的逻辑能力，缺乏逻辑能力的人，就不能很快地找到逻辑漏洞，写不出条理清晰的代码。耐心不够的小伙伴会越来越来烦。逻辑能力也决定了程序员天花板的高度。</p><p><img src="02.jpg" alt=""></p><p><strong>3.抽象思维</strong></p><p>这个能力大体可以决定一个程序员的上限。如果没有这个能力是做不到把世界万物皆对象的抽象能力。如果在学代码的过程中，理解指针这个东西的时间超过了一天，那你不适合当程序员。（强调一下，这里不适合是指你无法成为一个优秀的程序员，你想做当然肯定是可以做的。）</p><p><strong>4.专注力</strong></p><p>专注力是兴趣的衍生品，当你对一个东西非常感兴趣的时候，你就会有非常快的进步。打个比方：有一些喜欢玩“LOL”、“吃鸡”的小伙伴，就算你连续玩几个小时还能越打越精神，还会利用业余时间看视频、看攻略，为什么？因为你觉得有兴趣。如果也觉得写代码有意思，那专注自然就不是个事儿。</p><p><img src="03.jpg" alt=""></p><p><strong>5.想象力与记忆力</strong></p><p>记忆里并不是说过目不忘，只是说你大概记得有什么类，有什么函数，每个函数里的大体过程是什么样的。然后走路、坐地铁的时候就可以用想象力在脑子里做代码的重构啊。我听说大神们有时候在梦里也能写代码，小编暂时还没有锻炼出这个技能。当然，这些能力不是必须的。是需要锻炼的。</p><p><strong>6.沟通能力</strong></p><p>很多人都觉得程序员并不需要什么沟通能力，只要可以写好代码就可以。其实只有搬砖码农才不太需要沟通能力。如果你想成为架构的话，你起码要能清楚地解释自己的方案，更好地沟通是能把自己的方案传达下去。当然，如果你已经是一位大神，那你不沟通也没有问题。桃李不言，下自成溪。你一个人把大家的代码都写了，你一句话不讲，大家也会把你当神的。</p><p><img src="04.jpg" alt=""></p><p>其实能把上面提到这几点全部做到很好的人是极少数，能把其中的2-3点做好大体就算“适合”做程序了，能在软件行业找到合适的岗位了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;编程是一门非常有技术含量的手艺活，待遇和福利相对来说较为丰厚。由于种种原因想要转行做程序员的人，总会有这样的困惑：我是否适合做程序员呢？&lt;/p&gt;&lt;img src=&quot;/blog/学习答疑/学习答疑/如何判断自己适不适合做一名程序员？/01.jpg&quot; title=&quot;Markdo
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
  </entry>
  
  <entry>
    <title>想进入大数据领域，大数据的五大问题你了解吗？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E6%83%B3%E8%BF%9B%E5%85%A5%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%A2%86%E5%9F%9F%EF%BC%8C%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%9A%84%E4%BA%94%E5%A4%A7%E9%97%AE%E9%A2%98%E4%BD%A0%E4%BA%86%E8%A7%A3%E5%90%97%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/想进入大数据领域，大数据的五大问题你了解吗？/</id>
    <published>2018-06-07T14:32:34.162Z</published>
    <updated>2018-06-07T14:40:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>大数据已成为一个高速信息社会科技发达，信息流通，人们之间的交流越来越密切，生活也越来越方便的高科技时代产物。那么关于大数据的五大问题你是否了解?今日就跟着技术学派一起来看一看。</p><img src="/blog/学习答疑/学习答疑/想进入大数据领域，大数据的五大问题你了解吗？/01.jpg" title="Markdown 语法"><h3 id="第一，大数据是什么"><a href="#第一，大数据是什么" class="headerlink" title="第一，大数据是什么?"></a>第一，大数据是什么?</h3><p>大数据是指无法在一定时间范围内用常规软件工具进行捕捉、管理和处理的数据集合，是需要新处理模式才能具有更强的决策力、洞察发现力和流程优化能力的海量、高增长率和多样化的信息资产。</p><p>大数据可分成大数据技术、大数据工程、大数据科学和大数据应用等领域。目前人们谈论最多的是大数据技术和大数据应用。工程和科学问题尚未被重视。大数据工程指大数据的规划建设运营管理的系统工程；大数据科学关注大数据网络发展和运营过程中发现和验证大数据的规律及其与自然和社会活动之间的关系。</p><p>大数据不仅仅是大量的数据，还是来自不同来源，存在不同类型，代表不同含义的海量数据。大数据应该动态变化，不断增加，而且能够通过研究分析发现规律产生价值。</p><p><img src="02.jpg" alt=""></p><h3 id="第二，大数据可以做什么"><a href="#第二，大数据可以做什么" class="headerlink" title="第二，大数据可以做什么?"></a>第二，大数据可以做什么?</h3><p>物联网、云计算、移动互联网、车联网、手机、平板电脑、PC以及遍布地球各个角落的各种各样的传感器，无一不是数据来源或者承载的方式。</p><p>大数据能用来收集分析人们的社会需求和生活状态；还可以用大数据的分析来改善城市交通管理；大数据还能分析人们的身体健康情况、保障市民的医疗和健康条件；还可以分析和防止犯罪行为等；可以帮助我们根据对历史情况的分析，发现事物的发展变化规律，可以有助于更好的提高生产效率，预防意外发生，促进营业销售，使我们的工作和生活变得更加高效轻松便利。</p><p><img src="03.jpg" alt=""></p><h3 id="第三，如何使用大数据"><a href="#第三，如何使用大数据" class="headerlink" title="第三，如何使用大数据?"></a>第三，如何使用大数据?</h3><p>我们利用已经收集的数据，建立各种数学模型，然后进行模拟运算，通过代入不同的数据，调整每次代入的数据点，计算可能产生的结果数据，并分析这种数据可能产生的影响。这种过程涉及的数据量和变化都是海量的，因此需要强大的计算和存储能力。</p><p>随着大数据的应用越来越广泛，应用的行业也越来越低，我们每日都可以看到大数据的一些新颖的应用，从而帮助人们从中获取到真正有用的价值。许多组织或者个人都会受到大数据的剖析影响，但是大数据是怎样帮助人们挖掘出有价值的信息呢?</p><p><strong>1.理解客户、满足客户服务需求</strong></p><p>大数据的应用现在在这领域是最广为人知的。重点是怎样应用大数据更好的了解客户以及他们的喜好和行为。企业极度喜欢搜集社交方面的数据、浏览器的日志、剖析出文本和传感器的数据，为了更加全面的了解客户。在通常情况下，创建出数据模型进行预测。好比美国的著名零售商Target就是通过大数据的剖析，获得有价值的信息，精准得预测到客户在什么时间想要小孩。另外，通过大数据的应用，电信公司可以更好预测出流失的客户，沃尔玛则更加精准的预测哪个产品会大卖，汽车保险行业会了解客户的需求和驾驶水平，政府也能了解到选民的偏好。</p><p><strong>2.业务流程优化</strong></p><p>大数据也更多的帮助业务流程的优化。可以通过利用社交媒体数据、网络搜索以及天气预告挖掘出有价值的数据，其中大数据的应用最广泛的就是供应链以及配送路线的优化。在这2个方面，地理定位和无线电频率的识别追踪货物和送货车，利用实时交通路线数据制订更加优化的路线。人力资源业务也通过大数据的剖析来进行改良，这其中就包括了人才招聘的优化。</p><p><strong>3.大数据正在改善我们的生活</strong></p><p>大数据不单单只是应用于企业和政府，同样也适用我们生活当中的每个人。我们可以利用穿着的装备(如智能手表或者智能手环)生成最新的数据，这让我们可以凭据我们热量的消耗以及睡眠模式来进行追踪。而且还利用大数据剖析来寻找属于我们的爱情，大多数时间交友网站就是大数据应用工具来帮助需要的人匹配合适的对象。</p><p><strong>4.提高医疗和研发</strong></p><p>大数据剖析应用的计算能力可以让我们能够在几分钟内就可以解码整个DNA。而且让我们可以制订出最新的治疗方案。同时可以更好的去理解和预测疾病。就好像人们戴上智能手表等可以形成的数据一样，大数据同样可以帮助病人对于病情进行更好的治疗。大数据技术现在已经在医院应用监视早产婴儿和患病婴儿的情况，通过记录和剖析婴儿的心跳，医生针对婴儿的身体可能会出现不适症状做出预测。这样可以帮助医生更好的救助婴儿。</p><p><img src="04.jpg" alt=""></p><h3 id="第四，大数据有哪些应用场景"><a href="#第四，大数据有哪些应用场景" class="headerlink" title="第四，大数据有哪些应用场景?"></a>第四，大数据有哪些应用场景?</h3><p>通过医学数据的积累和分析，预测疾病发生的概率，以及如何更好的治愈;通过人们日常消费数据的积累和分析，预测消费需求，促进销售;通过环境数据的积累和分析，预测未来气候变化，防范自然灾害。</p><p>下面就让我们一起来看看8个价值极度高的大数据的应用，这些都是大数据在剖析应用上的关键领域：</p><ul><li>大数据帮助政府实现市场经济调控、公共卫生安全防范、灾难预警、社会舆论监督；</li><li>大数据帮助城市预防犯罪，实现智慧交通，提升紧急应急能力；</li><li>大数据帮助医疗机构建立患者的疾病风险跟踪机制，帮助医药企业提升药品的临床使用效果，帮助艾滋病研究机构为患者提供定制的药物；</li><li>大数据帮助航空公司节省运营成本，帮助电信企业实现售后服务质量提升，帮助保险企业识别欺诈骗保行为，帮助快递公司监测分析运输车辆的故障险情以提前预警维修，帮助电力公司有效识别预警即将发生故障的设备；</li><li>大数据帮助电商公司向用户推荐商品和服务，帮助旅游网站为旅游者提供心仪的旅游路线，帮助二手市场的买卖双方找到最合适的交易目标，帮助用户找到最合适的商品购买时期、商家和最优惠价格；</li><li>大数据帮助企业提升营销的针对性，降低物流和库存的成本，减少投资的风险，以及帮助企业提升广告投放精准度；</li><li>大数据帮助娱乐行业预测歌手，歌曲，电影，电视剧的受欢迎程度，并为投资者分析评估拍一部电影需要投入多少钱才最合适，否则就有可能收不回成本；</li><li>大数据帮助社交网站提供更准确的好友推荐，为用户提供更精准的企业招聘信息，向用户推荐可能喜欢的游戏以及适合购买的商品。</li></ul><p><img src="05.jpg" alt=""></p><h3 id="第五，大数据概念是什么"><a href="#第五，大数据概念是什么" class="headerlink" title="第五，大数据概念是什么?"></a>第五，大数据概念是什么?</h3><p>大数据就是互联网发展到现今阶段的一种表象或特征而已，没有必要神话它或对它保持敬畏之心，在以云计算为代表的技术创新大幕的衬托下，这些原本很难收集和使用的数据开始容易被利用起来了，通过各行各业的不断创新，大数据会逐步为人类创造更多的价值。</p><p>其次，想要系统的认知大数据，必须要全面而细致的分解它，小编着手从三个层面来展开：</p><p>第一层面是理论，理论是认知的必经途径，也是被广泛认同和传播的基线。在这里从大数据的特征定义理解行业对大数据的整体描绘和定性；从对大数据价值的探讨来深入解析大数据的珍贵所在；洞悉大数据的发展趋势；从大数据隐私这个特别而重要的视角审视人和数据之间的长久博弈。</p><p>第二层面是技术，技术是大数据价值体现的手段和前进的基石。在这里分别从云计算、分布式处理技术、存储技术和感知技术的发展来说明大数据从采集、处理、存储到形成结果的整个过程。</p><p>第三层面是实践，实践是大数据的最终价值体现。在这里分别从互联网的大数据，政府的大数据，企业的大数据和个人的大数据四个方面来描绘大数据已经展现的美好景象及即将实现的蓝图。</p><p><img src="06.jpg" alt=""></p><p>分享 IT 技术和行业经验，请关注-技术学派。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;大数据已成为一个高速信息社会科技发达，信息流通，人们之间的交流越来越密切，生活也越来越方便的高科技时代产物。那么关于大数据的五大问题你是否了解?今日就跟着技术学派一起来看一看。&lt;/p&gt;&lt;img src=&quot;/blog/学习答疑/学习答疑/想进入大数据领域，大数据的五大问题你了
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
  </entry>
  
  <entry>
    <title>Java、Python和大数据，哪个发展前景最好？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/Java%E3%80%81Python%E5%92%8C%E5%A4%A7%E6%95%B0%E6%8D%AE%EF%BC%8C%E5%93%AA%E4%B8%AA%E5%8F%91%E5%B1%95%E5%89%8D%E6%99%AF%E6%9C%80%E5%A5%BD%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/Java、Python和大数据，哪个发展前景最好？/</id>
    <published>2018-06-07T11:19:56.000Z</published>
    <updated>2018-06-08T03:17:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>Java和Python是编程语言，而大数据则是一系列技术的整合，所以应该分开来看，三者并不能直接进行对比。</p><p>三者实际的关系是目标和实现的包含关系。</p><p>所以这个问题应该分为 Java和Python哪个发展前景好？大数据的发展前景如何？</p><h3 id="关于大数据的发展前景"><a href="#关于大数据的发展前景" class="headerlink" title="关于大数据的发展前景"></a>关于大数据的发展前景</h3><img src="/blog/学习答疑/学习答疑/Java、Python和大数据，哪个发展前景最好？/01.jpg" title="Markdown 语法"><p>大数据并不是一种概念，而是一种方法论，一句话概括，就是通过分析和挖掘全量的非抽样的数据辅助决策。</p><p>关于大数据的发展前景，这里引用马云说过的一句话：</p><blockquote><p>未来最大的资源就是数据，不参与大数据十年后一定会后悔。</p></blockquote><p>从这句话中可以看出马云对大数据是多么的推崇，而事实上，大数据在现在乃至未来十年，依然会很火。</p><p>大数据可以实现的应用可以概括为两个方向，一是精准化定制，二是预测。比如通过搜索引擎搜索同样的内容，每个人的结果是不同的，定制新闻服务或网游。再比如精准营销，百度推广，淘宝推广，或者你到了一个地方，自动推荐周边的消费设施等。</p><blockquote><p>大数据能火多久完全决定于他的应用方向能火多久，或者可以说是大数据的取代者何时能火！<br>一、大数据的应用方向和未来趋势<br>1、应用方向：营销、金融、工业、医疗、教育、交通、智慧生活、执法、体育、政府、旅游等等，大数据是真正的覆盖全行业，也就是未来所有的行业都需要大数据的支撑。<br>2、未来趋势：传感器——数据服务——人工智能——社会关系——人类文明<br>从大数据的应用方向和未来发展趋势可以看出来，在未来10年或20年社会及企业发展过程中，大数据是我们无法离开的技术。云服务、人工智能越来越火，没有大数据谈何云服务，没有大数据谈何人工智能？<br>由此看出大数据能火多久的主要决定因素就是有没有他的取代者出现。<br>二、大数据的取代者什么时候能火？<br>就目前科技飞速发展的现状来看，大数据技术会不会出现取代者，相信没有人敢特别肯定的说没有，但也没有人敢肯定的说有，这就如同10几年前的手机，在当时没有人能够想象到手机有一天会成为一部“无所不能”的机器。<br>但是就目前来看，大数据还没有取代者！</p></blockquote><p>不少想学习大数据的零基础学员都知道，学大数据部分课程之前要先学习一种计算机编程语言。大数据的开发需要编程语言的基础，因为大数据的开发基于一些常用的高级语言，比如Java、R语言和python。不论是大数据生态架构，还是数据挖掘，都需要有高级编程语言的基础。因此，如果想学习大数据开发，还是需要着手学习一门高级语言。例如：Python。</p><h3 id="Java的发展前景"><a href="#Java的发展前景" class="headerlink" title="Java的发展前景"></a>Java的发展前景</h3><p><img src="02.gif" alt=""></p><p>Java是一门面向对象编程语言，不仅吸收了C++语言的各种优点，还摒弃了C++里难以理解的多继承、指针等概念，因此Java语言具有功能强大和简单易用两个特征。Java语言作为静态的面向对象编程语言的代表，极好地实现了面向对象的理论，允许程序员以优雅的思维方式进行复杂的编程。Java具有简单性、面向对象、分布式、健壮性、安全性、平台独立与可移植性、多线程、动态性等等特点 。</p><p>Java的发展方向：web开发、大数据开发、安卓开发、服务器开发等等。</p><p>“Java”作为所有编程语言中最热门技术，可以说它无处不在。在所有程序员中，Java开发工程师就占据20%的比例。</p><h3 id="Python的发展前景"><a href="#Python的发展前景" class="headerlink" title="Python的发展前景"></a>Python的发展前景</h3><p><img src="03.jpg" alt=""></p><p>Python是一种面向对象的解释型计算机程序的设计语言, Python具有丰富和强大的库。它常被称为胶水语言，能够把其他语言制作的各种模块很轻松地结合在一起。</p><p>Python可以做日常任务，比如自动备份MP3；可以做网站，很多著名的国外网站YouTube就是Python写的；可以做网络游戏的后台，很多在线游戏的后台都是Python开发的。</p><p>Python的发展方向：数据分析、人工智能、web开发、测试、运维、web安全、游戏制作等等。</p><p>另外说下，Python目前的发展趋势非常好，伴随着大数据和人工智能的发展，Python的应用将得到更广泛的普及，目前在落地应用中已有不少Python开发的项目了。所以就目前的趋势来说，Python要比Java更具前景一些。</p><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>好啦，以上三个目前最火的方向已经给大家都阐述清楚，最终的选择权还在你们自己的手中！但并不是说哪个前景好就去学哪个，最重要的还是兴趣。有句话说得好，“兴趣是最好的老师”，只有你对某个语音感兴趣了，才有学习的动力，才能坚持下去。</p><p>如果仅仅是为了发展前景好就去学习自己不感兴趣的东西，那么很可能半途而废，最终一事无成。适合自己才是最重要的！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Java和Python是编程语言，而大数据则是一系列技术的整合，所以应该分开来看，三者并不能直接进行对比。&lt;/p&gt;&lt;p&gt;三者实际的关系是目标和实现的包含关系。&lt;/p&gt;&lt;p&gt;所以这个问题应该分为 Java和Python哪个发展前景好？大数据的发展前景如何？&lt;/p&gt;&lt;h3 id
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
  </entry>
  
  <entry>
    <title>现在为什么越来越多的人想学编程？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E7%8E%B0%E5%9C%A8%E4%B8%BA%E4%BB%80%E4%B9%88%E8%B6%8A%E6%9D%A5%E8%B6%8A%E5%A4%9A%E7%9A%84%E4%BA%BA%E6%83%B3%E5%AD%A6%E7%BC%96%E7%A8%8B%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/现在为什么越来越多的人想学编程？/</id>
    <published>2018-06-06T09:32:02.044Z</published>
    <updated>2018-06-06T09:41:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>目前的IT行业发展日趋迅猛，IT产业的产值成倍增长，IT就业前景很好，在最具潜力的薪酬职业排行中，前二十名里面IT行业总是占有很大比重。与其他行业相比，IT行业只要有技术，就算是跳槽再就业也是薪资只涨不跌。所以有发展必然会带来人才的需求，因此好多非IT行业的人都想要进入IT行业去发展。</p><img src="/blog/学习答疑/学习答疑/现在为什么越来越多的人想学编程？/01.jpg" title="Markdown 语法"><p>如果说你现在已经有了想学习编程的想法，那接下来技术学派就来谈谈如何去学习编程。为大家提供一个学习思路。</p><h3 id="1-了解编程基础概念"><a href="#1-了解编程基础概念" class="headerlink" title="1.了解编程基础概念"></a>1.了解编程基础概念</h3><p>首先要对计算机有个基本的认识，了解编程基础概念及用编程解决现实问题的基本流程。</p><p>我们先普及一下编程语言的基础知识。编程语言就是来开发程序的，说白了就是让计算机干活，比如我们要编写一篇文章，下载一首MP3等，而计算机干活的CPU只认识机器的指令，所以，尽管不同的编程语言差异极大，最后都得“翻译”成CPU可以执行的机器指令。理论上任何语言干任何事情几乎都可以, 但是主要干什么那就不一样了。</p><h3 id="2-了解计算机的基本组成结构"><a href="#2-了解计算机的基本组成结构" class="headerlink" title="2.了解计算机的基本组成结构"></a>2.了解计算机的基本组成结构</h3><p>计算机是由运算器、控制器、存储器、输入设备和输出设备等五大部件组成计算机硬件系统。</p><p>运算器：又称算术逻辑单元，用来进行算术或逻辑运算以及移位循环等操作。</p><p>控制器：又称控制单元，是全机的指挥控制中心。它负责把指令逐条从存储器中取出，经译码分析后向全机发出取数、执行、存数等控制命令，以保证正确完成程序所要求的功能。与运算器一起成为CPU。</p><p>存储器：（分为内存和外存）是计算机的存储和记忆装置，用来存放指令、原始数据、中间结果和最终结果。</p><p>输入 / 输出设备：是计算机和外界进行信息交换的桥梁。程序、数据及现场信息要通过输入设备输入给计算机；计算机的处理结果要通过输出设备输出，以便用户使用。常用的输入设备有：键盘、鼠标、扫描仪等；常用的输出设备有：显示器、打印机、绘图仪等。</p><h3 id="3-学习基本的数据结构"><a href="#3-学习基本的数据结构" class="headerlink" title="3.学习基本的数据结构"></a>3.学习基本的数据结构</h3><p>虽然编程语言有好多种，但是程序的数据类型都相差不多。</p><h3 id="4-选择一门入门的编程语言"><a href="#4-选择一门入门的编程语言" class="headerlink" title="4.选择一门入门的编程语言"></a>4.选择一门入门的编程语言</h3><p>对于大多数的转行者来说，学习编程的目的就是想找一份高薪的工作，那么肯定是哪个编程语言的就业前景好，就越值得学习。</p><p>就初学者而言，技术学派推荐2个方向</p><p><strong>HTML5+JS（web前端开发）</strong>：目前web前端开发还是市面上很流行的编程语言。所以学习这门语言，找工作不是什么难事，薪资还可以，最关键的是，这门语言对于零基础的学员来说学起来难度不大。</p><p><strong>Python</strong>：Python语言非常灵活，而且什么都能干，包括现在非常火的大数据、人工智能都能够运用到，更可怕的是这门语言极其简单，而且python的库非常丰富，很多时候，你根本不用自己敲代码。所以这门语言是非常适合零基础的小伙伴去学习的，目前python工程师的薪资也很高。</p><h3 id="5-试着用所学的编程语言去做些项目，培养编程思想"><a href="#5-试着用所学的编程语言去做些项目，培养编程思想" class="headerlink" title="5.试着用所学的编程语言去做些项目，培养编程思想"></a>5.试着用所学的编程语言去做些项目，培养编程思想</h3><p>有人会说编程很难，有想学的念头但又放弃了，特别是对编程毫不了解，身边也没有从事软件开发行业朋友的人，认为编程写代码会是一个很难的工作。那编程真的很难吗？其实一个完全没有基础的外行人，在一个IT培训机构里培训5个月左右完全可以找到一份开发的工作，进入到IT行业。有人会说，培训完可能只学会一点皮毛，并不会成为一个编程大神。其实，通过一段时间的培训是否可以成为一个编程大牛，这个也是看个人。更多的是为了帮助一些没有基础非IT专业的外行人可以进入到IT行业，之后是否会在IT行业作出多高的成就，就要看在真正工作中的积累和自学能力了。所以难的不是编程，难的是决心和毅力。</p><p>分享 IT 技术和行业经验，请关注-技术学派。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;目前的IT行业发展日趋迅猛，IT产业的产值成倍增长，IT就业前景很好，在最具潜力的薪酬职业排行中，前二十名里面IT行业总是占有很大比重。与其他行业相比，IT行业只要有技术，就算是跳槽再就业也是薪资只涨不跌。所以有发展必然会带来人才的需求，因此好多非IT行业的人都想要进入IT
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
  </entry>
  
  <entry>
    <title>C语言与C++、C#究竟是什么关系？（附福利）</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/C%E8%AF%AD%E8%A8%80%E4%B8%8EC++%E3%80%81C%20Sharp%E7%A9%B6%E7%AB%9F%E6%98%AF%E4%BB%80%E4%B9%88%E5%85%B3%E7%B3%BB%EF%BC%9F%EF%BC%88%E9%99%84%E7%A6%8F%E5%88%A9%EF%BC%89/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/C语言与C++、C Sharp究竟是什么关系？（附福利）/</id>
    <published>2018-06-06T09:11:23.432Z</published>
    <updated>2018-06-06T09:27:41.726Z</updated>
    
    <content type="html"><![CDATA[<p><strong>简单来说，C++就像是C语言的亲弟弟，而C Sharp（C#）就是他们二者的远房亲戚（其实它更像是Java的表兄弟）。</strong>这三门语言都是十分优秀的编程语言，也都有很高的运行效率。这三种编程语言的应用范围很广阔，接下来技术学派就分别介绍一下三种语言的来历以及应用领域。</p><img src="/blog/学习答疑/学习答疑/C语言与C++、C%20Sharp究竟是什么关系？（附福利）/01.jpg" title="Markdown 语法"><h3 id="C语言"><a href="#C语言" class="headerlink" title="C语言"></a>C语言</h3><p>C语言诞生在大名鼎鼎的美国贝尔实验室，它的前身是B语言。C语言从诞生之初就获得了广大程序员的青睐，由于其简洁的语法，高效的执行效率（比较接近汇编的性能），它既具有高级语言的特点，又具有汇编语言的特点。在很多领域获得了广泛应用。比如操作系统，图像处理算法，硬件驱动，嵌入式设备编程等等。（底部有彩蛋）</p><p><img src="02.jpg" alt=""></p><h3 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h3><p>尽管C语言已经足够优秀，但它毕竟是一门面向过程的编程语言，不符合人的思维习惯（人脑的思维习惯有点像面向对象）。于是在这种背景下就诞生了更加强大的C++,之所以说C++是C语言的亲弟弟，是因为C++同样诞生在贝尔实验室。C++在C的基础上增加了数据封装，继承，多态等编程特性，同时又全部兼容了C语言，使之成为C++的一个子集。C++是一种最广泛支持范式的编程语言，比较难学，涉及到了指针的概念。指针会比较头疼。当然如果C学的不错，C++上手也会快。但C++不支持垃圾回收机制。C++语言被广泛用在操作系统，大型应用软件的开发中。</p><p><img src="03.png" alt=""></p><h3 id="C-1"><a href="#C-1" class="headerlink" title="C"></a>C</h3><p>C#是由微软公司开发出来用来抗衡Java的一款现代编程语言（具有安全，稳定，简单的特点）。它吸收了很多Java语言的优点，但微软公司为了避免法律纠纷，下意识的将其语法规则向C++看齐（C#其实就是C++++）。C#的语法简单，可以快速上手，开发效率很高，被广泛应用在了各类应用软件，游戏开发之中。</p><p><img src="04.jpg" alt=""></p><p><strong>总结：</strong></p><ol><li>C语言是完全面向过程的语言，用于开发较小规模的程序效率会很高，但是规模较大的程序，就显得代码量臃肿，编写效率就会下降。</li><li>C++是半面相对象，引入了类的封装性、继承性、多态性大大简化程序编写，提到了代码重用率。<br>C语言和C++的关系：C++既是面向过程又是面向对象，而且它还继承了C语言的所有优点，并且对C语言功能做了很多扩充，可以认为C++就是C语言的增强版。</li><li>C#是完全面向对象的语言，简单易学，开发效率非常高。<br>关于这三种语言的关系就介绍这么多，想要阅读这3本书籍的小伙伴，可以点击技术学派头像-右上角-私信我发送“C语言电子书”即可。</li></ol><p>分享 IT 技术和行业经验，请关注-技术学派。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;简单来说，C++就像是C语言的亲弟弟，而C Sharp（C#）就是他们二者的远房亲戚（其实它更像是Java的表兄弟）。&lt;/strong&gt;这三门语言都是十分优秀的编程语言，也都有很高的运行效率。这三种编程语言的应用范围很广阔，接下来技术学派就分别介绍一下三种语
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
      <category term="C" scheme="http://www.JiShuXuePai.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>6个最高效的语言处理Python库，你用过几个？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E6%8F%92%E4%BB%B6%E8%B5%84%E6%BA%90%E5%BA%93/%E6%8F%92%E4%BB%B6%E8%B5%84%E6%BA%90%E5%BA%93/6%E4%B8%AA%E6%9C%80%E9%AB%98%E6%95%88%E7%9A%84%E8%AF%AD%E8%A8%80%E5%A4%84%E7%90%86Python%E5%BA%93%EF%BC%8C%E4%BD%A0%E7%94%A8%E8%BF%87%E5%87%A0%E4%B8%AA%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/插件资源库/插件资源库/6个最高效的语言处理Python库，你用过几个？/</id>
    <published>2018-06-06T08:40:37.798Z</published>
    <updated>2018-06-06T08:56:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近一段时间Python已经成为数据科学行业中大火的编程语言，今天技术学派收集了一些较为高效的语言处理Python库。下面分享给大家。</p><img src="/blog/插件资源库/插件资源库/6个最高效的语言处理Python库，你用过几个？/01.jpg" title="Markdown 语法"><h3 id="1-NLTK"><a href="#1-NLTK" class="headerlink" title="1.NLTK"></a>1.NLTK</h3><p>NLTK是构建Python程序以处理人类语言数据的领先平台。它提供了易于使用的界面，以及用于分类、标记化、词干化、标记、分析和语义推理的一套文本处理库。用于工业强度NLP库的包装器。</p><p><img src="02.jpg" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 2.Pattern</span><br><span class="line">Pattern是Python编程语言的Web挖掘模块。它多有用于数据挖掘、自然语言处理、机器学习网络分析和`&lt;canvas&gt;`可视化。</span><br><span class="line"></span><br><span class="line">![](03.jpg)</span><br><span class="line"></span><br><span class="line">````项目地址：https://pypi.org/project/pattern3/3.0.0/</span><br></pre></td></tr></table></figure><h3 id="3-Jieba"><a href="#3-Jieba" class="headerlink" title="3.Jieba"></a>3.Jieba</h3><p>“结巴”中文分词：做最好的 Python 中文分词组件。精确模式，试图将句子最精确地切开，适合文本分析；全模式，把句子中所有的可以成词的词语都扫描出来, 速度非常快，但是不能解决歧义；搜索引擎模式，在精确模式的基础上，对长词再次切分，提高召回率，适合用于搜索引擎分词。</p><p><img src="04.jpg" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 4.TextBlob</span><br><span class="line">TextBlob是一个用于处理文本数据的Python库。它提供了一个简单的API用于常见的自然语言处理（NLP）任务，如词性标注，名词短语提取，情感分析，分类，翻译等。</span><br><span class="line"></span><br><span class="line">![](05.png)</span><br><span class="line"></span><br><span class="line">````项目地址：http://textblob.readthedocs.io/en/dev/</span><br></pre></td></tr></table></figure><h3 id="5-SnowNLP"><a href="#5-SnowNLP" class="headerlink" title="5.SnowNLP"></a>5.SnowNLP</h3><p>SnowNLP是一个python写的类库，可以方便的处理中文文本内容，是受到了TextBlob的启发而写的，由于现在大部分的自然语言处理库基本都是针对英文的，于是写了一个方便处理中文的类库，并且和TextBlob不同的是，这里没有用NLTK，所有的算法都是自己实现的，并且自带了一些训练好的字典。注意本程序都是处理的unicode编码，所以使用时请自行decode成unicode。</p><p><img src="06.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 6.TextGrocery</span><br><span class="line">TextGrocery是一个基于LibLinear和结巴分词的短文本分类工具，特点是高效易用，同时支持中文和英文语料。</span><br><span class="line"></span><br><span class="line">![](07.png)</span><br><span class="line"></span><br><span class="line">````项目地址：https://github.com/2shou/TextGrocery</span><br></pre></td></tr></table></figure><p>分享 IT 技术和行业经验，请关注-技术学派。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近一段时间Python已经成为数据科学行业中大火的编程语言，今天技术学派收集了一些较为高效的语言处理Python库。下面分享给大家。&lt;/p&gt;&lt;img src=&quot;/blog/插件资源库/插件资源库/6个最高效的语言处理Python库，你用过几个？/01.jpg&quot; title
      
    
    </summary>
    
      <category term="插件资源库" scheme="http://www.JiShuXuePai.com/categories/%E6%8F%92%E4%BB%B6%E8%B5%84%E6%BA%90%E5%BA%93/"/>
    
    
      <category term="python" scheme="http://www.JiShuXuePai.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>代码量能衡量一个程序员的编程水平吗？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E4%BB%A3%E7%A0%81%E9%87%8F%E8%83%BD%E8%A1%A1%E9%87%8F%E4%B8%80%E4%B8%AA%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E7%BC%96%E7%A8%8B%E6%B0%B4%E5%B9%B3%E5%90%97%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/代码量能衡量一个程序员的编程水平吗？/</id>
    <published>2018-06-04T01:08:08.916Z</published>
    <updated>2018-06-04T01:16:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>其实代码量与”合格”、”优秀”这样关键词根本就没有因果关系。我们不能单纯的用代码编写量去衡量一个程序员编程水平的高低。</p><h3 id="代码少不等于代码不好"><a href="#代码少不等于代码不好" class="headerlink" title="代码少不等于代码不好"></a>代码少不等于代码不好</h3><p>首先这是个很好理解的问题。</p><p>举个例子：想让代码量增多很简单，for 循环 1000 次，你改成 1000 条这样的语句，代码量瞬间多了 1000 倍。把书上的例子照抄到电脑上，这样代码量又增加了。ctrl+c 网上别人的代码，ctrl+v 到自己的工程里，卡卡两下，代码量就多了。把简单的问题搞复杂，本来 10 行代码可以实现的功能，你用 100 行去实现，这妥妥的又多了。</p><p>但这样多出来的代码有多少是真正有效的代码呢？而对应的，对于完成一个特定的功能来说，想让代码多，很容易，去减少它，却很难。</p><img src="/blog/学习答疑/学习答疑/代码量能衡量一个程序员的编程水平吗？/01.jpg" title="Markdown 语法"><h3 id="敲代码越来越少，思考的越来越多"><a href="#敲代码越来越少，思考的越来越多" class="headerlink" title="敲代码越来越少，思考的越来越多"></a>敲代码越来越少，思考的越来越多</h3><p>不可否认，我们在刚学习编程的时候、刚开始工作的时候，确实需要敲大量的代码，已提高自己的编程水平和熟练程度。这是必不可少的步骤，天天看书看视频，就算把书上的例子全部都背下来，也不能算是会编程。</p><p>但是随着工作经验的积累，<strong>我们在代码的总结、思考、优化上的时间越来越多；</strong>甚至有可能一个功能的改造，百分之九十的时间是在思考修改方案，最后只花了十分之一的时间改了几行代码就完成了功能的实现。</p><p><img src="02.jpg" alt=""></p><h3 id="工作经验-工作时间-思考和总结"><a href="#工作经验-工作时间-思考和总结" class="headerlink" title="工作经验=工作时间+思考和总结"></a>工作经验=工作时间+思考和总结</h3><p>从某种意义上说，<strong>编码大部分时候都是一个经验积累的过程</strong>，真正需要全新研究的技术或者业务实现并不太多，君不见，软件公司招聘最看重的就是开发经验，虽然别的因素也会占较大的比重，但是和经验比起来，都不是最重要的。</p><p><img src="03.jpg" alt=""></p><p>那么，和别的行业类似，经验的积累，主要还是靠编码量，写的代码多了，见识的面广了，解决问题的类型和思路也会随之开阔起来，从而让自己的编码水平从量的积累到质的飞跃。</p><p>但是，<strong>光编码量还是不够的，还要学会思考</strong>，这个比单纯累计编码量更重要，比如那重要的23种设计模式，如果没有一定的编程经验，比较难理解，但是，在编码经验的基础上，就能很快融会贯通，对经验系统的总结、分析、提炼，才是能提高自己能力的灵丹妙药。</p><p><strong>总结</strong></p><p>编码量大的不一定是优秀的程序员，但编码量少的肯定不是优秀的程序员。</p><p>分享 IT 技术和行业经验，请关注-技术学派。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;其实代码量与”合格”、”优秀”这样关键词根本就没有因果关系。我们不能单纯的用代码编写量去衡量一个程序员编程水平的高低。&lt;/p&gt;&lt;h3 id=&quot;代码少不等于代码不好&quot;&gt;&lt;a href=&quot;#代码少不等于代码不好&quot; class=&quot;headerlink&quot; title=&quot;代码少不等于
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
  </entry>
  
  <entry>
    <title>刚接触编程的小白最容易进入的误区，看看你中了几条？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%88%9A%E6%8E%A5%E8%A7%A6%E7%BC%96%E7%A8%8B%E7%9A%84%E5%B0%8F%E7%99%BD%E6%9C%80%E5%AE%B9%E6%98%93%E8%BF%9B%E5%85%A5%E7%9A%84%E8%AF%AF%E5%8C%BA%EF%BC%8C%E7%9C%8B%E7%9C%8B%E4%BD%A0%E4%B8%AD%E4%BA%86%E5%87%A0%E6%9D%A1%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/刚接触编程的小白最容易进入的误区，看看你中了几条？/</id>
    <published>2018-06-02T09:42:54.985Z</published>
    <updated>2018-06-02T09:47:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>每一个程序猿，都会经历一个过程，从一个小白慢慢进化为一名程序猿的过程。在这个过程中，我们一定会踩过无数的坑，在我们刚开始接触到编程的时候，最美妙的事物莫过于bug的出现，而bug的出现，莫过于我们语句的错误，那么，在编程中，我们最容易进入哪些误区呢？</p><img src="/blog/学习答疑/学习答疑/刚接触编程的小白最容易进入的误区，看看你中了几条？/01.jpg" title="Markdown 语法"><h3 id="1-语句问题及符号错误"><a href="#1-语句问题及符号错误" class="headerlink" title="1.语句问题及符号错误"></a>1.语句问题及符号错误</h3><p>在刚开始写代码的时候，总是因为一个简简单单的语句问题或者中英文的符号问题而定义错误，其实这个错误是很正常的，每个人刚开始写程序都会遇到，慢慢的多加练习就会好的。只要认真一些，仔细一些，这个阶段很快就会跨过去。</p><p><img src="02.jpg" alt=""></p><h3 id="2-在编程的过程中只要遇到一个问题，就会牢牢不放，不搞定这个问题，誓不罢休"><a href="#2-在编程的过程中只要遇到一个问题，就会牢牢不放，不搞定这个问题，誓不罢休" class="headerlink" title="2.在编程的过程中只要遇到一个问题，就会牢牢不放，不搞定这个问题，誓不罢休"></a>2.在编程的过程中只要遇到一个问题，就会牢牢不放，不搞定这个问题，誓不罢休</h3><p>其实作为一个初学者来说，有这么强大的学习韧劲是对的，但这也正是大多初学者最容易走的弯路，因为刚接触编程，好多东西并非可以通过短暂的查阅、研究就可以弄明白的。上来就寻根问底，会让自己变得疲惫不堪，因为初学小白开始很难具备强大的编程基础，很难把每个知识点都吃的相当透彻，这样做也会在刚开始的学习过程中浪费大量时间，并且还会对学习信心上带来很大负担，会认为编程太难学了。所以开始学习的时候，先了解基本的方向和思路，掌握一些概念或者工具如何使用，然后根据资料先把案例做出来。学习非一日之功，重在循序渐进，随着知识层次的提升，内在的东西就会慢慢掌握，知识系统也就会随之建立起来。</p><p><img src="03.jpg" alt=""></p><h3 id="3-在决定学习一门语言的时候，一直怀疑所学语言到底能不能找到工作，为此中间换了好几种语言"><a href="#3-在决定学习一门语言的时候，一直怀疑所学语言到底能不能找到工作，为此中间换了好几种语言" class="headerlink" title="3.在决定学习一门语言的时候，一直怀疑所学语言到底能不能找到工作，为此中间换了好几种语言"></a>3.在决定学习一门语言的时候，一直怀疑所学语言到底能不能找到工作，为此中间换了好几种语言</h3><p>初学者最喜欢问的一句话“我学的XX语言，到底能不能找到工作”，其实这是一个辩证问题，小编觉得任何一门编程语言只要它还活着，那么就有它存在的必要性。编程语言和语言没啥大的区别，只要学会了任何一门再去学习别的语言都会轻车熟路，简单来说，编程思想是想通的。既然已经花了很多时间在一种语言上学习，就索性学习到底，彻底了解这门语言的属性，学好一门了，也就比较容易做到触类旁通。</p><p><img src="04.jpg" alt=""></p><h3 id="4-在学习过程中可以写出大量的代码，但是排错能力非常差"><a href="#4-在学习过程中可以写出大量的代码，但是排错能力非常差" class="headerlink" title="4.在学习过程中可以写出大量的代码，但是排错能力非常差"></a>4.在学习过程中可以写出大量的代码，但是排错能力非常差</h3><p>初学者最开始的学习方法都是以模仿开始，当代码写完之后，却发现出错了，但怎么看都没问题，最后花费大量的时间才发现了一个非常弱智的问题。初学者出现这种情况是很正常的，但不要养成一个不好的习惯，一旦出现错误，就去找朋友帮助，其实大家很难有这么多的时间和耐心帮着去分析问题和排错的，因为编程语言的变化形式太多，组合方式也是层出不穷，大段的代码很难一眼就找到问题所在。这个时候就需要写代码的人具备debug调试能力，因为在工作中遇到的代码比平常练习的代码复杂程度要多太多，这种情况下很难通过看直接找到问题的根结所在，就需要通过一种手段不断的思考问题出在哪，怎么去解决。基本上能具备完善的调试能力的小伙伴，理论上能独立完成一些小项目的调试，慢慢在向真正的软件工程师迈进了。</p><p><img src="05.jpg" alt=""></p><h3 id="5-学习时看视频看的很懂，一旦关了视频，大脑一片空白"><a href="#5-学习时看视频看的很懂，一旦关了视频，大脑一片空白" class="headerlink" title="5.学习时看视频看的很懂，一旦关了视频，大脑一片空白"></a>5.学习时看视频看的很懂，一旦关了视频，大脑一片空白</h3><p>现在在线视频教程多如牛毛，学习起来比10年前只靠看书方便了太多，很多小伙伴看视频的时候对于里面代码的一些含义都能了解的很彻底，一旦脱离了视频独立写程序的时候，觉得无从下手，典型的实践操作太少，看视频学习编程这个方法没啥问题，但是需要在看的时候，把里面对应的代码在自己的编译器上都敲很多遍，视频讲的再好也只是别人咀嚼好的，看起来很美，但是需要自己在电脑上大量的实践，才能转化为自己的东西，才能纳入自己的知识体系中。</p><p><img src="06.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;每一个程序猿，都会经历一个过程，从一个小白慢慢进化为一名程序猿的过程。在这个过程中，我们一定会踩过无数的坑，在我们刚开始接触到编程的时候，最美妙的事物莫过于bug的出现，而bug的出现，莫过于我们语句的错误，那么，在编程中，我们最容易进入哪些误区呢？&lt;/p&gt;&lt;img src
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
  </entry>
  
  <entry>
    <title>初次求职的程序员该如何准备简历？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%88%9D%E6%AC%A1%E6%B1%82%E8%81%8C%E7%9A%84%E7%A8%8B%E5%BA%8F%E5%91%98%E8%AF%A5%E5%A6%82%E4%BD%95%E5%87%86%E5%A4%87%E7%AE%80%E5%8E%86%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/初次求职的程序员该如何准备简历？/</id>
    <published>2018-06-01T07:33:54.198Z</published>
    <updated>2018-06-01T07:45:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>为什么看上去差不多的技术和资历，有的人可以一个月收到二三十个offer，有的人只有寥寥几个？</p><img src="/blog/学习答疑/学习答疑/初次求职的程序员该如何准备简历？/01.jpg" title="Markdown 语法"><p>今天技术学派为大家分享一下程序员的简历该如何准备。通常HR在筛选简历时主要从公司需求出发，重点不一，不过还是有很多“通用”的套路，为了在30秒内判断出这份简历是否值得跟进，我认为程序员写简历的正确姿势是这样的：</p><h3 id="第一印象"><a href="#第一印象" class="headerlink" title="第一印象"></a>第一印象</h3><p>HR打开简历之后的第一印象很重要，就好比我们看见一个人，会有一个整体的感觉，他是时尚的、小清新的还是老油条？当有了第一印象之后再慢慢分解来看。</p><p><img src="02.jpg" alt=""></p><p>首先我们的简历风格上要简洁明了，逻辑结构清晰。字体的排版，顺畅、清晰整齐就好。最好是PDF格式，兼容性强且不易乱序。如果可以Markdown格式更好了。</p><p><strong>禁忌：</strong></p><ul><li>设计的过于浮夸或者过于简单的。写了十几页，半天都打不开或者加载了半天，打开还乱码。</li><li>简历弄的五颜六色、非常酷炫，却半天找不到联系方式，或是只有个人基本信息和公司名称。</li></ul><h3 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h3><p>基本信息要全：姓名、性别、电话、微信（以防有时候电话打不通哦，时不时会遇到这种情况）、毕业院校、邮箱</p><p><strong>禁忌：</strong></p><ul><li>大部分的基本信息没有写。</li><li>只写了一个Github链接，极致简洁的几句描述，需要通过你的链接来找你的联系方式。</li></ul><h3 id="工作经历-amp-项目经历"><a href="#工作经历-amp-项目经历" class="headerlink" title="工作经历&amp;项目经历"></a>工作经历&amp;项目经历</h3><ul><li><p>效力过哪些公司，在公司的职位</p></li><li><p>擅长的技术语言，应用了哪些技术栈，（Java, PHP，JavaScript, React, Vue, Python…）</p></li><li><p>经历的项目复杂度，及在项目中承担什么样的角色</p></li><li><p>时间节点（尽量不要有空档期）</p></li></ul><p><img src="03.jpg" alt=""></p><p><strong>列子1：</strong></p><p>北京XXX公司 Java工程师 — 2015.2月-2018.5月</p><p>1.MOGU推荐架构数据与缓存层设计开发</p><ul><li>MOGU是一款时尚资讯app,负责推荐页面资讯feed流的展示及用户历史的展示</li><li>负责数据层,处理前端逻辑整个开发工作,分布式rpc服务搭建</li><li>负责进行压测监测、缓存处理,对接又进行改进优化,主用redis缓存</li></ul><p>2.基于Java的电商爬虫开发</p><ul><li>使用java搭建爬虫server平台,进行配置和开发,进行网页改版监测功能开发</li><li>爬取淘宝时尚品牌与其他电商网站商品品牌与详情等</li><li>通过频率、ip池、匿名代理等应对一些网站的反爬</li></ul><p>3.同图搜索Solr服务开发</p><ul><li>基于算法组的同图策略,使用solr做java接又实现rpc服务搭建,进行索引构建和solr实现</li></ul><p><strong>列子2：</strong></p><p>XX公司（全栈工程师）2013.06 — 至今</p><ul><li>参与需求分析及实现方案设计。</li><li>设计数据库表结构，实现后台功能及web页面展示。</li><li>产品线上部署及运维。</li></ul><p>ay 配置管理工程师 2010.03 — 2013.03</p><ul><li><p>负责公司产品性能测试，及线上数据分析</p></li><li><p>负责公司配置管理，环境维护等工作</p></li></ul><p><strong>总结：大家会发现在例子2中，完全看不出来他工作的具体内容，没有逻辑性，甚至不知道他做的什么技术语言。</strong></p><h3 id="工作期望-amp-个人评价"><a href="#工作期望-amp-个人评价" class="headerlink" title="工作期望&amp;个人评价"></a>工作期望&amp;个人评价</h3><p>如果写了个人评价一定要对自己有一个全方位的一个描述总结，让别人更好的解读你。或者在此处，你的优点特长有哪些。即使不写个人评价，也一定记得写上工作期望。</p><p>下面给大家举2个例子大家看一下哪个好？</p><p><strong>例子1：</strong></p><ul><li>为人性格,诚实谦虚，勤奋，能吃苦耐劳，有耐心，有团队意识，能和同学和谐相处，能虚心接受别人的建议的人。</li><li>责任心强，善于沟通，具有良好的团队合作精神；专业扎实，具有较强的钻研精神和学习能力；性格比较乐观外向，喜欢打羽毛球。</li></ul><p><strong>例子2:</strong></p><p>极客、热爱技术、热爱开源</p><ul><li>Ruby on Rails：精通</li><li>Agile/Lean：精通</li><li>ReactJS：掌握</li><li>Docker：掌握</li><li>AWS：掌握</li></ul><p>大家感觉哪个看起来更直观一些呢。虽然第一个例子写的很多，但完全看不出个性特点，写和没写没区别并不大。</p><h3 id="是否有博客，个人技术栈点等"><a href="#是否有博客，个人技术栈点等" class="headerlink" title="是否有博客，个人技术栈点等"></a>是否有博客，个人技术栈点等</h3><ol><li>看到有这项的HR两眼已经放光了，加分项，说明你真正的热爱技术，善于学习总结，乐于分享，且有投入自己的业余时间到软件事业中。</li><li>我喜欢的社区: 图灵社区，知乎，博客园，Stack Over flow，Google Developer Group等；</li><li>我的博客链接、个人作品链接如下:<ul><li><a href="https://github.com/github" target="_blank" rel="noopener">https://github.com/github</a></li><li><a href="http://www.oschina.net/" target="_blank" rel="noopener">http://www.oschina.net/</a></li><li><a href="https://www.cnblogs.com/" target="_blank" rel="noopener">https://www.cnblogs.com/</a></li></ul></li></ol><p><strong>总结</strong></p><ul><li>明白了简历上基本的原则，在写简历的时候切记，所有内容都指向一件事：我可以胜任这个职位。怎么能证明自己的胜任能力，怎么来。</li><li>可以多看几家公司的招聘要求，比较找到共性之处，就是你简历必须有的内容！不要想着自己有什么，要知道人家要什么，尽量往需求上靠！</li><li>个人评价中，不要写套话，要突出自己的与众不同之处，或者至少表达自己对这个职位或互联网行业的热爱。</li></ul><p><strong>想了解更多编程内容，请关注技术学派。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;为什么看上去差不多的技术和资历，有的人可以一个月收到二三十个offer，有的人只有寥寥几个？&lt;/p&gt;&lt;img src=&quot;/blog/学习答疑/学习答疑/初次求职的程序员该如何准备简历？/01.jpg&quot; title=&quot;Markdown 语法&quot;&gt;&lt;p&gt;今天技术学派为大家分享一下
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
  </entry>
  
  <entry>
    <title>机器学习和人工智能的区别你真的知道嘛？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%92%8C%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9A%84%E5%8C%BA%E5%88%AB%E4%BD%A0%E7%9C%9F%E7%9A%84%E7%9F%A5%E9%81%93%E5%98%9B%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/机器学习和人工智能的区别你真的知道嘛？/</id>
    <published>2018-06-01T05:43:06.839Z</published>
    <updated>2018-06-01T06:00:35.162Z</updated>
    
    <content type="html"><![CDATA[<p>大家现在经常会听到别人提起人工智能、机器学习和深度学习。怎样才可以正确的使用这些词呢？他们的区别是什么呢？</p><p>机器学习算法是人工智能背后的推动力量，所有机器学习算法中最关键的是深度学习。</p><p><strong>简单来说，人工智能、机器学习和深度学习都是属于一个领域的一个子集。但是人工智能是机器学习的首要范畴，机器学习是深度学习的首要范畴。</strong></p><img src="/blog/学习答疑/学习答疑/机器学习和人工智能的区别你真的知道嘛？/01.jpg" title="Markdown 语法"><h3 id="人工智能"><a href="#人工智能" class="headerlink" title="人工智能"></a>人工智能</h3><p>人工智能是研究让计算机来模拟人的思维过程和智能行为（比如：学习、推理、思考、规划等）的学科，主要包括计算机实现智能的原理、制造类似于人脑智能的计算机，使计算机能实现更高层次的应用。人工智能将涉及到计算机科学、心理学、哲学等学科。可以说几乎是自然科学和社会科学的所有学科。从思维观点上看，人工智能不仅限于逻辑思维，要考虑形象思维和灵感思维才能促进人工智能的突破性的发展。数学常被认为是多种学科的基础科学，数学也进入语言、思维领域，人工智能学科也必须借用数学工具，数学不仅在标准逻辑、模糊数学等范围发挥作用，数学进入人工智能学科，它们将互相促进而更快地发展。</p><p><img src="02.jpg" alt=""></p><p>机器学习和人工智能的区别你真的知道嘛？</p><p><strong>人工智能的领域：</strong></p><ul><li>机器学习：人工智能的领域，使计算机不用明确编程就可以学习。</li><li>搜索及优化：算法，如梯度下降迭代搜索局部最大值或最小值。</li><li>逻辑推理：人工智能中逻辑推理的例子是模拟人类专家决策能力的专家计算机系统。</li><li>概率推理：将概率论的能力去处理不确定性和演绎逻辑的能力来利用形式论证的结构结合起来。其结果是一个更丰富和更具表现力的形式主义与更广泛应用领域。</li><li>控制理论：一种正式的方法来找到具有可证性的控制器。这通常涉及描述像机器人或飞机这样的物理系统的微分方程组。</li></ul><p><strong>人工智能的目标：</strong></p><ul><li>逻辑推理：让计算机能够完成人类能够完成的复杂心理任务。例如下棋和数学问题。</li><li>知识表达：使计算机能够清楚的描述对象、人员和语言。</li><li>规划和导航：使计算机从A点到B点。例如，第一台自动驾驶机器人建于20世纪60年代初。</li><li>自然语言处理：使计算机能够理解和处理语言。例如把英语翻译中文，或者把中文翻译成英语。</li><li>感知：让电脑通过视觉、听觉、触觉和嗅觉与世界交流。</li></ul><h3 id="机器学习"><a href="#机器学习" class="headerlink" title="机器学习"></a>机器学习</h3><p>机器学习是一门多领域交叉学科。专门研究计算机怎样模拟或实现人类的学习行为，以获取新的知识或技能，重新组织已有的知识结构使之不断改善自身的性能。</p><p>它是人工智能的核心，是使计算机具有智能的根本途径，其应用遍及人工智能的各个领域，它主要使用归纳、综合而不是演绎。</p><p><strong>当我们谈论机器学习时，值得一提的是机器学习算法：神经网络。</strong></p><p>神经网络是机器学习算法的关键部分。神经网络是教计算机以人类的方式思考和理解世界的关键。实质上，神经网络是模拟人类的大脑。这被抽象为由加权边缘（突触）连接的节点（神经元）的图形。</p><p>这个神经网络有一层，三个输入和一个输出。任何神经网络都可以有任何数量的层，输入或输出。</p><p><img src="03.jpg" alt=""></p><h3 id="深度学习"><a href="#深度学习" class="headerlink" title="深度学习"></a>深度学习</h3><p>深度学习是所有机器学习算法中的核心关键。深度学习是采用神经网络，用于解决线性不可分的问题。</p><p>深度学习的概念源于人工神经网络的研究。含多隐层的多层感知器就是一种深度学习结构。深度学习通过组合低层特征形成更加抽象的高层表示属性类别或特征，以发现数据的分布式特征表示。</p><p>这个神经网络有两层，三个输入和一个输出。任何神经网络都可以有任何数量的层，输入或输出。输入神经元和最后一层输出神经元之间的层是深层神经网络的隐藏层。</p><p><img src="04.jpg" alt=""></p><p><strong>总结：机器学习是人工智能的前沿，深度学习是机器学习的前沿。</strong><br><strong>想了解更多编程内容，请关注技术学派。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;大家现在经常会听到别人提起人工智能、机器学习和深度学习。怎样才可以正确的使用这些词呢？他们的区别是什么呢？&lt;/p&gt;&lt;p&gt;机器学习算法是人工智能背后的推动力量，所有机器学习算法中最关键的是深度学习。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;简单来说，人工智能、机器学习和深度学习都是属于一
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
  </entry>
  
  <entry>
    <title>儿童节到了，聊聊你会让孩子去学习编程么？</title>
    <link href="http://www.JiShuXuePai.com/blog/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/%E5%84%BF%E7%AB%A5%E8%8A%82%E5%88%B0%E4%BA%86%EF%BC%8C%E8%81%8A%E8%81%8A%E4%BD%A0%E4%BC%9A%E8%AE%A9%E5%AD%A9%E5%AD%90%E5%8E%BB%E5%AD%A6%E4%B9%A0%E7%BC%96%E7%A8%8B%E4%B9%88%EF%BC%9F/"/>
    <id>http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/儿童节到了，聊聊你会让孩子去学习编程么？/</id>
    <published>2018-06-01T04:00:09.146Z</published>
    <updated>2018-06-01T05:41:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>儿童节到了，小朋友们都欢天喜地的拿着父母送给自己喜欢的礼物嬉闹着。今天小编在上班的路上看到了一队队参加儿童节活动的小朋友们，看到每个孩子脸上洋溢着幸福的表情，小编心情也很高兴，今天一定是开心的一天。</p><p>作为一名程序员，作为父母，希望大家今天可以放下手头的工作，按时回家陪陪孩子。也许你会说工作确实太忙，最近项目要上线，但小编觉得今天是非常有意义的一天。大家还是准时下班和老婆孩子一起吃个家庭饭才是王道。</p><img src="/blog/学习答疑/学习答疑/儿童节到了，聊聊你会让孩子去学习编程么？/01.jpg" title="Markdown 语法"><h3 id="你会让孩子去学习编程么？"><a href="#你会让孩子去学习编程么？" class="headerlink" title="你会让孩子去学习编程么？"></a>你会让孩子去学习编程么？</h3><p><strong>接下来小编想问问大家，聊一聊将要为人父母的你，是否会让孩子去学习编程呢？</strong></p><p>在欧美，现在将编程视为学校常规教育的一部分，似乎一夜之间，编程就成为了儿童教育中重要的一环。而国内各种编程教学班也遍地开花。那么孩子真有必要去学习编程么？</p><p>其实小编觉得对于大部分孩子来说，编程并不是“必须”的学习课程。对孩子的成长来说，能够称得上必须要的教育，也就是数学、语言、逻辑和体育了。数学是所有理科的基础，语言是所有文科的基础，逻辑是思维的基础，体育是身体的基础。但编程却是一种不错的兴趣选项，可以帮助孩子掌握一些应用更广泛的基础技能。</p><h3 id="学习编程-≠-培养程序员"><a href="#学习编程-≠-培养程序员" class="headerlink" title="学习编程 ≠ 培养程序员"></a>学习编程 ≠ 培养程序员</h3><p><img src="02.jpg" alt=""></p><p>可能大家会习惯性地认为学习编程只是为了从事程序员的工作。不是的，其实编程本身并不是必要的。但编程确实是一种不错的选修课，可以让孩子掌握一些编程基础技能也是好的。</p><p>小编曾经和一个同事的姐姐聊天，她是一位小学老师，我曾问过她：“什么样的教育才能帮助到孩子未来的职业规划？”她的回答是：<strong>“培养广泛的兴趣，以及那些最基础的能力，这样孩子在未来才有更多的选择空间，才可能适应我们无法预测的未来社会职业分工的变化。”</strong></p><p>其实学习编程也是如此。它并不是把孩子的未来职业发展定向到程序员上，我们要做的是不要缩窄孩子的未来可能性，相反的，通过这种培养尽量扩张孩子未来的选择权。学习编程的意义可以培养孩子一方面在于了解互联网时代的思维逻辑和生存方式，更主要的，还可以培养一些他未来无论做什么工作，都会有帮助的能力。</p><p><strong>1.抽象思维</strong></p><p>其实编程的过程对于孩子来说是非常新奇的，对他们来说，这是他们第一次接触“抽象思维”的过程。</p><p>“抽象思维”经常被当做理工科的特点，因为相对于其他工作，理工科的学习和工作需要大量的“抽象”过程，也就是将具体形象的实物，转变为抽象的模型。这样无论孩子以后做什么职业，这种抽象思维的能力都会起到很大的帮助。</p><p><strong>2.工程能力</strong></p><p>编程还可以让孩子学习如何掌握工程能力，简单的说，就是学会如何做一个小项目经理。</p><p>编程本身虽然是一种技术，但学习编程所要做的，是完成不同的项目工程。比如我们想要把一个球扔进球框里，现实生活中这只是一个下意识的动作，但如果要靠编程来实现的话，就必须选择合适的工具：语句或者控件，不断地去修改参数，调试试错，最终实现目标。这和做一个专业的火山模型科学项目没有什么差别。</p><p><strong>最后在这里，小编祝所有程序员的宝宝们“儿童节快乐！”</strong></p><p><strong>欢迎大家提出不同的观点和看法，我们共同讨论，共同学习。</strong></p><p><strong>分享 IT 技术和行业经验，请关注技术学派。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;儿童节到了，小朋友们都欢天喜地的拿着父母送给自己喜欢的礼物嬉闹着。今天小编在上班的路上看到了一队队参加儿童节活动的小朋友们，看到每个孩子脸上洋溢着幸福的表情，小编心情也很高兴，今天一定是开心的一天。&lt;/p&gt;&lt;p&gt;作为一名程序员，作为父母，希望大家今天可以放下手头的工作，按时
      
    
    </summary>
    
      <category term="学习答疑" scheme="http://www.JiShuXuePai.com/categories/%E5%AD%A6%E4%B9%A0%E7%AD%94%E7%96%91/"/>
    
    
  </entry>
  
</feed>
