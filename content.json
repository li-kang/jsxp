{"meta":{"title":"技术学派","subtitle":"学习，因为我们有梦想。","description":"一个导师只带7位学员，我们是高端IT教育私塾！","author":"技术学派","url":"http://www.JiShuXuePai.com"},"pages":[{"title":"","date":"2018-05-11T08:14:14.249Z","updated":"2018-05-11T08:14:14.249Z","comments":true,"path":"about.html","permalink":"http://www.JiShuXuePai.com/about.html","excerpt":"","text":"关于我们我们是火星时代 Web 技术小组，本网站用于内部和学员分享课堂同步资料。"},{"title":"","date":"2018-05-11T08:14:14.495Z","updated":"2018-05-11T08:14:14.495Z","comments":true,"path":"index.html","permalink":"http://www.JiShuXuePai.com/index.html","excerpt":"","text":""},{"title":"网址导航","date":"2018-05-11T08:14:14.496Z","updated":"2018-05-11T08:14:14.496Z","comments":true,"path":"nav.html","permalink":"http://www.JiShuXuePai.com/nav.html","excerpt":"","text":""},{"title":"","date":"2018-05-11T08:14:19.591Z","updated":"2018-05-11T08:14:19.591Z","comments":true,"path":"tips.html","permalink":"http://www.JiShuXuePai.com/tips.html","excerpt":"","text":"初学者常见问题英语不好是否会影响学编程？一个程序员的编程水平，和他的英语水平没有必然联系。编程语言本身用到的英文并不多。英语水平好，只会在让你在查阅外文资料和书籍时事半功倍，但当你真正去编程时，你脑子里流动的是编程思想和流程，而不是不是英文。需不需要买一本课外参考书？看个人的学习习惯而定。建议可以买一本，并不是要把书内所有内容都看一遍，而是在遇到问题的时候，当做工具书来用，这样当出现问题在看书的时候会印象更加深刻。老师讲的时候我都能听懂，但自己写就写不出来了，怎么办对于一个刚刚接触到编程的同学来说都要经历3个阶段： 1.老师讲的能听懂。 2. 老师告诉你算法和思路，可以把代码写出来。 3.自己能够思考算法，把代码写出来。目前绝大数同学都处于第一个阶段。也是一个必须要经历的阶段。那怎样可以快速过渡到第二阶段呢？学习建议:1.先把案例从头看一遍，确定案例代码都能看懂、理解。2.自己尝试写一遍案例，过程中肯定会有忘记或者不会写的时候，这个时候可以再回过头看一下案例代码，在接着做。3.多做几遍，直到可以不看源代码可以自己独立写出来案例。这样在遇到类似的案例就会慢慢培养出思路来了。编程难不难？怎样入门？一种编程语言为了能写出各种各样的程序，就要保证编程语法的原子性，每个语句只是完成一个非常简单的工作，只有这样才能保证灵活性。所以学习编程语言非常简单，但灵活运行他们比较难。学编程通常要从学习编程语言开始，学编程通常要从学习编程语言开始，而编程语言的学习往往比较抽象，而且逻辑性强。所以学编程往往是先难后易，这点和别的专业不一样，也加大了学习的难度。所以说大家如果想要学习一门编程语言，建议先从Web前端入手。Web前端技术相对于没有编程基础的人来说，是最好入门的。等掌握好前端技术之后，在去学习别的编程语言会轻车熟路。常见的错误学习方法1.光看不练。总是看回放，看笔记，却不动手敲代码。2.凭印象还原老师的代码，而没有自己的思考过程。在写代码时，一定要知道自己现在在做什么。3.上来就开始写代码。程序员核心的工作在于编程前的思考，而写代码只是“看得见”的那部分工作，“看不见”的那部分 思考工作更重要。学习建议1.先掌握语法，再学会将想法转化为代码，最后再去考虑数据结构与算法等解决方案。​ a.初期先通过大量的练习和复习保证语法不写错。​ b.然后练习将老师告诉你的算法用代码去实现。在这个阶段不用考虑人家是怎么想到的，只考虑怎么用代码去实现。​ c.最后一个阶段才是体会老师是怎么去分析问题的，怎么去将一个复杂的问题分解成一个个简单的问题，怎么去将想法转化成代码。2.关注数据而非表现。3.同一时间只考虑一个问题。"},{"title":"","date":"2018-05-11T08:14:14.490Z","updated":"2018-05-11T08:14:14.490Z","comments":true,"path":"edu/index.html","permalink":"http://www.JiShuXuePai.com/edu/index.html","excerpt":"","text":"技术学派 - 一个导师只带7位学员，我们是高端IT教育私塾！首页课程体系导师制教学模式个性化培养师资学习氛围就业常见问题学习资料颠覆传统IT培训模式一个导师只带7位学员，我们是高端IT教育私塾！In the unified thought, the goals in enterprise intelligence networkHigh end private school 优惠信息个性化定制课程0基础也学的会0元入学拿了工资再交学费免费试学2周企业定向就业不就业全额退费了解更多你是否厌倦了传统的培训方式？这是我，不能被老师叫出名字的我这是我，从来不敢举手提问的我学不会，跟不上，没有存在感，这都是我导师制培养，一位导师只带7位学员传统培训不注重交流，重点在于传授理论知识，而导师教学适合培养实践能力。计算机是一门实践性很强的技术，就像教游泳、教开车一样，一个老师很难带着一大群人实践。我们使用大学研究生阶段的导师制，着重培养学员实践能力。颠覆传统IT培训模式项目其他IT培训机构导师模式班级人数一个班大约30 ~ 120人一个导师只带7位学员老师授课模式侧重传授理论知识侧重培养运用和项目实战能力学员学习模式学生以听课、练习为主，与老师和学员互动较少。注重团队间协作和讨论，与老师和同学间的互动频繁。辅导班级人数较多，只有主动提问才会辅导。导师每次课都会主动辅导每位学员学习目标系统学习理论知识，但学的过程中并不知道这个知识有什么用。每天都会将所学的知识直接运用在项目中了解更多针对每位学员个性化的培养方案其他IT培训机构教学课程内容固定，并不适合每一个学员，导师教学可以根据每个学员的实际情况，定制一套适合自己的课程。我们提供了5大专业方向，120+项技术，覆盖了所有主流 IT 技术领域，并根据每位学员的兴趣和目标，定制一套适合自己的学习计划。Web 前端工程师PHP 后端工程师Python 开发工程师人工智能工程师大数据工程师项目其他IT培训机构导师模式课程体系所有学员使用同一套课程体系。根据每位学员的兴趣和目标定制一套适合自己的课程体系。课程内容学习单一的技术，只能开发项目中的一个模块，不能开发完整的项目。提供完整的技术全栈，让学员可以独立开发项目。这样就可以担任企业的高级职务 项目经理或者技术总监，把控项目全局。学习时长2.5~6个月根据学习基础和目标定制，1对1辅导，学习效率比其他IT培训机构快得多。兼顾人群课程进度和难度照顾班级大多数学员。课程进度和难度照顾每一位学员。授课进度根据老师的课程安排全班使用统一的授课进度。针对每位学员的情况制定不个性化的授课进度。学习计划学员自己制定复习、预习和总结的学习计划。导师每天会系统的针对每一个学员的掌握情况，帮助学员复习、预习和总结知识点，并布置下一步学习任务。了解更多每位学员会有三类技术老师导师导师将全程陪伴学员成长，每次课后帮助学员顺利完成技术任务，解决所有学习过程中遇到的问题，并给出学习建议。专业课老师专业课老师有丰富的教学经验，帮同学分解、总结、运用每一个知识点，并整理分享学习笔记。行业大咖行业大咖是工作在行业一线的技术大牛，我们所有的项目课均由行业一线大咖授课，将真实项目带到课堂。项目其他IT培训机构导师模式老师配备每班配备1位技术老师，其他老师并不懂技术。每班配备3位技术老师，一位导师、一位专业课老师、一位行业技术大牛。项目来源传统讲师长期专职讲课，会脱离开发一线，项目经验欠佳。由工作在一线的行业的大咖，将真实项目带到课堂。学习指导每个班配1位指导老师，只有提问老师才会帮忙解答。导师每次课后都会指导每位学员，全程陪伴学员成长。专业性负责管理学员的班主任和负责就业的就业老师都是不懂技术的。学员身边的每位老师都是技术高手。了解更多更适合交流的学习环境导师模式下，更便于学员和老师间的交流和协作。学员将感受一种完全不同于传统模式的学习体验。了解更多项目其他IT培训机构导师模式交流与互动学生以听课、练习为主，与老师和学员互动较少。以项目实战为主，注重团队间协作和讨论，与老师和同学间的互动频繁。不就业全额退学费入学签定就业合同，没有任何隐性条款，只要不就业全额退还学费。IT行业薪资高就业范围程序员的薪资会随工作经验的提升大幅度提升，数据来源为职友集。项目其他IT培训机构导师模式就业保障传统培训机构所签的就业合同暗藏很多隐性条款，即使学员不就业也可以把责任推脱干净。我们的就业保障无任何附加条件，只要不就业就退学费。长期发展只教工作中用得着的基本技能，缺少理论基础和行业见识，这使得他们培养的学员能更快的工作，却很难成为一名高级程序员。提供更多的计算机底层课程，提升技术运用能力、团队协作能力、全栈开发能力，提供前沿视野。我们关注学员的长期发展，而非只是毕业薪资。就业推荐就业老师对技术并不精通，只是提供网上现成的就业信息。我们的项目老师，都是企业技术骨干和人才面试官，可以提供就业技术指导，并将学员内推进入公司。毕业作品班里所有学生毕业作品都和老师教的雷同。每个学员会有几套不同类型的企业级项目证明实力。了解更多导师所带名学员名额有限，报名从速，手慢无。 常见问题问：个性化的导师教学模式为什么比传统大班教学好？答：个性化的导师教学模式与传统大班教学是有本质区别的。传统的大班教学方式很难做到和每位学员充分沟通，所以老师都是以传授基础知识为主，学员们以倾听和独立练习为主； 而导师教学模式可以照顾到每位学员，大家学习时可以充分的讨论和协作，老师也可以细致的辅导每位学员完成更复杂的企业级项目。问：零基础能学么？答：我们是个性化教学，课程设计上可完全可以做到针对0基础的课程设计，并且有导师全程指导和调整学习进度。问：能保证就业吗?我们是按照企业的需求定制化培养人才，企业会提前给我们提供就业岗位，所以能保证就业。入学时会签定无任何限制条件的就业协议，如果毕业后没有就业的话，我们会全额退还学费。关于我们公司简介联系我们校区攻略校区环境住宿攻略来校路线课程培训Web前端Python人工智能大数据常见问答学费学时学习方法176-0025-8815北京市海淀区杏石口路81号火星时代大厦 官方微信Copyright 2018 北京康泽伟业科技发展有限公司 京ICP备15015508号-3$(function(){console.log(1);var o=document.getElementById(\"mobile_nav\"),e=document.getElementById(\"list\"),n=document.getElementById(\"clos\");$(\".mode3 h2\").offset().top;function l(o,e,n){$(\".\"+o).offset().top-$(window).scrollTop()"},{"title":"","date":"2018-05-11T08:14:14.495Z","updated":"2018-05-11T08:14:14.495Z","comments":true,"path":"edu/python.html","permalink":"http://www.JiShuXuePai.com/edu/python.html","excerpt":"","text":"人工智能+Python全栈课程体系首页人工智能+Python全栈课程体系就业岗位方向课程大纲01人工智能+Python全栈课程体系第1阶段Python编程语言与算法此为编程入门技能第2阶段Python高级应用精通此技能就业薪资可达5000 ~ 8000元第3阶段Web前端开发精通此技能就业薪资可达6000 ~ 12000元第4阶段全栈后端精通此技能就业薪资可达8000 ~ 16000元第5阶段数据库精通此技能就业薪资可达8000 ~ 16000元第6阶段网络爬虫与搜索引擎精通此技能就业薪资可达9000 ~ 18000元第7阶段大数据分析精通此技能就业薪资可达12000 ~ 22000元第8阶段人工智能精通此技能就业薪资可达16000 ~ 30000元02就业岗位方向我们偏重Python全栈开发方向Python 算法工程师Web前端工程师Python后端工程师数据库管理员爬虫开发工程师数据分析工程师大数据开发工程师人工智能工程师Linux自动化工程师其他机构偏重Python运维方向Python运维工程师03课程大纲01第一阶段：Python编程语言与算法1. Python基础语法 2. 在程序中表示事物 3. 在程序中操作事物 4. 给程序添加逻辑 5. 模块化开发6. 面向过程编程思想 7. 面向对象编程思想 8. 常用算法实现 9. 异常处理 10. 2048算法类游戏02第二阶段：Python高级应用1. Python 多平台迁移 2. Python 常用第三方库 3. 文件处理与持久化 4. 数据库编程 5. 多线程编程6. 网络编程 7. 系统编程 8. 聊天服务器开发 9. 线性代数基础03第三阶段：Web前端开发1. HTML5 网页开发 2. CSS3 样式表 3. 盒模型、浮动、定位 4. 伸缩布局/变形/过渡/动画 5. JavaScript编程语言6. DOM 与 BOM 操作 7. jQuery前端框架 8. 企业级网站开发 9. 高级动画与交互 10. 个性个人站制作04第四阶段：全栈后端1. Linux 服务器配置 2. Python Flask 开发 3. Python Django 开发 4. RESTful 接口开发 5. 中间件开发6. 测试驱动开发与自动化 7. 网站部署与管理 8. 企业级数据化项目开发05第五阶段：数据库1. 数据原理 2. 数据持久化方案 3. Mysql 数据库 4. MongoDB 数据库 5. Redis 数据库06第六阶段：网络爬虫与搜索引擎1. 爬虫的工作原理和设计思想 2. 反爬虫机制 3. 分布式数据采集 4. 定向抓取互联网中指定的信息 5. 制定爬虫采集系统6. 北京房价数据爬取和分析 7. 多平台商品信息爬取和比价07第七阶段：大数据分析1. 数据探索 2. 数据处理 3. 数据统计方法 4. 数据挖掘与建模 5. 模型评价与分析6. 数据可视化 7. Hadoop-Spark大数据分析 8. 金融数据量化分析 9. 水色图像水质评价 10. 北京房价预测08第八阶段：人工智能1. 机器学习sklearn 2. 逻辑回归 3. 决策树 4. 朴素贝叶斯 5. 支持向量机 6. K-means算法7. TensorFlow 框架 8. CNN-人脸识别与图片分类 9. RNN-语言建模 10. 猫狗大战 11. 风格迁移 12. 机器写小说关于我们公司简介联系我们校区攻略校区环境住宿攻略来校路线课程培训Web前端Python人工智能大数据常见问答学费学时学习方法176-0025-8815北京市海淀区杏石口路81号火星时代大厦 官方微信Copyright 2018 北京康泽伟业科技发展有限公司 京ICP备15015508号-3"},{"title":"","date":"2018-05-11T08:14:14.418Z","updated":"2018-05-11T08:14:14.418Z","comments":true,"path":"edu/css/python.css","permalink":"http://www.JiShuXuePai.com/edu/css/python.css","excerpt":"","text":"*{margin:0;padding:0}ul{list-style:none}img,input{border:none}a{text-decoration:none;outline:0}body{font:16px/1.5 \"Microsoft YaHei\",\"Heiti SC\",tahoma,arial,\"Hiragino Sans GB\",\"\\\\5B8B体\",sans-serif;transition:all .3s}.container{width:1000px;margin:auto}.title{background:#866371;display:inline-block;color:#fff;font-size:32px;padding-right:20px;line-height:100px;margin-top:20px}.title strong{font-size:88px;border-right:1px solid #fff;padding:0 12px;margin:20px 22px 0 0;height:66px;float:left;line-height:66px}table{width:100%;margin-top:20px;border:2px dotted #807775;border-collapse:collapse}td,tr{border:2px dotted #807775;line-height:60px}table span{color:#866371;font-weight:700;font-size:26px;padding:0 5px}td{padding-left:20px}.pic{text-align:center}.pic img{width:100%}.time{margin-top:20px;border-left:1px solid #d7d3d2;margin-left:30px}.job{margin:20px 0 20px 30px}.time .one{position:relative;margin-top:30px}.time .number{width:54px;height:54px;background:#349b6f;border-radius:50%;text-align:center;line-height:54px;color:#fff;font-size:26px;font-weight:700;position:absolute;left:-27px;top:0}.time .number:before{content:'';width:10px;height:10px;background:#349b6f;border-radius:50%;position:absolute;top:80px;left:22px}.time h3{line-height:50px;color:#349b6f;padding-left:50px;font-size:30px;padding-bottom:15px}.job ul,.time ul{background:#349b6f;margin-left:20px;overflow:hidden;padding:20px;border-radius:10px}.job li,.time li{font-size:16px;color:#fff;float:left;width:50%}.job span,.time span{display:block;line-height:40px}header{height:240px;background:url(../images/bg_01.jpg) no-repeat top center;background-size:cover;position:relative}.inner{width:1200px;margin:0 auto}header .logo{padding-top:37px;width:200px;height:66px;float:left}header .logo img{width:100%;height:100%}header nav{float:right;padding-top:50px}header li{float:left;line-height:39px;height:39px;margin-left:36px}header li a{font-size:16px;color:#fff;display:block;transition:all .1s}header li .active{color:#38b7ea;border-bottom:5px solid #38b7ea}header li a:hover{color:#38b7ea;border-bottom:5px solid #38b7ea}header .mobile_nav{width:43px;height:30px;cursor:pointer;display:none}header .mobile_nav img{width:100%;height:100%}@-webkit-keyframes rh3{from{top:-1100px}to{top:118px}}@-ms-keyframes rh3{from{top:-1100px}to{top:118px}}@keyframes rh3{from{top:-1100px}to{top:118px}}@-webkit-keyframes rp1{from{top:-800px}to{top:223px}}@-ms-keyframes rp1{from{top:-800px}to{top:223px}}@keyframes rp1{from{top:-800px}to{top:223px}}@-webkit-keyframes rp2{from{top:-500px}to{top:283px}}@-ms-keyframes rp2{from{top:-500px}to{top:283px}}@keyframes rp2{from{top:-500px}to{top:283px}}@-webkit-keyframes con{from{-webkit-transform:translate(-50%,-50%) scale(0);-ms-transform:translate(-50%,-50%) scale(0);transform:translate(-50%,-50%) scale(0);opacity:0}to{-webkit-transform:translate(-50%,-50%) scale(1);-ms-transform:translate(-50%,-50%) scale(1);transform:translate(-50%,-50%) scale(1);opacity:1}}@-ms-keyframes con{from{-webkit-transform:translate(-50%,-50%) scale(0);-ms-transform:translate(-50%,-50%) scale(0);transform:translate(-50%,-50%) scale(0);opacity:0}to{-webkit-transform:translate(-50%,-50%) scale(1);-ms-transform:translate(-50%,-50%) scale(1);transform:translate(-50%,-50%) scale(1);opacity:1}}@keyframes con{from{-webkit-transform:translate(-50%,-50%) scale(0);-ms-transform:translate(-50%,-50%) scale(0);transform:translate(-50%,-50%) scale(0);opacity:0}to{-webkit-transform:translate(-50%,-50%) scale(1);-ms-transform:translate(-50%,-50%) scale(1);transform:translate(-50%,-50%) scale(1);opacity:1}}@keyframes scale{from{font-size:15px}to{font-size:36px}}.scale{animation:scale 1s}header .con{width:532px;height:236px;box-sizing:border-box;overflow:hidden;border-bottom:1px solid #fff;position:absolute;left:50%;top:365px;-webkit-animation:con ease-in-out .5s .9s;-ms-animation:con ease-in-out .5s .9s;animation:con ease-in-out .5s .9s;opacity:0;-webkit-animation-fill-mode:forwards;-ms-animation-fill-mode:forwards;animation-fill-mode:forwards}header .con:before{content:'';display:block;background:url(../images/bg_01.jpg) no-repeat center -40px;background-size:cover;-webkit-filter:blur(10px);-moz-filter:blur(10px);-ms-filter:blur(10px);-o-filter:blur(10px);filter:blur(10px);position:absolute;top:0;left:0;right:0;bottom:0;margin:-190px}header .con span:nth-of-type(1):after,header .con span:nth-of-type(1):before{content:'';width:166px;height:1px;background:#fff;position:absolute;top:0;left:0}header .con span:nth-of-type(1):after{right:0;left:auto}header .con span:nth-of-type(2):after,header .con span:nth-of-type(2):before{content:'';width:1px;height:77px;background:#fff;position:absolute;top:0;left:0}header .con span:nth-of-type(2):after{right:0;left:auto}header .con span:nth-of-type(3):after,header .con span:nth-of-type(3):before{content:'';width:1px;height:80px;background:#fff;position:absolute;bottom:0;left:0}header .con span:nth-of-type(3):after{right:0;left:auto}header .animate{position:relative;z-index:1}header .animate h3{font-size:0;background:url(../images/df.png) no-repeat;width:86px;height:68px;position:absolute;top:118px;left:50%;-webkit-animation:rh3 .9s ease-out;-ms-animation:rh3 .9s ease-out;animation:rh3 .9s ease-out;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%)}header .animate .p1{font-size:40px;color:#fff;position:absolute;top:223px;left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);-webkit-animation:rp1 .8s ease-out;-ms-animation:rp1 .8s ease-out;animation:rp1 .8s ease-out;word-break:keep-all;white-space:nowrap}header .animate .p1 span{color:#00b5fe}header .animate .p2{font-size:14px;color:#fff;position:absolute;top:283px;left:50%;display:block;-webkit-animation:rp2 .5s ease-out;-ms-animation:rp2 .5s ease-out;animation:rp2 .5s ease-out;word-break:keep-all;white-space:nowrap;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%)}header .animate .p2 em{font-style:normal}header .animate .p2 span{display:none}.orange .number{background:#c8143c}.orange .number:before{background:#c8143c}.orange h3{color:#c8143c}.orange ul{background:#c8143c}.color1 .number{background:#c27742}.color1 .number:before{background:#c27742}.color1 h3{color:#c27742}.color1 ul{background:#c27742}.color2 .number{background:#355b78}.color2 .number:before{background:#355b78}.color2 h3{color:#355b78}.color2 ul{background:#355b78}.color3 .number{background:#a15054}.color3 .number:before{background:#a15054}.color3 h3{color:#a15054}.color3 ul{background:#a15054}.color4 .number{background:#309593}.color4 .number:before{background:#309593}.color4 h3{color:#309593}.color4 ul{background:#309593}.color5 .number{background:#9f3c6f}.color5 .number:before{background:#9f3c6f}.color5 h3{color:#9f3c6f}.color5 ul{background:#9f3c6f}.color6 .number{background:#c4523c}.color6 .number:before{background:#c4523c}.color6 h3{color:#c4523c}.color6 ul{background:#c4523c}.color7 .number{background:#eec900}.color7 .number:before{background:#eec900}.color7 h3{color:#eec900}.color7 ul{background:#ff4500}#job .box{overflow:hidden;margin-top:20px;height:554px}#job .we{width:514px;border:1px solid #ccc;text-align:center;float:left;box-sizing:border-box;height:inherit;border-radius:10px}#job h3{height:62px;background:#fe721d;font-size:30px;line-height:62px;color:#fff;border-radius:8px 8px 0 0}#job .box strong{line-height:60px;font-size:22px;color:#666}#job ul{padding:0 10px 20px 20px;overflow:hidden}#job li{width:150px;position:relative;padding-top:53px;float:left;padding-right:10px;margin-top:15px}#job .img{position:absolute;top:0;left:50%;margin-left:-35px;width:70px;height:70px}#job li span{display:block;height:44px;line-height:40px;padding-top:24px;background:#38b7ea;font-size:14px;color:#fff;border-radius:4px}#job li:nth-child(1) span{background:#e45353}#job li:nth-child(2) span{background:#52d177}#job li:nth-child(3) span{background:#4cb6ce}#job li:nth-child(4) span{background:#a557b4}#job li:nth-child(5) span{background:#23a1a1}#job li:nth-child(6) span{background:#97ab13}#job li:nth-child(7) span{background:#3eb68b}#job li:nth-child(8) span{background:#6c6c6c}#job li:nth-child(9) span{background:#6b73d5}#job .vs{float:left;font-size:30px;width:220px;text-align:center;height:inherit;background:url(../images/vs.png) no-repeat center;background-size:200px}#job .other{float:right;width:260px;border:1px solid #ccc;text-align:center;height:inherit;box-sizing:border-box;border-radius:10px}#job .other h3{background:#cfc73d}#job .other ul{padding:0 20px 20px}#job .other li{width:100%;padding-top:85px}#job .other .img{width:106px;height:106px;margin-left:-53px}#job .other span{width:100%;font-size:16px}.footer{background:#232323;padding-top:40px;margin-top:40px}.inner{width:1200px;margin:0 auto}.footer .top{border-top:1px solid #2e2e2e;border-bottom:1px solid #2e2e2e;padding:20px 0}.footer .top:after{content:'.';height:0;display:block;visibility:hidden;clear:both}.footer .list{float:left}.footer dl{width:140px;float:left}.footer dt{color:#f0f0f0;font-size:16px;margin-bottom:22px}.footer dd a{color:#909090;line-height:24px;font-size:14px}.footer .tel{float:left;width:280px;height:148px;border-left:1px solid #2e2e2e;border-right:1px solid #2e2e2e;text-align:center}.footer .tel tel{display:block;font-size:30px;line-height:40px;color:#fff}.footer .tel span{color:#999;font-size:14px}.footer .weixin{float:right}.footer .weixin .w1{float:left;width:130px;text-align:center;margin:10px}.footer .weixin .w1 img{height:128px}.footer .w1 span{line-height:35px;color:#fff}.footer .bot{font-size:12px;color:#fff;text-align:center;line-height:58px}@media screen and (max-width:1000px){.container{width:100%}}"},{"title":"","date":"2018-05-11T08:14:14.419Z","updated":"2018-05-11T08:14:14.419Z","comments":true,"path":"edu/css/style.css","permalink":"http://www.JiShuXuePai.com/edu/css/style.css","excerpt":"","text":"*{margin:0;padding:0}ol,ul{list-style:none}img,input{border:none}a{text-decoration:none;outline:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}table{width:100%;border-collapse:collapse;border-spacing:0;font-size:20px}table td{font-size:16px}table:hover tr:first-child .active{text-shadow:0 0 10px #fff}table tr:hover th{text-shadow:0 0 10px #fff}table tr:hover .txt1{text-shadow:0 0 0 #fff}.black:hover tr:first-child .active{text-shadow:0 0 10px rgba(23,102,123,.5)}.black tr:hover th{text-shadow:0 0 10px rgba(23,102,123,.5)}.black tr:hover .txt1{text-shadow:0 0 0 rgba(0,0,0,.5)}table .txt1{width:33%}input,select{vertical-align:middle;-webkit-appearance:none}html{overflow-x:hidden}body{font:12px/1.5 \"Microsoft YaHei\",\"Heiti SC\",tahoma,arial,\"Hiragino Sans GB\",\"\\\\5B8B体\",sans-serif;transition:all .3s}.clearfix:after{content:'.';display:block;height:0;clear:both;visibility:hidden}header{height:640px;background:url(../images/bg_01.jpg) no-repeat top center;background-size:cover;position:relative}.inner{width:1200px;margin:0 auto}header .logo{padding-top:37px;width:200px;height:66px;float:left}header .logo img{width:100%;height:100%}header nav{float:right;padding-top:50px}header li{float:left;line-height:39px;height:39px;margin-left:36px}header li a{font-size:16px;color:#fff;display:block;transition:all .1s}header li .active{color:#38b7ea;border-bottom:5px solid #38b7ea}header li a:hover{color:#38b7ea;border-bottom:5px solid #38b7ea}header .mobile_nav{width:43px;height:30px;cursor:pointer;display:none}header .mobile_nav img{width:100%;height:100%}@-webkit-keyframes rh3{from{top:-1100px}to{top:118px}}@-ms-keyframes rh3{from{top:-1100px}to{top:118px}}@keyframes rh3{from{top:-1100px}to{top:118px}}@-webkit-keyframes rp1{from{top:-800px}to{top:223px}}@-ms-keyframes rp1{from{top:-800px}to{top:223px}}@keyframes rp1{from{top:-800px}to{top:223px}}@-webkit-keyframes rp2{from{top:-500px}to{top:283px}}@-ms-keyframes rp2{from{top:-500px}to{top:283px}}@keyframes rp2{from{top:-500px}to{top:283px}}@-webkit-keyframes con{from{-webkit-transform:translate(-50%,-50%) scale(0);-ms-transform:translate(-50%,-50%) scale(0);transform:translate(-50%,-50%) scale(0);opacity:0}to{-webkit-transform:translate(-50%,-50%) scale(1);-ms-transform:translate(-50%,-50%) scale(1);transform:translate(-50%,-50%) scale(1);opacity:1}}@-ms-keyframes con{from{-webkit-transform:translate(-50%,-50%) scale(0);-ms-transform:translate(-50%,-50%) scale(0);transform:translate(-50%,-50%) scale(0);opacity:0}to{-webkit-transform:translate(-50%,-50%) scale(1);-ms-transform:translate(-50%,-50%) scale(1);transform:translate(-50%,-50%) scale(1);opacity:1}}@keyframes con{from{-webkit-transform:translate(-50%,-50%) scale(0);-ms-transform:translate(-50%,-50%) scale(0);transform:translate(-50%,-50%) scale(0);opacity:0}to{-webkit-transform:translate(-50%,-50%) scale(1);-ms-transform:translate(-50%,-50%) scale(1);transform:translate(-50%,-50%) scale(1);opacity:1}}@keyframes scale{from{font-size:15px}to{font-size:36px}}.scale{animation:scale 1s}header .con{width:532px;height:236px;box-sizing:border-box;overflow:hidden;border-bottom:1px solid #fff;position:absolute;left:50%;top:365px;-webkit-animation:con ease-in-out .5s .9s;-ms-animation:con ease-in-out .5s .9s;animation:con ease-in-out .5s .9s;opacity:0;-webkit-animation-fill-mode:forwards;-ms-animation-fill-mode:forwards;animation-fill-mode:forwards}header .con:before{content:'';display:block;background:url(../images/bg_01.jpg) no-repeat center -40px;background-size:cover;-webkit-filter:blur(10px);-moz-filter:blur(10px);-ms-filter:blur(10px);-o-filter:blur(10px);filter:blur(10px);position:absolute;top:0;left:0;right:0;bottom:0;margin:-190px}header .con span:nth-of-type(1):after,header .con span:nth-of-type(1):before{content:'';width:166px;height:1px;background:#fff;position:absolute;top:0;left:0}header .con span:nth-of-type(1):after{right:0;left:auto}header .con span:nth-of-type(2):after,header .con span:nth-of-type(2):before{content:'';width:1px;height:77px;background:#fff;position:absolute;top:0;left:0}header .con span:nth-of-type(2):after{right:0;left:auto}header .con span:nth-of-type(3):after,header .con span:nth-of-type(3):before{content:'';width:1px;height:80px;background:#fff;position:absolute;bottom:0;left:0}header .con span:nth-of-type(3):after{right:0;left:auto}header .animate{position:relative;z-index:1}header .animate h3{font-size:0;background:url(../images/df.png) no-repeat;width:86px;height:68px;position:absolute;top:118px;left:50%;-webkit-animation:rh3 .9s ease-out;-ms-animation:rh3 .9s ease-out;animation:rh3 .9s ease-out;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%)}header .animate .p1{font-size:40px;color:#fff;position:absolute;top:223px;left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);-webkit-animation:rp1 .8s ease-out;-ms-animation:rp1 .8s ease-out;animation:rp1 .8s ease-out;word-break:keep-all;white-space:nowrap}header .animate .p1 span{color:#00b5fe}header .animate .p2{font-size:14px;color:#fff;position:absolute;top:283px;left:50%;display:block;-webkit-animation:rp2 .5s ease-out;-ms-animation:rp2 .5s ease-out;animation:rp2 .5s ease-out;word-break:keep-all;white-space:nowrap;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%)}header .animate .p2 em{font-style:normal}header .animate .p2 span{display:none}.mode1{text-align:center;padding-bottom:40px}.mode1 h2,.mode9 h2{font-size:30px;font-weight:700;color:#38b7ea;position:relative;border-top:1px solid #aaa;width:510px;margin:110px auto 0}.mode1 h2 span,.mode9 h2 span{display:inline-block;background:#fff;position:relative;top:-26px;width:224px}.mode1 h2 span:before,.mode9 h2 span:before{content:'';width:10px;height:10px;border:1px solid #aaa;background:#fff;position:absolute;top:19px;left:0;z-index:1;transform:rotate(45deg) translateX(0)}.mode1 h2 span:after,.mode9 h2 span:after{content:'';width:10px;height:10px;border:1px solid #aaa;background:#fff;position:absolute;top:19px;right:0;z-index:1;transform:rotate(45deg) translateX(0)}.mode1 ul{display:inline-block;margin-bottom:60px}.mode1 li{width:233px;height:207px;background:#ebf1f1;border-radius:4px;float:left;margin:0 24px;padding-top:57px;-webkit-transition:all .3s;-ms-transition:all .3s;transition:all .3s}.mode1 li .icon{width:57px;height:57px;background:url(../images/spirit.png) no-repeat 11px 0;display:inline-block;-webkit-transition:all .3s;-ms-transition:all .3s;transition:all .3s}.mode1 li .two{background-position:-59px 0}.mode1 li .three{background-position:-118px 0}.mode1 li .four{background-position:-178px 0}.mode1 li p{font-size:18px;padding-top:49px}.mode1 li:hover{background:#38b7ea;box-shadow:0 0 13px 0 rgba(56,183,234,.5);cursor:pointer;color:#fff}.mode1 li:hover .icon{background-position:11px -60px}.mode1 li:hover .two{background-position:-59px -60px}.mode1 li:hover .three{background-position:-118px -60px}.mode1 li:hover .four{background-position:-178px -60px}.btn{width:150px;height:38px;line-height:38px;text-align:center;border-radius:4px;border:1px solid #c9c9c9;display:inline-block;font-size:14px;-webkit-transition:all .3s;-ms-transition:all .3s;transition:all .3s}.btn a{display:block;color:#000;position:relative;overflow:hidden}.btn a:before{content:'了解更多';width:100%;height:100%;background:rgba(56,183,234,1);position:absolute;top:-38px;left:0;-webkit-transition:all .3s;-ms-transition:all .3s;transition:all .3s;text-shadow:0 0 10px #fff}.btn:hover{border:1px solid #38b7ea;box-shadow:0 0 13px 0 rgba(56,183,234,.5)}.btn:hover a{color:#fff}.btn:hover a:before{top:0}.btn span{-webkit-transition:all .3s;-ms-transition:all .3s;transition:all .3s;display:block}.btn:hover span{-webkit-transform:translateY(50px);-ms-transform:translateY(50px);transform:translateY(50px)}.mode2 .mode2_l{float:left;width:50%;background:#ecf5fa;text-align:right;padding-bottom:82px}.mode2 .mode2_l h3{font-size:30px;color:#38b7ea;padding-top:65px;line-height:67px;height:67px;padding-right:12%}.mode2 .mode2_l .pic{padding-right:14%;font-size:0}.mode2 .mode2_l p{width:333px;background:#076194;display:inline-block;border-radius:4px;margin-right:14%;text-align:left;padding:7px 0 10px 49px;color:#fff;font-size:16px;line-height:24px;margin-top:10px;position:relative}.mode2 .mode2_l p:before{content:'';width:0;height:0;border-left:12px solid transparent;border-right:12px solid transparent;border-bottom:19px solid #076194;position:absolute;top:-19px;left:151px}.mode2 .mode2_r{float:right;width:50%;background:#076194;padding-bottom:79px}.mode2 .mode2_r>*{padding-left:5%}.mode2 .mode2_r h3{font-size:30px;color:#fff;padding-top:65px;line-height:67px;height:67px}.mode2 .mode2_r span{font-size:50px}.mode2 .mode2_r .pic{margin:110px 0 56px 0;font-size:0}.mode2 .mode2_r p{line-height:35px;font-size:16px;color:#fff}.mode3{background:url(../images/bg_02.jpg) no-repeat fixed center top;background-size:cover;text-align:center;padding-bottom:20px}.mode3 h2{width:680px;height:71px;border-left:1px solid #fff;border-right:1px solid #fff;font-size:36px;color:#fff;display:inline-block;position:relative}.mode3 h2:before{content:'';width:74px;height:1px;background:#fff;position:absolute;bottom:0;left:0}.mode3 h2:after{content:'';width:74px;height:1px;background:#fff;position:absolute;bottom:0;right:0}.mode3 h2 span{position:relative;top:45px}.mode3 table{margin-top:62px;margin-bottom:30px}.mode3 table td,.mode3 table th,.mode3 table tr{border:1px solid rgba(255,255,255,.2);background:rgba(255,255,255,.08);color:#fff}.mode3 table tr{height:77px}.mode3 table .active{background:rgba(56,183,234,.3)}.mode3 .btn a{color:#fff}.mode4{text-align:center;padding-top:40px}.mode4 h2{font-size:36px;color:#38b7ea;line-height:76px}.mode4 .p1{color:#8398a0;font-size:18px;line-height:45px}.mode4 .p2{margin:50px 262px 62px;line-height:39px;padding:15px 72px 10px;border:1px solid #38b7ea;font-size:16px;color:#38b7ea}.mode4 .p2 span{font-size:26px;font-weight:700}.mode4 .icon{width:100%}.mode4 li{display:inline-block;cursor:pointer;margin:0 40px;margin-bottom:50px}.mode4 li i{width:138px;height:138px;background:url(../images/spirit.png) no-repeat 46px -122px;border:1px solid #bbcfd7;display:block;border-radius:50%;display:inline-block;-webkit-transition:all .3s;-ms-transition:all .3s;transition:all .3s}.mode4 li:hover i{background-color:#38b7ea;background-position:-90px -122px}.mode4 li span{display:block;line-height:75px;font-size:14px;color:#000;-webkit-transition:all .3s;-ms-transition:all .3s;transition:all .3s}.mode4 li:hover span{color:#38b7ea}.mode4 li:nth-child(2) i{background-position:43px -254px}.mode4 li:nth-child(2):hover i{background-position:-93px -254px}.mode4 li:nth-child(3) i{background-position:43px -530px}.mode4 li:nth-child(3):hover i{background-position:-93px -530px}.mode4 li:nth-child(4) i{background-position:43px -942px}.mode4 li:nth-child(4):hover i{background-position:-93px -942px}.mode4 li:nth-child(5) i{background-position:43px -809px}.mode4 li:nth-child(5):hover i{background-position:-93px -809px}.mode4 table{background:#f7fcfe}table td,table th,table tr{border:1px solid #d4e0e5;height:90px;padding:5px}.mode4 .active{background:#c7ebf9;border:1px solid #b5d5e2}.mode5{background:#0c9 url(../images/bg_04.jpg) no-repeat center top;text-align:center;padding-top:55px}.mode5 .btn:first-child{margin-bottom:153px;border-color:#000}.mode5 .btn:first-child:hover{border-color:#38b7ea}.mode5 h2{line-height:134px;font-size:36px;color:#fff}.mode5 .explain{padding-bottom:32px}.mode5 .character{width:747px;border:1px solid #fff;border-bottom:none;height:132px;display:inline-block;margin-top:68px;position:relative}.mode5 .character:before{content:'';width:1px;height:86px;background:#fff;top:46px;left:50%;position:absolute}.mode5 .character img{margin-top:-68px;position:relative;z-index:1}@-webkit-keyframes ball-scale-multiple{0%{-webkit-transform:scale(.5);transform:scale(.5);opacity:.5}5%{opacity:1}100%{-webkit-transform:scale(1);transform:scale(1);opacity:0}}@keyframes ball-scale-multiple{0%{-webkit-transform:scale(.5);transform:scale(.5);opacity:.5}5%{opacity:1}100%{-webkit-transform:scale(1);transform:scale(1);opacity:0}}.ball-scale-multiple{position:relative;left:50%;width:210px;-webkit-transform:translateX(-51%) translateY(-168px);-ms-transform:translateX(-51%) translateY(-168px);transform:translateX(-51%) translateY(-168px)}.ball-scale-multiple>div:nth-child(2){-webkit-animation-delay:.4s;animation-delay:.4s}.ball-scale-multiple>div:nth-child(3){-webkit-animation-delay:.8s;animation-delay:.8s}.ball-scale-multiple>div{border:1px solid #fff;border-radius:100%;-webkit-animation-fill-mode:both;animation-fill-mode:both;position:absolute;left:0;top:0;opacity:0;margin:0;width:210px;height:210px;-webkit-animation:ball-scale-multiple 1s 0s linear infinite;animation:ball-scale-multiple 1s 0s linear infinite}.mode5 .text{width:193px;height:320px;padding:0 3.3%;background:#fff;border-radius:18px;display:inline-block;position:relative;margin:0 46px;text-align:left}.mode5 .text:after{content:'';width:99px;height:129px;background:url(../images/after.png) no-repeat;position:absolute;top:89px;right:-99px}.mode5 .text:last-of-type:after{display:none}.mode5 h4{color:#13b5b1;font-size:20px;line-height:60px;padding-top:76px}.mode5 p{font-size:14px;line-height:24px}.mode5 table{background:#f6f8f8}.mode5 td,.mode5 th,.mode5 tr{border:1px solid #d3dee1}.mode5 .active{background:#bde7e6;border-color:#aed3d6}.mode5 .btn:last-child{margin:30px 0;border-color:#fff}.mode5 .btn:last-child a{color:#fff}.mode5 .btn:last-child a:before{background:#fff}.mode5 .btn:last-child:hover a{color:#000}.mode6{text-align:center;color:#fff;padding-bottom:40px}.mode6 .bg{background:#f1f1f1 url(../images/bg_05.jpg) no-repeat center top;background-size:cover;height:100%;position:relative}.mode6 .mask{height:281px;background:rgba(0,0,0,.5)}.mode6 h2{font-size:36px;line-height:106px;padding-top:26px}.mode6 p{font-size:24px;line-height:46px}.mode6 .btn{margin:300px 0 18px;border-color:#fff}.mode6 .btn a{color:#fff}.mode6 .btn:hover{border-color:#38b7ea}.mode6 table{background:#ebf0ea;color:#000;margin-top:50px}.mode6 td,.mode6 th,.mode6 tr{border-color:#ccd9d8}.mode6 .active{background:#cce4c5;border-color:#b8d1c0}.mode7{text-align:center}.mode7 h2{font-size:36px;color:#38b7ea;line-height:53px;padding-top:47px}.mode7 p{color:#8398a0;font-size:18px;line-height:36px}.mode7 .job{text-align:left;padding:49px 0 20px}.mode7 .hy{float:left;width:43%;padding-left:7%}.mode7 h4{font-size:20px;font-weight:400;line-height:49px}.mode7 .hy .pic{margin-top:40px}.mode7 .jy{float:left;width:46%;padding-left:4%}.mode7 .jy p{line-height:22px}.mode7 .jy .pic{margin-top:70px}.mode7 table{background:#f2f7fa}.mode7 .active{background:#c3e7f6;border-color:#b2d3e0}.mode7 .btn{margin:25px 0 16px;border-color:#000}.mode7 .btn:hover{border-color:#38b7ea}.mode8{text-align:center;background:url(../images/bg_03.jpg) no-repeat center top;padding-bottom:42px}.mode8 h2{font-size:36px;color:#fff;line-height:136px;padding-top:10px}.mode8 .text{width:316px;border:1px solid #fff;background:url(../images/tx.png) no-repeat 24px 21px;display:block;margin:0 auto;background-size:20px;margin-bottom:30px;border-radius:4px;padding:21px 15px 21px 60px;font-size:18px;color:#fff}.mode8 .text:focus{box-shadow:0 0 8px rgba(255,255,255,.5);outline:0}.mode8 .text1{background-image:url(../images/mobile.png);margin-bottom:36px}.mode8 label{position:relative;display:inline-block;overflow:hidden}.mode8 input{font-family:\"微软雅黑\"}.mode8 .zixun{width:172px;height:67px}.mode8 .zixun input{width:100%;height:100%;background:#50b332;border-radius:4px;font-size:18px;color:#fff;cursor:pointer}.mode8 label:before{content:'';width:50px;height:100px;background-image:-webkit-linear-gradient(90deg,rgba(255,255,255,0),rgba(255,255,255,.2) 50%,rgba(255,255,255,0) 100%);background-image:-ms-linear-gradient(90deg,rgba(255,255,255,0),rgba(255,255,255,.2) 50%,rgba(255,255,255,0) 100%);background-image:linear-gradient(90deg,rgba(255,255,255,0),rgba(255,255,255,.2) 50%,rgba(255,255,255,0) 100%);-webkit-transform:skew(-20deg);-ms-transform:skew(-20deg);transform:skew(-20deg);position:absolute;top:0;left:-60px}.mode8 label:hover:before{left:200px;-webkit-transition:all .6s;-ms-transition:all .6s;transition:all .6s}.mode8 .qiang{width:204px;height:67px;margin-left:14px}.mode8 .qiang input{width:100%;height:100%;background:#23cbe5;border-radius:4px;font-size:18px;color:#fff;cursor:pointer}.mode9{padding-bottom:100px}.mode9 h2{text-align:center}.mode9 dl{padding-bottom:30px}.mode9 dt{line-height:58px;font-size:20px}.mode9 dd:before,.mode9 dt:before{content:'Q';font-size:15px;color:#fff;background:#50b332;width:30px;height:30px;line-height:30px;text-align:center;display:inline-block;border-radius:4px;margin-right:20px}.mode9 dd{font-size:18px;color:#7f9396;line-height:30px}.mode9 dd:before{content:'A';background:#23cbe5;float:left}.mode9 dd p{float:left;width:1150px}.footer{background:#232323;padding-top:40px;margin-top:40px}.inner{width:1200px;margin:0 auto}.footer .top{border-top:1px solid #2e2e2e;border-bottom:1px solid #2e2e2e;padding:20px 0}.footer .top:after{content:'.';height:0;display:block;visibility:hidden;clear:both}.footer .list{float:left}.footer dl{width:140px;float:left}.footer dt{color:#f0f0f0;font-size:16px;margin-bottom:22px}.footer dd a{color:#909090;line-height:24px;font-size:14px}.footer .tel{float:left;width:280px;height:148px;border-left:1px solid #2e2e2e;border-right:1px solid #2e2e2e;text-align:center}.footer .tel tel{display:block;font-size:30px;line-height:40px;color:#fff}.footer .tel span{color:#999;font-size:14px}.footer .weixin{float:right}.footer .weixin .w1{float:left;width:130px;text-align:center;margin:10px}.footer .weixin .w1 img{height:128px}.footer .w1 span{line-height:35px;color:#fff}.footer .bot{font-size:12px;color:#fff;text-align:center;line-height:58px}"},{"title":"","date":"2018-05-11T08:14:14.417Z","updated":"2018-05-11T08:14:14.417Z","comments":true,"path":"edu/css/media.css","permalink":"http://www.JiShuXuePai.com/edu/css/media.css","excerpt":"","text":"@media screen and (max-width:1200px){.wrap{width:100%}.inner{width:96%}.mode1 h2,.mode9 h2{margin-top:10%}.mode1 ul{width:100%}.mode1 li{width:21%;height:auto;margin:0 2%;padding:3.6% 0 3%}.mode1 li p{padding-top:15%}.mode4 .p2{width:660px;margin:50px auto 62px;padding:15px 20px 10px}.mode4 li{margin:0 25px}.mode5 .text{width:16%;margin:0 3%}.mode5 .character{border-left:none;border-right:none;width:100%}.mode5 .text::after{display:none}.mode5 p{text-align:justify}.mode9 dl{width:100%}.mode9 dd p{width:95%;text-align:justify}}@media screen and (max-width:1024px){.mode2 .mode2_l{float:none;width:100%;text-align:center}.mode2 .mode2_l h3{padding-right:0;font-size:40px;padding:4% 0 2%}.mode2 .mode2_l .pic{padding-right:0}.mode2 .mode2_l p{margin-right:0}.mode2 .mode2_r{float:none;width:100%;text-align:center}.mode2 .mode2_r>*{padding-left:0}.mode2 .mode2_r h3{font-size:40px;padding:4% 0 2%}.mode2 .mode2_r .pic{margin:2% 0 2% 0}.mode4 li{margin:0 6%;width:21%}.mode5 .text{height:auto;padding:0 3% 5%}.mode5 h4{padding-top:23%}.mode6 p br{display:none}.mode7 .hy{padding-left:3%}.mode7 .hy .pic,.mode7 .jy .pic{width:100%;height:auto}.mode7 .hy .pic img,.mode7 .jy .pic img{width:100%;height:100%}.mode9 dd p{width:93%}}@media screen and (max-width:768px){@-webkit-keyframes rh3{from{top:-1100px}to{top:80px}}@-ms-keyframes rh3{from{top:-1100px}to{top:80px}}@keyframes rh3{from{top:-1100px}to{top:80px}}@-webkit-keyframes rp1{from{top:-800px}to{top:160px}}@-ms-keyframes rp1{from{top:-800px}to{top:160px}}@keyframes rp1{from{top:-800px}to{top:160px}}@-webkit-keyframes rp2{from{top:-500px}to{top:216px}}@-ms-keyframes rp2{from{top:-500px}to{top:216px}}@keyframes rp2{from{top:-500px}to{top:216px}}header .logo{width:30%;height:auto}header{height:500px}header .mobile_nav{display:block;position:absolute;top:40px;right:5%}header .list{opacity:0;padding-top:66px;background:rgba(0,174,245,.95);box-shadow:0 0 15px rgba(0,0,0,.6);position:fixed;top:0;right:-650px;width:80%;height:100%;z-index:2;transition:all .4s}header .clos{width:40px;height:40px;position:absolute;top:34px;right:5%;cursor:pointer}header .clos:after,header .clos:before{content:'';width:34px;height:4px;background:#fff;position:absolute;top:17px;right:5px;border-radius:4px;-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg)}header .clos:after{-webkit-transform:rotate(-45deg);-ms-transform:rotate(-45deg);transform:rotate(-45deg)}header li{float:none;margin-left:0;line-height:50px;border-bottom:1px solid rgba(255,255,255,.6);height:auto}header li a{font-size:16px;padding-left:40px}header li a:hover{color:#fff;border:none;text-shadow:0 0 7px #fff,0 0 15px #fff}header li .active{color:#fff;border:none;text-shadow:0 0 7px #fff,0 0 15px #fff}header .animate h3{background-size:70px;top:80px;width:70px}header .animate .p1{font-size:34px;top:160px}header .animate .p2{font-size:12px;top:216px}header .con{top:310px;width:440px;height:198px}.mode4 li{vertical-align:top;padding-bottom:6%;width:22%;margin:0 5%}.mode4 li span{line-height:2}.mode5 .character{width:99%;border-left:none;border-right:none}.mode5 .text{width:70%;margin-bottom:99px;padding:0 10% 5%}.mode5 .text:after{display:block;left:50%;top:100%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);background-image:url(../images/mobile-bg.png);width:131px;height:100px}.mode5 h4{padding-top:3%}.mode5 p{font-size:16px}.mode7 .hy{float:none;width:100%;padding-left:0;margin-bottom:5%}.mode7 h4{font-weight:700}.mode7 .jy{width:100%;float:none;padding-left:0;margin-bottom:5%}.mode7 .jy br{display:none}.mode8 h2{font-size:30px}.mode9 dd p{width:88%}}@media screen and (max-width:750px){.mode3 h2{width:100%}table td br{display:none}.mode4 h2{font-size:30px}.mode4 .p1{line-height:1.8}.mode4 .p2{width:92%;padding:15px 4% 10px}}@media screen and (max-width:640px){header{height:400px}header .mobile_nav{width:33px;height:auto}header .animate .p1{font-size:26px}@-webkit-keyframes rh3{from{top:-1100px}to{top:48px}}@-ms-keyframes rh3{from{top:-1100px}to{top:48px}}@keyframes rh3{from{top:-1100px}to{top:48px}}@-webkit-keyframes rp1{from{top:-800px}to{top:122px}}@-ms-keyframes rp1{from{top:-800px}to{top:122px}}@keyframes rp1{from{top:-800px}to{top:122px}}@-webkit-keyframes rp2{from{top:-500px}to{top:162px}}@-ms-keyframes rp2{from{top:-500px}to{top:162px}}@keyframes rp2{from{top:-500px}to{top:162px}}header .animate h3{top:48px}header .animate .p1{top:122px}header .animate .p2{top:162px}header .con{top:250px;width:400px;height:160px}header .con span:nth-of-type(1)::after,header .con span:nth-of-type(1)::before{width:150px}header .con span:nth-of-type(2)::after,header .con span:nth-of-type(2)::before{height:50px}header .con span:nth-of-type(3)::after,header .con span:nth-of-type(3)::before{height:60px}.mode1 h2,.mode9 h2{width:100%}.mode1 li{width:46%;margin-bottom:4%}.mode1 ul{margin-bottom:40px}.mode2 .mode2_l h3,.mode2 .mode2_r h3{font-size:30px}.mode3 h2{font-size:2em}.mode3 h2:after,.mode3 h2:before{width:10%}.mode3 h2 span{top:50px}.mode4 li{width:33%;margin:0 6%}.mode5 h2{font-size:30px}.mode6 .bg{height:400px}.mode6 .mask{height:100%}.mode6 .btn{position:absolute;bottom:2%;left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%)}.mode8 h2{line-height:1.5;padding:5% 0}}@media screen and (max-width:480px){@-webkit-keyframes rh3{from{top:-1100px}to{top:16px}}@-ms-keyframes rh3{from{top:-1100px}to{top:16px}}@keyframes rh3{from{top:-1100px}to{top:16px}}@-webkit-keyframes rp1{from{top:-800px}to{top:64px}}@-ms-keyframes rp1{from{top:-800px}to{top:64px}}@keyframes rp1{from{top:-800px}to{top:64px}}@-webkit-keyframes rp2{from{top:-500px}to{top:98px}}@-ms-keyframes rp2{from{top:-500px}to{top:98px}}@keyframes rp2{from{top:-500px}to{top:98px}}header{height:300px}header .logo{width:150px}header .animate h3{background-size:60px;width:60px;top:16px}header .animate .p1{top:64px;font-size:20px}header .animate .p2{top:98px}header .animate .p2 span{display:block}header .animate .p2 em{display:none}header .con{top:179px;width:260px;height:110px}header .con span:nth-of-type(1)::after,header .con span:nth-of-type(1)::before{width:86px}header .con span:nth-of-type(2)::after,header .con span:nth-of-type(2)::before{height:30px}header .con span:nth-of-type(3)::after,header .con span:nth-of-type(3)::before{height:42px}.mode1 h2,.mode9 h2{margin-top:60px}.mode1 ul{margin-bottom:0}.mode1 li{padding-top:7%}.mode2 .mode2_l h3,.mode2 .mode2_r h3{font-size:20px}.mode2 .mode2_l .pic{width:80%;display:inline-block}.mode2 .mode2_l .pic img{width:100%}.mode2 .mode2_l p{width:80%;padding:5%}.mode2 .mode2_r .pic{width:80%;display:inline-block}.mode2 .mode2_r .pic img{width:100%}.mode2 .mode2_r p{padding:5%}.mode2 .mode2_r p br{display:none}.mode2 .mode2_r{padding-bottom:5%}.mode2 .mode2_l{padding-bottom:10%}.mode3 h2{font-size:20px;height:50px}.mode3 h2:after,.mode3 h2:before{width:7%}.mode3 h2 span{top:34px}.mode4{padding-top:30px}.mode4 h2{font-size:20px;line-height:2.5}.mode4 .p2{margin-top:40px}.mode4 li{width:48%;margin:0}.mode5 .explain{padding-bottom:0}.mode5 h2{line-height:1.5;padding:5% 0 3%}.mode6 h2{font-size:30px}.mode6 p{font-size:20px;padding:0 2%}.mode8 .text{width:70%}.mode8 .zixun{width:35%}.mode8 .qiang{width:50%}.mode9 dd p{width:85%}}"},{"title":"","date":"2018-05-11T08:14:14.417Z","updated":"2018-05-11T08:14:14.417Z","comments":true,"path":"edu/css/animate.min.css","permalink":"http://www.JiShuXuePai.com/edu/css/animate.min.css","excerpt":"","text":"@charset \"UTF-8\";/*! Animate.css - http://daneden.me/animate Licensed under the MIT license - http://opensource.org/licenses/MIT Copyright (c) 2013 Daniel Eden */.animated{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both}.animated.infinite{-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite}.animated.hinge{-webkit-animation-duration:2s;animation-duration:2s}@-webkit-keyframes bounce{0%,100%,20%,53%,80%{-webkit-transition-timing-function:cubic-bezier(0.215,.61,.355,1);transition-timing-function:cubic-bezier(0.215,.61,.355,1);-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}40%,43%{-webkit-transition-timing-function:cubic-bezier(0.755,.050,.855,.060);transition-timing-function:cubic-bezier(0.755,.050,.855,.060);-webkit-transform:translate3d(0,-30px,0);transform:translate3d(0,-30px,0)}70%{-webkit-transition-timing-function:cubic-bezier(0.755,.050,.855,.060);transition-timing-function:cubic-bezier(0.755,.050,.855,.060);-webkit-transform:translate3d(0,-15px,0);transform:translate3d(0,-15px,0)}90%{-webkit-transform:translate3d(0,-4px,0);transform:translate3d(0,-4px,0)}}@keyframes bounce{0%,100%,20%,53%,80%{-webkit-transition-timing-function:cubic-bezier(0.215,.61,.355,1);transition-timing-function:cubic-bezier(0.215,.61,.355,1);-webkit-transform:translate3d(0,0,0);-ms-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}40%,43%{-webkit-transition-timing-function:cubic-bezier(0.755,.050,.855,.060);transition-timing-function:cubic-bezier(0.755,.050,.855,.060);-webkit-transform:translate3d(0,-30px,0);-ms-transform:translate3d(0,-30px,0);transform:translate3d(0,-30px,0)}70%{-webkit-transition-timing-function:cubic-bezier(0.755,.050,.855,.060);transition-timing-function:cubic-bezier(0.755,.050,.855,.060);-webkit-transform:translate3d(0,-15px,0);-ms-transform:translate3d(0,-15px,0);transform:translate3d(0,-15px,0)}90%{-webkit-transform:translate3d(0,-4px,0);-ms-transform:translate3d(0,-4px,0);transform:translate3d(0,-4px,0)}}.bounce{-webkit-animation-name:bounce;animation-name:bounce;-webkit-transform-origin:center bottom;-ms-transform-origin:center bottom;transform-origin:center bottom}@-webkit-keyframes flash{0%,100%,50%{opacity:1}25%,75%{opacity:0}}@keyframes flash{0%,100%,50%{opacity:1}25%,75%{opacity:0}}.flash{-webkit-animation-name:flash;animation-name:flash}@-webkit-keyframes pulse{0%{-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}50%{-webkit-transform:scale3d(1.05,1.05,1.05);transform:scale3d(1.05,1.05,1.05)}100%{-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}}@keyframes pulse{0%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}50%{-webkit-transform:scale3d(1.05,1.05,1.05);-ms-transform:scale3d(1.05,1.05,1.05);transform:scale3d(1.05,1.05,1.05)}100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}}.pulse{-webkit-animation-name:pulse;animation-name:pulse}@-webkit-keyframes rubberBand{0%{-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}30%{-webkit-transform:scale3d(1.25,.75,1);transform:scale3d(1.25,.75,1)}40%{-webkit-transform:scale3d(0.75,1.25,1);transform:scale3d(0.75,1.25,1)}50%{-webkit-transform:scale3d(1.15,.85,1);transform:scale3d(1.15,.85,1)}65%{-webkit-transform:scale3d(.95,1.05,1);transform:scale3d(.95,1.05,1)}75%{-webkit-transform:scale3d(1.05,.95,1);transform:scale3d(1.05,.95,1)}100%{-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}}@keyframes rubberBand{0%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}30%{-webkit-transform:scale3d(1.25,.75,1);-ms-transform:scale3d(1.25,.75,1);transform:scale3d(1.25,.75,1)}40%{-webkit-transform:scale3d(0.75,1.25,1);-ms-transform:scale3d(0.75,1.25,1);transform:scale3d(0.75,1.25,1)}50%{-webkit-transform:scale3d(1.15,.85,1);-ms-transform:scale3d(1.15,.85,1);transform:scale3d(1.15,.85,1)}65%{-webkit-transform:scale3d(.95,1.05,1);-ms-transform:scale3d(.95,1.05,1);transform:scale3d(.95,1.05,1)}75%{-webkit-transform:scale3d(1.05,.95,1);-ms-transform:scale3d(1.05,.95,1);transform:scale3d(1.05,.95,1)}100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}}.rubberBand{-webkit-animation-name:rubberBand;animation-name:rubberBand}@-webkit-keyframes shake{0%,100%{-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}10%,30%,50%,70%,90%{-webkit-transform:translate3d(-10px,0,0);transform:translate3d(-10px,0,0)}20%,40%,60%,80%{-webkit-transform:translate3d(10px,0,0);transform:translate3d(10px,0,0)}}@keyframes shake{0%,100%{-webkit-transform:translate3d(0,0,0);-ms-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}10%,30%,50%,70%,90%{-webkit-transform:translate3d(-10px,0,0);-ms-transform:translate3d(-10px,0,0);transform:translate3d(-10px,0,0)}20%,40%,60%,80%{-webkit-transform:translate3d(10px,0,0);-ms-transform:translate3d(10px,0,0);transform:translate3d(10px,0,0)}}.shake{-webkit-animation-name:shake;animation-name:shake}@-webkit-keyframes swing{20%{-webkit-transform:rotate3d(0,0,1,15deg);transform:rotate3d(0,0,1,15deg)}40%{-webkit-transform:rotate3d(0,0,1,-10deg);transform:rotate3d(0,0,1,-10deg)}60%{-webkit-transform:rotate3d(0,0,1,5deg);transform:rotate3d(0,0,1,5deg)}80%{-webkit-transform:rotate3d(0,0,1,-5deg);transform:rotate3d(0,0,1,-5deg)}100%{-webkit-transform:rotate3d(0,0,1,0deg);transform:rotate3d(0,0,1,0deg)}}@keyframes swing{20%{-webkit-transform:rotate3d(0,0,1,15deg);-ms-transform:rotate3d(0,0,1,15deg);transform:rotate3d(0,0,1,15deg)}40%{-webkit-transform:rotate3d(0,0,1,-10deg);-ms-transform:rotate3d(0,0,1,-10deg);transform:rotate3d(0,0,1,-10deg)}60%{-webkit-transform:rotate3d(0,0,1,5deg);-ms-transform:rotate3d(0,0,1,5deg);transform:rotate3d(0,0,1,5deg)}80%{-webkit-transform:rotate3d(0,0,1,-5deg);-ms-transform:rotate3d(0,0,1,-5deg);transform:rotate3d(0,0,1,-5deg)}100%{-webkit-transform:rotate3d(0,0,1,0deg);-ms-transform:rotate3d(0,0,1,0deg);transform:rotate3d(0,0,1,0deg)}}.swing{-webkit-transform-origin:top center;-ms-transform-origin:top center;transform-origin:top center;-webkit-animation-name:swing;animation-name:swing}@-webkit-keyframes tada{0%{-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}10%,20%{-webkit-transform:scale3d(.9,.9,.9) rotate3d(0,0,1,-3deg);transform:scale3d(.9,.9,.9) rotate3d(0,0,1,-3deg)}30%,50%,70%,90%{-webkit-transform:scale3d(1.1,1.1,1.1) rotate3d(0,0,1,3deg);transform:scale3d(1.1,1.1,1.1) rotate3d(0,0,1,3deg)}40%,60%,80%{-webkit-transform:scale3d(1.1,1.1,1.1) rotate3d(0,0,1,-3deg);transform:scale3d(1.1,1.1,1.1) rotate3d(0,0,1,-3deg)}100%{-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}}@keyframes tada{0%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}10%,20%{-webkit-transform:scale3d(.9,.9,.9) rotate3d(0,0,1,-3deg);-ms-transform:scale3d(.9,.9,.9) rotate3d(0,0,1,-3deg);transform:scale3d(.9,.9,.9) rotate3d(0,0,1,-3deg)}30%,50%,70%,90%{-webkit-transform:scale3d(1.1,1.1,1.1) rotate3d(0,0,1,3deg);-ms-transform:scale3d(1.1,1.1,1.1) rotate3d(0,0,1,3deg);transform:scale3d(1.1,1.1,1.1) rotate3d(0,0,1,3deg)}40%,60%,80%{-webkit-transform:scale3d(1.1,1.1,1.1) rotate3d(0,0,1,-3deg);-ms-transform:scale3d(1.1,1.1,1.1) rotate3d(0,0,1,-3deg);transform:scale3d(1.1,1.1,1.1) rotate3d(0,0,1,-3deg)}100%{-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}}.tada{-webkit-animation-name:tada;animation-name:tada}@-webkit-keyframes wobble{0%{-webkit-transform:none;transform:none}15%{-webkit-transform:translate3d(-25%,0,0) rotate3d(0,0,1,-5deg);transform:translate3d(-25%,0,0) rotate3d(0,0,1,-5deg)}30%{-webkit-transform:translate3d(20%,0,0) rotate3d(0,0,1,3deg);transform:translate3d(20%,0,0) rotate3d(0,0,1,3deg)}45%{-webkit-transform:translate3d(-15%,0,0) rotate3d(0,0,1,-3deg);transform:translate3d(-15%,0,0) rotate3d(0,0,1,-3deg)}60%{-webkit-transform:translate3d(10%,0,0) rotate3d(0,0,1,2deg);transform:translate3d(10%,0,0) rotate3d(0,0,1,2deg)}75%{-webkit-transform:translate3d(-5%,0,0) rotate3d(0,0,1,-1deg);transform:translate3d(-5%,0,0) rotate3d(0,0,1,-1deg)}100%{-webkit-transform:none;transform:none}}@keyframes wobble{0%{-webkit-transform:none;-ms-transform:none;transform:none}15%{-webkit-transform:translate3d(-25%,0,0) rotate3d(0,0,1,-5deg);-ms-transform:translate3d(-25%,0,0) rotate3d(0,0,1,-5deg);transform:translate3d(-25%,0,0) rotate3d(0,0,1,-5deg)}30%{-webkit-transform:translate3d(20%,0,0) rotate3d(0,0,1,3deg);-ms-transform:translate3d(20%,0,0) rotate3d(0,0,1,3deg);transform:translate3d(20%,0,0) rotate3d(0,0,1,3deg)}45%{-webkit-transform:translate3d(-15%,0,0) rotate3d(0,0,1,-3deg);-ms-transform:translate3d(-15%,0,0) rotate3d(0,0,1,-3deg);transform:translate3d(-15%,0,0) rotate3d(0,0,1,-3deg)}60%{-webkit-transform:translate3d(10%,0,0) rotate3d(0,0,1,2deg);-ms-transform:translate3d(10%,0,0) rotate3d(0,0,1,2deg);transform:translate3d(10%,0,0) rotate3d(0,0,1,2deg)}75%{-webkit-transform:translate3d(-5%,0,0) rotate3d(0,0,1,-1deg);-ms-transform:translate3d(-5%,0,0) rotate3d(0,0,1,-1deg);transform:translate3d(-5%,0,0) rotate3d(0,0,1,-1deg)}100%{-webkit-transform:none;-ms-transform:none;transform:none}}.wobble{-webkit-animation-name:wobble;animation-name:wobble}@-webkit-keyframes bounceIn{0%,100%,20%,40%,60%,80%{-webkit-transition-timing-function:cubic-bezier(0.215,.61,.355,1);transition-timing-function:cubic-bezier(0.215,.61,.355,1)}0%{opacity:0;-webkit-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}20%{-webkit-transform:scale3d(1.1,1.1,1.1);transform:scale3d(1.1,1.1,1.1)}40%{-webkit-transform:scale3d(.9,.9,.9);transform:scale3d(.9,.9,.9)}60%{opacity:1;-webkit-transform:scale3d(1.03,1.03,1.03);transform:scale3d(1.03,1.03,1.03)}80%{-webkit-transform:scale3d(.97,.97,.97);transform:scale3d(.97,.97,.97)}100%{opacity:1;-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}}@keyframes bounceIn{0%,100%,20%,40%,60%,80%{-webkit-transition-timing-function:cubic-bezier(0.215,.61,.355,1);transition-timing-function:cubic-bezier(0.215,.61,.355,1)}0%{opacity:0;-webkit-transform:scale3d(.3,.3,.3);-ms-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}20%{-webkit-transform:scale3d(1.1,1.1,1.1);-ms-transform:scale3d(1.1,1.1,1.1);transform:scale3d(1.1,1.1,1.1)}40%{-webkit-transform:scale3d(.9,.9,.9);-ms-transform:scale3d(.9,.9,.9);transform:scale3d(.9,.9,.9)}60%{opacity:1;-webkit-transform:scale3d(1.03,1.03,1.03);-ms-transform:scale3d(1.03,1.03,1.03);transform:scale3d(1.03,1.03,1.03)}80%{-webkit-transform:scale3d(.97,.97,.97);-ms-transform:scale3d(.97,.97,.97);transform:scale3d(.97,.97,.97)}100%{opacity:1;-webkit-transform:scale3d(1,1,1);-ms-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}}.bounceIn{-webkit-animation-name:bounceIn;animation-name:bounceIn;-webkit-animation-duration:.75s;animation-duration:.75s}@-webkit-keyframes bounceInDown{0%,100%,60%,75%,90%{-webkit-transition-timing-function:cubic-bezier(0.215,.61,.355,1);transition-timing-function:cubic-bezier(0.215,.61,.355,1)}0%{opacity:0;-webkit-transform:translate3d(0,-3000px,0);transform:translate3d(0,-3000px,0)}60%{opacity:1;-webkit-transform:translate3d(0,25px,0);transform:translate3d(0,25px,0)}75%{-webkit-transform:translate3d(0,-10px,0);transform:translate3d(0,-10px,0)}90%{-webkit-transform:translate3d(0,5px,0);transform:translate3d(0,5px,0)}100%{-webkit-transform:none;transform:none}}@keyframes bounceInDown{0%,100%,60%,75%,90%{-webkit-transition-timing-function:cubic-bezier(0.215,.61,.355,1);transition-timing-function:cubic-bezier(0.215,.61,.355,1)}0%{opacity:0;-webkit-transform:translate3d(0,-3000px,0);-ms-transform:translate3d(0,-3000px,0);transform:translate3d(0,-3000px,0)}60%{opacity:1;-webkit-transform:translate3d(0,25px,0);-ms-transform:translate3d(0,25px,0);transform:translate3d(0,25px,0)}75%{-webkit-transform:translate3d(0,-10px,0);-ms-transform:translate3d(0,-10px,0);transform:translate3d(0,-10px,0)}90%{-webkit-transform:translate3d(0,5px,0);-ms-transform:translate3d(0,5px,0);transform:translate3d(0,5px,0)}100%{-webkit-transform:none;-ms-transform:none;transform:none}}.bounceInDown{-webkit-animation-name:bounceInDown;animation-name:bounceInDown}@-webkit-keyframes bounceInLeft{0%,100%,60%,75%,90%{-webkit-transition-timing-function:cubic-bezier(0.215,.61,.355,1);transition-timing-function:cubic-bezier(0.215,.61,.355,1)}0%{opacity:0;-webkit-transform:translate3d(-3000px,0,0);transform:translate3d(-3000px,0,0)}60%{opacity:1;-webkit-transform:translate3d(25px,0,0);transform:translate3d(25px,0,0)}75%{-webkit-transform:translate3d(-10px,0,0);transform:translate3d(-10px,0,0)}90%{-webkit-transform:translate3d(5px,0,0);transform:translate3d(5px,0,0)}100%{-webkit-transform:none;transform:none}}@keyframes bounceInLeft{0%,100%,60%,75%,90%{-webkit-transition-timing-function:cubic-bezier(0.215,.61,.355,1);transition-timing-function:cubic-bezier(0.215,.61,.355,1)}0%{opacity:0;-webkit-transform:translate3d(-3000px,0,0);-ms-transform:translate3d(-3000px,0,0);transform:translate3d(-3000px,0,0)}60%{opacity:1;-webkit-transform:translate3d(25px,0,0);-ms-transform:translate3d(25px,0,0);transform:translate3d(25px,0,0)}75%{-webkit-transform:translate3d(-10px,0,0);-ms-transform:translate3d(-10px,0,0);transform:translate3d(-10px,0,0)}90%{-webkit-transform:translate3d(5px,0,0);-ms-transform:translate3d(5px,0,0);transform:translate3d(5px,0,0)}100%{-webkit-transform:none;-ms-transform:none;transform:none}}.bounceInLeft{-webkit-animation-name:bounceInLeft;animation-name:bounceInLeft}@-webkit-keyframes bounceInRight{0%,100%,60%,75%,90%{-webkit-transition-timing-function:cubic-bezier(0.215,.61,.355,1);transition-timing-function:cubic-bezier(0.215,.61,.355,1)}0%{opacity:0;-webkit-transform:translate3d(3000px,0,0);transform:translate3d(3000px,0,0)}60%{opacity:1;-webkit-transform:translate3d(-25px,0,0);transform:translate3d(-25px,0,0)}75%{-webkit-transform:translate3d(10px,0,0);transform:translate3d(10px,0,0)}90%{-webkit-transform:translate3d(-5px,0,0);transform:translate3d(-5px,0,0)}100%{-webkit-transform:none;transform:none}}@keyframes bounceInRight{0%,100%,60%,75%,90%{-webkit-transition-timing-function:cubic-bezier(0.215,.61,.355,1);transition-timing-function:cubic-bezier(0.215,.61,.355,1)}0%{opacity:0;-webkit-transform:translate3d(3000px,0,0);-ms-transform:translate3d(3000px,0,0);transform:translate3d(3000px,0,0)}60%{opacity:1;-webkit-transform:translate3d(-25px,0,0);-ms-transform:translate3d(-25px,0,0);transform:translate3d(-25px,0,0)}75%{-webkit-transform:translate3d(10px,0,0);-ms-transform:translate3d(10px,0,0);transform:translate3d(10px,0,0)}90%{-webkit-transform:translate3d(-5px,0,0);-ms-transform:translate3d(-5px,0,0);transform:translate3d(-5px,0,0)}100%{-webkit-transform:none;-ms-transform:none;transform:none}}.bounceInRight{-webkit-animation-name:bounceInRight;animation-name:bounceInRight}@-webkit-keyframes bounceInUp{0%,100%,60%,75%,90%{-webkit-transition-timing-function:cubic-bezier(0.215,.61,.355,1);transition-timing-function:cubic-bezier(0.215,.61,.355,1)}0%{opacity:0;-webkit-transform:translate3d(0,3000px,0);transform:translate3d(0,3000px,0)}60%{opacity:1;-webkit-transform:translate3d(0,-20px,0);transform:translate3d(0,-20px,0)}75%{-webkit-transform:translate3d(0,10px,0);transform:translate3d(0,10px,0)}90%{-webkit-transform:translate3d(0,-5px,0);transform:translate3d(0,-5px,0)}100%{-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}}@keyframes bounceInUp{0%,100%,60%,75%,90%{-webkit-transition-timing-function:cubic-bezier(0.215,.61,.355,1);transition-timing-function:cubic-bezier(0.215,.61,.355,1)}0%{opacity:0;-webkit-transform:translate3d(0,3000px,0);-ms-transform:translate3d(0,3000px,0);transform:translate3d(0,3000px,0)}60%{opacity:1;-webkit-transform:translate3d(0,-20px,0);-ms-transform:translate3d(0,-20px,0);transform:translate3d(0,-20px,0)}75%{-webkit-transform:translate3d(0,10px,0);-ms-transform:translate3d(0,10px,0);transform:translate3d(0,10px,0)}90%{-webkit-transform:translate3d(0,-5px,0);-ms-transform:translate3d(0,-5px,0);transform:translate3d(0,-5px,0)}100%{-webkit-transform:translate3d(0,0,0);-ms-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}}.bounceInUp{-webkit-animation-name:bounceInUp;animation-name:bounceInUp}@-webkit-keyframes bounceOut{20%{-webkit-transform:scale3d(.9,.9,.9);transform:scale3d(.9,.9,.9)}50%,55%{opacity:1;-webkit-transform:scale3d(1.1,1.1,1.1);transform:scale3d(1.1,1.1,1.1)}100%{opacity:0;-webkit-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}}@keyframes bounceOut{20%{-webkit-transform:scale3d(.9,.9,.9);-ms-transform:scale3d(.9,.9,.9);transform:scale3d(.9,.9,.9)}50%,55%{opacity:1;-webkit-transform:scale3d(1.1,1.1,1.1);-ms-transform:scale3d(1.1,1.1,1.1);transform:scale3d(1.1,1.1,1.1)}100%{opacity:0;-webkit-transform:scale3d(.3,.3,.3);-ms-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}}.bounceOut{-webkit-animation-name:bounceOut;animation-name:bounceOut;-webkit-animation-duration:.75s;animation-duration:.75s}@-webkit-keyframes bounceOutDown{20%{-webkit-transform:translate3d(0,10px,0);transform:translate3d(0,10px,0)}40%,45%{opacity:1;-webkit-transform:translate3d(0,-20px,0);transform:translate3d(0,-20px,0)}100%{opacity:0;-webkit-transform:translate3d(0,2000px,0);transform:translate3d(0,2000px,0)}}@keyframes bounceOutDown{20%{-webkit-transform:translate3d(0,10px,0);-ms-transform:translate3d(0,10px,0);transform:translate3d(0,10px,0)}40%,45%{opacity:1;-webkit-transform:translate3d(0,-20px,0);-ms-transform:translate3d(0,-20px,0);transform:translate3d(0,-20px,0)}100%{opacity:0;-webkit-transform:translate3d(0,2000px,0);-ms-transform:translate3d(0,2000px,0);transform:translate3d(0,2000px,0)}}.bounceOutDown{-webkit-animation-name:bounceOutDown;animation-name:bounceOutDown}@-webkit-keyframes bounceOutLeft{20%{opacity:1;-webkit-transform:translate3d(20px,0,0);transform:translate3d(20px,0,0)}100%{opacity:0;-webkit-transform:translate3d(-2000px,0,0);transform:translate3d(-2000px,0,0)}}@keyframes bounceOutLeft{20%{opacity:1;-webkit-transform:translate3d(20px,0,0);-ms-transform:translate3d(20px,0,0);transform:translate3d(20px,0,0)}100%{opacity:0;-webkit-transform:translate3d(-2000px,0,0);-ms-transform:translate3d(-2000px,0,0);transform:translate3d(-2000px,0,0)}}.bounceOutLeft{-webkit-animation-name:bounceOutLeft;animation-name:bounceOutLeft}@-webkit-keyframes bounceOutRight{20%{opacity:1;-webkit-transform:translate3d(-20px,0,0);transform:translate3d(-20px,0,0)}100%{opacity:0;-webkit-transform:translate3d(2000px,0,0);transform:translate3d(2000px,0,0)}}@keyframes bounceOutRight{20%{opacity:1;-webkit-transform:translate3d(-20px,0,0);-ms-transform:translate3d(-20px,0,0);transform:translate3d(-20px,0,0)}100%{opacity:0;-webkit-transform:translate3d(2000px,0,0);-ms-transform:translate3d(2000px,0,0);transform:translate3d(2000px,0,0)}}.bounceOutRight{-webkit-animation-name:bounceOutRight;animation-name:bounceOutRight}@-webkit-keyframes bounceOutUp{20%{-webkit-transform:translate3d(0,-10px,0);transform:translate3d(0,-10px,0)}40%,45%{opacity:1;-webkit-transform:translate3d(0,20px,0);transform:translate3d(0,20px,0)}100%{opacity:0;-webkit-transform:translate3d(0,-2000px,0);transform:translate3d(0,-2000px,0)}}@keyframes bounceOutUp{20%{-webkit-transform:translate3d(0,-10px,0);-ms-transform:translate3d(0,-10px,0);transform:translate3d(0,-10px,0)}40%,45%{opacity:1;-webkit-transform:translate3d(0,20px,0);-ms-transform:translate3d(0,20px,0);transform:translate3d(0,20px,0)}100%{opacity:0;-webkit-transform:translate3d(0,-2000px,0);-ms-transform:translate3d(0,-2000px,0);transform:translate3d(0,-2000px,0)}}.bounceOutUp{-webkit-animation-name:bounceOutUp;animation-name:bounceOutUp}@-webkit-keyframes fadeIn{0%{opacity:0}100%{opacity:1}}@keyframes fadeIn{0%{opacity:0}100%{opacity:1}}.fadeIn{-webkit-animation-name:fadeIn;animation-name:fadeIn}@-webkit-keyframes fadeInDown{0%{opacity:0;-webkit-transform:translate3d(0,-100%,0);transform:translate3d(0,-100%,0)}100%{opacity:1;-webkit-transform:none;transform:none}}@keyframes fadeInDown{0%{opacity:0;-webkit-transform:translate3d(0,-100%,0);-ms-transform:translate3d(0,-100%,0);transform:translate3d(0,-100%,0)}100%{opacity:1;-webkit-transform:none;-ms-transform:none;transform:none}}.fadeInDown{-webkit-animation-name:fadeInDown;animation-name:fadeInDown}@-webkit-keyframes fadeInDownBig{0%{opacity:0;-webkit-transform:translate3d(0,-2000px,0);transform:translate3d(0,-2000px,0)}100%{opacity:1;-webkit-transform:none;transform:none}}@keyframes fadeInDownBig{0%{opacity:0;-webkit-transform:translate3d(0,-2000px,0);-ms-transform:translate3d(0,-2000px,0);transform:translate3d(0,-2000px,0)}100%{opacity:1;-webkit-transform:none;-ms-transform:none;transform:none}}.fadeInDownBig{-webkit-animation-name:fadeInDownBig;animation-name:fadeInDownBig}@-webkit-keyframes fadeInLeft{0%{opacity:0;-webkit-transform:translate3d(-100%,0,0);transform:translate3d(-100%,0,0)}100%{opacity:1;-webkit-transform:none;transform:none}}@keyframes fadeInLeft{0%{opacity:0;-webkit-transform:translate3d(-100%,0,0);-ms-transform:translate3d(-100%,0,0);transform:translate3d(-100%,0,0)}100%{opacity:1;-webkit-transform:none;-ms-transform:none;transform:none}}.fadeInLeft{-webkit-animation-name:fadeInLeft;animation-name:fadeInLeft}@-webkit-keyframes fadeInLeftBig{0%{opacity:0;-webkit-transform:translate3d(-2000px,0,0);transform:translate3d(-2000px,0,0)}100%{opacity:1;-webkit-transform:none;transform:none}}@keyframes fadeInLeftBig{0%{opacity:0;-webkit-transform:translate3d(-2000px,0,0);-ms-transform:translate3d(-2000px,0,0);transform:translate3d(-2000px,0,0)}100%{opacity:1;-webkit-transform:none;-ms-transform:none;transform:none}}.fadeInLeftBig{-webkit-animation-name:fadeInLeftBig;animation-name:fadeInLeftBig}@-webkit-keyframes fadeInRight{0%{opacity:0;-webkit-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0)}100%{opacity:1;-webkit-transform:none;transform:none}}@keyframes fadeInRight{0%{opacity:0;-webkit-transform:translate3d(100%,0,0);-ms-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0)}100%{opacity:1;-webkit-transform:none;-ms-transform:none;transform:none}}.fadeInRight{-webkit-animation-name:fadeInRight;animation-name:fadeInRight}@-webkit-keyframes fadeInRightBig{0%{opacity:0;-webkit-transform:translate3d(2000px,0,0);transform:translate3d(2000px,0,0)}100%{opacity:1;-webkit-transform:none;transform:none}}@keyframes fadeInRightBig{0%{opacity:0;-webkit-transform:translate3d(2000px,0,0);-ms-transform:translate3d(2000px,0,0);transform:translate3d(2000px,0,0)}100%{opacity:1;-webkit-transform:none;-ms-transform:none;transform:none}}.fadeInRightBig{-webkit-animation-name:fadeInRightBig;animation-name:fadeInRightBig}@-webkit-keyframes fadeInUp{0%{opacity:0;-webkit-transform:translate3d(0,100%,0);transform:translate3d(0,100%,0)}100%{opacity:1;-webkit-transform:none;transform:none}}@keyframes fadeInUp{0%{opacity:0;-webkit-transform:translate3d(0,100%,0);-ms-transform:translate3d(0,100%,0);transform:translate3d(0,100%,0)}100%{opacity:1;-webkit-transform:none;-ms-transform:none;transform:none}}.fadeInUp{-webkit-animation-name:fadeInUp;animation-name:fadeInUp}@-webkit-keyframes fadeInUpBig{0%{opacity:0;-webkit-transform:translate3d(0,2000px,0);transform:translate3d(0,2000px,0)}100%{opacity:1;-webkit-transform:none;transform:none}}@keyframes fadeInUpBig{0%{opacity:0;-webkit-transform:translate3d(0,2000px,0);-ms-transform:translate3d(0,2000px,0);transform:translate3d(0,2000px,0)}100%{opacity:1;-webkit-transform:none;-ms-transform:none;transform:none}}.fadeInUpBig{-webkit-animation-name:fadeInUpBig;animation-name:fadeInUpBig}@-webkit-keyframes fadeOut{0%{opacity:1}100%{opacity:0}}@keyframes fadeOut{0%{opacity:1}100%{opacity:0}}.fadeOut{-webkit-animation-name:fadeOut;animation-name:fadeOut}@-webkit-keyframes fadeOutDown{0%{opacity:1}100%{opacity:0;-webkit-transform:translate3d(0,100%,0);transform:translate3d(0,100%,0)}}@keyframes fadeOutDown{0%{opacity:1}100%{opacity:0;-webkit-transform:translate3d(0,100%,0);-ms-transform:translate3d(0,100%,0);transform:translate3d(0,100%,0)}}.fadeOutDown{-webkit-animation-name:fadeOutDown;animation-name:fadeOutDown}@-webkit-keyframes fadeOutDownBig{0%{opacity:1}100%{opacity:0;-webkit-transform:translate3d(0,2000px,0);transform:translate3d(0,2000px,0)}}@keyframes fadeOutDownBig{0%{opacity:1}100%{opacity:0;-webkit-transform:translate3d(0,2000px,0);-ms-transform:translate3d(0,2000px,0);transform:translate3d(0,2000px,0)}}.fadeOutDownBig{-webkit-animation-name:fadeOutDownBig;animation-name:fadeOutDownBig}@-webkit-keyframes fadeOutLeft{0%{opacity:1}100%{opacity:0;-webkit-transform:translate3d(-100%,0,0);transform:translate3d(-100%,0,0)}}@keyframes fadeOutLeft{0%{opacity:1}100%{opacity:0;-webkit-transform:translate3d(-100%,0,0);-ms-transform:translate3d(-100%,0,0);transform:translate3d(-100%,0,0)}}.fadeOutLeft{-webkit-animation-name:fadeOutLeft;animation-name:fadeOutLeft}@-webkit-keyframes fadeOutLeftBig{0%{opacity:1}100%{opacity:0;-webkit-transform:translate3d(-2000px,0,0);transform:translate3d(-2000px,0,0)}}@keyframes fadeOutLeftBig{0%{opacity:1}100%{opacity:0;-webkit-transform:translate3d(-2000px,0,0);-ms-transform:translate3d(-2000px,0,0);transform:translate3d(-2000px,0,0)}}.fadeOutLeftBig{-webkit-animation-name:fadeOutLeftBig;animation-name:fadeOutLeftBig}@-webkit-keyframes fadeOutRight{0%{opacity:1}100%{opacity:0;-webkit-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0)}}@keyframes fadeOutRight{0%{opacity:1}100%{opacity:0;-webkit-transform:translate3d(100%,0,0);-ms-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0)}}.fadeOutRight{-webkit-animation-name:fadeOutRight;animation-name:fadeOutRight}@-webkit-keyframes fadeOutRightBig{0%{opacity:1}100%{opacity:0;-webkit-transform:translate3d(2000px,0,0);transform:translate3d(2000px,0,0)}}@keyframes fadeOutRightBig{0%{opacity:1}100%{opacity:0;-webkit-transform:translate3d(2000px,0,0);-ms-transform:translate3d(2000px,0,0);transform:translate3d(2000px,0,0)}}.fadeOutRightBig{-webkit-animation-name:fadeOutRightBig;animation-name:fadeOutRightBig}@-webkit-keyframes fadeOutUp{0%{opacity:1}100%{opacity:0;-webkit-transform:translate3d(0,-100%,0);transform:translate3d(0,-100%,0)}}@keyframes fadeOutUp{0%{opacity:1}100%{opacity:0;-webkit-transform:translate3d(0,-100%,0);-ms-transform:translate3d(0,-100%,0);transform:translate3d(0,-100%,0)}}.fadeOutUp{-webkit-animation-name:fadeOutUp;animation-name:fadeOutUp}@-webkit-keyframes fadeOutUpBig{0%{opacity:1}100%{opacity:0;-webkit-transform:translate3d(0,-2000px,0);transform:translate3d(0,-2000px,0)}}@keyframes fadeOutUpBig{0%{opacity:1}100%{opacity:0;-webkit-transform:translate3d(0,-2000px,0);-ms-transform:translate3d(0,-2000px,0);transform:translate3d(0,-2000px,0)}}.fadeOutUpBig{-webkit-animation-name:fadeOutUpBig;animation-name:fadeOutUpBig}@-webkit-keyframes flip{0%{-webkit-transform:perspective(400px) rotate3d(0,1,0,-360deg);transform:perspective(400px) rotate3d(0,1,0,-360deg);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}40%{-webkit-transform:perspective(400px) translate3d(0,0,150px) rotate3d(0,1,0,-190deg);transform:perspective(400px) translate3d(0,0,150px) rotate3d(0,1,0,-190deg);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}50%{-webkit-transform:perspective(400px) translate3d(0,0,150px) rotate3d(0,1,0,-170deg);transform:perspective(400px) translate3d(0,0,150px) rotate3d(0,1,0,-170deg);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}80%{-webkit-transform:perspective(400px) scale3d(.95,.95,.95);transform:perspective(400px) scale3d(.95,.95,.95);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}100%{-webkit-transform:perspective(400px);transform:perspective(400px);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}}@keyframes flip{0%{-webkit-transform:perspective(400px) rotate3d(0,1,0,-360deg);-ms-transform:perspective(400px) rotate3d(0,1,0,-360deg);transform:perspective(400px) rotate3d(0,1,0,-360deg);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}40%{-webkit-transform:perspective(400px) translate3d(0,0,150px) rotate3d(0,1,0,-190deg);-ms-transform:perspective(400px) translate3d(0,0,150px) rotate3d(0,1,0,-190deg);transform:perspective(400px) translate3d(0,0,150px) rotate3d(0,1,0,-190deg);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}50%{-webkit-transform:perspective(400px) translate3d(0,0,150px) rotate3d(0,1,0,-170deg);-ms-transform:perspective(400px) translate3d(0,0,150px) rotate3d(0,1,0,-170deg);transform:perspective(400px) translate3d(0,0,150px) rotate3d(0,1,0,-170deg);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}80%{-webkit-transform:perspective(400px) scale3d(.95,.95,.95);-ms-transform:perspective(400px) scale3d(.95,.95,.95);transform:perspective(400px) scale3d(.95,.95,.95);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}100%{-webkit-transform:perspective(400px);-ms-transform:perspective(400px);transform:perspective(400px);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}}.animated.flip{-webkit-backface-visibility:visible;-ms-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flip;animation-name:flip}@-webkit-keyframes flipInX{0%{-webkit-transform:perspective(400px) rotate3d(1,0,0,90deg);transform:perspective(400px) rotate3d(1,0,0,90deg);-webkit-transition-timing-function:ease-in;transition-timing-function:ease-in;opacity:0}40%{-webkit-transform:perspective(400px) rotate3d(1,0,0,-20deg);transform:perspective(400px) rotate3d(1,0,0,-20deg);-webkit-transition-timing-function:ease-in;transition-timing-function:ease-in}60%{-webkit-transform:perspective(400px) rotate3d(1,0,0,10deg);transform:perspective(400px) rotate3d(1,0,0,10deg);opacity:1}80%{-webkit-transform:perspective(400px) rotate3d(1,0,0,-5deg);transform:perspective(400px) rotate3d(1,0,0,-5deg)}100%{-webkit-transform:perspective(400px);transform:perspective(400px)}}@keyframes flipInX{0%{-webkit-transform:perspective(400px) rotate3d(1,0,0,90deg);-ms-transform:perspective(400px) rotate3d(1,0,0,90deg);transform:perspective(400px) rotate3d(1,0,0,90deg);-webkit-transition-timing-function:ease-in;transition-timing-function:ease-in;opacity:0}40%{-webkit-transform:perspective(400px) rotate3d(1,0,0,-20deg);-ms-transform:perspective(400px) rotate3d(1,0,0,-20deg);transform:perspective(400px) rotate3d(1,0,0,-20deg);-webkit-transition-timing-function:ease-in;transition-timing-function:ease-in}60%{-webkit-transform:perspective(400px) rotate3d(1,0,0,10deg);-ms-transform:perspective(400px) rotate3d(1,0,0,10deg);transform:perspective(400px) rotate3d(1,0,0,10deg);opacity:1}80%{-webkit-transform:perspective(400px) rotate3d(1,0,0,-5deg);-ms-transform:perspective(400px) rotate3d(1,0,0,-5deg);transform:perspective(400px) rotate3d(1,0,0,-5deg)}100%{-webkit-transform:perspective(400px);-ms-transform:perspective(400px);transform:perspective(400px)}}.flipInX{-webkit-backface-visibility:visible!important;-ms-backface-visibility:visible!important;backface-visibility:visible!important;-webkit-animation-name:flipInX;animation-name:flipInX}@-webkit-keyframes flipInY{0%{-webkit-transform:perspective(400px) rotate3d(0,1,0,90deg);transform:perspective(400px) rotate3d(0,1,0,90deg);-webkit-transition-timing-function:ease-in;transition-timing-function:ease-in;opacity:0}40%{-webkit-transform:perspective(400px) rotate3d(0,1,0,-20deg);transform:perspective(400px) rotate3d(0,1,0,-20deg);-webkit-transition-timing-function:ease-in;transition-timing-function:ease-in}60%{-webkit-transform:perspective(400px) rotate3d(0,1,0,10deg);transform:perspective(400px) rotate3d(0,1,0,10deg);opacity:1}80%{-webkit-transform:perspective(400px) rotate3d(0,1,0,-5deg);transform:perspective(400px) rotate3d(0,1,0,-5deg)}100%{-webkit-transform:perspective(400px);transform:perspective(400px)}}@keyframes flipInY{0%{-webkit-transform:perspective(400px) rotate3d(0,1,0,90deg);-ms-transform:perspective(400px) rotate3d(0,1,0,90deg);transform:perspective(400px) rotate3d(0,1,0,90deg);-webkit-transition-timing-function:ease-in;transition-timing-function:ease-in;opacity:0}40%{-webkit-transform:perspective(400px) rotate3d(0,1,0,-20deg);-ms-transform:perspective(400px) rotate3d(0,1,0,-20deg);transform:perspective(400px) rotate3d(0,1,0,-20deg);-webkit-transition-timing-function:ease-in;transition-timing-function:ease-in}60%{-webkit-transform:perspective(400px) rotate3d(0,1,0,10deg);-ms-transform:perspective(400px) rotate3d(0,1,0,10deg);transform:perspective(400px) rotate3d(0,1,0,10deg);opacity:1}80%{-webkit-transform:perspective(400px) rotate3d(0,1,0,-5deg);-ms-transform:perspective(400px) rotate3d(0,1,0,-5deg);transform:perspective(400px) rotate3d(0,1,0,-5deg)}100%{-webkit-transform:perspective(400px);-ms-transform:perspective(400px);transform:perspective(400px)}}.flipInY{-webkit-backface-visibility:visible!important;-ms-backface-visibility:visible!important;backface-visibility:visible!important;-webkit-animation-name:flipInY;animation-name:flipInY}@-webkit-keyframes flipOutX{0%{-webkit-transform:perspective(400px);transform:perspective(400px)}30%{-webkit-transform:perspective(400px) rotate3d(1,0,0,-20deg);transform:perspective(400px) rotate3d(1,0,0,-20deg);opacity:1}100%{-webkit-transform:perspective(400px) rotate3d(1,0,0,90deg);transform:perspective(400px) rotate3d(1,0,0,90deg);opacity:0}}@keyframes flipOutX{0%{-webkit-transform:perspective(400px);-ms-transform:perspective(400px);transform:perspective(400px)}30%{-webkit-transform:perspective(400px) rotate3d(1,0,0,-20deg);-ms-transform:perspective(400px) rotate3d(1,0,0,-20deg);transform:perspective(400px) rotate3d(1,0,0,-20deg);opacity:1}100%{-webkit-transform:perspective(400px) rotate3d(1,0,0,90deg);-ms-transform:perspective(400px) rotate3d(1,0,0,90deg);transform:perspective(400px) rotate3d(1,0,0,90deg);opacity:0}}.flipOutX{-webkit-animation-name:flipOutX;animation-name:flipOutX;-webkit-animation-duration:.75s;animation-duration:.75s;-webkit-backface-visibility:visible!important;-ms-backface-visibility:visible!important;backface-visibility:visible!important}@-webkit-keyframes flipOutY{0%{-webkit-transform:perspective(400px);transform:perspective(400px)}30%{-webkit-transform:perspective(400px) rotate3d(0,1,0,-15deg);transform:perspective(400px) rotate3d(0,1,0,-15deg);opacity:1}100%{-webkit-transform:perspective(400px) rotate3d(0,1,0,90deg);transform:perspective(400px) rotate3d(0,1,0,90deg);opacity:0}}@keyframes flipOutY{0%{-webkit-transform:perspective(400px);-ms-transform:perspective(400px);transform:perspective(400px)}30%{-webkit-transform:perspective(400px) rotate3d(0,1,0,-15deg);-ms-transform:perspective(400px) rotate3d(0,1,0,-15deg);transform:perspective(400px) rotate3d(0,1,0,-15deg);opacity:1}100%{-webkit-transform:perspective(400px) rotate3d(0,1,0,90deg);-ms-transform:perspective(400px) rotate3d(0,1,0,90deg);transform:perspective(400px) rotate3d(0,1,0,90deg);opacity:0}}.flipOutY{-webkit-backface-visibility:visible!important;-ms-backface-visibility:visible!important;backface-visibility:visible!important;-webkit-animation-name:flipOutY;animation-name:flipOutY;-webkit-animation-duration:.75s;animation-duration:.75s}@-webkit-keyframes lightSpeedIn{0%{-webkit-transform:translate3d(100%,0,0) skewX(-30deg);transform:translate3d(100%,0,0) skewX(-30deg);opacity:0}60%{-webkit-transform:skewX(20deg);transform:skewX(20deg);opacity:1}80%{-webkit-transform:skewX(-5deg);transform:skewX(-5deg);opacity:1}100%{-webkit-transform:none;transform:none;opacity:1}}@keyframes lightSpeedIn{0%{-webkit-transform:translate3d(100%,0,0) skewX(-30deg);-ms-transform:translate3d(100%,0,0) skewX(-30deg);transform:translate3d(100%,0,0) skewX(-30deg);opacity:0}60%{-webkit-transform:skewX(20deg);-ms-transform:skewX(20deg);transform:skewX(20deg);opacity:1}80%{-webkit-transform:skewX(-5deg);-ms-transform:skewX(-5deg);transform:skewX(-5deg);opacity:1}100%{-webkit-transform:none;-ms-transform:none;transform:none;opacity:1}}.lightSpeedIn{-webkit-animation-name:lightSpeedIn;animation-name:lightSpeedIn;-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}@-webkit-keyframes lightSpeedOut{0%{opacity:1}100%{-webkit-transform:translate3d(100%,0,0) skewX(30deg);transform:translate3d(100%,0,0) skewX(30deg);opacity:0}}@keyframes lightSpeedOut{0%{opacity:1}100%{-webkit-transform:translate3d(100%,0,0) skewX(30deg);-ms-transform:translate3d(100%,0,0) skewX(30deg);transform:translate3d(100%,0,0) skewX(30deg);opacity:0}}.lightSpeedOut{-webkit-animation-name:lightSpeedOut;animation-name:lightSpeedOut;-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}@-webkit-keyframes rotateIn{0%{-webkit-transform-origin:center;transform-origin:center;-webkit-transform:rotate3d(0,0,1,-200deg);transform:rotate3d(0,0,1,-200deg);opacity:0}100%{-webkit-transform-origin:center;transform-origin:center;-webkit-transform:none;transform:none;opacity:1}}@keyframes rotateIn{0%{-webkit-transform-origin:center;-ms-transform-origin:center;transform-origin:center;-webkit-transform:rotate3d(0,0,1,-200deg);-ms-transform:rotate3d(0,0,1,-200deg);transform:rotate3d(0,0,1,-200deg);opacity:0}100%{-webkit-transform-origin:center;-ms-transform-origin:center;transform-origin:center;-webkit-transform:none;-ms-transform:none;transform:none;opacity:1}}.rotateIn{-webkit-animation-name:rotateIn;animation-name:rotateIn}@-webkit-keyframes rotateInDownLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate3d(0,0,1,-45deg);transform:rotate3d(0,0,1,-45deg);opacity:0}100%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:none;transform:none;opacity:1}}@keyframes rotateInDownLeft{0%{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate3d(0,0,1,-45deg);-ms-transform:rotate3d(0,0,1,-45deg);transform:rotate3d(0,0,1,-45deg);opacity:0}100%{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:none;-ms-transform:none;transform:none;opacity:1}}.rotateInDownLeft{-webkit-animation-name:rotateInDownLeft;animation-name:rotateInDownLeft}@-webkit-keyframes rotateInDownRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate3d(0,0,1,45deg);transform:rotate3d(0,0,1,45deg);opacity:0}100%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:none;transform:none;opacity:1}}@keyframes rotateInDownRight{0%{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate3d(0,0,1,45deg);-ms-transform:rotate3d(0,0,1,45deg);transform:rotate3d(0,0,1,45deg);opacity:0}100%{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:none;-ms-transform:none;transform:none;opacity:1}}.rotateInDownRight{-webkit-animation-name:rotateInDownRight;animation-name:rotateInDownRight}@-webkit-keyframes rotateInUpLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate3d(0,0,1,45deg);transform:rotate3d(0,0,1,45deg);opacity:0}100%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:none;transform:none;opacity:1}}@keyframes rotateInUpLeft{0%{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate3d(0,0,1,45deg);-ms-transform:rotate3d(0,0,1,45deg);transform:rotate3d(0,0,1,45deg);opacity:0}100%{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:none;-ms-transform:none;transform:none;opacity:1}}.rotateInUpLeft{-webkit-animation-name:rotateInUpLeft;animation-name:rotateInUpLeft}@-webkit-keyframes rotateInUpRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate3d(0,0,1,-90deg);transform:rotate3d(0,0,1,-90deg);opacity:0}100%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:none;transform:none;opacity:1}}@keyframes rotateInUpRight{0%{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate3d(0,0,1,-90deg);-ms-transform:rotate3d(0,0,1,-90deg);transform:rotate3d(0,0,1,-90deg);opacity:0}100%{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:none;-ms-transform:none;transform:none;opacity:1}}.rotateInUpRight{-webkit-animation-name:rotateInUpRight;animation-name:rotateInUpRight}@-webkit-keyframes rotateOut{0%{-webkit-transform-origin:center;transform-origin:center;opacity:1}100%{-webkit-transform-origin:center;transform-origin:center;-webkit-transform:rotate3d(0,0,1,200deg);transform:rotate3d(0,0,1,200deg);opacity:0}}@keyframes rotateOut{0%{-webkit-transform-origin:center;-ms-transform-origin:center;transform-origin:center;opacity:1}100%{-webkit-transform-origin:center;-ms-transform-origin:center;transform-origin:center;-webkit-transform:rotate3d(0,0,1,200deg);-ms-transform:rotate3d(0,0,1,200deg);transform:rotate3d(0,0,1,200deg);opacity:0}}.rotateOut{-webkit-animation-name:rotateOut;animation-name:rotateOut}@-webkit-keyframes rotateOutDownLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;opacity:1}100%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0,0,1,45deg);transform:rotate(0,0,1,45deg);opacity:0}}@keyframes rotateOutDownLeft{0%{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;opacity:1}100%{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0,0,1,45deg);-ms-transform:rotate(0,0,1,45deg);transform:rotate(0,0,1,45deg);opacity:0}}.rotateOutDownLeft{-webkit-animation-name:rotateOutDownLeft;animation-name:rotateOutDownLeft}@-webkit-keyframes rotateOutDownRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;opacity:1}100%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate3d(0,0,1,-45deg);transform:rotate3d(0,0,1,-45deg);opacity:0}}@keyframes rotateOutDownRight{0%{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;opacity:1}100%{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate3d(0,0,1,-45deg);-ms-transform:rotate3d(0,0,1,-45deg);transform:rotate3d(0,0,1,-45deg);opacity:0}}.rotateOutDownRight{-webkit-animation-name:rotateOutDownRight;animation-name:rotateOutDownRight}@-webkit-keyframes rotateOutUpLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;opacity:1}100%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate3d(0,0,1,-45deg);transform:rotate3d(0,0,1,-45deg);opacity:0}}@keyframes rotateOutUpLeft{0%{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;opacity:1}100%{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate3d(0,0,1,-45deg);-ms-transform:rotate3d(0,0,1,-45deg);transform:rotate3d(0,0,1,-45deg);opacity:0}}.rotateOutUpLeft{-webkit-animation-name:rotateOutUpLeft;animation-name:rotateOutUpLeft}@-webkit-keyframes rotateOutUpRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;opacity:1}100%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate3d(0,0,1,90deg);transform:rotate3d(0,0,1,90deg);opacity:0}}@keyframes rotateOutUpRight{0%{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;opacity:1}100%{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate3d(0,0,1,90deg);-ms-transform:rotate3d(0,0,1,90deg);transform:rotate3d(0,0,1,90deg);opacity:0}}.rotateOutUpRight{-webkit-animation-name:rotateOutUpRight;animation-name:rotateOutUpRight}@-webkit-keyframes hinge{0%{-webkit-transform-origin:top left;transform-origin:top left;-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out}20%,60%{-webkit-transform:rotate3d(0,0,1,80deg);transform:rotate3d(0,0,1,80deg);-webkit-transform-origin:top left;transform-origin:top left;-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out}40%,80%{-webkit-transform:rotate3d(0,0,1,60deg);transform:rotate3d(0,0,1,60deg);-webkit-transform-origin:top left;transform-origin:top left;-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;opacity:1}100%{-webkit-transform:translate3d(0,700px,0);transform:translate3d(0,700px,0);opacity:0}}@keyframes hinge{0%{-webkit-transform-origin:top left;-ms-transform-origin:top left;transform-origin:top left;-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out}20%,60%{-webkit-transform:rotate3d(0,0,1,80deg);-ms-transform:rotate3d(0,0,1,80deg);transform:rotate3d(0,0,1,80deg);-webkit-transform-origin:top left;-ms-transform-origin:top left;transform-origin:top left;-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out}40%,80%{-webkit-transform:rotate3d(0,0,1,60deg);-ms-transform:rotate3d(0,0,1,60deg);transform:rotate3d(0,0,1,60deg);-webkit-transform-origin:top left;-ms-transform-origin:top left;transform-origin:top left;-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;opacity:1}100%{-webkit-transform:translate3d(0,700px,0);-ms-transform:translate3d(0,700px,0);transform:translate3d(0,700px,0);opacity:0}}.hinge{-webkit-animation-name:hinge;animation-name:hinge}@-webkit-keyframes rollIn{0%{opacity:0;-webkit-transform:translate3d(-100%,0,0) rotate3d(0,0,1,-120deg);transform:translate3d(-100%,0,0) rotate3d(0,0,1,-120deg)}100%{opacity:1;-webkit-transform:none;transform:none}}@keyframes rollIn{0%{opacity:0;-webkit-transform:translate3d(-100%,0,0) rotate3d(0,0,1,-120deg);-ms-transform:translate3d(-100%,0,0) rotate3d(0,0,1,-120deg);transform:translate3d(-100%,0,0) rotate3d(0,0,1,-120deg)}100%{opacity:1;-webkit-transform:none;-ms-transform:none;transform:none}}.rollIn{-webkit-animation-name:rollIn;animation-name:rollIn}@-webkit-keyframes rollOut{0%{opacity:1}100%{opacity:0;-webkit-transform:translate3d(100%,0,0) rotate3d(0,0,1,120deg);transform:translate3d(100%,0,0) rotate3d(0,0,1,120deg)}}@keyframes rollOut{0%{opacity:1}100%{opacity:0;-webkit-transform:translate3d(100%,0,0) rotate3d(0,0,1,120deg);-ms-transform:translate3d(100%,0,0) rotate3d(0,0,1,120deg);transform:translate3d(100%,0,0) rotate3d(0,0,1,120deg)}}.rollOut{-webkit-animation-name:rollOut;animation-name:rollOut}@-webkit-keyframes zoomIn{0%{opacity:0;-webkit-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}50%{opacity:1}}@keyframes zoomIn{0%{opacity:0;-webkit-transform:scale3d(.3,.3,.3);-ms-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}50%{opacity:1}}.zoomIn{-webkit-animation-name:zoomIn;animation-name:zoomIn}@-webkit-keyframes zoomInDown{0%{opacity:0;-webkit-transform:scale3d(.1,.1,.1) translate3d(0,-1000px,0);transform:scale3d(.1,.1,.1) translate3d(0,-1000px,0);-webkit-animation-timing-function:cubic-bezier(0.55,.055,.675,.19);animation-timing-function:cubic-bezier(0.55,.055,.675,.19)}60%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(0,60px,0);transform:scale3d(.475,.475,.475) translate3d(0,60px,0);-webkit-animation-timing-function:cubic-bezier(0.175,.885,.32,1);animation-timing-function:cubic-bezier(0.175,.885,.32,1)}}@keyframes zoomInDown{0%{opacity:0;-webkit-transform:scale3d(.1,.1,.1) translate3d(0,-1000px,0);-ms-transform:scale3d(.1,.1,.1) translate3d(0,-1000px,0);transform:scale3d(.1,.1,.1) translate3d(0,-1000px,0);-webkit-animation-timing-function:cubic-bezier(0.55,.055,.675,.19);animation-timing-function:cubic-bezier(0.55,.055,.675,.19)}60%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(0,60px,0);-ms-transform:scale3d(.475,.475,.475) translate3d(0,60px,0);transform:scale3d(.475,.475,.475) translate3d(0,60px,0);-webkit-animation-timing-function:cubic-bezier(0.175,.885,.32,1);animation-timing-function:cubic-bezier(0.175,.885,.32,1)}}.zoomInDown{-webkit-animation-name:zoomInDown;animation-name:zoomInDown}@-webkit-keyframes zoomInLeft{0%{opacity:0;-webkit-transform:scale3d(.1,.1,.1) translate3d(-1000px,0,0);transform:scale3d(.1,.1,.1) translate3d(-1000px,0,0);-webkit-animation-timing-function:cubic-bezier(0.55,.055,.675,.19);animation-timing-function:cubic-bezier(0.55,.055,.675,.19)}60%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(10px,0,0);transform:scale3d(.475,.475,.475) translate3d(10px,0,0);-webkit-animation-timing-function:cubic-bezier(0.175,.885,.32,1);animation-timing-function:cubic-bezier(0.175,.885,.32,1)}}@keyframes zoomInLeft{0%{opacity:0;-webkit-transform:scale3d(.1,.1,.1) translate3d(-1000px,0,0);-ms-transform:scale3d(.1,.1,.1) translate3d(-1000px,0,0);transform:scale3d(.1,.1,.1) translate3d(-1000px,0,0);-webkit-animation-timing-function:cubic-bezier(0.55,.055,.675,.19);animation-timing-function:cubic-bezier(0.55,.055,.675,.19)}60%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(10px,0,0);-ms-transform:scale3d(.475,.475,.475) translate3d(10px,0,0);transform:scale3d(.475,.475,.475) translate3d(10px,0,0);-webkit-animation-timing-function:cubic-bezier(0.175,.885,.32,1);animation-timing-function:cubic-bezier(0.175,.885,.32,1)}}.zoomInLeft{-webkit-animation-name:zoomInLeft;animation-name:zoomInLeft}@-webkit-keyframes zoomInRight{0%{opacity:0;-webkit-transform:scale3d(.1,.1,.1) translate3d(1000px,0,0);transform:scale3d(.1,.1,.1) translate3d(1000px,0,0);-webkit-animation-timing-function:cubic-bezier(0.55,.055,.675,.19);animation-timing-function:cubic-bezier(0.55,.055,.675,.19)}60%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(-10px,0,0);transform:scale3d(.475,.475,.475) translate3d(-10px,0,0);-webkit-animation-timing-function:cubic-bezier(0.175,.885,.32,1);animation-timing-function:cubic-bezier(0.175,.885,.32,1)}}@keyframes zoomInRight{0%{opacity:0;-webkit-transform:scale3d(.1,.1,.1) translate3d(1000px,0,0);-ms-transform:scale3d(.1,.1,.1) translate3d(1000px,0,0);transform:scale3d(.1,.1,.1) translate3d(1000px,0,0);-webkit-animation-timing-function:cubic-bezier(0.55,.055,.675,.19);animation-timing-function:cubic-bezier(0.55,.055,.675,.19)}60%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(-10px,0,0);-ms-transform:scale3d(.475,.475,.475) translate3d(-10px,0,0);transform:scale3d(.475,.475,.475) translate3d(-10px,0,0);-webkit-animation-timing-function:cubic-bezier(0.175,.885,.32,1);animation-timing-function:cubic-bezier(0.175,.885,.32,1)}}.zoomInRight{-webkit-animation-name:zoomInRight;animation-name:zoomInRight}@-webkit-keyframes zoomInUp{0%{opacity:0;-webkit-transform:scale3d(.1,.1,.1) translate3d(0,1000px,0);transform:scale3d(.1,.1,.1) translate3d(0,1000px,0);-webkit-animation-timing-function:cubic-bezier(0.55,.055,.675,.19);animation-timing-function:cubic-bezier(0.55,.055,.675,.19)}60%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(0,-60px,0);transform:scale3d(.475,.475,.475) translate3d(0,-60px,0);-webkit-animation-timing-function:cubic-bezier(0.175,.885,.32,1);animation-timing-function:cubic-bezier(0.175,.885,.32,1)}}@keyframes zoomInUp{0%{opacity:0;-webkit-transform:scale3d(.1,.1,.1) translate3d(0,1000px,0);-ms-transform:scale3d(.1,.1,.1) translate3d(0,1000px,0);transform:scale3d(.1,.1,.1) translate3d(0,1000px,0);-webkit-animation-timing-function:cubic-bezier(0.55,.055,.675,.19);animation-timing-function:cubic-bezier(0.55,.055,.675,.19)}60%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(0,-60px,0);-ms-transform:scale3d(.475,.475,.475) translate3d(0,-60px,0);transform:scale3d(.475,.475,.475) translate3d(0,-60px,0);-webkit-animation-timing-function:cubic-bezier(0.175,.885,.32,1);animation-timing-function:cubic-bezier(0.175,.885,.32,1)}}.zoomInUp{-webkit-animation-name:zoomInUp;animation-name:zoomInUp}@-webkit-keyframes zoomOut{0%{opacity:1}50%{opacity:0;-webkit-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}100%{opacity:0}}@keyframes zoomOut{0%{opacity:1}50%{opacity:0;-webkit-transform:scale3d(.3,.3,.3);-ms-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}100%{opacity:0}}.zoomOut{-webkit-animation-name:zoomOut;animation-name:zoomOut}@-webkit-keyframes zoomOutDown{40%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(0,-60px,0);transform:scale3d(.475,.475,.475) translate3d(0,-60px,0);-webkit-animation-timing-function:cubic-bezier(0.55,.055,.675,.19);animation-timing-function:cubic-bezier(0.55,.055,.675,.19)}100%{opacity:0;-webkit-transform:scale3d(.1,.1,.1) translate3d(0,2000px,0);transform:scale3d(.1,.1,.1) translate3d(0,2000px,0);-webkit-transform-origin:center bottom;transform-origin:center bottom;-webkit-animation-timing-function:cubic-bezier(0.175,.885,.32,1);animation-timing-function:cubic-bezier(0.175,.885,.32,1)}}@keyframes zoomOutDown{40%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(0,-60px,0);-ms-transform:scale3d(.475,.475,.475) translate3d(0,-60px,0);transform:scale3d(.475,.475,.475) translate3d(0,-60px,0);-webkit-animation-timing-function:cubic-bezier(0.55,.055,.675,.19);animation-timing-function:cubic-bezier(0.55,.055,.675,.19)}100%{opacity:0;-webkit-transform:scale3d(.1,.1,.1) translate3d(0,2000px,0);-ms-transform:scale3d(.1,.1,.1) translate3d(0,2000px,0);transform:scale3d(.1,.1,.1) translate3d(0,2000px,0);-webkit-transform-origin:center bottom;-ms-transform-origin:center bottom;transform-origin:center bottom;-webkit-animation-timing-function:cubic-bezier(0.175,.885,.32,1);animation-timing-function:cubic-bezier(0.175,.885,.32,1)}}.zoomOutDown{-webkit-animation-name:zoomOutDown;animation-name:zoomOutDown}@-webkit-keyframes zoomOutLeft{40%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(42px,0,0);transform:scale3d(.475,.475,.475) translate3d(42px,0,0)}100%{opacity:0;-webkit-transform:scale(.1) translate3d(-2000px,0,0);transform:scale(.1) translate3d(-2000px,0,0);-webkit-transform-origin:left center;transform-origin:left center}}@keyframes zoomOutLeft{40%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(42px,0,0);-ms-transform:scale3d(.475,.475,.475) translate3d(42px,0,0);transform:scale3d(.475,.475,.475) translate3d(42px,0,0)}100%{opacity:0;-webkit-transform:scale(.1) translate3d(-2000px,0,0);-ms-transform:scale(.1) translate3d(-2000px,0,0);transform:scale(.1) translate3d(-2000px,0,0);-webkit-transform-origin:left center;-ms-transform-origin:left center;transform-origin:left center}}.zoomOutLeft{-webkit-animation-name:zoomOutLeft;animation-name:zoomOutLeft}@-webkit-keyframes zoomOutRight{40%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(-42px,0,0);transform:scale3d(.475,.475,.475) translate3d(-42px,0,0)}100%{opacity:0;-webkit-transform:scale(.1) translate3d(2000px,0,0);transform:scale(.1) translate3d(2000px,0,0);-webkit-transform-origin:right center;transform-origin:right center}}@keyframes zoomOutRight{40%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(-42px,0,0);-ms-transform:scale3d(.475,.475,.475) translate3d(-42px,0,0);transform:scale3d(.475,.475,.475) translate3d(-42px,0,0)}100%{opacity:0;-webkit-transform:scale(.1) translate3d(2000px,0,0);-ms-transform:scale(.1) translate3d(2000px,0,0);transform:scale(.1) translate3d(2000px,0,0);-webkit-transform-origin:right center;-ms-transform-origin:right center;transform-origin:right center}}.zoomOutRight{-webkit-animation-name:zoomOutRight;animation-name:zoomOutRight}@-webkit-keyframes zoomOutUp{40%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(0,60px,0);transform:scale3d(.475,.475,.475) translate3d(0,60px,0);-webkit-animation-timing-function:cubic-bezier(0.55,.055,.675,.19);animation-timing-function:cubic-bezier(0.55,.055,.675,.19)}100%{opacity:0;-webkit-transform:scale3d(.1,.1,.1) translate3d(0,-2000px,0);transform:scale3d(.1,.1,.1) translate3d(0,-2000px,0);-webkit-transform-origin:center bottom;transform-origin:center bottom;-webkit-animation-timing-function:cubic-bezier(0.175,.885,.32,1);animation-timing-function:cubic-bezier(0.175,.885,.32,1)}}@keyframes zoomOutUp{40%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(0,60px,0);-ms-transform:scale3d(.475,.475,.475) translate3d(0,60px,0);transform:scale3d(.475,.475,.475) translate3d(0,60px,0);-webkit-animation-timing-function:cubic-bezier(0.55,.055,.675,.19);animation-timing-function:cubic-bezier(0.55,.055,.675,.19)}100%{opacity:0;-webkit-transform:scale3d(.1,.1,.1) translate3d(0,-2000px,0);-ms-transform:scale3d(.1,.1,.1) translate3d(0,-2000px,0);transform:scale3d(.1,.1,.1) translate3d(0,-2000px,0);-webkit-transform-origin:center bottom;-ms-transform-origin:center bottom;transform-origin:center bottom;-webkit-animation-timing-function:cubic-bezier(0.175,.885,.32,1);animation-timing-function:cubic-bezier(0.175,.885,.32,1)}}.zoomOutUp{-webkit-animation-name:zoomOutUp;animation-name:zoomOutUp}"},{"title":"","date":"2018-05-11T08:14:14.493Z","updated":"2018-05-11T08:14:14.493Z","comments":true,"path":"edu/js/nav.js","permalink":"http://www.JiShuXuePai.com/edu/js/nav.js","excerpt":"","text":"!function(t,o,e,i){\"use strict\";var n=\"navScroll\",s={scrollTime:700,navItemClassName:\"\",navHeight:\"auto\",mobileDropdown:!1,mobileDropdownClassName:\"\",mobileBreakpoint:1024,scrollSpy:!1};function l(o,e){this.element=o,this.options=t.extend({},s,e),this._defaults=s,this._name=n,this.init()}l.prototype={init:function(){var e,i,n,s,l,a,r;if(i=(e=this).options,n=e.element,s=\"\"===i.navItemClassName?t(n).find(\"a\"):t(n).find(\".\"+i.navItemClassName),\"auto\"===i.navHeight)l=t(n).height();else{if(isNaN(i.navHeight))throw new Error(\"'navHeight' only accepts 'auto' or a number as value.\");l=i.navHeight}(s.on(\"click\",function(e){var s,r;void 0!==(s=this.href.split(\"#\")[1])&&(e.preventDefault(),r=t(\"#\"+s).offset().top),a=void 0!==t(this).data(\"scrolltime\")?t(this).data(\"scrolltime\"):i.scrollTime,i.mobileDropdown&&t(o).width()>=0&&t(o).width()s;s++){n>i[s].offset().top-60&&(o.removeClass(\"active\"),t(o[s]).addClass(\"active\"))}}},t.fn[n]=function(o){return this.each(function(){t.data(this,\"plugin_\"+n)||t.data(this,\"plugin_\"+n,new l(this,o))})}}(jQuery,window,document);"},{"title":"","date":"2018-05-11T08:14:14.497Z","updated":"2018-05-11T08:14:14.497Z","comments":true,"path":"tech/animate/case.html","permalink":"http://www.JiShuXuePai.com/tech/animate/case.html","excerpt":"","text":""},{"title":"","date":"2018-05-11T08:14:14.792Z","updated":"2018-05-11T08:14:14.792Z","comments":true,"path":"tech/bom/case.html","permalink":"http://www.JiShuXuePai.com/tech/bom/case.html","excerpt":"","text":""},{"title":"动画交互与游戏 教学讲义","date":"2018-05-11T08:14:14.791Z","updated":"2018-05-11T08:14:14.791Z","comments":true,"path":"tech/animate/notes.html","permalink":"http://www.JiShuXuePai.com/tech/animate/notes.html","excerpt":"","text":"第一章 动效技术简介技术兼容性性能灵活性MovieCCCgifAACjavaScriptA-BA+CSS3A-A+BCanvasAA+ASVGAA+A第一节 css3 动画transition 过渡动画transition: 样式 时间 速度函数 延迟时间;样式: all 所有样式速度函数：linear 匀速 | ease 平滑过渡 | ease-in 加速 | ease-out 减速|ease-in-out 先加后减;transform 变形动画rotate(); 旋转 | scale(); 缩放 | translate(); 位移 | skew(); 倾斜rotate(30deg) | 数字 1.2 | 100px | skew(50deg)animation 关键帧动画(1) 定义动画@Keyframes animateName{​ 0% { css }​ 50% { css }​ 100% { css }}(2) 应用动画.box{ animation: 动画名称 时间 速度函数 延迟时间 播放次数; }[参数说明]播放次数 infinite | number;animation-direction normal | alternate; (alternate 奇数次反向播放)[ animation-fill-mode ] 属性定义在动画开始前和开始后的操作;none 不改变默认行为;forwards 动画完成后停留在最后一帧;backwards 有delay时动画开始应用起始帧属性;both 同时具有forwards 和 backwards效果;第二节 jquery动画jquery 动效show() | hide() | fadeIn() | fadeOut() | slideDown() | slideUp()animate() 动画$(“#box”).animate({“width”:”500px”},1000,”linear”,function(){ callback() })注意: animate 只对数值型属性生效;数值型属性 : opacity width ; 字符型属性： background-color ;stop() | finish() 的区别stop() 执行当前动画前，停止正在运行的所有动画;finish() 执行当前动画前，完成正在运行的动画;第二章 2D动画实例第一节 渐序动画(项目1)1234567891011121314151617181920212223242526272829303132333435363738394041424344[思路分析]1 静态html结构2 jq实现dom结构3 delay实现延迟隐藏4 递归延迟隐藏5 随机隐藏[实现步骤]1 静态html结构(总结规律)&lt;div style=&quot;background-position: 0 0&quot;&gt;&lt;/div&gt;&lt;div style=&quot;background-position: -196px 0;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;background-position: -392px 0;&quot;&gt;&lt;/div&gt; 2 jq实现dom结构for(var i=0;i&lt;25;i++)&#123; var x = i%5; var y = parseInt(i/5); $(&quot;&lt;div&gt;&lt;/div&gt;&quot;). css(&#123;&quot;background-position&quot;:-196*x+&quot;px &quot;+(-100)*y+&quot;px&quot;,&#125;) .appendTo($wrap);&#125;3 delay实现延迟隐藏$item.each(function(index,item)&#123; var time = index*150; $item.eq(index).delay(time).animate(&#123;&quot;opacity&quot;:0.1&#125;,150);&#125;) 4 递归延迟隐藏function hide(index)&#123; $item.eq(index).delay(index*150).animate(&#123;&quot;opacity&quot;:0.1&#125;,150); if(index&lt;24)&#123; hide(index+1); &#125;&#125;5 随机隐藏 $item.each(function(index,item)&#123; var time = Math.random()*300 // [100,1000) $item.eq(index).delay(time).animate(&#123;&quot;opacity&quot;:0.1&#125;,500); &#125;)第二节 图片分散(作业)[要求] 点击大图，分割成n个小图片，向四周分散; 再次点击聚拢;1234567[提示] 图片尺寸: 980*500; w= 980/xNum; (xNum 水平向数量)h= 500/yNum; (yNum 垂直向数量)[分散时间]var t=Math.random()*3+2;css(&#123;&quot;transition&quot;:&quot;transform &quot;+t+&quot;s,opacity &quot;+t+&quot;s&quot;&#125;)第三节 照片墙(项目2)123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869[思路分析]1 初始化显示25个div容器;2 显示25张小图;3 显示单张大图 4 点击小图和大图切换;5 散开时的位置与动效;[具体步骤]1 初始化显示25个div容器;for(var i=0;i&lt;25;i++)&#123; var x = i%5; var y = parseInt(i/5); $(&quot;&lt;div&gt;&lt;div class=&apos;pic&apos;&gt;&lt;/div&gt;&lt;/div&gt;&quot;) .css(&#123; left:x*196+&quot;px&quot;, top:y*100+&quot;px&quot; &#125;) .appendTo($wrap)&#125;2 显示25张小图;function showSmall()&#123; $(&quot;.wrap&gt;div&quot;).each(function(index)&#123; $(this).find(&quot;.pic&quot;) .css(&#123; &quot;background-image&quot;:&quot;url(img/&quot;+index+&quot;.jpg)&quot;, &quot;background-size&quot;:&quot;cover&quot; &#125;) &#125;)&#125;3 显示单张大图 function showBig(index)&#123; $(&quot;.pic&quot;).css(&#123; &quot;background-image&quot;:&quot;url(img/&quot;+index+&quot;.jpg)&quot;, &quot;background-size&quot;:&quot;auto&quot; &#125;) $(&quot;.pic&quot;).each(function(i)&#123; var x = i%5; var y = parseInt(i/5); $(this).css(&#123; &quot;background-position&quot;:(-1)*196*x+&quot;px &quot; +(-1)*100*y+&quot;px&quot; &#125;) &#125;)&#125;4 点击小图和大图切换;$(&quot;.wrap&gt;div&quot;).click(function()&#123; var index = $(this).index(); if(isSmall)&#123; showBig(index); &#125;else&#123; showSmall(); &#125; isSmall = !isSmall;&#125;)5 散开时的位置与动效;var disX = (x-2)*50;var disY = (y-2)*50;var deg = Math.random()*60-30// [-30deg,30deg)$(this).css(&#123; &quot;transform&quot;:&quot;translate(&quot;+disX+&quot;px,&quot;+disY+&quot;px) rotate(&quot;+deg+&quot;deg)&quot;,&#125;);第四节 手风琴(作业)[思路分析]DOM结构如下所示，(1) 4个item水平布局,溢出隐藏;(2) ul宽度为item的2倍,2个li宽度与item同;(3) 当点击按钮时，ul复位, 重设当前图,ul移动;1234567891011[参考网址]http://www.jq22.com/yanshi4546&lt;div class=&quot;wrap&quot;&gt; &lt;div class=&quot;item&quot;&gt; &lt;ul&gt; &lt;li&gt;&lt;/li&gt; &lt;li&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt;&lt;/div&gt;第三章 3D变形动画第一节 3D动画基础[ 3D空间 ]属性描述transform-styleflat(默认)\\preserve-3d 3d空间;transform-originleft bottom 变形基线perspective3000px 景深;perspective-origin20% 50% 用户视角[ 3D动画 ]rotateX(100deg)| rotateY() | rotateZ() [ 范例 ] 沿着x y z 轴旋转的平面, 理解3d动画;transform-origin:left bottom; 变形基线(点);第二节 3D-立方体(项目3)123456789101112[知识点] 伪元素选择器: first-child nth-child nth-type-of1 6个面拼合为立方体;#box li:nth-child(1)&#123; background-color:rgba(240,87,90,0.49); transform:rotateX(0deg) translateZ(100px)&#125;#box li:nth-child(2)&#123; background-color:rgba(120,87,33,0.49); transform:rotateX(90deg) translateZ(100px)&#125;2 对父容器应用关键帧动画;@keyframes roll&#123; 0%&#123; transform:rotateX(0deg) rotateY(0deg); &#125; 100%&#123; transform: rotateX(360deg) rotateY(360deg)&#125; &#125;第三节 3D-banner动画(项目4)12345678910111213141516171819[旋转设置]transform-origin:bottom // 基线旋转;[关键帧动画]@keyframes s1&#123; 0%&#123;transform:rotateX(0); opacity:1&#125; 100%&#123; transform:rotateX(-180deg); opacity:0 &#125;&#125;[旋转事件]$(&quot;img&quot;).eq(page).removeClass().addClass(&quot;s1&quot;);[正向旋转]var num = 0;$(&quot;.btn&quot;).click(function()&#123; num++; if(num&gt;count)&#123; num = 0&#125; // count 为banner图片总数; $(&quot;img&quot;).eq(num).removeClass().addClass(&quot;s1&quot;);&#125;)3D-旋转木马(作业)1234567891011121314151617181920212223[图片3D分布] .img01 &#123; transform: rotateY(0deg) translateZ(300px); &#125; .img02 &#123; transform: rotateY(40deg) translateZ(300px); &#125; .img03 &#123; transform: rotateY(80deg) translateZ(300px); &#125;[关键帧动画]@keyframes rotateY360 &#123; from &#123; transform: rotateY(0deg); &#125; to &#123; transform: rotateY(360deg); &#125; &#125;[任务]按钮 -- 正向旋转, 反向旋转;【作业2】3D-旋转相册(作业)123[任务]http://www.jq22.com/yanshi2898第四节 3D-旋转长方体(项目5)1234567891 拼合立方体.item:nth-child(1)&#123; background-image:url(img/0.jpg); transform:rotateX(0deg) translateZ(250px) &#125;2 重置角度count++;$(&quot;.item&quot;).each(function(index)&#123; var deg=index*90-count*90; transform:&quot;rotateX(&quot;+deg+&quot;deg) translateZ(250px)&quot;; &#125;)第五节 3D-切割旋转(项目6)12345678910111213141516171819202122231 初始化dom结构&lt;div class=&quot;item&quot;&gt; &lt;div class=&quot;pic&quot;&gt;&lt;/div&gt; &lt;div class=&quot;pic&quot;&gt;&lt;/div&gt; &lt;div class=&quot;pic&quot;&gt;&lt;/div&gt; &lt;div class=&quot;pic&quot;&gt;&lt;/div&gt;&lt;/div&gt;2 设定pic的样式var delay=index*0.15;var deg = index*90;css(&#123; x:w*i+&quot;px&quot;, &quot;background-position&quot;:(-1)*w*i+&quot;px 0px&quot;, &quot;transition&quot;:&quot;transform .5s &quot;+delay+&quot;s&quot;, &quot;transform&quot;:&quot;rotateX(&quot;+deg+&quot;deg) translateZ(250px)&quot;&#125;)3 点击旋转事件num++var deg=index*90-num*90; css(&#123;transform:&quot;rotateX(&quot;+deg+&quot;deg) translateZ(250px)&quot;&#125;)第四章 canvas动画第一节 canvas基础知识是HTML5出现的新标签，像所有的dom对象一样，它有自己本身的属性、方法和事件，其中就有绘图的方法，js能够调用它来进行绘图 。12345678[基本用法]&lt;canvas id=”cvs”&gt;&lt;/canvas&gt;Var cvs=document.getElementById(“cvs”); // 获取js对象Var context=cvs. getContext(&quot;2d&quot;); // 创建画布对象//context对象封装了很多绘图的方法可以调用; 注意： html5暂时不提供3D效果。绘制矩形1234567891011121314canvas绘制图像有两种基本方法，分别是： fill(填充) stroke(描边) [颜色设定] context.fillStyle=&quot;red&quot; //填充颜色 context.strokeStyle=&quot;green&quot; //边框颜色[边框宽度]context.lineWidth=&quot;10&quot; context.fillRect (x,y,width,height); // 绘制矩形面context.strokeRect (x,y,width,height); // 绘制矩形边框第二节 cavas 网格文字(项目7)12345678910111213141516171819202122231 绘制网格var size=20;for(var x=0;x&lt;100;x++)&#123; for(var y=0;y&lt;100;y++)&#123; ctx.strokeRect(x*size,y*size,size,size); &#125;&#125;2 网格上绘制文字var arr = [ [0,0,0,0,0,0,0,0,0,0], [0,0,0,1,0,0,0,0,0,0], [0,0,0,1,0,0,0,0,0,0], [0,0,0,1,1,1,0,0,0,0], [0,0,0,0,0,0,0,0,0,0]]for(var y=0;y&lt;arr.length;y++)&#123; for(var x=0;x&lt;arr[y].length;x++)&#123; if(arr[x][y]==1)&#123; ctx.fillRect(x*w,y*w,w,w); &#125; &#125;&#125;绘制线条123456789101112ctx.beginPath(); // 开始路径ctx.strokeStyle=&quot;red&quot; // 参数设定ctx.moveTo(20,20); // 起点ctx.lineTo(200,20); // 目标ctx.closePath(); // 闭合路径ctx.stroke(); // 描边绘制ctx.fill(); // 填充颜色[橡皮擦]context.clearRect(x,y,width,height) //清除矩形区域绘制圆123456789101112context.arc(x, y, radius, starAngle,endAngle, anticlockwise) 顺时针(false) 默认值 |逆时针（true）ctx.beginPath();ctx.lineWidth=”5”; // 描边;ctx.moveTo(200,200); // 起点ctx.arc(200,200,100,0,Math.PI/2); // 圆弧ctx.closePath(); // 闭合路径ctx.fill(); ctx.stroke();第三节 闪烁的星星(项目8)1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162[思路分析]1 变大的圆;3 让圆变大再缩小;3 构造函数绘制圆;4 构造函数创建100个圆(颜色,坐标随机); 5 让100个圆 大小变化; 1 变大的圆 var r = 50;function draw()&#123; r++; // 绘制圆 &#125;setInterval(draw,30)2 圆的变大与缩小var r = 50; max = 200; min = 30;var canGrow = true;function draw()&#123; if(canGrow)&#123; r++; if(r&gt;max)&#123; canGrow = false; &#125; &#125;else&#123; r-- if(r&lt;min)&#123; canGrow = true; &#125; &#125;&#125;3 构造函数绘制圆function Star(x,y,r,c)&#123; this.x=x; this.y=y; this.r=r; this.c=c; this.draw = function()&#123; // 绘制圆 &#125;&#125;var star = new Star(200,200,100,&quot;red&quot;)star.draw();4 绘制100个圆;var stars=[];for(var i=0;i&lt;100;i++)&#123; // 随机参数 x,y,r,c var star=new Star(x,y,r,max,c,s); stars.push(star);&#125;for(var i=0;i&lt;100;i++)&#123; stars[i].draw();&#125;// 5 让100个圆大小变化this.draw = function()&#123; //大小切换 &#125;function draw()&#123; ctx.clearRect(0,0,500,500); for(var i=0;i&lt;stars.length;i++)&#123; stars[i].draw(); &#125;&#125;setInterval(draw,30);第四节 圆环进度条(项目9)12345678910111213141516171819202122232425262728293031323334353637383940414243[思路分析]1 绘制背景圆环2 绘制前景圆环3 让前景环移动4 让前景环增长5 增加文字内容[知识点] ctx.lineCap=&quot;round&quot;;1 绘制背景圆环 ctx.beginPath(); ctx.strokeStyle=&quot;#87ceeb&quot;; ctx.lineWidth=16; ctx.arc(200,200,100,0,Math.PI*2); ctx.stroke();2 绘制前景圆环 var start =0; var end = start + Math.PI/23 让前景环移动 setInterval(draw,100); var p=0; var t=10; function draw()&#123; p++; if(p&gt;10) &#123;return false;&#125; var start = Math.PI*3/2*(p/t); var rate = 0.4*(p/t); var end = start + Math.PI*2*rate; &#125;4 比率计算目标值：Math.PI*2*0.4*(progress/total)var rate = 0.4*(progress/total);var end = Math.PI*2*rate+start;5 显示文字信息 ctx.font=&quot;25px arial&quot;;ctx.fillStyle=&quot;orange&quot;;ctx.textAlign=&quot;center&quot;;ctx.textBaseline=&quot;middle&quot;;ctx.fillText(text,200,200)第五节 黑板(项目10)123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172[思路分析]1) 绘制射线2) 绘制折线3) 自由绘制4) 右键擦除5) 完善样式;1 绘制射线cvs.onmousedown=function(ev)&#123; ctx.moveTo(200,200); ctx.lineTo(ev.clientX,ev.clientY); ctx.stroke();&#125;2 绘制折线 var startX=200;var startY=200;cvs.onmousedown=function(ev)&#123; ctx.moveTo(startX,startY), ctx.lineTo(ev.clientX,ev.clientY); ctx.stroke(); startX=ev.clientX; startY=ev.clientY;&#125;3 自由绘制 cvs.onmousedown=function(e)&#123; var startX = e.offsetX; var startY = e.offsetY; cvs.onmousemove = function(e)&#123; ctx.moveTo(startX,startY), ctx.lineTo(e.offsetX,e.offsetY); ctx.stroke(); startX = e.offsetX; startY = e.offsetY; &#125;&#125;cvs.onmouseup=function()&#123; cvs.onmousemove=null ctx.closePath();&#125;4 右键擦除cvs.onmousedown=function(e)&#123; ctx.beginPath(); startX=e.offsetX; startY=e.offsetY; var num = e.button; cvs.onmousemove=function(e)&#123; if(num==0)&#123; parint(e)&#125; if(num==2) &#123; clear(e)&#125; &#125;&#125;function clear(e)&#123; var w = 50; var x = e.offsetX - w/2; var y = e.offsetY - w/2; ctx.clearRect(x,y,w,w);&#125;5 样式完善ctx.lineCap = &quot;round&quot;cvs.oncontextmenu=function()&#123; return false;&#125;注意事项: 开始绘制路径，beginPath(); 结束绘制使用 closePath(); 否则橡皮擦不生效;第六节 canvas时钟(项目11)1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859[思路分析]1) 绘制60条射线;2) 绘制刻度线;3) 区分整点刻度;4) 秒针移动;5) 分针时针移动;1 绘制60条射线function draw()&#123; var a = (Math.PI*2/60)*num; var x2 = x0 + r*Math.cos(a); var y2 = y0 + r*Math.sin(a); // 绘制射线 num++;&#125;for(var i=0;i&lt;60;i++)&#123; draw();&#125;2 绘制刻度线var x1 = x0+ (r-len)*Math.cos(a);var y1 = y1+ (r-len)*Math.sin(a);var x2 = x0+ r*Math.cos(a);var y2 = y1+ r*Math.sin(a);ctx.moveTo(x1,y1);ctx.lineTo(x2,y2);3 整点刻度线if(num%5==0)&#123; len = 15; lineWidth=5; ctx.strokeStyle=&quot;red&quot;&#125;else&#123; len = 10; ctx.lineWidth=2; ctx.strokeStyle=&quot;black&quot;;&#125;4 绘制秒针var date = new Date();var s = date.getSeconds();var a = (Math.PI*2/60)*s-Math.PI/2;var mx = x0 + (r-30)*Math.cos(a)var my = y0 + (r-30)*Math.sin(a);5 秒针移动function sLine()&#123; ctx.clearRect(); mark(); // 绘制刻度 var date = new Date(); var s= date.getSeconds(); // 绘制秒针&#125;setInterval(sLine,1000);第五章 svg动画第一节svg基础知识svg简介SVG 是一种使用 XML 描述 2D 图形的语言, svg中每个图形都是一个dom元素，并支持事件响应,通过动态改变元素的属性来实现动画, svg为矢量图，放大不会失真;svg的特点不依赖分辨率支持事件处理器适合带有大型渲染区域的应用程序（比如谷歌地图）复杂度高会减慢渲染速度（任何过度使用 DOM 的应用都不快）不适合游戏应用Canvas简介在canvas画布上绘制形状，进行渲染为各种图形，实现动画是是擦除后重新绘制,因此canvas的图形是不单独支持事件的。canvas特点:依赖分辨率不支持事件处理器弱的文本渲染能力能够以 .png 或 .jpg 格式保存结果图像最适合图像密集型的游戏，其中的许多对象会被频繁重绘svg基本图形12345678910111213// 绘制线条&lt;svg width=&quot;500&quot; height=&quot;500&quot;&gt; &lt;line x1=&quot;100&quot; y1=&quot;100&quot; x2=&quot;300&quot; y2=&quot;300&quot; stroke=&quot;green&quot; stroke-width=&quot;3&quot;&gt;&lt;/line&gt;&lt;/svg&gt;// 绘制圆&lt;circle cx=&quot;150&quot; cy=&quot;150&quot; r=&quot;100&quot; stroke=&quot;green&quot; stroke‐width=&quot;8&quot; fill=&quot;yellow&quot; /&gt;// 绘制矩形&lt;rect x=&quot;50&quot; y=&quot;50&quot; width=&quot;300&quot; height=&quot;200&quot; fill=&quot;blue&quot; stroke‐width=10 stroke=&quot;black&quot; /&gt;// 圆角矩形&lt;rect x=&quot;50&quot; y=&quot;50&quot; rx=&quot;20&quot; ry=&quot;20&quot; width=&quot;300&quot; height=&quot;200&quot; fill=&quot;blue&quot; stroke‐width=2stroke=&quot;red&quot; /&gt;// 折线&lt;path stroke=&quot;red&quot; d=&quot;M250 250 L300 400&quot;&gt;&lt;/path&gt;第二节 svg地图(项目12)【范例】选中省份123456789101112// 选中当前省份var index = provinces.index(this);provinces.attr(&quot;fill&quot;, normalColor);provinces.eq(index).attr(&quot;fill&quot;, selectedColor);// 省份多选if (find === ‐1) &#123; selectedData.push(index); $(this).attr(&quot;fill&quot;, selectedColor);&#125; else &#123; selectedData.splice(find, 1); $(this).attr(&quot;fill&quot;, normalColor);&#125;第三节 svg 签名(项目13)12345属性: stroke‐dasharray 控制用来描边的点划线图案范式。属性: stroke-dashoffset 点划线的偏移两点距离公式:dis = Math.sqrt(Math.pow((x1-x2),2)+Math.pow((y1-y2),2));"},{"title":"动效交互与游戏","date":"2018-05-11T08:14:14.791Z","updated":"2018-05-11T08:14:14.791Z","comments":true,"path":"tech/animate/relative.html","permalink":"http://www.JiShuXuePai.com/tech/animate/relative.html","excerpt":"","text":""},{"title":"DOM 教学讲义","date":"2018-05-11T08:14:15.841Z","updated":"2018-05-11T08:14:15.841Z","comments":true,"path":"tech/bom/notes.html","permalink":"http://www.JiShuXuePai.com/tech/bom/notes.html","excerpt":"","text":"第一章 BOMBOM (browser object model) 浏览器对象模型第一节 window对象我们学习js语言，是要操作浏览器中的内容，要操作就要先找到要操作的东西，浏览器将js要操作的所有东西打包成一个对象，供js操作，这个对象就是window对象window对象是js的顶级对象（全局对象，宿主对象）可以全局访问window的属性和方法，在使用的时候，可以省略window123window.alert(111)alert(111) //此处省略window//用js语言声明的变量是window的属性，用js声明的函数，是window全局变量存放在window中，不用var声明的变量是全局变量12var a = \"火星时代\";alert(window.a) //火星时代第二节 BOM 属性BOM作为浏览器对象，包含六大属性，这些属性本身也是对象，其中，document属性被W3C定义为DOM。1 history 历史记录12345window.history.go(1) //前进（跳转）window.history.go(-1) //后退（跳转）window.history.forward() //前进window.history.back() //后退//浏览器中的前进后退按钮就是操作的这些方法2 location 定位1234window.location.href='http://www.baidu.com/'; //跳转地址window.location.reload() //刷新页面//&lt;a&gt;标签可以跳转页面，js的location属性也可以跳转页面3 navigator 导航12window.navigator.userAgent //可以读取用户的相关信息，如浏览器类型、版本、操作系统类型、内核（移动端）、浏览器引擎类型等4 screen 屏幕123window.screen.width //返回当前屏幕宽度(分辨率值) window.screen.height //返回当前屏幕高度(分辨率值) document.documentElement.clientWidth //浏览器窗口宽度（后面会讲解，用作对比）5 frames 框架集123&lt;frameset rows=\"150,*,150\" cols=\"*\"&gt; &lt;-- 参考案例 --&gt;&lt;/frameset&gt;6 document 文档（DOM）document是BOM属性中最重要的一个，后面详细讲解第三节 BOM方法BOM提供了一系列的全局方法，方便随时调用。简而言之，这些方法都是浏览器提供的。1. BOM弹框alert( ) 警告弹框confirm( ) 确认弹框12345if(confirm( \"你确定吗？\" ))&#123; //点击确定之后执行的代码&#125;else&#123; //点击取消之后执行的代码&#125;prompt( ) 提示输入弹框1oBox.innerHTML = prompt( \"请输入内容\" );confirm和prompt因样式难看，已经被淘汰2. BOM定时器setTimeout() 超时定时器1234setTimeout(function()&#123; //只执行一次 console.log(\"火星时代\")&#125;,1000)//一秒之后控制台输出 火星时代setInterval( ) 间隔定时器1234setInterval(function()&#123; //会无限执行，除非清除掉计时器 console.log(\"火星时代\")&#125;,1000) //单位毫秒 1秒=1000毫秒//每隔一秒控制台输出 火星时代取消定时器计时器有一个返回值，代表当前的定时器，这个标识是唯一的。将返回值赋值给一个变量，使用清除计时器的方法即可1234567//将计时器的返回值赋值给一个变量var timer = setInterval(function()&#123;&#125;,1000);//计时器方法清除这个变量clearInterval(timer);//------------------------------------var timer1 = setTimeout(function()&#123;&#125;,1000);clearTimeout(timer1);间隔定时器的小套路1 将计时器返回值赋值给一个变量2 间隔计时器内部有一个计数器在变化3 执行计数器，当计数器达到程序的要求时，清除计时器123456var i=0; //计数器var timer = null; //计时器的变量timer = setInterval(function()&#123; console.log(i) //代码块 if(i==10)&#123; clearInterval( timer) &#125; /判断条件，清除计时器&#125;,1000);数据格式整理编程==数据+算法案例：红绿灯点击div，div颜色在两个颜色之间转换点击div，在三个颜色之间转换点击按钮，div在三个颜色之间转换点击按钮，计时器div在三个颜色之间转换两个按钮，分别控制计时器开始/暂停一个按钮，控制计时器开始/暂停案例：判断星期几定义一个函数，通过传参，判断参数不同，输出星期几定义函数，数组，判断参数不同，输出星期几第四节 BOM和DOM标准BOM 没有标准DOM w3c提供dom标准，css标准DOM标准和方法在一直扩充JavaScript ECMA提供标准第二章 获取DOM对象第一节 DOMDOM (document object model 文档对象模型)每个载入浏览器的 HTML 文档都会成为 Document 对象。Document 对象使我们可以从脚本中对 HTML 页面中的所有元素进行访问（读取和赋值）。第二节 获取DOM对象得方法页面交互的核心就是操作DOM元素，其中，第一步就是要找到要操作的DOM对象1. getElementById( )通过id获取DOM对象（唯一对象）以函数返回值的形式返回找到的对象如果没有找到，则返回null12var myBox = document.getElementById('box');//找到的元素是唯一的对象2. getElementsByTagName( )通过标签获取DOM对象（对象集合）以函数返回值的形式返回找到的对象集合。如果没有找到任何元素，返回一个空对象集合，转化成布尔值为true123//在文档中找到标签名是div的所有标签var divList = document.getElementsByTagName('div');//可以在document下面直接 查找1234var myBox = myBox.getElementById('box');//在myBox里面，找到标签名是div的所有标签var divList = document.getElementsByTagName('div');//也可以在特定的元素下面查找，查找的范围不一样3. getElementsByClassName( )通过页面中标签的class属性值获取DOM对象（对象集合）以函数返回值的形式返回找到的对象集合。如果没有找到任何元素，返回一个空对象集合，转化成布尔值为true12//在文档中，找到所有class名为sub_nav的标签var divList = document.getElementsByClassName('sub_nav');通过getElementsByTagName和getElementsByClassName找到的事一个对象集合，类似于一个数组，包含着所有查找到的对象。即使只找到了一个对象，也是对象集合。对象集合跟数组类似，可以通过下标查找集合中的对象，也有length属性对象集合的length是只读的，不能修改12345//数组的长度可以修改var arr = [\"火\",\"星\",\"时\",\"代\"];arr.length = 2;console.log(arr.length) // 2console.log(arr) // [\"火\",\"星\"]12345&lt;div&gt;1&lt;/div&gt; &lt;div&gt;1&lt;/div&gt; &lt;div&gt;1&lt;/div&gt; &lt;div&gt;1&lt;/div&gt; &lt;div&gt;1&lt;/div&gt;var divList = document.getElementsByTagName('div'); //对象集合console.log(divList.length) //5divList.length = 3; //对象集合的长度不能修改console.log(divList.length) //5想要操作对象集合中的对象，要在对象集合后面加索引值才能找到具体的对象123&lt;div&gt;1&lt;/div&gt; &lt;div&gt;1&lt;/div&gt; &lt;div&gt;1&lt;/div&gt; &lt;div&gt;1&lt;/div&gt; &lt;div&gt;1&lt;/div&gt;var divList = document.getElementsByTagName('div'); //对象集合divList[1].style.background = \"red\";//第二个div背景变成红色第三节 遍历对象集合for循环：使用for循环可以遍历对象集合中所有的对象1234var divList = document.getElementsByClassName('sub_nav');for(var i=0; i&lt;divList.length; i++)&#123; //语法三条语句，第三条不加“;”号 divListp[i].style.background = 'red';&#125;案例：点击按钮，所有li改变颜色案例：点击按钮，所有li添加菜谱案例：点击按钮，每个li逐次添加菜谱案例：点击按钮，计时器操控逐次添加菜谱第四节 节点方式找对象1. DOM树DOM结构就象树一样，从文档根—document，逐步分支展开每一个元素，都可以看作是树的一个分支节点每一个元素（节点）之间都存在着如下的一些关系：根节点 父节点 子节点 兄弟节点DOM树2. 查找节点父节点 —parentNode第一级所有子节点 —children第一个子节点 —firstElementChild最后一个子节点 —lastElementChild前一个兄弟节点 —previousElementSibling后一个兄弟节点 —nextElementSibling第三章 操作DOM对象属性和内容任何一个html标签都包括标签名、内容、属性，本章节讲解如何操作一个标签第一节 操作html标签1. 标签名tagName读取标签名 tagName读取出来的标签名字全部是大写英文字母1234567&lt;div&gt; &lt;span&gt;&lt;/span&gt; &lt;/div&gt;var box = document.getElementsByTagName('div')[0];var text = document.getElementsByTagName('span')[0];console.log(box.tagName)// DIVconsole.log(text.tagName)// SPAN2. 标签内容 (innerHTML|innerText)标签内容：innerHTML | innerText读取内容：obj.innerHTMLobj.innerText设置内容：obj.innerHTML = “火星时代”;obj.innerText = “火星时代”;innerHTML 和 innerText 的区别在设置标签内容的时候，innerHTML 能够将字符串中的标签名识别出来。而innerText 不会识别，只能当字符串使用12oBox.innerHTML = \"&lt;h1&gt;能识别出来h1标签&lt;/h1&gt;\";oBox.innerText = \"&lt;h1&gt;不能识别出来h1标签，双引号内部的字符串都会被当成字符串&lt;/h1&gt;\";innerHTML的坑在用字符串方法增加innerHTML 时，会覆盖原有内容，原有内容绑定的方法将消失1234oBox.innerHTML += \"&lt;p&gt;火星时代&lt;/p&gt;\";//等价于下一行oBox.innerHTML = oBox.innerHTML + \"&lt;p&gt;火星时代&lt;/p&gt;\";//相当于从新复制//oBox原有标签中的内容所绑定的方法，会失效//原因 i+=1 ====&gt; i=i+1,被从新赋值了3. html标签的属性标签属性分类html标签的属性叫做attribute 分为三类全局属性 id class style title等，每个标签都有这些属性自有属性 有些标签有自己的属性，如：href disabled自定义属性 data- 用户自己定义的属性，如data-index。多用于记录数据12&lt;div id=\"box\" class=\"item\" title=\"标题\" data-index=\"1\"&gt;&lt;/div&gt;&lt;!-- div是标签名 id class title data-index 都是标签的属性 --&gt;操作HTML标签的属性attribute读取标签属性 var attr = obj.getAttribute(‘name’)设置标签的属性 obj.setAttribute(“name”,”value”)判断是否有某个属性 var boo = obj.hasAttribute(“name”)删除属性 obj.removeAttribute(“name”)有些属性用attribute操作不方便disabled checked selected 使用对象的.语法第二节 操作DOM对象1. 对象的特性 property操作一个对象，就要先找到这个对象，这个对象在初始化时，把html标签的全局属性和自有属性设置为对象的特性,还有很多其他特性。标签上面的自定义属性， 不会被设置成对象的特性12345678var myBox = document.getElementById('box');/*myBox = &#123; id:\"myBox\", className:\"\", title:\"\",&#125;*/读取对象的属性使用 . 语法读取对象的属性使用 [ ] 语法读取对象的属性，[]符号中添加的属性名是一个字符串12console.log( myBox.id )console.log( myBox[\"id\"] ) //中括号加\"\"设置对象的属性使用 . 语法设置对象的属性使用 [ ] 语法设置对象的属性12myBox.className = \"header\";myBox['className'] = \"header\";通过定义对象的属性，我们可以做很多事情，比如记录一些数据，索引值等等12345var aLi = document.getElementsByTagName('li');for(var i=0; i&lt;aLi.length; i++)&#123; aLi[i].index = i; //给每一个li设置一个属性index&#125;;console.log(aLi[2].index); //22. 特定的特性DOM样式href属性: 如css引用路径1document.getElementsByTagName('link')[0].href = 'base.css'src属性: 如图片引用的路径1document.getElementById('bigImg').src = 'images/pic01.jpg'设置style属性123oBox.style.backgroundColor = 'red';//oBox.stylebackground-color //background-color 中的“-”在js语法中是减号，因此改成backgroundColor读取style样式 只能读取行内样式，因此不建议用这个。12var a = obj.style.width; //这样只能读取出来行内样式，读取不了css样式表，而我们写样式，都写在样式表里面，不会写在行内getComputedStyle(“元素”, “伪类”) 可以获取当前元素所有最终使用的CSS属性值读取出来的数据是字符串如果没有修改元素的属性，读取出来的就是css样式表中的属性值，如果修改过样式，则读取出来的是最终的属性值12345var style = getComputedStyle(oBox, null) //读取oBox的样式console.log(style.width) //355px 读取出来的是字符串//如果想读取该元素的为元素的属性，如下var style = getComputedStyle(oBox, ':after')console.log(style.width) //35px 读取出来的是字符串dom元素尺寸offset 偏移 （当元素的属性display为none 的情况下读取不出来）offsetWidth 宽度(width+padding+border)offsetHeight 高度(height+padding+border)offsetLeft 左 计算到有定位属性（position）的父级边缘offsetTop 上 计算到有定位属性（position）的父级offsetParent 父级 有定位属性（position）的父级，如果其父元素一直没有定位属性，则返回body只能读取，不能赋值 赋值用obj.style.widthclient- 客户端clientWidth —获取对象可见内容的宽度，不包括滚动条，不包括边框；clientHeight — 获取对象可见内容的高度，不包括滚动条，不包括边框；案例：变宽动画案例：定位动画案例：shouCenter第四章 操作DOM间的关系之前我们都是在操作页面中已有的dom元素通过js可以对dom元素进行创建、插入、替换等操作。此操作是交互操作的重要部分。第一节创建DOM对象1. document.createElement语法： document.createElement( ‘div’ )一个参数，要创建的标签的名字一定是document.createElement，固定语法，不能该表创建的元素，是在内存级别 ，我们看不到，如果要放到页面中，要使用js语法操作创建的一个元素，多次插入页面中，也还是一个元素，而不是页面中有很多相同的元素2. 克隆语法：obj.cloneNode(true) ;克隆出来的对象，也是在内存级别中12var new_obj = obj.cloneNode(true);//true:包含子元素，false只复制当前元素，不复制子元素克隆出来的对象是新元素第二节 插入节点1. appendChildbox.appendChild( elm ) 把elm插入到box内（尾部）2. insertBeforebox.insertBefore( a,b) box盒子内，把a元素插入b元素之前案例：根据数组，创建表格第三节 替换元素box.replaceChild( a, b) box盒子内，用a元素替换掉b元素第四节 删除元素box.removeChild(a ) 把box内的a元素删除案例： alertBox案例：写好页面，点击按钮，盒子显示案例：动态生成dom元素，显示案例：生成元素后，居中显示案例：点击关闭标签，关闭盒子案例：添加模态层第五章 事件用户在浏览网页时，会产生各种各样的交互事件，比如鼠标点击事件、敲击键盘事件等。这样的事件行为都是通过操作DOM上的一类特殊属性来实现的——–DOM事件，不同的DOM事件会有不同的触发条件和交互效果。有些DOM事件是所有DOM对象都有的，而有些DOM事件，是部分DOM对象独有的。第一节 什么是事件不同标签，有相同的事件，也有不同的事件很多标签都有onclick事件，select有onchange事件(内容发生改变)，input有onblur事件(失去焦点)console.dir(oBox),能看到这个对象有很多事件，在没有定义的时候，这些事件的值都是空当 事件 发生的时候，要做什么事（函数）———- 为了做一件事oBox.onclick = function(){}第二节 事件绑定1. 赋值方式通过为DOM对象的事件属性赋值一个函数的方式，为DOM元素绑定事件，当该对象的事件被触发时，调用这个函数，例如:1234var oDiv=document.getElementById('box');oDiv.onclick=function()&#123; //为oDiv绑定鼠标的点击(onclick)事件,当点击这个div时,这个函数将会运行 alert('hello world'); //系统提示框&#125;;2. 事件监听addEventListener(‘type’,fn,false ) 增加事件监听 (可以为一个元素，同时绑定多个事件)type为触发函数的事件类型，fn为事件触发时执行的函数，false为事件冒泡阶段触发，如果第三个参数改成true，则为捕获阶段触发绑定的事件不加on onclick==》click onmouseenter==&gt; mouseenter时间监听方法一个事件，可以绑定不同的函数，在该事件触发时，绑定在该事件下的所有函数都会触发123456789101112131415oBox.addEventlistener('click',function()&#123; alert(\"hxsd\");&#125;,false);oBox.addEventlistener('click',function()&#123; alert(222);&#125;,false);//点击oBox时候，会弹两次弹框//-----------------------------oBox1.onclick = function()&#123; alert(111)&#125;;oBox1.onclick = function()&#123;//从新赋值 alert(222) &#125;//点击时候只会弹出一个222removeEventListener(‘type’,fn,false ) 删除事件监听第三节 事件的触发（调用）谁调用事件处理函数？？—函数只有调用才能执行;123456document.onclick = run; //点击触发函数function run()&#123; console.log(\"函数运行了\")&#125;；run(); //直接调用函数第四节 事件分类1. window事件onload 加载（某个页面或图像被完成）123window.onload =function()&#123; //页面加载完成时候，再运行函数，多用于script标签写在body前面的时候&#125;案例：documentReady函数。onresize 窗口或框架被调整尺寸（调整浏览器大小）onscroll 滚动条事件页面滚动条高度：页面滚动出浏览器的高度。12345//读取滚动条的高度。浏览器兼容问题var scrolltop = document.documentElement.scrollTop || document.body.scrollTop;//赋值document.documentElement.scrollTop = 100案例：调整窗口改变div大小,滚动滚轮，改变div颜色案例：回到顶部2. 鼠标事件onclick 鼠标点击ondblclick 鼠标双击onmousedown 鼠标按键按下onmouseup 鼠标按键被松开onmouseenter 鼠标进入某元素onmouseleave 鼠标离开某元素onmousemove 鼠标移动oncontextmenu 右键菜单 （有的教科书叫上下文菜单）onmousewheel 谷歌浏览器鼠标滚轮事件ev.wheelDelta 判断向上滚动或者向下滚动123456oBox.onmousewheel = function(ev)&#123; console.log(ev.wheelDelta)&#125;//向上滚动的时候，得到的数值是150//向下滚动的时候，得到的数值是-150//可以根据数值的正负判断鼠标滚轮的滚动方向DOMMouseScroll 火狐浏览器鼠标滚轮事件ev.detail 判断向上滚动或者向下滚动123456oBox.addEventListener('DOMMouseScroll',function(ev)&#123; console.log(ev.detail)&#125;,false)//向上滚动的时候，得到的数值是-3//向下滚动的时候，得到的数值是3//可以根据数值的正负判断鼠标滚轮的滚动方向滚轮事件兼容写法123456789101112function mouseWheel(obj,fn)&#123;//obj：在某个对象是滚动 fn：回调函数，做什么事情 if(window.navigator.userAgent.indexOf(\"Firefox\") !=-1)&#123;//火狐 obj.addEventListener('DOMMouseScroll',wheelFn,false) &#125;else&#123; obj.onmousewheel = wheelFn;//谷歌 &#125; function wheelFn(ev)&#123;//判断滚动方向，返回布尔值 向上返回false ，向下返回true var direct = ev.wheelDelta ?ev.wheelDelta&lt;0 : ev.detail&gt;0; //120&lt;0 或 -3&gt;0 fn&amp;&amp;fn(direct);//布尔值，实参 ev.preventDefault(); &#125;&#125;3. input事件onblur 元素失去焦点onfocus 元素获得焦点input输入框input外边框css样式：1input&#123; outline: none; border:1px #666 solid&#125;onchange 内容改变时触发js读取select的值就是选择框显示的option的valueselect选择时会触发123456&lt;select&gt; &lt;option value=\"1\"&gt;A&lt;/option&gt; &lt;option value=\"2\" selected&gt;B&lt;/option&gt; &lt;option value=\"3\"&gt;C&lt;/option&gt;&lt;/select&gt;&lt;!-- 此时select默认选中的是第二个option，这个select的值也是2 --&gt;读取和设置表单的值 value123var oInput = document.getElementsByTagName('input')[0];console.log( oInput.value );//读取value值oInput.value = \"火星时代\"; //设置value值isNaN(a) 判断a是不是NaN如果a是数字，返回falsea不是数字，返回true4. 键盘事件键盘事件onkeydown 按键按下onkeypress 按键按下并释放onkeyup 按键释放案例：可选计算器第五节 事件对象（Event）鼠标在在页面上滑动，肯定是鼠标的onmousemve事件，如何得到鼠标的坐标值呢？document上按键，能触发事件，怎么知道我按的是哪一个按键？一定会有个地方存储着这些值，方便我们去读取。获取事件数据，不同的事件会有不同数据1. 什么是事件对象绑定在事件上的匿名函数，只可以有一个参数，这个参数就代表事件对象事件对象代表事件的状态，比如事件在其中发生的元素、键盘按键的状态、鼠标的位置、鼠标按钮的状态。123456oBox.onclick = function(ev)&#123; // 参数名：ev || event || e 或者任意名字都可以 //ev就是事件对象 console.log( ev.clientX); //鼠标距离浏览器窗口的横坐标值 console.log( ev.clientY); //纵坐标 //鼠标点击事件的 事件对象是鼠标事件对象，这个对象里面又存放了很多跟鼠标相关的属性&#125;2. 事件对象的相关属性鼠标:鼠标相关的事件 函数中的事件对象就是鼠标对象，里面存放的属性和方法都跟键盘有关ev.button 鼠标按钮 0：左键 1：中键 2：右键ev.clientX 鼠标指针的水平坐标ev.clientY 鼠标指针的垂直坐标案例：点击div，获取鼠标的横坐标，纵坐标值案例：获取鼠标的横坐标，纵坐标值赋值给div的left，top案例：解决div跟随鼠标跳动的bug案例：鼠标移动，div跟随移动案例：抬起鼠标，清楚事件键盘:键盘相关的事件 函数中的事件对象就是键盘对象，里面存放的属性和方法都跟键盘有关ev.keyCode键盘编号ev.ctrlKey”Ctrl” 键按下 ev.ctrlKey==1ev.altKey”Alt” 键按下 ev.altKey==1ev.shiftKey”Shift”键按下 ev.shiftKey==1案例：键盘控制div移动第六节 事件流1. 默认事件很多的网页元素都会有默认的行为，比如说当你点击一下超链接a标签的时候，它会有一个跳转的行为；当你在网页上点鼠标右键时会出现一个右键菜单；这些行为，并不是通过绑定函数来实现的，这类行为被称为对象的默认行为阻止默认行为：event.preventDefault() （w3c规范）案例：阻止a链接，阻止框选文字，阻止右键菜单2. 事件流在点击页面中某个元素的时候，先点到的元素，还是先点到的document？事件捕获 （document &gt; body &gt; ev.targrt）事件从最不精确的对象(document 对象)开始触发，然后到最精确(也可以在窗口级别捕获事件，不过必须由开发人员特别指定)。事件目标 ev.targrt事件冒泡 ( ev.targrt &gt; body &gt;document )事件按照从最特定的事件目标到最不特定的事件目标(document对象)的顺序触发。注意：触发子元素的事件时候，会把父元素相同的事件也触发了;focus blur change scroll submit 没有冒泡onclick 会冒泡 onmousedown onmouseup事件 要分别进行阻止onkeypress 会冒泡 onkeydown onkeyup事件W3C定义事件流：同时支持两种事件模型：捕获型事件和冒泡型事件，但是，捕获型事件先发生。从document对象开始，到目标元素，回到document对象结束。阻止事件冒泡 ev.stopPropagation() （w3c规范）3. 事件目标事件目标 ev.targrt鼠标真正作用在了什么元素上，那这个元素就是事件目标。事件目标通常和事件委派一起使用4. 事件委派(delegate)把事件委托到父元素上，利用冒泡原理，当子元素点击时，由于冒泡原理，事件会冒泡到父元素上，父元素上面的事件就会触发执行。通过判断事件的“目标元素”来触发父级上绑定的事件ev.currentTarget真正绑定事件的元素123oBox.onclick =function(ev)&#123; //ev.currentTarget =&gt;oBox&#125;作用不用分别为子元素绑定事件为未知元素绑定事件案例添加个性标签，事件委派案例：添加个性标签，点击盒子，判断点击的目标元素是什么。删除标签"},{"title":"","date":"2018-05-11T08:14:15.842Z","updated":"2018-05-11T08:14:15.842Z","comments":true,"path":"tech/bootstrap/case.html","permalink":"http://www.JiShuXuePai.com/tech/bootstrap/case.html","excerpt":"","text":""},{"title":"bootstrap","date":"2018-05-11T08:14:16.567Z","updated":"2018-05-11T08:14:16.567Z","comments":true,"path":"tech/bootstrap/relative.html","permalink":"http://www.JiShuXuePai.com/tech/bootstrap/relative.html","excerpt":"","text":""},{"title":"es6","date":"2018-05-11T08:14:16.568Z","updated":"2018-05-11T08:14:16.568Z","comments":true,"path":"tech/es6/case.html","permalink":"http://www.JiShuXuePai.com/tech/es6/case.html","excerpt":"","text":"1. var、let与const作用域不同声明方式作用具有不同的作用域，var为函数级作用域，let与const是块级作用域1234567891011121314151617181920// varfunction foo()&#123; var a = 1;&#125;//a is not definedconsole.log(\"a:\",a); // let&#123; let b = 2;&#125;//b is not definedconsole.log(\"b:\",b) // const&#123; const c = 3;&#125;//c is not definedconsole.log(\"c:\",c)2. 模板字符串使用‘+’的字符串拼接形式比较复杂且容易出错，现使用新的语法‘反引号’模板字符串方法123456let title = '外套 海澜之家';let temp = ` &lt;div&gt; &lt;span&gt;秋季新款 $&#123;title&#125;&lt;/span&gt; &lt;/div&gt;`;3. 海澜之家模板字符串的运用12345678910111213141516171819202122232425262728293031&lt;script&gt; let list = [ &#123; address:&apos;./images/HLA1.jpg&apos;, price: 489.00, name: &apos;时尚棒球领夹克&apos;, description: &apos;外套男HWJAJ3V268A 藏青R8 藏青 175/92A&apos;, num: 1 &#125;, &#123; address:&apos;./images/HLA2.jpg&apos;, price: 889.00, name: &apos;时尚休闲西装&apos;, description: &apos;都市男HWJAJ3V268A 藏蓝B11 藏蓝 180/96A&apos;, num: 3 &#125; ]; for(let i = 0; i &lt; list.length; i++)&#123; let temp = ` &lt;ul&gt; &lt;li&gt;&lt;img src=&quot;$&#123;list[i].address&#125;&quot; alt=&quot;&quot;/&gt;&lt;/li&gt; &lt;li&gt;￥$&#123;list[i].price&#125;&lt;/li&gt; &lt;li&gt;HLA海澜之家$&#123;list[i].name&#125;2017秋季新品$&#123;list[i].description&#125;&lt;/li&gt; &lt;li&gt;近半年有$&#123;list[i].num&#125;条评论&lt;/li&gt; &lt;li&gt;海澜之家京东自营旗舰店&lt;/li&gt; &lt;li&gt;自营&lt;/li&gt; &lt;/ul&gt; `; $(&quot;body&quot;).append(temp); &#125;&lt;/script&gt;4. 字符串的解构赋值每个字符都赋值给对应新声明的一个个变量12345671) 使用方法let [a, b, c, d] = &quot;hxsd&quot;;console.log(a, b, c, d);2) 默认值let [a, b, c, d=&apos;k&apos;, e=&apos;hello&apos;];console.log(a, b, c, d, e)5. 数组的解构赋值数组中每个值都赋值给对应新声明的一个个变量1234567891011121314&#123; let [l,m,n] = [4, 5, 6]; console.log(l,m,n);&#125;&#123; let [x,[y,z]] = [7, [8, 9]]; console.log(l,m,n); &#125;&#123; let [l, ,n] = [4, 5, 6]; console.log(l,n);&#125;6. 函数参数默认值为了避免参数为0时出现业务的错误，先使用新的参数默认值方式1234function foo(a, b = 2000) &#123; console.log(a,b)&#125;foo(10);7. 扩展运算符必须写在最后，表示剩余的所有1234&#123; let [r,...t] = [7, 8, 9]; console.log(r,t);&#125;8. 函数参数不确定当传入的参数个数不确定时使用12345678910let max = 0;function compare(...arg)&#123; for(let i = 0; i &lt; arg.length; i++)&#123; if(arg[i] &gt; max)&#123; max = arg[i]; &#125; &#125; console.log('最大值:', max);&#125;compare(1,2,3);9. 避免原数组被修改可避免修改原数组而造成业务逻辑上的错误1234let arr1 = [&quot;as&quot;, &quot;se&quot;, &quot;vd&quot;];let arr2 = [...arr1];arr2.push(&quot;qw&quot;);console.log(&quot;arr1:&quot;,arr1);10. 用户列表信息(对象解构赋值)必须保持key值是想对应的123456let res = &#123; status: 200, id: 12, data: [&#123;name: \"Lily\"&#125;, &#123;name: \"Tom\"&#125;, &#123;name: \"John\"&#125;]&#125;;let &#123;status, id, data&#125; = res;11. 两数相除区别：传参顺序是否会影响计算结果1234567891011121) 数组let arr = [10, 20];function division([a, b]) &#123; console.log(\"a/b:\", a / b);&#125;division(arr);2) 对象let obj = &#123;a: 10, b: 20&#125;;function division(&#123;a, b&#125;) &#123; console.log(\"a/b:\", a / b)&#125;division(obj);12. 箭头函数(‘=&gt;’)简化函数的写法，最终的是改变了this的指向1var plus = (a, b) =&gt; a + b;13. 彩票Set数据结构可对数组内的数据进行排重123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head lang=\"en\"&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;&lt;/title&gt; &lt;script src=\"jquery-3.1.0.min.js\"&gt;&lt;/script&gt; &lt;style&gt; *&#123; padding: 0; margin: 0; &#125; #box&#123; width: 500px; background-color: #dddddd; padding: 20px; text-align: center; line-height: 46px; margin: 0 auto; &#125; .title&#123; color: #fc8c84; font-size: 24px; &#125; .sel&#123; width: 70px; padding: 0 16px; box-sizing: border-box; background-color: #adaecd; border: 1px solid #9596b1; line-height: 22px; &#125; .btn&#123; width: 30px; height: 30px; border-radius: 50%; border: 1px solid #aeaeae; background-color: #d1d1d1; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div id=\"box\"&gt; &lt;h3 class=\"title\"&gt;网易彩票&lt;/h3&gt; &lt;button class=\"sel\" value=\"1\"&gt; &lt;h3&gt;任一&lt;/h3&gt; &lt;span&gt;奖金 6元&lt;/span&gt;&lt;/button&gt; &lt;button class=\"sel\" value=\"2\"&gt; &lt;h3&gt;任二&lt;/h3&gt; &lt;span&gt;奖金19元&lt;/span&gt;&lt;/button&gt; &lt;button class=\"sel\" value=\"3\"&gt; &lt;h3&gt;任三&lt;/h3&gt; &lt;span&gt;奖金45元&lt;/span&gt;&lt;/button&gt; &lt;button class=\"sel\" value=\"4\"&gt; &lt;h3&gt;任四&lt;/h3&gt; &lt;span&gt;奖金67元&lt;/span&gt;&lt;/button&gt; &lt;button class=\"sel\" value=\"5\"&gt; &lt;h3&gt;任五&lt;/h3&gt; &lt;span&gt;奖金99元&lt;/span&gt;&lt;/button&gt; &lt;br/&gt; &lt;button class=\"btn\"&gt;01&lt;/button&gt; &lt;button class=\"btn\"&gt;02&lt;/button&gt; &lt;button class=\"btn\"&gt;03&lt;/button&gt; &lt;button class=\"btn\"&gt;04&lt;/button&gt; &lt;button class=\"btn\"&gt;05&lt;/button&gt; &lt;button class=\"btn\"&gt;06&lt;/button&gt; &lt;button class=\"btn\"&gt;07&lt;/button&gt; &lt;button class=\"btn\"&gt;08&lt;/button&gt; &lt;button class=\"btn\"&gt;09&lt;/button&gt; &lt;button class=\"btn\"&gt;10&lt;/button&gt; &lt;button class=\"btn\"&gt;11&lt;/button&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;&lt;script&gt; let set = new Set(); let selector = 0; let number = 0; $('.sel').click(function()&#123; $('.sel').each(function()&#123; $(this).css('color', 'black'); &#125;); set.clear(); $('.btn').css('color','black'); selector = $(this).val(); $(this).css('color', 'red'); &#125;); $('.btn').click(function()&#123; number = $(this).html(); if(set.has(number))&#123; set.delete(number); $(this).css('color','black'); &#125;else if(set.size &lt; selector)&#123; set.add(number); $(this).css('color','#FC6276'); &#125; &#125;);&lt;/script&gt;14. 模块化功能拆分，独立成一个个功能单一的模块，然后进行组合即可实现模块化开发123456789101112131415161718192021222324252627// 导出模块export.jslet A = 123;let test = function()&#123; console.log('test')&#125;;export default &#123; A, test&#125;//导入模块import.jsimport File from './export.js';console.log(File.A);console.log(File.test);// index.html&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head lang=\"en\"&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;&lt;/title&gt; &lt;script src=\"import.js\" type=\"module\"&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;h1&gt;模块化&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;15. 定义人类js本身是基于对象的，为了弥补面向对象的不足，提出了类与对象的概念12345678910111213141516class Person&#123; constructor(x,y,z)&#123; this.name = x; this.age = y; this.language = z; this.speak = function()&#123; console.log(this.language) &#125; &#125; toString()&#123; return (this.name + '的年龄是' + this.age + '岁') &#125;&#125;let man = new Person('张三', 18, 'chinese'); console.log(person.toString())person.speak();"},{"title":"","date":"2018-05-11T08:14:15.842Z","updated":"2018-05-11T08:14:15.842Z","comments":true,"path":"tech/bom/relative.html","permalink":"http://www.JiShuXuePai.com/tech/bom/relative.html","excerpt":"","text":""},{"title":"bootstrap 教学讲义","date":"2018-05-11T08:14:16.567Z","updated":"2018-05-11T08:14:16.567Z","comments":true,"path":"tech/bootstrap/notes.html","permalink":"http://www.JiShuXuePai.com/tech/bootstrap/notes.html","excerpt":"","text":"第一章 响应式布局第一节 响应式布局简介什么是响应式布局 （https://www.microsoftstore.com.cn/）​ 一套html布局适配多个终端;需兼容的尺寸pc 普屏 1000pxpc宽屏 1200 / 1366 / 1440 / 1600 /1680 / 1920pad 768 （横屏|竖屏 1024*768 | 768*1024）phone 手机 320 375 414​第二节 媒体查询语法媒体查询语法@media screen andmin-width /max-width自定义container盒子的尺寸，由此引入媒体查询123456789101112131415161718192021222324252627282930【范例】 通过媒体查询实现栅格container盒的尺寸@media screen and (min-width:768px)&#123; .container&#123; width:750px; &#125; &#125;@media screen and (min-width:992px)&#123; .container&#123; width:980px; &#125; &#125;@media screen and (min-width:1200px)&#123; .container&#123; width:1170px; &#125; &#125;// 原则 phone&gt; pad &gt; pc &gt; pc宽屏 // 永远从最小的写起;​根据屏幕大小引入不同的样式文件12&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; src=&quot;pad.css&quot; media=&quot;(min-width:768px) and (max-width:992px)&quot;/&gt;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; src=&quot;pc.css&quot; media=&quot;(min-width:992px) and (max-width:1200px)&quot;/&gt;​第三节 响应式页面实例范例：利用媒体查询实现tech页面的响应式布局页面结构的搭建语义化标签header footer nav article aside audio video页面样式响应式布局的实现第四节 响应式布局的思想响应式布局，主要是在不同屏幕尺寸下，元素样式不同，一般会显示或隐藏元素，或者是改变元素样式，设计师会给定不同尺寸的设计稿， 750px 1200px前端工程师只要实现不同屏幕尺寸下对应的样式效果就可以。总结为: 搭建不同屏幕尺寸下的静态页面;范例： 做一个简单的demo页面，加载不同样式，在moblie, pad, pc上有不同的样式呈现。第二章 自定义ui组件库第一节 样式框架的思想通过控制外层容器类名，来批量修改子元素的样式范例演示– 通过简单的范例演示样式框架思想第二节 自定义组件库什么是ui组件库范例：http://www.zcool.com.cn/work/ZMTcyMTM4NTI=/1.html练习：定义三组不同样式的ui按钮组件123456789101112131415161718192021// 按钮和文本框会用到相同的颜色，由此可引入sass变量 // 定义按钮的颜色 .btn-success&#123; background-color:green; &#125; .btn-alert&#123; background-color:red; &#125; // 定义文本框的颜色 .has_success&#123; border:1px green solid; &#125; .has_error&#123; border:1px red solid; &#125;第三章 sass简介第一节 sass简介sass 和 less 都属于预编译css，为提高css应用的灵活性和效率，sass是基于ruby，而less是基于javascript，在大文件编译方面，sass略胜一筹；sass功能会比less更强大，而less 属于极简。bootstrap框架最新版底层就是基于sass。sass官网：https://www.sass.hk;第二节 sass的安装与编译sass的安装下载和安装ruby 验证： ruby -v 显示版本号下载和安装sassgem install // 将本地安装拖动到命令行处;验证：sass -v 能显示版本号，安装成功;​sass的编译​sass的编译 ： sass写好之后，需要编译为css文件再引入到html中;Sass 和 SCSS 我们平时都称之为 Sass，两者区别：文件扩展名不同，Sass 扩展名为“.sass”，而 SCSS 扩展名“.scss”;语法不同，Sass 是以严格的缩进式语法规则来书写，不带大括号({})和分号(;)，而 SCSS 语法和 CSS 语法非常类似;​​命令行方式sass test.scss css/test.css // 单文件编译sass –watch test.scss:css/test.css // 自动编译sass –watch scss:css // 监测目录sass –watch scss:css –style compact // 编译为指定格式​​GUI工具编译（koala软件）自动化编译（ide工具自动编译）注意事项： (1) 使用utf-8编码 (2) 使用英文或拼音的路径;GUI工具编译 推荐工具Koala (http://www.w3cplus.com/preprocessor/sass-gui-tool-koala.html)​编译的格式nested： 嵌套缩进的css代码(默认)expanded：展开的多行css代码（常规）compact：简洁格式的css代码 （单行）compressed：压缩后的css代码学习可以按默认或expanded生产环境当中，一般使用最后一个选项。​123456789101112131415161718192021【范例】 导入其他scss文件，sass的import效率要高于css的 importreset.scsshtml,body,ul,ol &#123; margin: 0; padding: 0;&#125;// base.scss @import &apos;reset&apos;;body &#123; font-size: 100% Helvetica, sans-serif; background-color: #efefef;&#125;sass的注释// 单行注释 , 单行注释不会编译到css文件中;/ 普通注释 / 会出现在生成的css文件内;第四章 sass的基本用法第一节 sass变量的使用变量的定义和赋值范例： 使用变量来定义媒体查询中设备尺寸;$screen-sm-min:768px; // 平板$screen-md-min:992px; // 普通桌面$screen-lg-min:1200px; // 大屏​变量使用规则sass的变量必须是以$开头;变量名与值间用冒号隔开（就像CSS属性设置一样）;在属性中使用变量 #{$btn-color}值后面加上 !default则表示默认值。变量的默认值在组件化开发的时非常有用​123456789101112【范例1】 sass变量的使用 $fontStack: Helvetica, sans-serif;$primaryColor: #333;$side : left;body &#123; font-family: $fontStack; color: $primaryColor; border-#&#123;side&#125;-radius:5px;&#125;第二节 sass的嵌套引入：用传统css方法做一个简单的导航sass的优点：简化css语法，层次结构清晰，可读性强选择器嵌套和属性嵌套&amp;父级选择器的使用（a的hover范例）map文件的作用（关联css与scss文件，浏览器可以直接调试scss文件）123456789101112131415161718192021222324252627282930313233343536373839【范例2】 sass的嵌套使用 nav ul;nav linav a// 选择器嵌套nav &#123; ul &#123; list-style: none; &#125; li &#123; display: inline-block; &#125; a &#123; text-decoration: none; &#125; &amp;:hover&#123; color: red; &#125;&#125;// 属性嵌套// border:1px red solid;// border-width:1px// border-color:red;// border-style:solid;.border&#123; border:&#123; width:1px; color:red; style:solid; &#125; background:&#123;color:green; size:cover;position:0 0;&#125;&#125;相当于.border&#123; border-width:1px; border-color:red; border-style:solid;&#125;第三节 sass的 mixin混合器的用法如果网站中有几处小的样式类似（例如一致的颜色和字体），使用变量来统一;网站中需要大段重用样式，可以通过sass的混合器实现样式重用;混合器的声明 @mixin 混合器名;混合器的调用 @include 混合器名;有参数的混合器声明与调用，参数使用$开头，多个参数逗号分隔 ;多个参数的声明与调用12345678910111213141516【范例1】混合器的基本用法 - 圆角的实现 @mixin rounded-corners &#123; -moz-border-radius: 5px; -webkit-border-radius: 5px; -ms-border-radius:5px; -o-border-radius:5px; border-radius: 5px;&#125;.notice &#123; background-color: green; border: 2px solid #00aa00; @include rounded-corners;&#125;123456789101112131415【范例2】混合器传参-box-sizing的兼容写法;@mixin box-sizing ($sizing) &#123; -webkit-box-sizing:$sizing; -moz-box-sizing:$sizing; box-sizing:$sizing;&#125;.box-border&#123; border:1px solid #ccc; @include box-sizing(border-box);&#125;//-------------------------------123456789101112131415【范例3】 不透明度的兼容写法;@mixin opacity($opacity:50) &#123; opacity: $opacity / 100; filter: alpha(opacity=$opacity); &#125;.opacity&#123; @include opacity; //参数使用默认值&#125;.opacity-80&#123; @include opacity(80); //传递参数&#125;123456789101112【范例4】多参数的调用 @mixin horizontal-line($border:1px dashed #ccc, $padding:10px)&#123; border-bottom:$border; padding:$padding 0;&#125;.text1 li&#123; @include horizontal-line(1px solid #ccc);&#125;.text2 @include horizontal-line($padding:15px);&#125;第四节 sass继承用法继承与混合器的区别继承也是减少代码重用，不过与混合器不同，混合器主要用于展示性样式重用，继承是基于语义化的，例如： .success和 .message ,前者基于后者，可用继承extend ;1234567891011// 基于类的语义化关系.error&#123; color:red;&#125;.seriousError&#123; extend .error; border:1px red solid;&#125;12345678910111213141516171819202122// 基于类的语义化关系.message &#123; border: 1px solid #ccc; padding: 10px; color: #333;&#125;.success &#123; @extend .message; border-color: green;&#125;.error &#123; @extend .message; border-color: red; &#125;.warning &#123; @extend .message; border-color: yellow;&#125;第五节 sass的运算123456789101112.container &#123; width: 100%; &#125;article[role=&quot;article&quot;] &#123; float: left; width: 600px / 960px * 100%;&#125;aside[role=&quot;aside&quot;] &#123; float: right; width: 300px / 960px * 100%;&#125;第六节 Compass简介1234567891011121314151617181920// Compass 是一个非常丰富的样式框架，是sass核心团队开发出来的大量已定义好的 mixin函数库;// 常用的函数 // 自定义部分写一个 Compass中的混合器【范例】鼠标悬停颜色加深;$linkColor: #08c;a &#123; text-decoration:none; color:$linkColor; &amp;:hover&#123; color:darken($linkColor,10%); &#125;&#125;// 此外还有 lighten($linkColor,10%); 颜色减轻10%;第五章 使用sass搭建ui库第一节 sass搭建ui组件库(按钮)通过混合器传参来定义不同大小按钮;通过混合器传参来定义不同颜色按钮;定义按钮大小和颜色的混合器;声明变量，对于按钮的大小和颜色进行定义;123456789101112131415161718192021222324252627282930313233【范例】 使用sass实现ui组件库// 变量的定义$padding-small-vertical: 5px !default;$padding-small-horizontal: 10px !default;$font-size-small:ceil(($font-size-base * 0.85)) !default;$line-height-small: 1.5 !default;$btn-border-radius-small: $border-radius-small !default;$border-radius-small: 3px !default;// 混合器的声明@mixin button-size($padding-vertical, $padding-horizontal, $font-size, $line-height, $border-radius) &#123; padding: $padding-vertical $padding-horizontal; font-size: $font-size; line-height: $line-height; border-radius: $border-radius; &#125;@mixin btn-color($bg,$color)&#123; background-color:$bg; color:$color;&#125;// 使用混合器定义按钮.btn-sm&gt;input&#123; @include button-size($padding-small-vertical, $padding-small-horizontal, $font-size-small, $line-height-small, $btn-border-radius-small); &#125;第二节 sass实现组件模块化sass的模块化为什么需要导入scss文件（模块化思想）导入scss文件的基本语法导入scss文件的优点​混合器声明，变量声明模块化;sass文件名以 “_” 开头，是被用来引入到其他scss文件的，这样的文件不会单独被编译，这些文件称为独立模块，模块化更有利于scss文件维护；引入方式 : @import “filename” // 注意不需要加后缀名;第六章 bootstrap 基础第一节 bootstrap介绍Bootstrap 是最受欢迎的 HTML、CSS 和 JS 框架，用于开发响应式布局、移动设备优先的 WEB 项目。bootstrap优点：bootstap最近发布了bootstrap4，拥有了box-flex布局等更新，紧跟最新的web技术的发展比较成熟，在大量的项目中充分的使用和测试拥有完善的文档，使用起来更方便有大量的组件样式，接受定制bootstrap缺点如果项目中有大量的非bootstrap“风格”的样式存在，需要很多css重写；会有兼容问题，对于低版本的ie浏览器;​下载bootstrap目录结构的介绍基本模板的使用使用bootstrap的基本功能 ( 按钮, 表单, 下拉菜单 )根据实例模板，讲解bootstrap主要组件;第二节 栅格系统简介栅格容器container 实现固定宽度并且居中container-fluid 宽度为100%;​盒模型box-sizing 盒模型的解析方式content-box 内容区宽度（默认值）border-box 内容区宽度+内填充+边框宽度​设备尺寸分类手机: xs &lt;768px 自动 col-xs-1平板: sm 768px – 992px 750px col-sm-1普屏: md 992px – 1200px 970px col-md-1宽屏: lg &gt;1200px 1170px col-lg-1​栅格原理：通过定义容器大小，平分为12等份（也有24或32，但12最常见），对于布局容器宽，设为栅格单位的倍数（1-12）优点：布局简便缺点：不够精确栅格布局原理媒体查询，实现不同屏幕下，container容器的尺寸;范例： 宽屏下 6:6 | 普屏下 8:4 | 移动设备 6:6;​container容器在不同屏幕设备下的尺寸;普通css实现栅格布局– 百分比宽度栅格单位的混合使用 – 在不同屏幕尺寸下，布局不同栅格布局使用sass来实现代码示例:123456789101112131415@mixin grid($class,$i:1)&#123; @for $i from 1 through 12&#123; .col-#&#123;$class&#125;-#&#123;$i&#125;&#123; width:$i/12*100%; float:left; &#125; &#125;&#125;// 调用混合器@include grid(&quot;sm&quot;);@include grid(&quot;md&quot;);@include grid(&quot;lg&quot;);​栅格单位组合使用容器宽度，取大优先垂直临界点 ，取小优先xs单位，水平布局响应式列重置 – 解决栅格容器堆叠时“卡住”的问题;列偏移 – 对于栅格容器进行位置移动;col-md-offset-1​列嵌套 – 栅格容器中再分配栅格容器;列排序 – 特殊需求;col-md-push-9col-md-pull-3第三节 排版系统参考v3手册tabletable – 内填充 下边框;table-striped – 条纹状表格table-bordered – 边框table-hover – 鼠标悬停table-condensed – 紧缩表格table-responsive – 响应式表格第四节 响应式布局publis项目实训第五节 bootstrap项目bootstrap 组件的用法bootstrap 插件的用法"},{"title":"es6","date":"2018-05-11T08:14:16.575Z","updated":"2018-05-11T08:14:16.575Z","comments":true,"path":"tech/es6/notes.html","permalink":"http://www.JiShuXuePai.com/tech/es6/notes.html","excerpt":"","text":"第一章 ES6概述什么是ES6？js：是指JavaScript这门编程语言，是该编程语言的名字，表示它是哪种编程语言；举例：其他语言的名称，VB、C、C++、Java、Python举例：汉语、英语、日语、法语、德语、意大利语ES：ES(ECMAScript)是js这门语言的语法，用来告诉开发者应该如何正确使用这门语言；举例：变量如何声明、函数如何书写举例：英语该如何使用和表达，主、谓、宾，一般现在时、正在进行时、过去时ES6：语言本身是不断发展的，其语法也在不断的进行版本更新、迭代与升级，而ES6就是指该语法的第6个版本；举例：汉语言的发展过程，甲骨文 =&gt; 文言文 =&gt; 白话文举例：苹果手机版本更新，同时内部系统也进行升级、迭代回归：ES5 =&gt; ES6为什么要学习ES6？基本技能ES6已经成为前端研发人员的一项基本技能，作为前端工程师是必须要了解的能力提升目前很多开源项目的源码都了ES6最新语法，比如Vue.js；而通过学习第三方库的源码，个人能力提升是最快的业务需要要做前端必须要做业务，要做业务一般就会用到框架：Vue、React、Angular；在业务开发中，无论是在实例上，还是在编译上，最好用的都是ES6语法；面试加分项面试加分项：在面试中，如果能体现出自己对ES6有一定成程度的学习和掌握，面试官会对你刮目相看；ES6有什么特点？学习网址ES6特点：简洁、严谨、强大；一行代码 = 多行代码；支持现状：各大浏览器也在全力的去支持ES6；低版本浏览器不支持ES6新语法，存在兼容性问题；解决方法：babel编译转换器(ES6=&gt;ES5)，搭建使用ES6语法的开发环境第二章 声明方式let与const为什么会产生新的声明方式？随着程序的复杂性和大型应用程序的出现，用var声明的变量会造成全局污染；于是，就产生了新的声明方式。第一节 作用域函数级作用域：即函数内部的声明的变量，只能在该函数范围内使用块级作用域：即{}表达式语句内声明的变量，在外部也可以被使用，如if、for语句等var语法：var a = 1;作用域：函数级作用域1234function foo()&#123; var a = 1;&#125;console.log(\"a:\",a); //a is not defined第二节 letlet语法：let b = 2;作用域：块级作用域1234&#123; let b = 2;&#125;console.log(\"b:\",b) //b is not defined​第三节 constconst语法：Math.PI作用域：块级作用域注意事项：声明时，必须初始化，即：赋值！1234&#123; const c = 3;&#125;console.log(\"c:\",c) //c is not defined​第四节 不同声明方式之间的比较作用域不同是否需要初始化赋值有无变量提升：变量的提升，提升的是变量的声明，并不会把赋值也提升上来同级作用域下，是否允许重复声明变量特点varletconst作用域级别函数级块级块级初始化否否是变量提升是否否重复声明是否否使用技巧万全之策：一律按照，“先声明，后使用，常赋值”第三章 数据类型新增特性第一节 字符串的新增特性模板字符串语法：在英文输入法下，使用键盘ESC键下面的那个符号123`&lt;div&gt; &lt;span&gt;秋季新款&lt;/span&gt;&lt;/div&gt;`特点可断行：在打印结果时，断行也是保留的变量的使用方式： ${变量名}语法简洁，结构清晰新旧方法对比1234567891011121) 传统字符串拼接方法let title = '外套 海澜之家';var template = '&lt;div&gt;' + '&lt;span&gt;' + title + '&lt;/span&gt;' + '&lt;/div&gt;';2) ES6模板字符串方法let temp = ` &lt;div&gt; &lt;span&gt;$&#123;title&#125;&lt;/span&gt; &lt;/div&gt;`;【项目】海澜之家字符串新增方法判断是否存在某个字符12345let str = 'hello';1) ES6方法：可读性强console.log(str.includes('l'));2) 传统方法：效果不好，而且不易读console.log(str.indexOf('l') &gt; -1);是否以某字符开头、结尾、重复次数123456789101112131415161718192021222324252627282930313233343536let str = 'hello';1) ES6方法console.log(str.startsWith('h')); // 是否以h开头console.log(str.endsWith('o')); // 是否以o结尾console.log(str.repeat(3)); // 重复3次2) 传统原生实现方法function isStart()&#123; if('h' == str.charAt(0))&#123; console.log(true) &#125; else&#123; console.log(false) &#125;&#125;isStart();function isEnd()&#123; if('o' == str.charAt(str.length-1))&#123; console.log(true) &#125; else&#123; console.log(false) &#125;&#125;isEnd();function repeat(n)&#123; let arr = new Array(); for(let i = 0; i &lt; n; i++)&#123; arr.push(str); &#125; //console.log(arr.toString()); str = arr.join(''); console.log(\"str:\",str)&#125;repeat(3);字符串的解构赋值目的：获取字符串中的每一个字符12345671) 使用方法let [a, b, c, d] = &quot;hxsd&quot;;console.log(a, b, c, d);2) 默认值let [a, b, c, d=&apos;k&apos;, e=&apos;hello&apos;];console.log(a, b, c, d, e)第二节 数组的解构赋值概述：为方便业务需求而诞生的对变量的解构赋值；应用场景：前后端分离时，json数据的解构使用规则：结构上必须完全一致，左右一一对应数组的解构赋值目的：为了更加方便的声明变量以获得数据1) 传统方法： { var arr = [0, 1, 2]; var a = arr[0]; var b = arr[1]; var c = arr[2]; //var a = arr[0], b = arr[1], c = arr[2]; console.log(a,b,c); } 2) ES6方法： { let [l,m,n] = [4, 5, 6]; console.log(l,m,n); } ​12* 结构一致，一一对应 let [x,[y,z]] = [7, [8, 9]];console.log(l,m,n);let [l, ,n] = [4, 5, 6];console.log(l,n);1* 默认值console.log(r,s,t,r,p,q);1) 传统函数传参问题：如果想给foo函数的第二个形参b传入值0，即使这个值是合法的，也会被视为一个false值，并最终将b赋值为200function foo(a, b) {a = a || 100;b = b || 200;console.log(a,b)}foo(10,0);在这种情况下，更安全的选择是通过typeof检查参数类型，如下所示：function foo(a, b) {b = (typeof b !== “undefined”) ? b : 2000;}foo(10,0);2) ES6语法function foo(a, b = 2000) {console.log(a,b)}foo(10);123456789101112 ​* 扩展运算符 * 什么是扩展运算符：一个变量对应一个数组集合； * 扩展运算符的应用场景：函数参数不确定时，如：n个数字中找出最大值；再如：每个函数最多只能声明一个不定参数，而且一定要放在所有参数的末尾 * 使用原因：为了避免业务逻辑错误，语法错误是很好调的，业务逻辑错误一般是比较难找的 ```js &#123; let [r,...t] = [7, 8, 9]; console.log(r,t); &#125;123456789101112131415161718192021222324251) 传统方法：function compare(a,b,c)&#123; if(a&gt;b &amp;&amp; a&gt;c)&#123; console.log('最大值:', a); &#125; else if(b&gt;c)&#123; console.log('最大值:', b); &#125; else&#123; console.log('最大值:', c); &#125;&#125;compare(1,2,3);2) ES6方法：let max = 0;function compare(...arg)&#123; for(let i = 0; i &lt; arg.length; i++)&#123; if(arg[i] &gt; max)&#123; max = arg[i]; &#125; &#125; console.log('最大值:', max);&#125;compare(1,2,3);123456789101) 原始数据容易被篡改let arr1 = [&quot;as&quot;, &quot;se&quot;, &quot;vd&quot;];let arr2 = arr1;arr2.push(&quot;qw&quot;);console.log(&quot;arr1:&quot;,arr1);2) 保持原始数据不变let arr1 = [&quot;as&quot;, &quot;se&quot;, &quot;vd&quot;];let arr2 = [...arr1];arr2.push(&quot;qw&quot;);console.log(&quot;arr1:&quot;,arr1);实例方法(了解)数组的内容替换方法语法：fill(&#39;要替换的内容&#39;, &#39;起始位置&#39;, &#39;终止位置(不包括该位置)&#39;)123let arr = ['ss', '中国', 'jsd'];arr.fill('web',1,3);console.log(arr);Json数据格式转化成数组语法：Array.from()123456789let json = &#123; &apos;0&apos;: &apos;jsa&apos;, &apos;1&apos;: &apos;jsq&apos;, &apos;2&apos;: &apos;jsw&apos;, length: 3&#125;;let arr = Array.from(json);console.log(json);console.log(arr);第三节 对象的新增特性对象的解构赋值应用需求：前后端分离时，前端发送数据请求，后端服务器会传回Json格式的数据;比如：用户列表语法12let &#123;a, b&#125; = &#123;a:1, b:2&#125;;console.log(a,b);12345678910111213用户列表let res = &#123; status: 200, id: 12, data: [&#123;name: &quot;Lily&quot;&#125;, &#123;name: &quot;Tom&quot;&#125;, &#123;name: &quot;John&quot;&#125;]&#125;;如何获使用用户列表中的每条信息？1) 传统方法let status = res.status;let id = res.id;let data = res.data;2) ES6方法let &#123;status, id, data&#125; = res;修改变量名123let obj = &#123;a:1, b:2, c:3&#125;let &#123;a, b:B, c:c&#125; = obj;console.log(a,B,c,b);默认值123var obj = &#123;a: 1, b: 2, c: 3&#125;;let &#123;a, b=2, c:C=31, d=4, e=\"default\"&#125; = obj;console.log(a,b,c,d,e);第四节 解构赋值在函数参数中的应用函数参数的解构赋值(数组 VS 对象)数组的解构赋值：传参顺序固定对象的解构赋值：传参顺序较灵活【案例】两个数相除123456789101112131) 数组let arr = [10, 20];//let [a, b] = arr;function division([a, b]) &#123; console.log(\"a/b:\", a / b);&#125;division(arr);2) 对象let obj = &#123;a: 10, b: 20&#125;;function division(&#123;a, b&#125;) &#123; console.log(\"a/b:\", a / b)&#125;division(obj);第四章 箭头函数传统函数123456781) 具名函数的声明方式function add(a, b) &#123; return a + b;&#125;2) 变量式声明函数var plus = function (a, b) &#123; return a + b;&#125;;箭头函数(‘=&gt;’)1var plus = (a, b) =&gt; a + b;this指针123456789101112131415161718let a = 0;let obj = &#123; a : 1; change : function()&#123; console.log(this.a) &#125;&#125;// 结果为1obj.change();let obj = &#123; a : 1; change : () =&gt; &#123; console.log(this.a) &#125;&#125;// 结果为0obj.change();第五章 类与对象传统方法通过构造函数，定义并生成新对象，通过prototype 属性向对象添加属性和方法1234567891011121314function Person(x,y,z)&#123; this.name = x; this.age = y; this.language = z; this.speak = function()&#123; console.log(this.language) &#125;&#125; Person.prototype.toString = function ()&#123; return (this.name + &quot;的年龄是&quot; +this.age+&quot;岁&quot;); &#125; let person = new Person(&apos;张三&apos;, 18, &apos;chinese&apos;); console.log(person.toString())person.speak();类与对象的关系类是对象的抽象，对象是类的具体实例类是抽象的，而对象是具体的类不占用内存，而对象占用存储空间Class类定义它作为对象的模板,通过class关键字,可以定义类，类名首字母大写constructor构造方法，默认方法，一个类必须有constructor方法ES5的构造函数Person,对应ES6的Person类的构造方法this代表对象实例类相当于实例的原型，所有在类中定义的方法，会被实例继承注意：1) 定义“类”的方法的时候,前面不需要加上function这个关键字2) 方法之间不需要逗号分隔,加了会报错特点class类让对象原型的写法更加清晰、体现了面向对象编程的思想class不存在变量提升,需要先定义再使用类的数据类型：function ，且类本身指向构造函数实例属性 VS 原型链属性hasOwnProperty(&#39;&#39;)函数用于指示一个对象自身(不包括原型链)是否具有指定名称的属性person.hasOwnProperty(&#39;toString&#39;)__proto__hasOwnProperty(&#39;&#39;) obj上所有的属性person.__proto__.hasOwnProperty(&#39;toString&#39;)Class的静态方法类相当于实例的原型，所有在类中定义的方法，都会被实例继承静态方法:Class本身的方法，不是实例方法也不是原型方法定义：static关键字使用：直接通过类来调用1234static getName()&#123; return &apos;获取Name的静态方法:人类&apos;; &#125; Person.getName()Class的静态属性静态属性指的是Class本身的属性，不是定义在实例对象（this）上的属性说明：ES6明确规定，Class内部只有静态方法，没有静态属性应用场景：如果一个数据需要被所有对象共享使用时123456789101112131415class Person&#123; constructor(x,y,z)&#123; this.name = x; this.age = y; this.language = z; this.speak = function()&#123; console.log(this.language) &#125; &#125; toString()&#123; return (this.name + &apos;的年龄是&apos; + this.age + &apos;岁&apos;) &#125;&#125;Person.type = &apos;function&apos;; //静态属性console.log(Person.type)第六章 数据结构第一节Set数据结构解释：Set是一个数据集合，与数组类似作用：数据去重场景：彩票业务11选5语法12let arr = new Set([1, 1, 2, 2, 2, 's', 's']);console.log(\"arr:\",arr);遍历重点：Array可以使用下标，Map和Set不能使用下标，所以不能使用for循环进行遍历12345678910111213141516171819202122232425261) forEach()方法,无返回值2）map()方法，有返回值3）for...in，4）for...of (ES6方法)let set = new Set([1, 2, 3, 4, 5, 'a', 'b']);1）for...of循环遍历value值：for(let value of set)&#123; console.log('value:',value);&#125;for(let value of set.values())&#123; console.log('value:',value);&#125;遍历key值：for(let key of set.keys())&#123; console.log('keys:',key);&#125;遍历key-value值：for(let [key,value] of set.entries())&#123; console.log('entries:',key,value);&#125;第二节 Map数据结构解释：Map也是一个数据集合，与数组类似作用：是对object对象的一个补充，Map的key可以是任意类型的(数组、对象、数字都可以作为它的key)，而传统对象的key必须是字符串;1234567891) object对象let a =&#123; data: &quot;string&quot;, 1: &quot;num&quot;&#125;;console.log(a.data, a.1);2) Map数据结构let map = new Map([[&apos;data&apos;,&quot;string&quot;],[1,&apos;num&apos;]]);console.log(map);Array、Set、Map对比123let arr = [1, 2, 3];let set = new Set([1, 2, 3]);let map = new Map([['a', 1],['b', 2],['c', 3]]);类别ArraySetMap长度arr.lengthset.sizemap.size增arr.push(4)set.add(4)map.set(&#39;t&#39;, 1)删arr.splice(0,1)set.delete(2)map.delete(&#39;t&#39;)改arr.splice(0,0,9)遍历map.set(&#39;t&#39;,2)查遍历set.has(1)map.has(&#39;t&#39;)清空arr = []set.clear()map.clear()【项目】彩票，Set数据结构的使用第七章 模块化什么是模块化？模块化：就是将整个项目拆分成一个个具有独立功能的模块，它们之间互不影响，这就是模块化。特点：模块之间代码耦合度低，互不影响。为什么会出现模块化？原因：随着网站的功能越来越丰富，网页中的js也变得越来越复杂和臃肿，原有通过script标签来导入一个个的js文 件这种方式已经不能满足现在互联网开发模式，我们需要团队协作、模块复用、单元测试等等一系列复杂的需求。意义：模块化的意义在于它以最少的模块、零部件，快速满足更多的个性化需求。因为有了模块，我们就可以更方便地使用别人的代码，想要什么功能，就加载什么模块，最大化的重用利用这些功能模块。如何进行模块化开发？准备：新建2个js文件一个HTML文件，作为三个模块文件需求：对外提供一个变量和一个函数，需要导出去，其他模块可以拿到，也就是要暴露出来的模块的导出export123456789export let A = 123;export function test()&#123; console.log('test');&#125;export class Hello&#123; foo()&#123; console.log('class') &#125;&#125;12345678let A = 123;let test = function()&#123; console.log('test')&#125;;export default &#123; //default表示不给导出的对象起名字，名字交给引入方，引入时无需查看名称 A, //好处：不会误导出，这里没有写的变量、对象或函数就不会导出，安全性高 test&#125;模块的引入12import &#123;A, test, Hello&#125; from './class/file';console.log(A, test, Hello);12import * as content from './class/file'; //数据成千上万，想一次获得所有变量console.log(content.A, content.test);123import File from &apos;./file&apos;;console.log(File.A);console.log(File.test);注意：因为，浏览器脚本的默认语言是 JavaScript，因此type=&quot;application/javascript&quot;可以省略；​ 而当浏览器加载 ES6 模块时，也要使用&lt;script&gt;标签，此时需要告诉浏览器这是一个 ES6 模块，​ 所以需要加入type=&quot;module&quot;属性第八章 Promise所谓Promise，简单说就是一个容器，里面保存着某个未来才会结束的事件（通常是一个异步操作）的结果。从语法上说，Promise 是一个对象，从它可以获取异步操作的消息。Promise 提供统一的 API，各种异步操作都可以用同样的方法进行处理。Promise对象代表一个异步操作，有三种状态：Pending（进行中）、Resolved（已完成，又称 Fulfilled）和Rejected（已失败）。只有异步操作的结果，可以决定当前是哪一种状态，任何其他操作都无法改变这个状态。这也是Promise这个名字的由来，它的英语意思就是“承诺”，表示其他手段无法改变。有了Promise对象，就可以将异步操作以同步操作的流程表达出来，避免了层层嵌套的回调函数。回调地狱回调：在一个函数执行完之后执行另一个函数我们称之为callback‘回调’缺点：如果有多层业务逻辑嵌套的话，不仅会使代码阅读困难，而且后面维护起来也是难点。之后在ES6，Promise就应运而生。1234567891011setTimeout(function()&#123; left(function()&#123; setTimeout(function()&#123; left(function()&#123; setTimeout(function()&#123; left(); &#125;,2000); &#125;); &#125;, 2000); &#125;);&#125;, 2000);Promise语法与then的用法resolve(value)是在Promise在已经异步完成成功(Resolved)之后执行的reject(value)是在Promise在异步失败之后(Rejected)执行。12345678var promise = new Promise(function(resolve, reject) &#123; // ... some code if (/* 异步操作成功 */)&#123; resolve(value); &#125; else &#123; reject(error); &#125;&#125;);"},{"title":"es6","date":"2018-05-11T08:14:16.575Z","updated":"2018-05-11T08:14:16.575Z","comments":true,"path":"tech/es6/relative.html","permalink":"http://www.JiShuXuePai.com/tech/es6/relative.html","excerpt":"","text":""},{"title":"git 教学案例","date":"2018-05-11T08:14:16.575Z","updated":"2018-05-11T08:14:16.575Z","comments":true,"path":"tech/git/case.html","permalink":"http://www.JiShuXuePai.com/tech/git/case.html","excerpt":"","text":"第一章 新人加入项目如果你是新人刚加入项目，需要先将团队开发完成的项目部分下载到你的本地，然后在本地增加自己的代码，完成后提交再推送到git服务器1 创建本地ssh密码;1234567891011121314151617[第1步] 创建 SSH key (开始/所有程序/git/Git Bash) $ ssh-keygen -t rsa -C &quot;youremail@example.com&quot; // 邮件换成自己邮件，然后一路回车// 中间需要输入5位短字符,记住后面要用; [第2步] 拷贝文件生成文件位置: C:\\Users\\gamyys\\.ssh 主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件[第3步] 粘贴内容登陆GitHub，打开“Account settings”，“SSH Keys”页面然后，点“Add SSH Key”，填上任意Title，在Key文本框里粘贴id_rsa.pub文件的内容2 复制仓库到本地1$ git clone git@github.com:gamyys9/demo.git //从远程仓库克隆(注意需要输入短密)3 从git服务器创建开发分支1git checkout -b dev origin/dev4 贡献个人代码12git add *; git commit -m &quot;my job&quot;5 上传到git服务器1git push -u origin dev // 第1次push,第2次以上可直接 git push第二章 独立开发新功能假如你要独立开发一个新功能，则新功能在开发过程中，如果立刻提交，则不完整的功能可能会影响其他同事的开发，如果不提交，又担心代码丢失，这是可以创建一个分支，在分支上进行新功能的开发，新功能开发完成，再合并到开发分支并上传到git服务器;1 创建分支1git checkout -b feather1 // 创建并切换到 feather分支2 贡献自己代码12git add *git commit -m &quot;my work&quot;3 合并到开发分支1git checkout dev4 合并feather分支到dev分支1git merge feather15 上传开发分支dev到git服务器1git push -u origin dev // 上传dev分支第三章 协作修复bug(或开发新功能)如果项目主分支出现bug，需要几个人共同来协作修复bug, 这时需先创建bug分支，然后上传至git服务器，其他开发人员从git服务器复制bug分支，参与协作修复bug , 修复完成后再合并到开发分支 ，推送至服务器;1 peter创建bug分支1git checkout -b bug_fix // 创建并切换到bug_fix分支2 贡献代码12git add * git commit -m &quot;peter bug fix&quot;3 上传分支1git push -u origin bug_fix // 将bug_fix分支作为默认分支上传到origin对应的git服务器;4 tom复制bug分支到本地1git checkout -b bug_fix origin/bug_fix // 复制远程的bug_fix分支到本地5 tom贡献自己的代码12git add *git commit -m &quot;tom bug fix&quot;6 上传代码到git服务器1git push -u origin bug_fix7 bug 修改完成后，需合并到开发分支，假如由tom来完成,需先切换回开发分支1git checkout dev8 tom合并bug分支1git merge bug_fix9 tom推送到git服务器1git push -u origin dev // 注意这里推送的是dev分支10 peter 获取git服务器bug分支1git pull // peter 能够获取到tom所做的修改"},{"title":"git 教学讲义","date":"2018-05-11T08:14:16.654Z","updated":"2018-05-11T08:14:16.654Z","comments":true,"path":"tech/git/notes.html","permalink":"http://www.JiShuXuePai.com/tech/git/notes.html","excerpt":"","text":"第一章 git基础知识第一节 git 简介git 是什么？Git是目前世界上最先进的分布式版本控制系统（没有之一）。特点： 高端大气上档次git 版本管理工具的作用大型项目需要多人协作git与linux是同一个作者免费的网络git服务器 coding.net github.com普通公司代码非开源，都有自己的git服务器git 的下载菜鸟教程 : http://www.runoob.com/git/git-workspace-index-repo.html简易教程：http://www.bootcss.com/p/git-guide/阮一峰教程: http://www.ruanyifeng.com/blog/2014/06/git_remote.htmlhttps://git-scm.com/ // 官网下载git的安装windows 下安装步骤1 use git from the windows command prompt // 选择默认项2 checkout windows-style,commit unix-style line endings // 使用默认项确认git安装成功 ： 命令提示符下输入git , 提示信息为:安装成功： 可选参数帮助信息;git的配置因为Git是分布式版本控制系统，所以，每个机器都必须自报家门：你的名字和Email地址否则版本库不知道是哪位程序员进行的版本更新1234&gt; $ git config --global user.name &quot;Your Name&quot; // 配置用户名&gt; $ git config --global user.email &quot;email@example.com&quot; // 配置邮箱&gt; git config --global --list // 查看当前git的配置信息&gt;创建版本库什么是版本库呢？版本库又名仓库，英文名repository，你可以简单理解成一个目录，这个目录里面的所有文件都可以被Git管理起来，每个文件的修改、删除，Git都能跟踪，以便任何时刻都可以追踪历史，或者在将来某个时刻可以“还原”。d:/git-test&gt; git init ; // 创建仓库;工作区、暂存区、版本库的概念工作区：就是你在电脑里能看到的目录。暂存区：英文叫stage, 或index。一般存放在 “.git目录下” 下的index文件（.git/index）中，所以我们把暂存区有时也叫作索引（index）。版本库：工作区有一个隐藏目录.git，这个不算工作区，而是Git的版本库​ 第二节 git基本操作​添加文件到版本库git add * 将工作区内容添加到暂存区git add 文件1 文件2 或 git add . 将指定文件或工作区所有文件添加到暂存区git commit -m “版本说明信息” 将暂存区内容提交到版本库git commit -am “commite content” 对已追踪的文件 add+commit合写;​查看仓库修改信息1234git status // 新增了哪些文件，哪些文件被修改过;git diff // 工作区域缓存区的差别git diff master // 工作区与版本库的差别git diff --cached // 暂存区域版本库的差别撤销文件修改123git reset -- filename // 将文件从版本库恢复到暂存区;git checkout -- filename // 将文件从暂存区恢复到工作区;git checkout HEAD -- filename // 将文件从版本库恢复到暂存区与工作区从仓库删除文件12git rm -- filename // 将文件从工作区，缓存区中删除,版本库保留git rm --cached filename; // 将文件从版本库删除，暂存区与工作区保留查看版本日志12git log // 查看commit 的历史记录,退出多屏模式(:q)git reflog // 简化版的git log ,可以查看commit_id;版本切换1234切换版本git reset --hard commit_id // 切换到 指定的commit_id git reset --hard HEAD~1 // 返回上个版本(~2 返回上上版本)第二章 git企业应用第一节 github仓库git 服务器实现多人协作：找一台电脑充当服务器的角色，每天24小时开机，其他每个人都从这个“服务器”仓库克隆一份到自己的电脑上，并且各自把自己提交推送到服务器仓库里，也从服务器仓库中拉取别人的提交。好在这个世界上有个叫GitHub的神奇的网站，从名字就可以看出，这个网站就是提供Git仓库托管服务的，所以，只要注册一个GitHub账号，就可以免费获得Git远程仓库。注册github账号远程仓库配置(加密问题)1234567891011121314151617181920// 由于你的本地Git仓库和GitHub仓库之间的传输是通过SSH加密的[第1步] 创建 SSH key (开始/所有程序/git/Git Bash) $ ssh-keygen -t rsa -C &quot;youremail@example.com&quot; // 邮件换成自己邮件，然后一路回车// 中间需要输入5位短字符,记住后面要用; [第2步] 拷贝文件生成文件位置: C:\\Users\\gamyys\\.ssh 主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件[第3步] 粘贴内容登陆GitHub，打开“Account settings”，“SSH Keys”页面然后，点“Add SSH Key”，填上任意Title，在Key文本框里粘贴id_rsa.pub文件的内容添加远程仓库你已经在本地创建了一个Git仓库后，又想在GitHub创建一个Git仓库，并且让这两个仓库进行远程同步，这样，GitHub上的仓库既可以作为备份，又可以让其他人通过该仓库来协作，真是一举多得。关联远程仓库123git remote add origin git@github.com:gamyys9/demo.git // origin 根源，起源，指远程仓库;git remote -v // 查看详细远程仓库信息git remote rm origin2 // 删除远程仓库origin2将本地仓库master推送到github服务器12$ git push -u origin master // 当前仓库与多个远程仓库关联,当第一次push使用-u 可以设定默认远程仓库,这样可以使用git push 向默认远程仓库推送;从远程仓库克隆1$ git clone git@github.com:gamyys9/demo.git //从远程仓库克隆(注意需要输入短密)第二节 git企业实战如果你是新人，刚加入项目组，需要先将大家完成的项目部分拷贝至你本地，使用的就是远程仓库克隆。你从远程仓库克隆时，实际上Git自动把本地的master分支和远程的master分支对应起来了，并且，远程仓库的默认名称是origin。克隆远程仓库1git clone git@github.com:gamyys2/test.git // 克隆仓库查看远程仓库123git remote // origingit remote -v // 查看远程仓库详细信息工作区修改123// 完成属于你的工作任务，并提交;git add *git commit -m &quot;my-work&quot;推送分支12345// 第一次推送 git push -u origin master // 将本地master分支推送到远程; // 第二次推送git push更新本地仓库1git pull // 从远程仓库更新内容到本地;第三章 git分支管理第一节 分支基础分支作用你想开发一个新功能，开发到50%立刻提交，由于功能不完整，会影响其他同事的开发，如果不提交，又担心丢掉已完成的代码，这样的话，可以创建一个新的分支，随时可以提交，不影响主分支，开发完成后，再合并到主分支;分支的管理创建分支切换分支删除分支123456789101112131415161718192021222324252627// 1 创建并切换分支 git branch dev; // 创建分支 git checkout dev // 切换到dev分支 // 创建+切换 git branch -b dev // 2 查看当前分支 git branch; // 3 切换回主分支 git checkout master; // 4 将dev分支合并到主分支 git merge dev; // 注意当前分支为主分支; // 5 删除dev分支 git branch -d dev; // 分支切换配图 https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001375840038939c291467cc7c747b1810aab2fb8863508000第二节 分支冲突分支的冲突123456789101112131415161718192021222324252627282930// 创建分支 tom git checkout -b tom;// 修改工作区内容git add .git commit -m &quot;tom&quot;;// 切换到主分支mastergit checkout mastergit checkout -b peter; // 修改工作区内容;git add *git commit -m petergit merge tom// 产生冲突// 解决冲突// 提交git commit -m conflict fixed// 查看提交历史git log --graph (显示分支历史图)第三节 远程仓库1234567891011121314151617// 1 设置默认主机+分支;git checkout master ; // 确保master为当前分支;git push -u origin master // 将本地主分支推送到远程主分支并合并;git pull 从远程仓库主分支更新内容到本地主分支// 2 如果想推送本地的dev分支到远程;git checkout dev // 设置dev为当前分支;git push -u origin dev // 将本地dev分支推送到远程;git pull 从远程的dev分支更新内容到当前dev分支;第四章 git标签管理每个commit版本通过一串数字标识，不好记忆，可以给这串数字起个别名，方便版本管理，这个别名就是标签打标签的方法123git tag // 查看标签列表git tag v1.0 commit_id // 对指定的commit版本打标签标签的管理123456789101112131415161718// 标签是保存在本地的，可以删除$ git tag -d v1.0 // 删除标签// 将本地的某个标签推送到远程 $ git push origin v1.0 // 将本地标签全部推送到远程 $ git push origin --tags // 删除远程标签 $ git tag -d v1.9 // 先从本地删除 $ git push origin :refs/tags/v1.9 // 从远处删除// 可以登录github查看是否删除第五章 git其他问题忽略文件并不是所有文件都需要提交进行版本管理，需要忽略的文件可以记录到 .gitignore;在 .gitignore 文件中列出需要忽略的文件，则这些文件不会被git忽略不纳入版本管理但 .gitignore文件本身需要被提交到git"},{"title":"bootstrap","date":"2018-05-11T08:14:16.654Z","updated":"2018-05-11T08:14:16.654Z","comments":true,"path":"tech/git/relative.html","permalink":"http://www.JiShuXuePai.com/tech/git/relative.html","excerpt":"","text":""},{"title":"","date":"2018-05-11T08:14:16.654Z","updated":"2018-05-11T08:14:16.654Z","comments":true,"path":"tech/gulp/notes.html","permalink":"http://www.JiShuXuePai.com/tech/gulp/notes.html","excerpt":"","text":"第一章 命令行最早的程序都是没有界面的，通过指令和参数和计算机交互。常用的命令1234cdmkdirrmpwd第二章 npm 包管理器第一节 npm 介绍安装 Node.js 时会同时安装一个 npm 软件。npm 是包管理工具，其作用类似 AppStore，通过他可以安装很多软件。npm 是一个命令行工具。第二节 安装包使用-g参数全局安装。12npm install 要安装包的名称npm install 要安装包的名称 -g第三节 package.json 文件1. 创建 package.json 文件这步不是必需的1npm init2. 安装依赖包使用--save参数可以在安装包的同时，将配置信息自动添加到package.json的dependencies里。1npm install 要安装包的名称 --save3. 安装开发依赖包有一些做项目管理或者测试用的工具只在开发期间使用，项目发布时并不需要，可以将其放在package.json的devDependencies里。使用--save-dev参数可以在安装包的同时，将配置信息自动添加到package.json的devDependencies里。1npm install xxx --save-dev4. 批量安装包项目组的成员不会提交依赖包，但会提交 package.json 包信息。当你接手一个项目时，需要根据 package.json包信息自己安装依赖包。npm install如果不带参加，将批量安装package.json中dependencies和devDependencies中所有的包。1npm install5. 更新包npm update批量更新package.json中dependencies和devDependencies中所有的包。1npm update###第三章 gulp 介绍第一节 gulp 的作用第二节 安装 gulpgulp 是构建工具，所以只在开发时使用。1npm install gulp --save-dev第三节 项目的常规目录结构srcdist第四章 gulp 中的命令和管道gulp 只有4个 API task、src、dest、watch。src、dest、watch通常都在 task 内使用在项目根目录下创建一个名为 gulpfile.js 的文件，这是一个普通的javascript 文件。通过 require 引入 gulp。1var gulp = require('gulp');第一节 task命令task命令用来创建任务1234567var gulp = require('gulp');// 创建一个叫 example 任务// 当执行这个任务时，function 就会被调用。gulp.task('example', function()&#123; console.log(\"hello\");&#125;);当执行这个任务时，function 就会被调用。1gulp exmaple第二节 src命令src命令用来指定对哪些文件进行操作。指定文件时可以使用 glob 正则表达式。12345var gulp = require('gulp');gulp.task('build', function()&#123; &#125;);第三节 pipe管道用src命令指定好文件后，就可以使用pipe管道来一环一环的处理了。一个文件流可以经过多个pipe管道。每个pipe管道相当于一条流水线上的一个工人，每个工人都会对这个文件流做一些加工，比如编译、加版权信息、压缩、发布等。12345678var gulp = require('gulp');gulp.task('build', function() &#123; gulp.src('src/css/**/*.less') .pipe() .pipe() .pipe()&#125;);第四节 dest命令src指定文件通过一个一个的 pipe 进行处理，最后通过 dest 将处理后的文件保存到指定位置。123456var gulp = require('gulp');gulp.task('build', function() &#123; gulp.src('src/css/**/*.less') .pipe(gulp.dest('dist/css/'))&#125;);第五节 watch命令watch命令用来指定具体监控哪些文件的变动。123gulp.task('watch', function() &#123; gulp.watch('**/*.less', ['build']); //监听目录下的文件，若文件发生变化，则调用build任务。&#125;);第五章 gulp 常见任务及插件gulp 中有4个 函数，能做的事非常有限，他只提供了一个平台，具体的每一个功能由一个插件提供。使用插件一般可以分为以下步骤：安装插件包。npm install gulp-less --save-dev引入插件。var less = require(&quot;gulp-less&quot;);在task任务或者pipe管道中 调用插件函数。less()第一节 编译1. gulp-less（编译Less）把less文件转换为css。12345678var gulp = require(&apos;gulp&apos;), less = require(&quot;gulp-less&quot;);gulp.task(&apos;compile-less&apos;, function () &#123; gulp.src(&apos;less/*.less&apos;) .pipe(less()) .pipe(gulp.dest(&apos;dist/css&apos;));&#125;);2. gulp-sass（编译Sass）把scss文件转换为sass文件。12345678var gulp = require(&apos;gulp&apos;), sass = require(&quot;gulp-sass&quot;);gulp.task(&apos;compile-sass&apos;, function () &#123; gulp.src(&apos;sass/*.sass&apos;) .pipe(sass()) .pipe(gulp.dest(&apos;dist/css&apos;));&#125;);3. gulp-babel将ES6代码编译成ES5。1234567var babel = require(&apos;gulp-babel&apos;);gulp.src(&apos;./js/index.js&apos;) .pipe(babel(&#123; presets: [&apos;es2015&apos;] &#125;)) .pipe(gulp.dest(&apos;./dist&apos;))4. gulp-autoprefixer增加浏览器的私有前缀。123456789101112var gulp = require('gulp');var autoprefixer = require('gulp-autoprefixer');gulp.task('autoprefixer', function () &#123; gulp.src('src/css/*.css') .pipe(autoprefixer(&#123; browsers: ['&gt; 5%'], cascade: true, //是否美化属性值 默认：true remove:true //是否去掉不必要的前缀 默认：true &#125;)) .pipe(gulp.dest('dist/css'));&#125;);第二节 自动注入1. header2. gulp-useref合并文件。1234567891011121314// index.html&lt;!-- build:css /css/all.css --&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;css/normalize.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;css/main.css&quot;&gt;&lt;!-- endbuild --&gt;// gulpfile.jsvar useref = require(&apos;gulp-useref&apos;);gulp.src(&apos;index.html&apos;) .pipe(useref()) .pipe(gulp.dest(&apos;./dist&apos;))替换之后的index.html中就会变成：1&lt;link rel=&quot;stylesheet&quot; href=&quot;css/all.css&quot;&gt; // 之前的两个&lt;link&gt;替换成一个了第三节 压缩1. gulp-uglifyjavascript代码优化工具，可以解析，压缩和美化javascript。12345678910111213var uglify = require(&quot;gulp-uglify&quot;);gulp.src(&apos;./hello.js&apos;) .pipe(uglify()) // 直接压缩hello.js .pipe(gulp.dest(&apos;./dist&apos;)) gulp.src(&apos;./hello.js&apos;) .pipe(uglify(&#123; mangle: true, // 是否修改变量名，默认为 true compress: true, // 是否完全压缩，默认为 true preserveComments: &apos;all&apos; // 保留所有注释 &#125;)) .pipe(gulp.dest(&apos;./dist&apos;))2. gulp-minify-css压缩css文件。12345678var gulp = require(&apos;gulp&apos;);var minifyCSS = require(&apos;gulp-minify-css&apos;);gulp.task(&apos;compress-css&apos;, function() &#123; return gulp.src(&apos;src/css/*.css&apos;) .pipe(minifyCSS()) .pipe(gulp.dest(&apos;dist/&apos;));&#125;);3. gulp-minify-html压缩html文件。12345678var gulp = require(&apos;gulp&apos;);var htmlmini = require(&apos;gulp-minify-html&apos;);gulp.task(&apos;htmlmini&apos;, function () &#123; gulp.src(&apos;*.html&apos;) .pipe(htmlmini()) .pipe(gulp.dest(&apos;minihtml&apos;));&#125;)4. gulp-imagemin压缩图片。12345var imagemin = require(&apos;gulp-imagemin&apos;);gulp.src(&apos;./img/*.&#123;jpg,png,gif,ico&#125;&apos;) .pipe(imagemin()) .pipe(gulp.dest(&apos;./dist/img&apos;))5. gulp-zip压缩成ZIP文件。12345var zip = require(&apos;gulp-zip&apos;);gulp.src(&apos;./src/*&apos;) .pipe(zip(&apos;all.zip&apos;)) // 压缩成all.zip文件 .pipe(gulp.dest(&apos;./dist&apos;))第四节 文件操作1. del删除文件。123var del = require('del');del('./dist'); // 删除整个dist文件夹2. gulp-rename重命名文件。123456789101112131415var rename = require(\"gulp-rename\");gulp.src('./hello.txt') .pipe(rename('gb/goodbye.md')) // 直接修改文件名和路径 .pipe(gulp.dest('./dist')); gulp.src('./hello.txt') .pipe(rename(&#123; dirname: \"text\", // 路径名 basename: \"goodbye\", // 主文件名 prefix: \"pre-\", // 前缀 suffix: \"-min\", // 后缀 extname: \".html\" // 扩展名 &#125;)) .pipe(gulp.dest('./dist'));3. gulp-concat合并文件。123456789var concat = require('gulp-concat');gulp.src('./js/*.js') .pipe(concat('all.js')) // 合并all.js文件 .pipe(gulp.dest('./dist')); gulp.src(['./js/demo1.js','./js/demo2.js','./js/demo2.js']) .pipe(concat('all.js')) // 按照[]里的顺序合并文件 .pipe(gulp.dest('./dist'));4. gulp-filter描述：在虚拟文件流中过滤文件。12345678910111213var filter = require('gulp-filter');const f = filter(['**', '!*/index.js']);gulp.src('js/**/*.js') .pipe(f) // 过滤掉index.js这个文件 .pipe(gulp.dest('dist'));const f1 = filter(['**', '!*/index.js'], &#123;restore: true&#125;);gulp.src('js/**/*.js') .pipe(f1) // 过滤掉index.js这个文件 .pipe(uglify()) // 对其他文件进行压缩 .pipe(f1.restore) // 返回到未过滤执行的所有文件 .pipe(gulp.dest('dist')); // 再对所有文件操作，包括index.js第五节 工具1. gulp-load-plugins2. browser-sync用来创建一个开发用的 Web 服务器。配合 gulp.watch 可以实现自动刷新。安装1npm install browser-sync --save-dev使用123456789gulp.task('serve', ['styles'], function() &#123; browserSync.init(&#123; server: \"./src\" &#125;); gulp.watch(\"src/**/*.scss\", ['styles']); gulp.watch(\"src/**/*.html\").on('change', browserSync.reload);&#125;);3. gulp-jshint案例：less 文件的自动化处理按以下步骤实现：编译 less。加私有前缀。压缩 CSS。重命名，加上.min 后缀。同时保存一份压缩版和一份未压缩版。123456789101112131415161718192021222324252627// less 文件的自动化处理var gulp = require('gulp');var less = require('gulp-less');var autoprefixer = require('gulp-autoprefixer');var minifyCSS = require('gulp-minify-css');var rename = require('gulp-rename');var del = require('del');gulp.task('clear', function() &#123; del('./dist');&#125;);gulp.task('build:src', function() &#123; gulp.src('src/css/**/*.less') // glob .pipe(less()) .pipe(autoprefixer()) .pipe(gulp.dest('dist/css/')) .pipe(minifyCSS()) .pipe(rename(&#123;suffix:'.min'&#125;)) .pipe(gulp.dest('dist/css/'))&#125;);gulp.task('watch', function() &#123; gulp.watch('**/*.less', ['build:src']);&#125;);gulp.task('default', ['clear', 'build:src']);第六章 gulp命令详解第一节 task 参数1.default任务如果任务名是 default，就可以省略 gulp 调用时的任务名。12345# 执行 build 任务gulp build# 执行 default 任务gulp2. 前置任务task 有一个前置任务参数，1234567# 当 gulp build:clear 时先顺序执行 clear 和 build 再执行 default 中的 function。gulp.task('build:clear', ['clear', 'build'], function()&#123; &#125;);# 当 gulp build:clear 时先顺序执行 clear 和 build gulp.task('build:clear', ['clear', 'build']);第二节 glob1. 匹配符*、**、！、{}1234gulp.src('./js/*.js') // * 匹配js文件夹下所有.js格式的文件gulp.src('./js/**/*.js') // ** 匹配js文件夹的0个或多个子文件夹gulp.src(['./js/*.js','!./js/index.js']) // ! 匹配除了index.js之外的所有js文件gulp.src('./js/**/&#123;omui,common&#125;.js') // &#123;&#125; 匹配&#123;&#125;里的文件名"},{"title":"html","date":"2018-05-11T08:14:16.655Z","updated":"2018-05-11T08:14:16.655Z","comments":true,"path":"tech/html/case.html","permalink":"http://www.JiShuXuePai.com/tech/html/case.html","excerpt":"","text":""},{"title":"","date":"2018-05-11T08:14:17.393Z","updated":"2018-05-11T08:14:17.393Z","comments":true,"path":"tech/html/notes.html","permalink":"http://www.JiShuXuePai.com/tech/html/notes.html","excerpt":"","text":"第一章：入门第一节：PS基础操作1.快捷键ctrl+1：图片100%显示按住空格键+鼠标左键：拖拽按住alt键+ 鼠标滚轮： 缩放画布 或 ctrl+加号 | 减号Ctrl +r 调出网页标尺线后退：ctrl+z后退一步； ctrl+alt+z后退多步Ctrl+鼠标左键：切片选中切片工具网页的结构划分顺序 - 遵循逐级划分顺序原则划分顺序可以参考： 从外往里 – 从上往下 – 从左往右图片的局部获取 – 必须遵循一像素原则第二节 PS生成代码认识html文档，了解：文档=网页；组成网页的三要素：HTML结构 - CSS样式 - JavaScript行为第二章 html标签Html是用来描述网页的一种语言。Html指的是超文本标记语言（Hyper Text Markup Language）”超文本” 就是指页面内可以包含图片、链接、甚至音乐、程序等非文字元素。超文本标记语言的结构包括“头”部分（head）、和“主体”部分（body），其中头部分提供关于网页的信息，主体部分提供网页的具体内容。HTML不是一种编程语言，而是一种标记语言（Markup Language）Html使用标记来描述网页标签=标记首页起名一定要叫index标签特点：大多数都是成对出现的，例如&lt;!doctype html&gt; 文档声明html – 超文本标记语言，相当于网页中所有标签的一个容器head 定义了网页（文档）的信息。meta 定义文档的中元数据，网页的元信息（charset=“utf-8” 国际编码类型）title 定义文档标题body 网页的主体内容区域div 俗称为盒子，division（分割）- 主要用于布局，分割页面的结构;特征：默认高度为0；宽度相对于父级100%；独立成行，垂直显示（默认垂直布局）img 图片标签12&lt;img src=”路径” title=“鼠标悬停展示文字” alt=“图片出现错误时，给用户的友好提示” /&gt;&lt;!--特征：前景图占位，不会平铺，位置写在结构中--&gt;br 强制换行h1~h6 标题标签特征：级别由高到低，一般页面h1只使用一次，分清主次自带加粗，字号大小，外间距且是块级元素。独立成行，具有div的全部特征p段落标签特征：具有div的全部特征，自带的外间距ul 无序列表语法：12345&gt; &lt;ul&gt;&gt; &lt;li&gt;嵌套内容&lt;/li&gt;&gt; &lt;li&gt;嵌套内容&lt;/li&gt;&gt; &lt;/ul&gt;&gt;ol 有序列表语法12345&gt; &lt;ol&gt;&gt; &lt;li&gt;嵌套内容&lt;/li&gt;&gt; &lt;li&gt;嵌套内容&lt;/li&gt;&gt; &lt;/ol&gt;&gt;特征：ul，ol具有div的全部特征，自带列表符、外间距、内填充。去掉自带的列表符：ul，ol { list-style:none; }span 万能标签a 标签 - 超链接格式：&lt;a href=&quot;http://helloweb.wang&quot; target=&quot;_blank&quot;&gt;文字或图片&lt;/a&gt;特征：自带蓝色，下划线，访问过后变为紫色。如为空链接，可以用#号占位注意：标签自带的样式无法再其父级改变（a的颜色和下划线）新窗口打开：target=“_blank”定义列表： dl_dt_dd123456&gt; &lt;dl&gt;&gt; &lt;dt&gt;标题&lt;/dt&gt;&gt; &lt;dd&gt;子项&lt;/dd&gt;&gt; &lt;dd&gt;子项&lt;/dd&gt;&gt; &lt;/dl&gt;&gt;特征：自带外间距，一个dl里面可以有多个dt 和 dd；块级元素，其中dl，dd自带外间距form表单– 相当于表单控件的容器参考文章：了解HTML5智能form表单新属性1234567891011121314151617181920212223242526272829303132&lt;!--格式：&lt;input type=\"类型\" /&gt;--&gt;&lt;!--文本框：--&gt;&lt;input type=\"text\" name=\"标识名\" value=\"默认值\" placeholder=\"默认值\" /&gt;&lt;!--name属性：用于对提交到服务器后的表单数据进行标识--&gt;&lt;!--密码框：--&gt;&lt;input type=\"password\" /&gt;&lt;!--单选框：--&gt;&lt;input type=\"radio\" name=\"起一个统一的名字实现单选\" checked=\"checked\" /&gt;&lt;!-- checked=\"checked\" 默认选中--&gt;&lt;!--多选框：--&gt;&lt;input type=\"checkbox\" checked=\"checked\" &gt;&lt;!--下拉列表：--&gt;&lt;select&gt; &lt;option&gt;子项&lt;/option&gt; &lt;option selected=\"selected\"&gt;子项&lt;/option&gt;&lt;/select&gt;selected=\"selected\" 默认选中&lt;!--文本域：--&gt;&lt;textarea&gt;实现多行文本&lt;/textarea&gt;&lt;!--按钮：--&gt;&lt;!--单纯的按钮：--&gt;&lt;input type=\"button\" value=\"改写或重置文字\" /&gt;&lt;!--提交查询：--&gt;&lt;input type=\"submit\" vaule=\"改写或重置文字\" /&gt;&lt;!--重置：--&gt;&lt;input type=\"reset\" vaule=\"改写或重置文字\" /&gt;​​​​第三章 CSS放置位置第一节 内部样式内部样式：在head内部应用12345&lt;!--利用&lt;style&gt;&lt;/style&gt;标签包裹起来--&gt;格式：&lt;style type=”text/css”&gt; 选择器&#123; 属性:属性值; &#125;&lt;/style&gt;第二节 外部样式外部样式：结构与表现分离，符合w3c标准，最为推荐的一种样式放置位置，可最大程度使样式重用12&lt;!--type可以省略，--&gt;&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"css/style.css\" /&gt;第三节 行内样式在标签内部应用，针对当前标签生效1&lt;div style=\"color:red;\"&gt;文字会变为红色&lt;/div&gt;第四章 CSS样式css和html一样，也是一种标记语言，语法简单，通过游览器解释执行，负责美化网页皮肤。123宽度：width:100px; 高度：height:100px;外边框线：border:1px solid red; /*线条类型：solid实线 | dashed虚线 | dotted点状线 | double双线*/宽度：width:100px;高度：height:100px;外边框线：border:1px solid red;线条类型：solid实线 | dashed虚线 | dotted点状线 | double双线元素居中：margin:0 auto;浮动：float:left;left左浮动| right右浮动 | 取消浮动none原理：做水平布局时，在同一水平线的所有元素都需要设置浮动；元素设置浮动后，本身会不占位了（暂时需注意给父级盒子设置高度，来撑开盒子范围，父亲下面的元素就不会往上跑了）拥有浮动元素的宽度之和不能大于父级盒子，否则因为父级宽度不够使后面的子元素被挤下去。盒子加上浮动属性后，宽度会从100%变成自适应。背景图：background-image:url(路径地址);背景图不占位，所有背景图片需要给范围默认会在盒整个范围内水平和垂直方向重复平铺背景图在样式中，仅仅只是起到了修饰的作用背景图重复：background-repeat:no-repeat;no-repeat不重复| repeat-x 水平平铺 | repeat-y 垂直平铺背景图定位：background-position: X Y;水平方向：左left | 中center | right右 | 绝对像素值垂直方向：上top | 中center | bottom下 | 绝对像素值文本对齐方式：text-align:center;left左对齐| center居中 | right右对齐可以对文字和图片生效外间距：margin – 盒子边框与盒子边框之间的距离当给一个值时：指的是四个方向当个两个值时：指的是上下 左右当给三个值时：指的是上 左右 下当给四个值时：值的是上 右 下 左margin-top:上间距；margin-right:右间距；margin-bottom:下间距；margin-left：左间距；内填充：padding – 盒子边框与内容之间的距离当给一个值时：指的是四个方向当个两个值时：指的是上下 左右当给三个值时：指的是上 左右 下当给四个值时：值的是上 右 下 左注意点：如果盒子有固定尺寸应用padding后，需要减去padding值，因为padding会使自身变大经验：因margin有bug，所以当对元素设置margin和padding效果一致时，优先使用padding字体族：font-family: arial，“宋体”;多个字体之间用逗号隔开，后面字属于备用字体；中间有空格的英文字或中文字体，需要加引号；中英文混排时，一般英文字体放在前面。字号大小：font-size: 14px;字体加粗：font-weight：normal;normal不加粗 | bolder加粗 | bold加粗字体斜体：font-style : normal;normal正常 | italic斜体 或 oblique倾斜文字行高：line-height: 20px ;作用：盒子设置行高后，文字会在给定的范围内垂直方向居中文字大小写：text-transform : uppercase;capitalize首字母大写 | uppercase全部大写 | lowercase全部小写文本装饰线：text-decoration : none;underline下划线 | line-through删除线 | overline上划线 | none 无显示为（转换）：display：block;block块级 | inline行级 | inline-block行块元素 | none隐藏网页三原色：rgba（0,0,0,0.5）css3样式，IE9+ 以上r– red 红色g– green 绿色b– blue 蓝色a– alpha透明度，取值范围0（完全透明）-1（完全不透明）绝对定位:position:absolute;特点：元素设置绝对定位属性后，盒子宽度会变成自适应，并且没有占位默认以浏览器的四个角为参照点进行定位：通过left，right，top，bottom来调整位置相对定位：position:relative;特点：元素设置相对定位后盒子依然是占位的；一般情况都是做为绝对定位的参照盒；固定定位：position:fixed;特点：元素设置固定定位属性后，盒子宽度会变成自适应，并且没有占位默认以浏览器的四个角为参照点进行定位：通过left，right，top，bottom来调整位置不会随着浏览器窗口而滚动层级关系：z-index:1; 设置定位元素的层叠关系只对定位元素生效值越大，元素的级别就越高，可以为负值（-2）参考文章：不起眼的 z-index 却能牵扯出这么大的学问CSS基础（七）：z-index详解盒阴影：box-shadow:X轴偏移量 Y轴偏移量 阴影的羽化 扩展值 颜色 内阴影(inset)元素垂直方向对齐方式：vertical-align:top;top顶对齐 | middle居中对齐 | bottom底对齐第五章 选择器选择器的命名规则：不能使用数字开头，必须使用字母开头，起名尽量起有意义的与页面相关的名字。特殊符号的使用：减号(-)和下划线(_)，不能使用其他符号起名可以根据（内容、位置、大小）去命名。参考网址：选择器命名参考标签选择器 ( 针对页面中所有当前类型标签生效)div{width:100px; height:100px;}class选择器 – 样式中定义好后，在结构中可多次重复使用例如：结构中：&lt;div class=”box”&gt;&lt;/div&gt;样式中：.box{ 样式 }id选择器– 样式定义好后，在结构中只能使用一次（出现一个，相当于身份证）例如：结构中：&lt;div id=”box”&gt;&lt;/div&gt;样式中：#box{ 样式 }群组选择器：可以对多个不同的选择器设置相同的样式格式：选择器1，选择器2，选择器3{ 样式 }通配符选择器 *{ margin:0;padding:0;}后代选择器：格式：父选择器 子选择器{ 样式 }父选择器内的所有子选择器都会生效。第六章 其他第一节 样式预设css重置的目的是使重构页面时能够更好、更精准的还原页面，使其兼容性更好1234*&#123; margin:0; padding:0; &#125; /*清除页面所有标签自带的外间距和内填充*/ul,ol&#123; list-style:none; &#125; /*去掉自带的列表符*/a&#123; text-decoration:none; &#125; /*去掉自带的下划线*/img,input&#123; border:none; &#125; /*清除IE下自带的边框*/第二节 兼容性图片下三像素留白：解决：1. 给图片自身设置浮动； 2. 给图片父级设置font-size:0; margin-bug:垂直方向重合问题，会以较大值生效margin-top解决方法：1. 在父级设置边框 2. 在父级设置浮动 3. 在父级设置定位 第三节 标签的类型块级元素：div、 h1~h6、p、ul、ol、li盒子特征：独立成行，宽度100%；高度自适应，可以设置宽高和外间距行级元素：a、img、span拥有部分盒模型特征：不独立成行，宽度自适应，设置宽高不生效，间距横向生效纵向不生效​ img 可以设置宽和高的第四节 选择器的优先级当有不同的选择器对同一个对象进行样式指定时；并且两个选择器有相同的属性被赋予不同的值时；​ 结论：​ 标签选择器：1；​ class选择器：10；​ id选择器：100​ 行内样式：1000​ !important 最高级别，提高样式权重，拥有最高级别（尚方宝剑）第五节 导航的特点​ ul – 导航的整体布局​ li – 导航项的布局（常被指定float）​ a – 导航链接，文字样式一般加在a上（如果希望链接范围要扩大，需要转块）​ 导航一般情况都是要么等宽，要么等间距（留白一致）第六节 锚点跳转实现单页面内跳转第一种方法：下锚（做记号）跳转的目标位置 &lt;a name=”自定义的锚点名”&gt;&lt;/a&gt;在导航上&lt;ahref=”#自定义的锚点名”&gt;&lt;/a&gt;第二种方法：下锚：&lt;divid=”锚点名”&gt;&lt;/div&gt;在导航上 &lt;ahref=”#自定义的锚点名”&gt;&lt;/a&gt;第七节 网站路径绝对路径：一般用于站外的链接：http://www.baidu.com/ 从根目录为起点到你所在的目录；相对路径：一般用于站内，从一个目录为起点到你所在的目录../ 返回上级目录（文件夹）../../返回上上级（以此类推）x/ 打开目录（文件夹）"},{"title":"","date":"2018-05-11T08:14:17.393Z","updated":"2018-05-11T08:14:17.393Z","comments":true,"path":"tech/html/relative.html","permalink":"http://www.JiShuXuePai.com/tech/html/relative.html","excerpt":"","text":""},{"title":"","date":"2018-05-11T08:14:17.696Z","updated":"2018-05-11T08:14:17.696Z","comments":true,"path":"tech/jquery/relative.html","permalink":"http://www.JiShuXuePai.com/tech/jquery/relative.html","excerpt":"","text":""},{"title":"","date":"2018-05-11T08:14:17.393Z","updated":"2018-05-11T08:14:17.393Z","comments":true,"path":"tech/jquery/case.html","permalink":"http://www.JiShuXuePai.com/tech/jquery/case.html","excerpt":"","text":""},{"title":"jQuery 教学讲义","date":"2018-05-11T08:14:17.695Z","updated":"2018-05-11T08:14:17.695Z","comments":true,"path":"tech/jquery/notes.html","permalink":"http://www.JiShuXuePai.com/tech/jquery/notes.html","excerpt":"","text":"第一章 jQuery简介第一节 jQuery是什么jQuery是一个JavaScript库，它通过封装原生的JavaScript函数得到一整套定义好的方法。开发jQuery库的目的是——WRITE LESS,DO MORE（写的少，做的多）。它可以用最少的代码，完成更多复杂而困难的功能，从而得到了开发者的青睐。它的作者是John Resig，于2006年创建的一个开源项目，随着越来越多开发者的加入jQuery已经集成了JavaScript、CSS、DOM和Ajax于一体的强大功能。第二节 jQuery主要功能一款轻量级的js库丰富的DOM选择器简单的事件操作重新封装方法，让操作DOM属性更简单链式操作丰富的动画效果Ajax操作支持浏览器兼容插件扩展开发，可扩展性强第三节 JQuery对象jQuery是一个构造函数，通过内置选择器对DOM元素进行“包装”，使之成为jQuery对象，这些对象继承了jQuery原型上定义的所有方法。jQuery将大量DOM操作定义成了方法（prototype上定义的函数），大大简化了DOM操作。JQuery 与 $ 符$是jQuery的别名（为了方便使用）第四节 JQuery的缺点1. 能向后兼容每一个新版本不能兼容早期的版本。举例来说，有些新版本不再支持某些selector，新版jQuery却没有保留对它们的支持，而只是简单的将其移除。这可能会影响到开发者已经编写好的代码或插件。2. 插件兼容性与上一点类似，当新版jQuery推出后，如果开发者想升级的话，要看插件作者是否支持。通常情况下，在最新版jQuery版本下，现有插件可能无法正常使用。开发者使用的插件越多，这种情况发生的几率也越高。我有一次为了升级到jQuery 1.3，不得不自己动手修改了一个第三方插件。3. 多个插件冲突在同一页面上使用多个插件时，很容易碰到冲突现象，尤其是这些插件依赖相同事件或selector时最为明显。这虽然不是jQuery自身的问题，但却又确实是一个难于调试和解决的问题。第五节 版本进化2006年08月 jQuery 1.02007年01月 jQuery 1.12007年09月 jQuery 1.22009年01月 jQuery 1.32010年01月 jQuery 1.42011年01月 jQuery 1.52011年05月 jQuery 1.62011年11月 jQuery 1.72012年08月 jQuery 1.82013年01月 jQuery 1.92013年04月 jQuery 2.02016年07月 jQuery 3.02.0、3.0版不再支持IE 6/7/8，相较1.x版，代码小了12%，代码运行效率更高！第二章选择器第一节 基本id选择器1$(&apos;#box&apos;)标签选择器1$(&apos;div&apos;)class选择器1$(&apos;.box&apos;)多个选择，用 “ , ” 分开1$(&apos;div,p,button&apos;)* 代表所有标签第二节 层级选择器123456789101112//匹配所有后代元素$('div span')//匹配直接子元素$('div&gt;span')//$(\"prev + next\")//匹配所有紧接在 prev 元素后的 next 元素$(\"label + input\")//匹配 prev 元素的所有同辈 siblings 元素$(\"form ~ input\")第三节 基本（增强）:first获取第一个元素:last获取最后一个元素:not去除所有与给定选择器匹配的元素:even匹配所有索引值为偶数的元素，从 0 开始计数:odd匹配所有索引值为奇数的元素，从 0 开始计数:eq匹配一个给定索引值的元素:gt匹配所有大于给定索引值的元素:lt匹配所有小于给定索引值的元素第四节 内容、可见性、属性选择器1. 内容:contains(text) 匹配包含给定文本的元素:empty 匹配所有不包含子元素或者文本的空元素:has(selector) 匹配含有选择器所匹配的元素的元素:parent 匹配含有子元素或者文本的元素2. 可见性:hidden匹配所有不可见元素，或者type为hidden的元素:visible匹配所有的可见元素3. 属性[attribute] 匹配包含给定属性的元素[attribute=value]匹配给定的属性是某个特定值的元素[attribute!=value]匹配给定的属性不是某个特定值的元素[attribute^=value] 匹配给定的属性是以某些值开始的元素[attribute$=value] 配给定的属性是以某些值结尾的元素[attribute*=value] 匹配给定的属性是以包含某些值的元素第五节 子元素、表单、表单对象属性选择器1. 子元素:first-child 匹配第一个子元素:last-child 匹配最后一个子元素:first-of-type 选择所有相同的元素名称的第一个兄弟元素:last-of-type 选择所有相同的元素名称的最后一个兄弟元素:nth-child 匹配其父元素下的第N个子或奇偶元素:nth-last-child() 选择所有他们父元素的第n个子元素。计数从最后一个元素开始到第一个:nth-last-of-type() 选择的所有他们的父级元素的第n个子元素，计数从最后一个元素到第一个:nth-of-type() 选择同属于一个父元素之下，并且标签名相同的子元素中的第n个:only-child 如果某个元素是父元素中唯一的子元素，那将会被匹配:only-of-type 选择所有没有兄弟元素，且具有相同的元素名称的元素。2. 表单:input 匹配所有 input, textarea, select 和 button 元素:text 匹配所有的单行文本框:password 匹配所有密码框:radio 匹配所有单选按钮:checkbox 匹配所有复选框:submit 匹配所有提交按钮:image 匹配所有图像域:reset 匹配所有重置按钮:button 匹配所有按钮:file 匹配所有文件域:hidden 匹配所有隐藏域3. 表单对象属性:enabled 匹配所有可用元素:disabled 匹配所有禁用元素:checked 匹配所有选中的被选中元素(复选框、单选框等，不包括select中的option):selected 匹配所有选中的option元素（select元素用）第三章 筛选第一节 过滤eq() 获取第N个元素first() 获取第一个元素last() 获取最后一个元素hasClass() 检查当前的元素是否含有某个特定的类（如果有，则返回true）filter() 筛选出与指定表达式匹配的元素集合is() 匹配元素集合，如果其中至少有一个元素符合这个给定的表达式就返回true。has() 保留包含特定后代的元素，去掉那些不含有指定后代的元素not() 删除与指定表达式匹配的元素slice(start,end) 选取一个匹配的子集第二节 查找children() 取得一个包含匹配的元素集合中每一个元素的所有子元素的元素集合。closest() 从元素本身开始，逐级向上级元素匹配，并返回最先匹配的元素find() 搜索所有与指定表达式匹配的元素next() 取得一个包含匹配的元素集合中每一个元素紧邻的后面同辈元素的元素集合nextall() 查找当前元素之后所有的同辈元素nextUntil() 查找当前元素之后所有的同辈元素，直到遇到匹配的那个元素为止offsetParent() 返回第一个匹配元素用于定位的父节点parent() 取得一个包含着所有匹配元素的唯一父元素的元素集合parents() 取得一个包含着所有匹配元素的祖先元素的元素集合（不包含根元素）。可以通过一个可选的表达式进行筛选。parentsUntil() 查找当前元素的所有的父辈元素，直到遇到匹配的那个元素为止prev() 取得一个包含匹配的元素集合中每一个元素紧邻的前一个同辈元素的元素集合prevall() 查找当前元素之前所有的同辈元素prevUntil() 查找当前元素之前所有的同辈元素，直到遇到匹配的那个元素为止siblings() 取得一个包含匹配的元素集合中每一个元素的兄弟元素集合第三节 串联add() 把与表达式匹配的元素添加到jQuery对象中end() 回到最近的一个”破坏性”操作之前。即，将匹配的元素列表变为前一次的状态。第四章 文档处理第一节 内部、外部插入1. 内部插入append() 向每个匹配的元素内部追加内容appendTo() 把所有匹配的元素追加到另一个指定的元素元素集合中prepend() 向每个匹配的元素内部前置内容prependTo() 把所有匹配的元素前置到另一个、指定的元素元素集合中2. 外部插入after() 在每个匹配的元素之后插入内容before() 在每个匹配的元素之前插入内容insertAfter() 把所有匹配的元素插入到另一个、指定的元素元素集合的后面insertBefore() 把所有匹配的元素插入到另一个、指定的元素元素集合的前面第二节 包裹 替换 删除 克隆3. 包裹wrap() 把所有匹配的元素用其他元素的结构化标记包裹起来unwrap() 这个方法将移出元素的父元素。这能快速取消 .wrap()方法的效果wrapAll() 将所有匹配的元素用单个元素包裹起来wrapInner() 将每一个匹配的元素的子内容(包括文本节点)用一个HTML结构包裹起来4. 替换replaceWith() 将所有匹配的元素替换成指定的HTML或DOM元素replaceAll() 用匹配的元素替换掉所有 selector匹配到的元素5. 删除empty() 删除匹配的元素集合中所有的子节点remove() 从DOM中删除所有匹配的元素6. 克隆clone() 克隆匹配的DOM元素并且选中这些克隆的副本第五章 jQuery 核心第一节 jQuery 对象访问length 获取的对象集合的长度each() 遍历对象中的每一个元素size() 获取的对象集合中元素的个数（这个是方法，length是属性）get() 取得其中一个匹配的元素（返回原生对象）index() 搜索匹配的元素，在本父级内同辈元素的索引，从0开始计数。第二节 插件机制 数据缓存$.extend(object) 扩展jQuery对象本身$.fn jQuery对象原型,可以为jQuery扩展方法123456//为jQuery原型增加新方法$.fn.play=function()&#123; return this.each(function()&#123; //do something... &#125;) &#125;$.fn.extend(object)扩展 jQuery 元素集来提供新的方法（通常用来制作插件）。123456789101112//为jQuery原型增加一组新方法（使用extend，合并对象）$.fn.extend(&#123; run1:function()&#123; return this.each(function()&#123; //do something... &#125;) &#125;, run2:function()&#123; retrun this.each(function()&#123;//do something... &#125;) &#125;&#125;)第三节 属性1. 属性 数据缓存attr()获取匹配的元素集合中的第一个元素的属性的值 或 设置每一个匹配元素的一个或多个属性若要检索和更改DOM属性,比如元素的checked, selected, 或 disabled状态，请使用prop()方法removeAttr() 从每一个匹配的元素中删除一个属性prop() 获取匹配的元素集中第一个元素的属性（property）值或设置每一个匹配元素的一个或多个属性removeProp() 用来删除由.prop()方法设置的属性集data() 在元素上存放数据,返回jQuery对象removeData() 在元素上移除存放的数据2. CSS类addClass() 为每个匹配的元素添加指定的类名（多个类名用空格分开）removeClass() 从所有匹配的元素中删除全部或者指定的类（参数为空，删除元素所有类）toggleClass() 如果存在（不存在）就删除（添加）一个类。3. HTML代码/文本/值所有方法，带有参数为赋值，不带参数为读取值。html() 取得第一个匹配元素的html内容text() 取得所有匹配元素的文本内容val() 获得匹配表单元素的当前值第四节 CSS1. css所有方法，带有参数为赋值，不带参数为读取值。css() 访问匹配元素的样式属性2. 位置offset() 获取匹配元素在当前视口的相对偏移position() 获取匹配元素相对父元素的偏移scrollTop() 获取匹配元素相对滚动条顶部的偏移scrollLeft() 获取匹配元素相对滚动条左侧的偏移3. 尺寸height() 取得匹配元素当前计算的高度值（px）width() 取得第一个匹配元素当前计算的宽度值（px）innerHeight() 获取第一个匹配元素内部区域高度（包括padding、不包括border）innerWidth() 获取第一个匹配元素内部区域宽度（包括padding、不包括border）outerHeight() 获取第一个匹配元素外部高度（默认包括padding和border）outerWidth() 获取第一个匹配元素外部宽度（默认包括padding和border）第六章 事件第一节 页面载入ready(fn) 当DOM载入就绪可以查询及操纵时绑定一个要执行的函数12345678$(document).ready(function()&#123; &#125;)//简写方式$(function()&#123; &#125;)第二节事件处理on() 在选择元素上绑定一个或多个事件的事件处理函数123$(\"#box\").on(\"click\",function()&#123; /**/&#125;)off() 在选择元素上移除一个或多个事件的事件处理函数1$(\"#box\").off(\"click,mousemove\");one() 为每一个匹配元素绑定一个一次性的事件处理函数trigger() 在每一个匹配的元素上触发某类事件1$(\"form:first\").trigger(\"submit\")第三节 事件委派12345//delegate() //指定的元素（属于被选元素的子元素）添加一个或多个事件处理程序，并规定当这些事件发生时运行的函数。//undelegate() //删除由 delegate() 方法添加的一个或多个事件处理程序。第四节 事件切换hover() 一个模仿悬停事件（鼠标over及out）的方法。第五节 事件blur() 元素失去焦点时change() 元素的值发生改变时click() 单击元素时dblclick() 双击元素时focus() 元素获得焦点时keydown() 键盘或按钮被按下时keypress() 键盘或按钮被按下时keyup() 键盘或按钮被松开时，它发生在当前获得焦点的元素上mousedown() 鼠标指针移动到元素上方，并按下鼠标按键时mouseenter() 鼠标指针穿过元素时，该事件大多数时候会与mouseleave 事件一起使用mouseleave() 当鼠标指针离开元素时mousemove() 鼠标指针在指定的元素中移动时mouseover() 鼠标指针位于元素上方时mouseout() 鼠标指针从元素上移开时mouseup() 在元素上放松鼠标按钮时resize() 调整浏览器窗口的大小时scroll() 用户滚动指定的元素时submit() 当提交表单时第六节 事件对象适用的事件类型主要有键盘事件：keypress、keydown、keyup，以及鼠标事件：mouseup、mousedown。ev.pageX 鼠标相对于文档的左边缘的位置ev.pageY 鼠标相对于文档的上边缘的位置ev.stopPropagation() 防止事件冒泡到DOM树上，也就是不触发的任何前辈元素上的事件处理函数ev.preventDefault() 阻止默认事件行为的触发ev.target 最初触发事件的DOM元素ev.which 针对键盘和鼠标事件，这个属性能确定你到底按的是哪个键或按钮第七章 效果第一节 基本 滑动 淡出淡入show() 显示元素hide() 隐藏元素slidDown() 向下滑动显示slideUp() 向上滑动收起隐藏slideToggle() 交替滑动状态fadeIn() 淡入fadeOut() 淡出fadeTo() 动画到指定透明度fadeToggle() 交替淡出、淡入状态第二节 自定义动画animate() 自定义动画stop() 停止所有在指定元素上正在运行的动画delay() 设置一个延时来推迟执行队列中之后的项目finish() 停止当前正在运行的动画，删除所有排队的动画，并完成匹配元素所有的动画第八章 AJAX$.ajax()jQuery 底层 AJAX 实现。简单易用的高层实现见 $.get, $.post 等。$.ajax() 返回其创建的 XMLHttpRequest 对象。大多数情况下你无需直接操作该函数，除非你需要操作不常用的选项，以获得更多的灵活性。$.get() 通过远程 HTTP GET 请求载入信息$.getJSON() 通过 HTTP GET 请求载入 JSON 数据（如果返回的JSON有误，不会有错误提示）$.post() 通过远程 HTTP POST 请求载入信息第九章 工具$.each() 通用例遍方法，可用于例遍对象和数组$.extend() 用一个或多个其他对象来扩展一个对象，返回被扩展的对象$.type(obj) 检测obj的数据类型$.isArray(obj) 测试对象是否为数组$.trim(str) 去掉字符串起始和结尾的空格$.inArray() 确定第一个参数在数组中的位置，从0开始计数(如果没有找到则返回 -1 )$.unique(array) 删除数组中重复元素。只处理删除DOM元素数组，而不能处理字符串或者数字数组$.merge(first,second) 合并两个数组"},{"title":"","date":"2018-05-11T08:14:17.703Z","updated":"2018-05-11T08:14:17.703Z","comments":true,"path":"tech/js/notes.html","permalink":"http://www.JiShuXuePai.com/tech/js/notes.html","excerpt":"","text":"第一章 介绍Javascript 1995年诞生 ， （作者：布兰登·艾克）因为网景开发了JavaScript，一年后微软又模仿JavaScript开发了JScript，为了让JavaScript成为全球标准，几个公司联合ECMA（EuropeanComputer ManufacturersAssociation）组织定制了JavaScript语言的标准，被称为ECMAScript标准。第一节 快速入门js代码可以嵌网页的任何地方。方式和css雷同，同样可以写在内部，外部，和行内，不过通常我们都把js放在head中外部js引用，通过&lt;script src=&quot;js路径&quot;&gt;&lt;/script&gt;浏览器按照顺序依次执行第二节 页面输出123456alert(\"Hello Word\");console.log(\"控制台输出\");document.write(\"页面输出\");document.getElementById().innerHTML = \"HelloWord\"; //返回div中的所有内容document.getElementById().style.background=\"red\";&lt;div onclick=\"alert(\"Helloword\")\"&gt;&lt;/div&gt;1、基本语法强调 ； 换行书写； 注释：// 或 / /第二章 数据第一节 数据类型一切事物都是由数据构成，例如：身高，位置，年龄…123456console.log(typeof \"hello\"); //stringconsole.log(typeof 3); //numberconsole.log(typeof true/false); //booleanundefinednull//typeof 检测数据类型1、字符串字符串是以单引号或双引号括起来的任意文本，比如：abc ，注意：&quot;&quot;或&#39;&#39;本身只是一种表达方式，并不是字符串的一部分因此，字符串abc只有a,b,c这三个字符；在&quot;&quot;包括的字符串中可以直接使用&#39;&#39; , 在&#39;&#39;包括的字符串中可以直接用&quot;&quot;12alert(\"Here is 'huo xing shi dai'\");alert('Here is \"huo xing shi dai\"');如果在&quot;&quot;中包括&quot;&quot; ,需要用反斜杠\\&quot; ，单引号同理12alert(\"你好 \\\"涛涛\\\" \");alert('你好 \\'涛涛\\' ');用算术运算符 + 完成字符串拼接1alert(\"welcome\" + \"to\" + \"hxsd\");如果字符串之间用&quot;-&quot;、&quot;*&quot;、&quot;/&quot;运算，则会返回NaN，NaN意为Not a Number,代表非数字，用于表示不某个值不是数字（如果是数字型字符串做这样的运算，会发生数据类型转换）1console.log(\"welcome\" - \"to\"); //结果为NaN注意：“”和“ ”不同，前者叫空字符串，后者是空格字符串12alert(\"\");alert(\" \");转义字符：\\n 和 br 相似2、numberjs不区分整数和浮点数，统一用number表示，以下都是合法的number类型12345123; //整数0.456; //浮点数1.2345e3; //科学计数法-99; //负数NaN; //NaN表示Not a Number ,当无法计算结果时用NaN表示3、布尔值里面只有两个值：true/false，表示真或假，开或关。布尔值的意义：让计算机能够有逻辑的去判断事物。4、基本算术运算符 + - * /1234567console.log(3 + 5); //8console.log(3 - 1.5); //浮点数1.5console.log(3 - 5); //负数-2console.log(3 * 5); //15console.log(3 / 5); //0.6console.log(0 / 0); //NaN ; console.log(1 / 0); //Infinity表示无穷大，当数值超过了js的number所能表示的最大值时，就表示为Infinity5、隐式转换：+号在不同情况下的区别1234//自动数据类型转换//字符串和数字相加是会把数字转换为字符串；数字与数字相加时才会参与运算；console.log(3 + 5 + \"hello\"); // 8 helloconsole.log(\"hello\" + 3 + 5); // hello 3 5第二节 变量变量variable 的概念基本和初中代数的方程变量是一致的，只是在计算机程序中，变量不仅可以是数字，还可以是任意数据类型1、定义变量（注意大小写）12345678//相当于一个杯子，你为杯子里面盛放什么，杯子里面的数据类型就是什么；//变量：临时存储信息的容器，可以复用；//1、申明变量，并起名 叫name；var name;//2、为变量赋值name = \"11\"; //为变量赋值， = 等号：是把右侧的值，赋值给左侧的变量名alert(name);2、申明变量并同时赋值12345678910111213var a = 3;console.log(a);//3a = \"hello\";console.log(a); //helloa = true;console.log(a); //true//同名变量产生覆盖var s = '小红';var s = '小丽';alert(s);3、变量数据类型12345678var a = 3;console.log(typeof a);//numbera=\"hello\";console.log(typeof a);//stringa = true;console.log(typeof a);//布尔值4、变量大小写敏感1234var s = \"小花\";var S = \"小毛\";alert(s);alert(S);5、变量命名规范1234567891011121314151617//可读性高的变量名var a_local; //使用下划线var username = \"小星\";var _username = \"小南\";var $total; //使用$命名var userName = \"小星\"; //驼峰命名 ，第二个单词首字母大写var isHappy = true; //布尔值使用is开头//不能使用关键字或保留字，因为语言私有：例如var false;var true;var boolean;var var;var functionvar 涛涛 = \"可以用中文哦！\";alert(涛涛);6、undefined未定义12345//undefined有两种结果1、真的就没定义；2、定义了，但是未赋值；var b;alert(typeof b);JS弱类型语言总结：变量必须有一个明确的数据类型，否则是不规范写法，【值是undefined】；变量类型可变：1234var a = \"xiaoli\";alert(typeof a);a = 123;alert(typeof a);变量只定义不赋值，就是undefined类型，undefined类型只有一个值undefined，表示未定义 或 只声明未给值得变量12var b;alert(b);输出一个未定义的变量会报错1alert(x);关系运算符1234567//关系运算符：&gt; &lt; &gt;= &lt;= != == === var num1 = 3;var num2 = 5;var result = num1 &gt; num2; //faslevar result = num1 &lt; num2; //truevar result = num1 == num2; //faslevar result = num1 != num2; //true章子怡身份信息123456789101112131415161718//通过js把数据加到结构中，然后显示出来&lt;h2&gt;章子怡身份信息&lt;/h2&gt;&lt;p&gt;身高：&lt;span id=\"height\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;姓名：&lt;span id=\"name\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;年龄：&lt;span id=\"age\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;性别：&lt;span id=\"sex\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;健康：&lt;span id=\"isHealth\"&gt;&lt;/span&gt;&lt;/p&gt; var name = \"章子怡\";var height = 163.5;var age = 34;var sex = \"女\";var isHealth = true;document.getElementById(\"height\").innerHTML = height;document.getElementById(\"name\").innerHTML = name;document.getElementById(\"age\").innerHTML = age;document.getElementById(\"sex\").innerHTML = sex;document.getElementById(\"isHealth\").innerHTML = isHealth;变量小结基本数据类型有哪些？number，string，boolean，undefined；变量定义的三种情况：定义已经赋值。定义未赋值（undefined）、未定义（出错！）第三节 对象JS的对象是一种无序的集合数据类型，它是由若干个键值对组成。变量只能保存单一的数据，比如姓名，性别等…如果将一个人的多个相关信息存储在一个变量中，则需要使用对象1234567891011var name = \"小星\";var age = 22;var sex = \"男\";//申明对象var obj = new Object();obj.name = \"小星\";obj.age = 22;obj.sex = \"男\";alert(obj.name+\"的年龄是\"+obj.age+\",性别：\"+obj.sex);1、JOSN的数据方式12345678//实际来讲：简化定义对象的方式就叫json（JavaScript Object Notation）对象表示法var person = &#123; neme:'小星', age:22, sex:'男'&#125;alert(person.name +\"的年龄是：\"+person.age+\",性别：\"+person.sex);2、用.语法访问对象的数据语法：12//对象名.属性名objectName.propertyName3、null：（空对象，返回object）null表示一个空对象，”什么都没有“的意思，用来表示”无值“；通常用作一个空引用，一个空对象的预期，就像一个占位符；对象小结undefined NaN null 三者的区别？undefined：没有定义，声明了一个变量却没赋值时会返回 undefined12var a;alert(a); // undefinednul: ”什么都没有“，空对象的引用12null === undefined //falsenull == undefined //trueNaN:”不是一个数”，Not a Namber，无法计算结果时，会返回NaN1234typeof(NaN); //Numbervar a = \"hello\" * 3; //a的值为NaNNaN === NaN; //false//NaN不等于任何值，连他本身也不等于第四节 数组数组是一组按顺序排列的集合，集合的每个值称为元素。1、数组的定义1234//数组：一次性申请一批存储空间 - 引用类型//var num = 3; 基本数据类型//数组中可以存放任意数据类型，并通过索引访问每个元素var arr = [];2、向数组赋值123arr[0] = \"张三\";arr[1] = \"李四\";arr[2] = \"王老师\";3、数组字面量方式声明1var arr = [\"张三\",\"李四\",\"王老五\"];4、数组索引与对象一样， 数组是数值的集合，不同的对象中每个数值都有一个名字，可以用名字获取对应的值，而数组的每个值都有下标值，用数组名[下标值]1alert(arr[0]+\",\"+arr[1]+\",\"+arr[2]);5、数组长度length属性可以设置或返回数组元素的数量，length属性的值总是比数组定义的最后一个元素的索引值大 1；12345//语法格式：数组名.lengtharrObject.length//最后一个元素的索引值arr.length-16、修改已有数组中的值Array 可以通过索引把对应的元素修改为新的值，因此，对数组的索引进行赋值会直接修改这个数组123var arr = [\"A\",\"李四\",\"C\"];arr[1]=\"李四他哥\";arr; //变为[\"A\",\"李四他哥\",\"C\"]7、数组越界请注意：如果通过索引赋值时，索引超过了范围，同样会引起Array大小的变化123var arr = [1,2,3];arr[5] = \"t\";arr; //arr变为[1,2,3,undefined,undefined,\"t\"];8、数组方法indexof数组可以通过indexof() 来搜索一个指定的元素的位置，如未找到返回-1；123var arr = [10,20,'30','abc'];console.log(arr.indexOf(10)); //返回索引0console.log(arr.indexOf(30)); //返回-19、数组concatconcat() 方法把当前的数组和另一个数组连接起来，并返回一个新的Array12345var arr1 = [\"a\",\"b\",\"c\"];var arr2 = [1,2,3];var newArr = arr1.concat(arr2,\"再次追加\");nesArr; //[\"a\",\"b\",\"c\",1,2,3]arr1; //[\"a\",\"b\",\"c\"]10、数组push和poppush()向数组的末尾添加若干元素，pop()则是把数组的最后一个元素删除掉；123456789101112var arr = [1,2];arr.push(\"A\",\"B\");arr; //[1,2,\"A\",\"B\"];arr.pop() ; //返回\"B\"arr; //打印[1,2,\"A\"];arr.pop();arr.pop();arr.pop();//连续3次arr; // []arr.pop(); //空数组继续pop不会报错，而是返回undefinedarr;//11、数组unshift和shiftunshift向数组前面添加若干元素， shift则是把数组的第一个元素删除123456789var arr = [1,2];arr.unshift(\"a\",\"b\");arr; //打印 [\"a\",\"b\",1,2];arr.shift();arr; //打印[\"b\",1,2];arr.shift();arr.shift();arr.shift();arr;//打印[]12、数组sliceslice()截取数组的部分元素，然后返回一个新的Array123var arr = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\"];arr.slice(0,3);//从索引0开始，到索引3结束，但不包括3arr.slice(3); //从索引3到结束，[\"d\",\"e\",\"f\",\"g\"]如果不给slice传递任何参数，他就会从头到尾截取所有元素。123var arr = [\"a\",\"b\",\"c\"];var aCopy = arr.slice();aCopy; //[\"a\",\"b\",\"c\"]13、数组sortsort()可以对当前的Array进行排序，他会直接修改当前数组的元素位置123var arr = [\"B\",\"C\",\"A\"];arr.sort();arr; //[\"A\",\"B\",\"C\"]14、数组reversereverse() 把整个数组的元素给掉个个，就是反转；123var arr = [\"one\",\"two\",\"three\"];arr.reverse();arr; //[\"three\",\"two\",\"one\"];15、数组joinjoin()方法可以把当前数组的每个元素都用指定的字符串连接起来，然后返回连接后的字符串123var arr = [\"a\",\"b\",\"c\",1,2,3];arr.join('-'); // a-b-c-1-2-3//如果Array的元素不是字符串，将自动转换为字符串后再连接16、数组splicesplice()方法是修改数组的万能方法，它可以从指定的索引开始删除若干元素，然后再从该位置添加若干元素。1234567891011121314//splice(索引值,删除数量,\"值1\",\"值2\");var arr = [\"苹果\",\"橘子\",\"香蕉\",\"芋头\",\"桂圆\",\"西瓜\"];//从索引2开始删除3个元素，然后在添加两个元素arr.splice(2,3,\"白梨\",\"山楂\");console.log(arr); //打印[\"苹果\",\"橘子\",\"白梨\",\"山楂\",\"西瓜\"]//只删除，不添加arr.splice(2,2)console.log(arr); //只添加，不删除arr.splice(2,0,\"白梨\",\"小西瓜\");console.log(arr);二维数组1234567891011var arr = [[1,2,3],['a','b','c'],500];var x = arr[1][1]; // bvar arr = [[1,2,3],['a','b','c'],500]; var myClass = [ &#123;name:'章子怡',age:34,sex:\"女\"&#125;, &#123;name:'陈坤',age:24,sex:\"男\"&#125;, &#123;name:\"涛涛\",age:18,sex:\"男\"&#125;]alert(myClass[0].name); //章子怡第三章 运算第一节 算术运算通过运算操作数据（事物）的行为，运算表示行为蜗牛爬井，一口井10米，蜗牛白天爬3米，夜晚滑2米。蜗牛几天爬出？12345678910//当前位置在井底，默认为0；var position = 0;//白天爬三米position = position + 3;//夜晚滑2米position = position-2;console.log(\"往上爬了\"+ position + \"步\");给定 y =3描述运算符例子结果加+x = y + 2x = 5减-x = y - 2x = 1乘*x = y * 2x = 6除/x = y / 2x = 1.5取余%x = y % 2x = 1递增++x = ++y; x= y++x = 4; x = 3递减–x= –y; x= y–x= 2;x = 31、隐士转换1234567console.log('20'-'5'); //会隐士转换：结果15.类型numberconsole.log('24ad'-'12ad'); //NaN console.log(100-''); //数字与字符串运算结果都数字，结果100console.log(1/0); // Infinity无穷大。console.log(\"4\"/\"2\"); //结果2console.log('8'%'3');//结果2//总结：除了+ 号可以做字符串连接，其他运算基本都会做数据类型转换2、强制转换123456//比如说：一个字符串12 ，把字符转整数parseInt(\"12\"); //12parseFloat(); //字符串取小数isNaN(parseInt(str)); //判断是不是 非数字，非数字返回true3、数字转为字符串 toString()123var num = 123;var str = num.toString(); //转字符串alert(typeof str);4、+ 号字符串连接12345//连接两个或多个字符串： srt = \"hi , i was stunned by my own cleverness!\" 嘿！我被自己的智商惊呆了！str1 = \"hi , i was stunned\";str2 = \" \";str3 = \"by my own cleverness!\"str = str1 + str2 + str3;5、取模运算运算规则：两个数相处后取余数结果：对10 取模得到一个不超过10的数6、运算符优先级12var a = 2 + 3 * 5; //17var b = (2+3)/(5-3); //2.5第二节 赋值运算复合的赋值运算符 += -= *= /= %=1、赋值运算符 = 特点：变量的读写操作赋值运算 是唯一 一种修改内存（写）的方式123456//编程思想var a = 3;a = a+1;//第一步：读取a的值；//第二步：运算a+1；//第三步：把运算结果写会a；2、自增自减运算符12345678910111213141516171819202122var num = 0;//num = num + 1;//num+=1;num++; //1num++; //2++num; //3console.log(num++);// 3console.log(++num);//5//后缀++：变量的值先参与其他运算，然后自身的值在增加//前缀++：变量的值先自身+1，然后再用增加后的值参与运算num--; //5--num; //3console.log(num--); //3console.log(--num); //1//思考案例var i=5;console.log(i++ + ++i); //5 + 7 = 12 alert(i);//7console.log(i-- + --i); //7 + 5 = 123、加赋值 ‘+=’ 和减赋值‘-=’12345678var x = 10;x = x+2; //读取x的值，在运算x+2,运算结果写会xx+=2x -= 2 ; //x = x-2 x*=2;x/=2;x%=2;4、表达式包含赋值运算的语句叫表达式单独的运算不叫表达式第三节 关系运算关系运算：&gt; &lt; &lt;= &gt;= != == ===通过比较两个数组大小，返回布尔值1、比较两个值123456var num1 = 3;var num2 = 5;var result = num1&gt;num2; //falsevar result = num1&lt;num2; //truevar result = num1==num2; //faslevar result = num1 != num2;2、==和=== !=与!==1234567891011121314var a = 2;var b = '2';var c = 2;console.log(a == c); //true, 类型相同，值相同console.log(a === c); //true 类型相同，值相同console.log(a !== c); //false a与c类型相同，值也相同console.log(a == b); //true 把b转换为数字，检查是否相等console.log(a != b); //false 非运算console.log(a === b); //false 类型不同，直接返回falseconsole.log(a !== b); //true a与b类型不同//总结：==和!= 先尝试转换类型，再做值比较，最后返回值比较结果；而===和!== 只有在相同类型下，才会比较里面的值3、字符串比较1234'2'=='2'; //true 两个操作数是数字字符串，先转换成数字，在进行比较'a' != 'b'; //true 两个操作数是字母字符串，转成ascii码 再比较'abc' &lt; 'aad'; //false 依次比较ascii码13 &gt; 'abc'; //false abc 会转成NaN获取unicode字符编码123var str = 'abc';alert(str.charCodeAt(0));//97 返回指定位置的字符的 Unicode编码charAt(1);//返回字符串的子串给定 x = 3运算符描述例子==等于x==8为false===全等（值和类型）x===3为true; x===”3”为false!=不等于x!=8为true&gt;大于x&gt;8为false&lt;小于x&lt;8为true&gt;=大于或等于x&gt;=8为false&lt;=小于或等于x&lt;=8为true小结： “=”、“==”、“===” 这三种等号的区别？=：是赋值符号，是对变量所代表的的内存的写操作==：忽略数据类型的判断是否相等=== ：数值和数据类型都要相等才判断为相等第四节 逻辑运算1234//满足两个条件var username = '小星';var password = 'abc';alert((username === '小星') &amp;&amp; (password === 'abc')); //true1、逻辑与 &amp;&amp;逻辑与&amp;&amp;（and） 并且的意思：若干条件中，只有都是true时（满足条件）条件才能为真12345//只有条件全部为true时才执行alert(true &amp;&amp; true);//两边都为true ，结果为truealert(true &amp;&amp; fasle);//有一个为false，结果为falsealert(false &amp;&amp; (3&gt;4)); //两边都为false，结果为falsealert(false &amp;&amp; false); //false2、逻辑或||逻辑或 || ，若干条件中，只要有一个满足，返回true1234true || true //结果truefalse || true //结果truetrue || false //结构truefalse || （3==4）//结果false3、逻辑非 !逻辑非！ 取反 !true的结果为false，!false 的结果为 true123var n1 = !true; //faslevar n2 = !false; //truevar n3 = !!true; //true4、复合逻辑表达式12//中文：user等于小星 并且 年龄大于等于18 或者 地址是中国 并且 密码是123 (user==='小星')&amp;&amp;(age&gt;=18 || addr==='中国')&amp;&amp;(password==='123');5、高富帅，嫁不嫁12345678910111213141516//用变量 g ， f ， s 分别代表 身高 、 财富 、 颜值//标准：高 g&gt;=180, 富f&gt;=100, 帅 s&gt;=80//用布尔值 true代表嫁，false代表不嫁var g = 180;var f = 100;var s = 80;//高&amp;&amp;富&amp;&amp;帅console.log(g&gt;=180 &amp;&amp; f&gt;=100 &amp;&amp; s&gt;=80); //true//高 || 富 || 帅console.log(g&gt;=180 || f&gt;=100 || s&gt;=80); //true//高&amp;&amp;富&amp;&amp;!帅console.log(g&gt;=180 &amp;&amp; f&gt;=100 &amp;&amp; !(s==80)); //false//(高||富)&amp;&amp;帅console.log((g&gt;=180 || f&gt;=100) &amp;&amp; s&gt;=80); //true第五节 三目运算能够根据不同的条件去做不同的处理条件运算符 ? :三元运算符： （比较表达式）？结果1：结果2；12345var num1 = 3; var num2 = 5;//（比较表达式）？结果1：结果2；var max = (num1&gt;num2)?num1:num2;console.log(\"最大值是\"+ max);小结：应用场景：当只有两个结果的时候语法：条件？ 结果1：结果2第四章 逻辑第一节 if逻辑if选择逻辑：基于不同的条件来执行不同的动作程序运行的三大结构：顺序结构，选择结构，循环结构1、顺序结构：代码逐行执行，自上而下2、选择结构：通常是和关系比较一起用；​ a) 单分支选择：if语句​ b) 双分支选择：if-else语句​ c) 多分支语句：if-else if-else 语句1234567891011121314var num1 = 3;var num2 = 5;/*如果（条件）&#123; 执行代码段&#125;否则&#123; 执行代码段&#125;*/if(num1&lt;num2)&#123; console.log(num2);&#125;else&#123; console.log(num1);&#125;单分支语句1234567891011121314151617//多个值比较时，输出最大值var num1 = 3;var num2 = 5;var num3 = 7;var num4 0= 30;//假定num1是最大的；var max = num1;if(max&lt;num2)&#123; max = num2;&#125;if(max&lt;num3)&#123; max = num3;&#125;if(max&lt;num4)&#123; max = num4;&#125;console.log(\"最大值是：\"+max);双分支If_else语句123456789101112131415161718192021222324252627/*嫁给谁？条件：如果男票很帅，就嫁给他；伪代码：如果（男票很帅）&#123; 就嫁给他&#125;否则&#123; 在等等&#125;*/var bf = \"不帅\";if(bf==\"不帅\")&#123; console.log(\" 就嫁给他\") ; console.log(\"给嫁妆\");&#125;else&#123; console.log(\"在等等\");&#125;//涛涛成绩：&gt;=60 var score = 60;if(score &gt;= 60)&#123; console.log(\"恭喜你，通过了考试\"); &#125;else&#123; console.log(\"不好意思，你挂科了\");&#125;多分支if_else if语句12345678910111213141516171819//if(条件1)&#123; //当条件1为true时执行的代码&#125;else if(条件2)&#123; //当条件2为true时执行的代码 &#125;else&#123; //当以上条件都不为true时执行代码&#125;var bf = \"\";if(bf==\"帅\")&#123; console.log(\"帅，就嫁给他\");&#125;else if(bf==\"有钱\")&#123; console.log(\"很有钱，也可以嫁给他\"); &#125;else if(bf==\"贴心\")&#123; console.log(\"很贴心，也可以嫁给他\"); &#125;else&#123; console.log(\"拜拜\");&#125;if的嵌套if里面嵌套if，或者if-elseelse 里面可以嵌套if ，或者if-else12345678910111213141516//判断用户名密码是否正确var btn = document.getElementById(\"btn\");var user = document.getElementById(\"user\");var pass = document.getElementById(\"pass\");btn.onclick = function()&#123; if(user.value == \"涛涛\")&#123; if(pass.value == \"123\")&#123; alert(\"登录成功\"); &#125;else&#123; alert(\"密码错误\"); &#125; &#125;else&#123; alert(\"用户名错误\"); &#125;&#125;配合逻辑运算符问题：1、如果他又帅又有钱，才嫁给他2、如果他又帅又有钱，并且还是JS程序员，才嫁给他3、他果他帅，或者他有钱，或者他是JS程序员，就嫁给他12345678//1、如果他又帅又有钱，才嫁给他var bf = \"帅\";var money = \"很多\";if(bf == \"帅\" &amp;&amp; money == \"很多\")&#123; console.log(\"才嫁给他\");&#125;else&#123; console.log(\"没符合条件哦!\");&#125;123456789//2、如果他又帅又有钱，并且还是JS程序员，才嫁给他var bf = \"帅\";var money = \"很多\";var isJob = \"js程序员\";if(bf == \"帅\" &amp;&amp; money == \"很多\" &amp;&amp; isJob == \"js程序员\")&#123; console.log(\"才嫁给他\"); &#125;else&#123; console.log(\"没符合条件哦!\");&#125;123456789//他果他帅，或者他有钱，或者他是JS程序员，就嫁给他var bf = \"帅\";var money = \"很多\";var isJob = \"js程序员\";if(bf == \"帅\" || money == \"很多\" || isJob == \"js程序员\")&#123; console.log(\"才嫁给他\"); &#125;else&#123; console.log(\"没符合条件哦!\");&#125;布尔值为false 的几种情况123456789/* 0、 undefined 、 null 、 -0 、 NaN 、 \"\"空字符串 、false*/var num = 0;if(num)&#123; console.log(true); &#125;else&#123; console.log(false); &#125;1//需求：看涛涛的成绩评级：低于30差的没边，低于60挂科，大于等于60良，大于等于80优；小结：if-else语句 与 三目运算符if-else 能实现与三目元素符一样的效果，后者更简洁12345678910var a = 100;var b = 100;var c = 80;if(a&gt;=100 &amp;&amp; b&gt;=100 &amp;&amp; c&gt;=80)&#123; console.log(\"嫁\");&#125;else&#123; console.log(\"不嫁\");&#125;//三目运算符实现console.log((a&gt;=100 &amp;&amp; b&gt;=100 &amp;&amp; c&gt;=80)?\"嫁\":\"不嫁\");但：两者的本质不同，前者叫语句，后者是运算符。这意味着三目运算可以与赋值运算符=组成算术表达式，而if-else不可以。1234567891011121314151617/*作业 1、给定一个用户的年龄，判断是哪个年龄段的人，并输出结果儿童：&lt;14;青少年：14&lt;=年龄&lt;24;青年:24&lt;=年龄&lt;40;中年:40&lt;=年龄&lt;60;老年：年龄&gt;=60;2、通过用户的积分判断是哪个级别的会员，并输出结果普通：积分&lt;100;铜牌：100&lt;=积分&lt;300;银牌：300&lt;=积分&lt;1000;金牌：1000&lt;=积分&lt;2000;vip：积分&gt;=2000;3、判断星期几 - //给定一个数字，（0-6） ，显示对应的星期几（0：星期日;1:星期1；.....6:星期6）*/第二节 选择逻辑 - switchswitch语句是if …else if …else 语句的简写方式使用前提：在匹配某个值相等不相等，而不是匹配某个范围的情况下，优先使用switch语句语法格式12345678910switch(num)&#123; //表达式，变量 case 1: //执行代码段 1 break; //中断执行，跳出 ..... default： //默认，其他都不是的情况下执行 //执行代码段 2 break;&#125;//强调：break非常重要。改造判断星期几1234567891011121314151617181920var num = 3;if(num ==0)&#123; console.log(\"星期日\");&#125;else if(num==1)&#123; console.log(\"星期一\");&#125;else if(num==2)&#123; console.log(\"星期二\");&#125;else if(num==3)&#123; console.log(\"星期三\");&#125;else if(num==4)&#123; console.log(\"星期四\");&#125;else if(num==5)&#123; console.log(\"星期五\");&#125;else if(num==6)&#123; console.log(\"星期六\");&#125;else&#123; console.log(\"请输入0-6的数字哦！\");&#125;//改造后的会员价格123456789101112131415161718192021222324252627282930/*如果你是“普通会员”，结算享受95折； ”银牌会员“，结算享受90折； “金牌会员”，结算享受85折； ”钻石会员“，结算享受80折；*/var member = \"钻石\"; //定义会员级别var money = 100; //定义应付金额var discount; //折扣var total; //实付金额switch(member)&#123; case \"普通\": discount = 0.95; break; case \"银牌\": discount = 0.9; break; case \"金牌\": discount = 0.85; break; case \"钻石\": discount = 0.8; break; default: money *=1; break;&#125;total = money * discount; //实付金额 = 应付金额 * 折扣 console.log(\"您应付金额为\"+money+\"; 您的实付金额\" + total+ \"；为您打了：\"+ discount + \"折\");给定年份，确定该月的天数1234567891011121314151617181920212223242526272829303132333435363738394041/*分析：1,3,5,7,8,10,12 31天4,6,9,11 30天二月：29 ： 28 */var year = 2017; //年份var month = 12; //月份var year = 2017; //年份var month = 20; //月份var days = 31;var flag = true; //定义标志变量 if(month&lt;1 || month&gt;12)&#123; flag = false; &#125;switch(month)&#123; case 4: case 6: case 9: case 11: days = 30; break; case 2: days = 28;&#125;if(flag==true)&#123; console.log(year + \"年\" + month + \"月的天数是：\" + days); &#125;else&#123; console.log(\"您输入的月份不对\");&#125;//求闰年：对4取余 == 0 &amp;&amp; 对100取余！=0 || 对400取余 等于 0var year = 2016;if(year%4==0 &amp;&amp; year%100!=0 ||year%400==0 )&#123; console.log(year+\"是闰年\");&#125;else&#123; console.log(year+\"是平年\");&#125;第三节 循环逻辑while循环可以帮助我们重复去做一些事情while循环的特点是：不知道具体循环执行的次数语法格式123while(条件表达式)&#123; //要重复执行的代码段 - 循环体 &#125;循环100次歌曲123456//var i = 0; //循环变量初始化while(i&lt;100)&#123; //循环条件判定，循环100次 console.log(\"hello\" + i); //执行循环体 i++; //循环变量递增 | 递减 &#125;遍历数组1234567//循环输出一个数组中的每一个元素，通常称为“数组遍历”var arr=[\"张三\",\"李四\",\"王老五\",\"涛涛\"];var i=0;while(i&lt;arr.length)&#123; console.log(arr[i]); i++;&#125;扩展：数组星期应用123var weekDays = [\"星期日\",\"星期一\",\"星期二\",\"星期三\",\"星期四\",\"星期五\",\"星期六\"];var num = prompt(\"请输入0-6\");console.log(\"今天是\"+ weekDays[num]);break 跳出循环123456789101112var sum = 0;var i = 1;while(i&lt;100)&#123; if(i%2==0)&#123; sum+=i; &#125; if(sum&gt;=1000)&#123; break; //停止循环，终止循环 &#125; i++;&#125;console.log(\"最后一个偶数是：\"+i+\"，累计到1000为止的和是= \"+sum);continue123456789////把100-200之间的不能被3整除的数输出 - （能被3整除的数，不输出）var i=100;while(i&lt;200)&#123; i++; if(i%3 == 0 )&#123; continue; //结束本次循环，马上开始下一次循环 &#125; console.log(i);&#125;第四节 循环逻辑do-while与while语句99%相像，1%语法执行顺序不一样语法格式123456/*规则：先执行一遍循环体，在判断循环条件，如果为true就再执行一遍循环体，为false就结束循环体。*/do&#123; //循环体&#125;while(循环条件判断)do-while与while区别12345678910var i=1;/*while(i&gt;10)&#123; console.log(i); i++;&#125;*/do&#123; console.log(i); //1 i++;&#125;while(i&gt;10);特点：do-while是先执行循环体，在检测循环条件，do-while能保证循环体至少执行一次。而其他循环都无法保证循环体至少执行一次。do-while 砸金蛋游戏123456789/*抽奖游戏，请用户输入一个幸运数字，输出对应的奖品，如果没有抽到，继续抽，抽到为止！*/var jiangpin = [\"苹果x\",\"小米\",\"华为\",\"ipad\",\"谢谢参与\"];var n;do&#123; n = prompt(\"请输入您的幸运数字:0-4\"); console.log(\"您抽中的奖品是：\"+ jiangpin[n]);&#125;while(jiangpin[n]==\"谢谢参与\")第五节 for循环1234567891011//打印三遍var i= 0;while(i&lt;3)&#123; console.log(\"重要的事说三遍\"); i++;&#125; //语法格式//for( 1循环变量初始化；2循环条件判定；4循环变量的修改 )&#123;// 3循环体；//&#125;for循环过程1、循环变量初始化2、循环条件判定3、执行循环体4、循环变量递增或递减循环的总结循环可以帮助我们去重复的做一些事while （当…的时候）while 循环的特点：不知道具体循环执行的次数只有……就….：只要蜗牛没到井口，就会一直爬直到……才….： 直到蜗牛到井口，才停止；条件为true –》死循环 –break123456789101112131415var position = 0;//白天（天数）var daytime = 0;//晚上var night = 0;while(position&lt;10)&#123; daytime += 1; //天数 +1 position += 3; if(positon&gt;=10)&#123; break; &#125; night += 1; //晚上的天数+1 position -= 2; //晚上下滑-2&#125;alert(\"蜗牛用了\"+daytime+\"天时间爬出了井口\"); //8for最常用的一种：计次循环，从0到100,100到0，遍历12345678var m = 1;var n = 10;for(var i=0;i&lt;=n;i++)&#123; console.log(\"你们的学习态度太帅了\");&#125;for(var i=n;i&gt;=m;i--)&#123; console.log(\"你们的学习态度太帅了\");&#125;do-while与while九分相似，一分区别在dodo.while先执行循环体，至少执行一次而while先判断条件，再执行循环体。123456//参加超级女声do&#123; //唱一首歌，并评出分数 var score = 80; console.log(\"本次参赛得分：\" + score);&#125;while(score&gt;=60); //如果得分大于60就参加下一轮比赛生成随机数12345678//生成随机数，包含的随机数都是小于1的，大于0的，都是小数alert(Math.random());//生成一个0.0 - 10.0的随机数alert(Math.random() * 10);//生成一个0-10的整数 随机数；alert(Math.floor(Math.random()*10));//生成一个0-10的 整数 随机数；向上取整，取最接近的alert(Math.ceil(Math.random()*10));第五章 JS模块化第一节 函数函数是用来整合一段代码，已备后面重复使用有时候，我们需要在不同位置使用相同的代码（重复使用）函数的定义1234567891011121314151617181920212223242526272829303132//使用关键字function定义函数；函数名称的定义规则与变量名称规则相同function chifan()&#123; console.log(\"点餐\"); console.log(\"玩手机\"); console.log(\"吃东西\");&#125;//调用函数chifan();chifan();--------------------------------- //按钮点击调用函数btn.onclick = chifan;//重要的事说三遍function say()&#123; for(var i=0;i&lt;3;i++)&#123; console.log(\"重要的事说三遍:\"); &#125;&#125;say();--------------------------------- //通过变量声明函数，say调用必须出现在函数之后，否则会报错未定义var say = function()&#123; for(var i=0;i&lt;3;i++)&#123; console.log(\"重要的事说三遍:\"); &#125;&#125;say();小结：函数的作用：模块化，复用；函数也是一种数据类型（function）；调用函数，就是把函数体中的代码从头到尾执行一遍。第二节 局部变量和全局变量变量有两种作用范围：一个是在函数外，一个是在函数内变量的作用域变量的作用域是指哪个范围内能访问到这个变量；在函数体内申明的变量称为局部变量，仅在函数体内可以使用；全局变量又称为外部变量，定义在函数体外，对全局可见。局部变量123456function home()&#123; var wc = \"我是家里的卫生间\"; //局部变量 alert(wc);&#125;home(); //调用alert(wc); //报错访问不到全局变量在函数体内部，局部变量的优先级比同名的全局变量优先级高123456789var wc = \"我是全局变量\";function home()&#123; var wc = \"我是局部变量\"; alert(wc);&#125;home();-----------------var a = 3; //不var声明的变量典型错误 不使用var申明的变量也是全局变量 （不建议这样用）12345function home()&#123; wc = \"我是私家厕所\"; //全局变量&#125;home();alert(wc);小结：能使用局部变量就不要使用全局变量【典型错误】不使用var声明的变量也是全局变量第三节 函数传参目的为了来扩展函数的灵活性，可以将代码中可以变化的部分提取出来，用变量代替1234function hello(msg)&#123; console.log(msg);&#125;hello(\"您吃了吗？\");123456function say(count)&#123; for(var i=0;i&lt;count;i++)&#123; console.log(\"重要的话 \" + count +\"遍\"); &#125;&#125;say(40);打招呼123456function hello(name,msg)&#123; console.log(name,msg);&#125;hello(\"张三\",\"您吃了吗？\");hello(\"jeck\",\"hello\");hello(\"某国人\",\"阿里阿道\");一个函数可以有多个参数，调用函数时传参的个数和顺序要与函数的定义一致。做饭123456function cooking(zhu,tiao)&#123; console.log(zhu+\"拌\"+ tiao + \"做好了！\");&#125;//不同的材料，产生不同的菜cooking(\"小葱\",\"豆腐\")；小结参数的含义：局部变量只能在函数内部赋值，如果我想在函数外部赋值，那么可以把这变量变成参数函数定义中的参数是叫[ 形参 ] - 变量函数调用中的参数是叫[ 实参 ] - 数据函数的传参就是赋值操作函数可以有参数也可以没有如果定义了参数，在调用函数时没有传值，默认为undefined。第四节 返回值函数代表一种行为，返回值表示这个行为的结果1、return 的含义123456//理解返回值function getNum()&#123; return 2; //return,将函数的结果返回给当前函数名&#125;var result = getNum(); //如果希望返回值保存，就放在变量中console.log(result); //2如果函数中没有return，则他默认返回undefined2、retrun结束函数运行12345function Fun()&#123; console.log(\"hello\"); return; console.log(\"我会执行吗？\");&#125;如果在循环中使用return，不仅整个循环结束，而且 整个函数就结束了12345678910function Fun()&#123; for(var i=0;i&lt;10;i++)&#123; //循环三次就return if(i==3)&#123; return; &#125; console.log(\"你们是帅哥\"); &#125; alert(\"看return会不会执行我！\");&#125;Fun();小结：continue 结束本次循环break 结束整个循环return 结束整个函数123456789101112131415//找出数组中偶数的和//写个函数，向他传一个数组，找出数组中偶数的和，并打印输出。//写一个函数，向它传一个整数数组，找出数组中偶数的和，并打印输出var ages = [80, 65, 73, 72];function sumEven(arr) &#123; var sum = 0; //遍历数组 - 找出偶数 - 累加 - 保存到sum中 for (var i=0;i&lt;arr.length;i++) &#123; if (arr[i]%2 == 0) &#123; //如果arr[i]求余等于0，证明是个偶数 sum = sum + arr[i]; &#125; &#125; console.log(sum); //152&#125;//调用sumEven(ages);"},{"title":"","date":"2018-05-11T08:14:17.704Z","updated":"2018-05-11T08:14:17.704Z","comments":true,"path":"tech/laravel/case.html","permalink":"http://www.JiShuXuePai.com/tech/laravel/case.html","excerpt":"","text":""},{"title":"","date":"2018-05-11T08:14:17.699Z","updated":"2018-05-11T08:14:17.699Z","comments":true,"path":"tech/js/case.html","permalink":"http://www.JiShuXuePai.com/tech/js/case.html","excerpt":"","text":"页面输出hello Word12345alert(\"HelloWord\"); console.log();document.write();document.getElementById().innerHTML=\"helloword\"; document.getElementById().style.background=\"red\";两个变量值的互换1234567891011//需求：互换两个变量的值；var num1 = 3;var num2 = 5;console.log(\"互换前：\"+num1+\",\"+num2);//需要定义一个临时变量var temp;temp = num1;num1 = num2;num2 = temp;console.log(\"互换后：\"+num1+\",\"+num2)简易计算器做两个文本框，做个单纯的加法运算，其中注意隐士转换！12345678910//类型转换&lt;input type=\"text\" id=\"txt1\"&gt; + &lt;input type=\"text\" id=\"txt2\"&gt;&lt;button id=\"btn\" onClick=\"cal()\"&gt;计算&lt;/button&gt;function cal()&#123; var txt1 =document.getElementById(\"txt1\").value; var txt2 =document.getElementById(\"txt2\").value; var num1 = parseInt(txt1); //转换 var num2 = parseInt(txt2); //转换 alert(num1 + num2);&#125;加薪假设某个人的工资是10000，现在要对其加薪10%锻炼赋值运算符的应用，并搞清楚js中不像数学中的计算方式1234var salary = 10000;//salary = salary+salary*0.1;salary += salary*0.1; //等价于：salary = salary+salary*0.1;console.log(\"现在的薪水是：\"+salary); //11000三目运算：输出最大值练习：比较两个变量值，输出其中较大的值12345var num1 = 3;var num2 = 5;var max = (num1&gt;num2)?num1:num2;// 语法格式：(比较表达式)？结果1：结果2；console.log(max); //5帅不帅三目运算，输出true为嫁；false为不嫁1234//女同胞们，要找对象 answer(回答)var bg = \"帅\";var answer = (bg==\"帅\")?\"嫁给他\":\"不嫁给他\";console.log(answer) //嫁给他if输出最大值12345678//练习：比较两个变量值，输出其中较大的值var num1 = 3;var num2 = 5;if(num1&lt;num2)&#123; console.log(num2);&#125;else&#123; console.log(num1);&#125;if多分支12345678910var bf = \"\";if(bf==\"帅\")&#123; console.log(\"帅，就嫁给他\");&#125;else if(bf==\"有钱\")&#123; console.log(\"很有钱，也可以嫁给他\");&#125;else if(bf == \"贴心\")&#123; console.log(\"很贴心，也可以嫁给他\");&#125;else&#123; console.log(\"拜拜\");&#125;根据学生成绩输出对应的等级(A B C D)根据学生成绩，输出对应的等级评语例如：（&gt;=95 A+，&gt;=90 A，&gt;=85 A-）1234567891011121314151617181920212223var score = 95; //学生分数if(score&gt;=95)&#123; console.log(\"A+\");&#125;else if(score&gt;=90)&#123; console.log(\"A\");&#125;else if(score&gt;=85)&#123; console.log(\"A-\")&#125;else&#123; console.log(\"要努力啊！\");&#125;//以上代码可优化：var result;if(score&gt;=95)&#123; result = \"A+\";&#125;else if(score&gt;=90)&#123; result = \"A\";&#125;else if(score&gt;=85)&#123; result = \"A-\";&#125;else&#123; result = \"要努力啊！\"&#125;console.log(result);点击div颜色切换1234567891011121314151617181920212223&lt;div id=\"box\"&gt;&lt;/div&gt;var box = document.getElementById(\"box\");//创建条件var a = 0;box.onclick = function()&#123; if(a==0)&#123; this.style.background = \"red\"; a=1; &#125;else if(a==1)&#123; this.style.background = \"pink\"; a=2; &#125;else if(a==2)&#123; this.style.background = \"pink\"; a=3; &#125;else if(a==3)&#123; this.style.background = \"pink\"; a=4; &#125;else if(a==4)&#123; this.style.background = \"pink\"; a=5; &#125;&#125;验证登录输入用户名，密码，验证是否正确，为true登录成功12345678910111213141516用户名：&lt;input type=\"text\" id=\"user\"&gt; 密码：&lt;input type=\"text2\" id=\"pass\"&gt;&lt;button id=\"btn\"&gt;登陆&lt;/button&gt;var btn = document.getElementById('btn');var text1 = document.getElementById('user');var text2 = document.getElementById('pass');btn.onclick= function () &#123; if(text1.value=='涛涛')&#123; //判断密码 if(text2.value=='123')&#123; alert('登陆成功'); &#125;else&#123; alert('您输入的密码错误！') &#125; &#125;else&#123; alert('您输入的用户名错误！') &#125;&#125;逻辑表达式配合逻辑表达式123456789//1、如果他又帅又有钱，才嫁给他；var bf = \"帅\";var money = \"很多\";//逻辑运算符：并且 &amp;&amp;(and)；if(bf==\"帅\" &amp;&amp; money==\"很多\")&#123; console.log(\"才嫁给他！\");&#125;else&#123; console.log(\"没符合条件哦！\");&#125;判断用户的年龄给定一个用户的年龄，判断是哪个年龄段的人，并再输出判断结果：儿童：&lt; 14；青少年：14 &lt;= 年龄 &lt; 24；青年：24 &lt;= 年龄 &lt; 40；中年：40 &lt;= 年龄 &lt; 60;老年：年龄 &gt;= 60;12345678910111213141516171819202122232425var age = 60;if (age &lt;= 14) &#123; console.log(\"儿童\");&#125; else if (age &gt;= 14 &amp;&amp; age &lt; 24) &#123; console.log(\"青少年\");&#125; else if (age &gt;= 24 &amp;&amp; age &lt; 40) &#123; console.log(\"青年\");&#125; else if (age &gt;= 40 &amp;&amp; age &lt; 60) &#123; console.log(\"中年\");&#125; else if(age&gt;=60)&#123; console.log(\"老年\")&#125;//可以精简代码量if (age &lt;= 14) &#123; console.log(\"儿童\");&#125; else if (age &lt; 24) &#123; console.log(\"青少年\");&#125; else if (age &lt; 40) &#123; console.log(\"青年\");&#125; else if (age &lt; 60) &#123; console.log(\"中年\");&#125; else&#123; console.log(\"老年\")&#125;判断会员级别编写程序，通过用户的积分判断是哪个级别的会员，并输出结果：普通：积分 &lt; 100；铜牌：100 &lt;= 积分 &lt; 300;银牌：300 &lt;= 积分 &lt; 1000;金牌：1000 &lt;= 积分 &lt; 2000；vip：积分 &gt;= 2000;1234567891011121314var score = 30; //初始积分var level = \"普通会员\";if(score&gt;2000)&#123; lever = 'vip会员';&#125;else if(score&gt;1000)&#123; lever = '金牌会员';&#125;else if(score&gt;300)&#123; lever = \"银牌会员\";&#125;else if(score&gt;100)&#123; lever = \"铜牌会员\";&#125;else&#123; //实际可以精简掉 lever = \"普通会员\";&#125;console.log('您的级别是：'+lever);判断星期几给定一个数字（0-6），显示对应的星期几(0:星期日；1:星期一；…；6:星期六；)123456789101112131415161718192021222324252627282930313233343536373839var num =3;if(num==0)&#123; console.log(\"星期日\");&#125;else if(num==1)&#123; console.log(\"星期一\");&#125;else if(num==2)&#123; console.log(\"星期二\");&#125;else if(num==3)&#123; console.log(\"星期三\");&#125;else if(num==4)&#123; console.log(\"星期四\");&#125;else if(num==5)&#123; console.log(\"星期五\");&#125;else if(num==6)&#123; console.log(\"星期六\");&#125;else&#123; console.log(\"请输入0-6的数字哦！\")&#125;//可以精简代码量var day = \"星期\";if(num==0)&#123; day+=\"日\";&#125;else if(num==1)&#123; day+=\"一\";&#125;else if(num==2)&#123; day+=\"二\";&#125;else if(num==3)&#123; day+=\"三\";&#125;else if(num==4)&#123; day+=\"四\";&#125;else if(num==5)&#123; day+=\"五\";&#125;else if(num==6)&#123; day+=\"六\";&#125;else&#123; day=\"请输入0-6的数字\"&#125;console.log(day);switch会员价格如果你是“普通会员”，结算享受95折；“银卡会员”，结算享受90折；“金卡会员”，结算享受85折；“钻石会员”，结算享受80折；计算得出：”您应付的金额为：”+money+ “； 您的实付金额为：”+total+ “； 为您打了：”+discount+”折”1234567891011121314151617181920212223var member = \"钻石\"; //定义会员级别var money = 100; //定义应付金额var discount; //折扣金额var total; //实付金额switch (member) &#123; case \"普通\": discount = 0.95; break; case \"银卡\": discount = 0.9; break; case \"金卡\": discount = 0.85; break; case \"钻石\": discount = 0.8; break; default : money *= 1; break;&#125;total = money * discount; //实付金额 = 应付金额 * 折扣率console.log(\"您应付的金额为：\"+money+ \"； 您的实付金额为：\"+total+ \"； 为您打了：\"+discount+\"折\");给定年份，确定该月的天数例：给定一个年份和月份，确定该月的天数。分析：1,3,5,7,8,10,12月 31天；4,6,9,11月 30天；二月：闰年？29天：28天；12345678910111213141516171819202122var year = 2016; //年份var month = 12; //月份var days = 31; //天数var flag = true; //定义一个标志变量 ，目的就是不想让if里面嵌套太多的代码if(month&lt;1 || month&gt;12)&#123; //如果money小于1 并且 大于12；求1-12中间的数 flag = false;&#125;switch (month) &#123; case 4: case 6: case 9: case 11: days = 30; break; case 2: days = 28;&#125;if(flag == true)&#123; console.log(year + \"年\" + month + \"月的天数是：\" + days);&#125;else &#123; console.log(\"您输入的月份不对哦！\");&#125;打印三遍123456//重要的事说三遍var i = 0;while(i &lt; 3)&#123; console.log(\"重要的事说三遍。\"); i++;&#125;遍历数组循环输出一个数组中的每一个元素，并打印输出1234567//循环输出一个数组中的每一个元素，通常称为“数组遍历”var arr = [\"张三\",\"李四\",\"王老五\",\"涛涛\"]; //声明数组的同时，进行赋值；var i = 0; //作为初始下标while(i&lt;arr.length)&#123; //length 返回数组长度； console.log(arr[i]); i++; // 1 2 3&#125;计算1-100所有偶数的和123456789101112//求：1-100偶数和：分析：1,2,3,4,5,6,7,8...100var sum = 0;//存储和var i= 1;while(i&lt;=100)&#123; //判断是否是偶数 if(i%2==0)&#123; //sum=sum+i; sum+=i; &#125; i++;&#125;console.log(\"1-100的偶数总和是：\"+sum); //2550倒序输出1234567//要求：倒序输出：10,9,8,7,6,5,4,3,2,1,0var arr=[0,1,2,3,4,5,6,7,8,9,10];var i=10;while(i&gt;=0)&#123; console.log(arr[i]); i--;&#125;break跳出循环12345678910111213141516/*要求：从1开始计算偶数的和，累计到1000(&gt;=) 停止？最后一个偶数是几？*/var sum = 0;var i = 1;while (i&lt;100)&#123; if(i%2==0)&#123; sum+=i; &#125; //引入break if(sum &gt;= 1000)&#123; break; //停止循环，终止循环 &#125; i++;&#125;console.log(\"最后一个偶数是=\"+i+\",累积到1000为止的和是=\"+sum);prompt数组星期123var weekDays = [\"星期日\",\"星期一\",\"星期二\",\"星期三\",\"星期四\",\"星期五\",\"星期六\",];var num = prompt(\"请输入0-6\",\"0\");console.log(\"今天是\"+weekDays[num]);个位数字加百位数字等于千位数字加十位数字123456789101112131415161718/*编程输出所有满足下列条件的四位整数：条件：个位数字加百位数字等于千位数字加十位数字，且该四位数为奇数。*/var i = 1000;while(i&lt;10000)&#123;//1000-9999 //先找出所有奇数 if(i%2!=0)&#123; //个位数字加百位数字 等于 千位数字加十位数字 var gw = i%10; var sw = (i%100-gw)/10; var bw = (i%1000-i%100)/100; var qw = (i-i%1000)/1000; if((gw+bw)==(sw+qw))&#123; console.log(i); &#125; &#125; i++;&#125;1~1000之间的所有能同时被3,5,7,整除的整数，并要求每行显示6个这样的数。1234567891011121314151617/*编程输出1~1000之间的所有能同时被3,5,7,整除的整数，并要求每行显示6个这样的数。*/var i = 1;var count = 0; //自增var line = \"\"; //存储一行数while (i&lt;=1000)&#123; if(i%(3*5*7) == 0)&#123; //最小公倍数;i%3==0&amp;&amp;i%5==0&amp;&amp;i%7==0 count ++; line = line + i + \" \";//隐式类型转换 if(count%6 == 0)&#123; line = line + \"\\n\"; &#125; &#125; i++;&#125;console.log(line);过7游戏遇到7的倍数或者个位数上是7，或者十位数上是7，输出“过”；12345678910var i = 0;while (i&lt;=100)&#123; //求倍数 || 求个位 || 求十位[(70-70%10)/10 == 7] if(i%7==0 || i%10==7 || ((i-i%10)/10 == 7))&#123; console.log(i+\"过\"); &#125;else&#123; console.log(i); &#125; i++;&#125;把100~200之间的不能被3整除的数输出12345678910//把100~200之间的不能被3整除的数输出 - (能被3整除的数，不输出)var i = 100;while (i &lt; 200) &#123; //console.log(i) i++; if (i % 3 == 0) &#123; continue; //结束本次循环，马上开始下一次循环 &#125; console.log(i);&#125;砸金蛋游戏需求：抽奖游戏：请用户输入一个幸运数字，输出对应奖品，如果没有抽到，继续抽，抽到为止！123456var jiangpin = [\"苹果6\",\"小米\",\"华为\",\"ipad\",\"谢谢参与\"];var n;do&#123; n = prompt(\"请输入您的幸运数字:0-4\"); console.log(\"您抽中的奖品是：\"+jiangpin[n]);&#125;while(jiangpin[n]==\"谢谢参与\");for循环过程1、循环变量初始化2、循环条件判定3、执行循环体4、循环变量递增或递减for遍历数组1234//遍历出数组元素for(var i=0;i&lt;arr.length;i++)&#123; console.log(arr[i]); &#125;倒序输出123for(var j=arr.length-1;j&gt;=0;j--)&#123; console.log(arr[j]); &#125;随机抽奖猜数游戏，事先给定一个数（随机生成一个数），让用户从界面输入一个猜的数，如果不正确，继续；如果正确，结束。123456789101112131415var num = Math.floor(Math.random()*100);//整数while (true)&#123; var user = prompt(\"请输入您的幸运数字\"); //注意输入内容放置在循环体内；放在外面会死循环 if(num==user)&#123; alert(\"恭喜您，猜对了\"); break; &#125;else&#123; //alert(\"猜错了，请继续猜\") if(user&gt;num)&#123; alert(\"大啦\"); &#125;else&#123; alert(\"小啦\"); &#125; &#125;&#125;for循环的双层嵌套 – 输出99乘法表;123456for(var a=1;a&lt;10;a++)&#123; //输出1-9，循环9次 for(var b=1;b&lt;=a;b++)&#123; document.write(b+\"*\"+a+\"=\"+b*a+\"&amp;nbsp;\"); &#125; document.write(\"&lt;br &gt;\");//换行&#125;打印图形12345678910111213141516171819202122232425262728293031323334353637383940414243/*打印以下图形：*************************************/for(var i=0;i&lt;=5;i++)&#123; for(var j=1;j&lt;=6;j++)&#123; document.write(\"*\"); &#125; document.write(\"&lt;br&gt;\")&#125;----------------------/*打印以下图形：****************/for(var i=0;i&lt;=5;i++)&#123; for(var j=1;j&lt;=i;j++)&#123; document.write(\"*\"); &#125; document.write(\"&lt;br&gt;\")&#125;----------------------/*打印以下图形：****************/for(var i=1;i&lt;=5;i++)&#123; for(var v=0;v&lt;5-i;v++)&#123; document.write(\"*\"); &#125; document.write(\"&lt;br&gt;\")&#125;隔行换色12345678910var oLi = document.getElementsByTagName(\"li\");for(var i=0;i&lt;oLi.length;i++)&#123; if(i%2==0)&#123; //偶数行 oLi[i].style.backgroundColor = \"pink\"; &#125;else&#123; //奇数行 oLi[i].style.backgroundColor = \"greenyellow\"; &#125;&#125;函数传参12345//函数的参数 - 变量function hello(msg)&#123; console.log(msg);&#125;hello(\"hello\");数组传参1234567var arr = [\"张三\",\"李四\",\"王老五\",\"web\"];function hello(names)&#123; for(var i=0;i&lt;names.length;i++)&#123; console.log(names[i]+\"您好\"); &#125;&#125;hello(arr);数组传参计算和1234567891011121314151617//声明函数function sum(num)&#123; var he = 0; for(var i=0;i&lt;num.length;i++)&#123; he += num[i]; &#125; console.log(he);&#125;//调用函数var arr = [1,2,3,4,5,6,7,8,9,10];sum(arr);//55var arr2 = [1,2,3,4,5,6,7,8,9,190];sum(arr2);//235var arr3 = [1,2,3,4,5,6,7,8,9,290];sum(arr3);//335求数组中最大值123456789101112function sum(num)&#123; var maxNum = num[0]; //假定数组中第一个值是最大的 for(var i=0;i&lt;num.length;i++)&#123;//遍历数组 if(maxNum &lt; num[i])&#123; //如果maxNum 小于 num[i]中的某个值； maxNum = num[i]; //就把num[i] 赋值给 maxNum; &#125; &#125; console.log(\"数组中最大的值是：\"+maxNum);&#125;//调用函数var arr = [1,2,3,4,5,6,7,8,9,10,200];sum(arr);函数求闰年12345678910var num = prompt(\"请输入年份\"); //输入年份function isLeap(year)&#123; if(year%4==00 &amp;&amp; year%100!=0 || year%400==0)&#123; alert(\"您输入的是\"+year+\"闰年\"); &#125;else&#123; alert(\"您输入的是\"+year+\"平年\"); &#125;&#125;//调用isLeap(num);找出数组中偶数的和123456789101112var ages = [80, 65, 73, 72];function sumEven(arr) &#123; var sum = 0; //遍历数组 - 找出偶数 - 累加 - 保存到sum中 for (var i=0;i&lt;arr.length;i++) &#123; if (arr[i]%2 == 0) &#123; //如果arr[i]求余等于0，证明是个偶数 sum = sum + arr[i]; &#125; &#125; console.log(sum); //152&#125;//调用sumEven(ages);返回值12345function add(num1,num2)&#123; var rel = num1 + num2; // return rel;&#125;console.log(add(4,5)); //9 有返回值的函数调用可以直接参与运算123456789101112131415//写一个函数，向他传一个整数数组，找出数组中最大的值，并返回该值给调用者var ages = [10, 20, 3220, 20, 30, 3, 9, 5, 45];var result = sum(ages);//将结果存在变量中function sum(arr) &#123; var maxNum = arr[0]; //假定数组中第一个值是最大的 //先遍历数组- 逐个比较数组值，取出最大值，最后返回给sum for (var i = 0; i &lt; arr.length; i++) &#123; if (maxNum &lt; arr[i]) &#123; maxNum = arr[i]; &#125; &#125; //console.log(maxNum);//3220 return maxNum;&#125;console.log(result);//输出3220"},{"title":"","date":"2018-05-11T08:14:17.704Z","updated":"2018-05-11T08:14:17.704Z","comments":true,"path":"tech/js/relative.html","permalink":"http://www.JiShuXuePai.com/tech/js/relative.html","excerpt":"","text":""},{"title":"Laravel","date":"2018-05-11T08:14:17.762Z","updated":"2018-05-11T08:14:17.762Z","comments":true,"path":"tech/laravel/relative.html","permalink":"http://www.JiShuXuePai.com/tech/laravel/relative.html","excerpt":"","text":""},{"title":"","date":"2018-05-11T08:14:17.763Z","updated":"2018-05-11T08:14:17.763Z","comments":true,"path":"tech/less/notes.html","permalink":"http://www.JiShuXuePai.com/tech/less/notes.html","excerpt":"","text":"第一章 LESS简介less是一种动态样式语言；为提高css应用的灵活性和效率；ESS 将 CSS 赋予了动态语言的特性，如 变量， 继承， 运算， 函数. LESS 既可以在 客户端 上运行 (支持IE 6+, Webkit, Firefox)，也可以借助Node.js或者Rhino在服务端运行。第一节 变量变量允许我们单独定义一系列通用的样式，然后在需要的时候去调用。所以在做全局样式调整的时候我们可能只需要修改几行代码就可以了。12345678910111213141516 // LESS@color: #4D926F;#header &#123; color: @color;&#125;h2 &#123; color: @color;&#125;/* 生成的 CSS */#header &#123; color: #4D926F;&#125;h2 &#123; color: #4D926F;&#125;第二节 混合混合可以将一个定义好的class A轻松的引入到另一个class B中，从而简单实现class B继承class A中的所有属性。我们还可以带参数地调用，就像使用函数一样。123456789101112131415161718192021222324// LESS.rounded-corners (@radius: 5px) &#123; border-radius: @radius; -webkit-border-radius: @radius; -moz-border-radius: @radius;&#125;#header &#123; .rounded-corners;&#125;#footer &#123; .rounded-corners(10px);&#125; /* 生成的 CSS */#header &#123; border-radius: 5px; -webkit-border-radius: 5px; -moz-border-radius: 5px;&#125;#footer &#123; border-radius: 10px; -webkit-border-radius: 10px; -moz-border-radius: 10px;&#125;第三节 嵌套规则我们可以在一个选择器中嵌套另一个选择器来实现继承，这样很大程度减少了代码量，并且代码看起来更加的清晰。123456789101112131415161718192021222324252627// LESS#header &#123; h1 &#123; font-size: 26px; font-weight: bold; &#125; p &#123; font-size: 12px; a &#123; text-decoration: none; &amp;:hover &#123; border-width: 1px &#125; &#125; &#125;&#125;/* 生成的 CSS */#header h1 &#123; font-size: 26px; font-weight: bold;&#125;#header p &#123; font-size: 12px;&#125;#header p a &#123; text-decoration: none;&#125;#header p a:hover &#123; border-width: 1px;&#125;第四节 函数 &amp; 运算运算提供了加，减，乘，除操作；我们可以做属性值和颜色的运算，这样就可以实现属性值之间的复杂关系。LESS中的函数一一映射了JavaScript代码，如果你愿意的话可以操作属性值。123456789101112131415161718192021222324// LESS@the-border: 1px;@base-color: #111;@red: #842210;#header &#123; color: @base-color * 3; border-left: @the-border; border-right: @the-border * 2;&#125;#footer &#123; color: @base-color + #003300; border-color: desaturate(@red, 10%);&#125;/* 生成的 CSS */#header &#123; color: #333; border-left: 1px; border-right: 2px;&#125;#footer &#123; color: #114411; border-color: #7d2717;&#125;第二章 使用第一节 客户端使用引入 .less 样式文件的时候要注意设置 rel 属性值为 “stylesheet/less”:1link rel=\"stylesheet/less\" type=\"text/css\" href=\"styles.less\"&gt;然后将下载的 less.js 文件, 在head中引入:1&lt;script src=\"less.js\" type=\"text/javascript\"&gt;&lt;/script&gt;注意你的less样式文件一定要在引入less.js前先引入。备注：请在服务器环境下使用！本地直接打开可能会报错！第二节 服务端使用安装在服务器端安装 LESS 的最简单方式就是通过 npm(node 的包管理器), 像这样:1$ npm install less如果你想下载最新稳定版本的 LESS，可以尝试像下面这样操作:1$ npm install less@latest第三章 语法第一节 变量LESS 做为 CSS 的一种形式的扩展，它并没有阉割 CSS 的功能，而是在现有的 CSS 语法上，添加了很多额外的功能！123456@nice-blue: #5B83AD;@light-blue: @nice-blue + #111;#header &#123; color: @light-blue; &#125;//输出:#header &#123; color: #6c94be; &#125;第二节 混合用法在 LESS 中我们可以定义一些class作为属性的集合，然后在另一个class中去调用这个类名，就等同于调用这些属性了！12345678910111213141516171819202122232425262728.bordered &#123; border-top: dotted 1px black; border-bottom: solid 2px black;&#125;//那如果我们现在需要在其他class中引入那些通用的属性集，那么我们只需要在任何class中像下面这样调用就可以了:#menu a &#123; color: #111; .bordered;&#125;.post a &#123; color: red; .bordered;&#125;//.bordered class里面的属性样式都会在 #menu a 和 .post a中体现出来:#menu a &#123; color: #111; border-top: dotted 1px black; border-bottom: solid 2px black;&#125;.post a &#123; color: red; border-top: dotted 1px black; border-bottom: solid 2px black;&#125;任何 CSS class, id 或者 元素 属性集都可以以同样的方式引入第三节 带参数混合在 LESS 中，还可以像函数一样定义一个带参数的属性集合:12345.border-radius (@radius) &#123; border-radius: @radius; -moz-border-radius: @radius; -webkit-border-radius: @radius;&#125;然后在其他class中像这样调用它:123456#header &#123; .border-radius(4px);&#125;.button &#123; .border-radius(6px); &#125;我们还可以像这样给参数设置默认值:12345.border-radius (@radius: 5px) &#123; border-radius: @radius; -moz-border-radius: @radius; -webkit-border-radius: @radius;&#125;所以现在如果我们像这样调用它的话:123#header &#123; .border-radius; &#125;radius的值就会是5px.你也可以定义不带参数属性集合,如果你想隐藏这个属性集合，不让它暴露到CSS中去，但是你还想在其他的属性集合中引用，你会发现这个方法非常的好用:12345678.wrap () &#123; text-wrap: wrap; white-space: pre-wrap; white-space: -moz-pre-wrap; word-wrap: break-word;&#125;pre &#123; .wrap &#125;输出:123456pre &#123; text-wrap: wrap; white-space: pre-wrap; white-space: -moz-pre-wrap; word-wrap: break-word;&#125;@arguments 变量@arguments包含了所有传递进来的参数. 如果你不想单独处理每一个参数的话就可以像这样写:123456.box-shadow (@x: 0, @y: 0, @blur: 1px, @color: #000) &#123; box-shadow: @arguments; -moz-box-shadow: @arguments; -webkit-box-shadow: @arguments;&#125;.box-shadow(2px, 5px);将会输出:123box-shadow: 2px 5px 1px #000;-moz-box-shadow: 2px 5px 1px #000;-webkit-box-shadow: 2px 5px 1px #000;第四节 嵌套规则LESS 可以以嵌套的方式编写层叠样式，就像写结构一样12345678910#header &#123; color: black; &#125;#header .navigation &#123; font-size: 12px;&#125;#header .logo &#123; width: 300px; &#125;#header .logo:hover &#123; text-decoration: none;&#125;在 LESS 中，就可以这样写:1234567891011#header &#123; color: black; .navigation &#123; font-size: 12px; &#125; .logo &#123; width: 300px; &amp;:hover &#123; text-decoration: none &#125; &#125;&#125;或者这样写:123456#header &#123; color: black; .navigation &#123; font-size: 12px &#125; .logo &#123; width: 300px; &amp;:hover &#123; text-decoration: none &#125; &#125;&#125;注意 &amp; 符号的使用—如果你想写串联选择器，而不是写后代选择器，就可以用到&amp;了. 这点对伪类尤其有用如 :hover 和 :focus例如:12345678.bordered &#123; &amp;.float &#123; float: left; &#125; .top &#123; margin: 5px; &#125;&#125;会输出123456.bordered.float &#123; float: left; &#125;.bordered .top &#123; margin: 5px;&#125;第五节 运算任何数字、颜色或者变量都可以参与运算1234567@base: 5%;@filler: @base * 2;@other: @base + @filler;color: #888 / 4;background-color: @base-color + #111;height: 100% / 2 + @filler;LESS 的运算已经超出了我们的期望，它能够分辨出颜色和单位。如果像下面这样单位运算的话:1@var: 1px + 5;LESS 会输出 6px.括号也同样允许使用:1width: (@var + 5) * 2;并且可以在复合属性中进行运算:1border: (@width * 2) solid black;第六节 作用域跟其他编程语言非常类似，首先会从本地查找变量或者混合模块，如果没找到的话会去父级作用域中查找，直到找到为止.1234567891011@var: red;#page &#123; @var: white; #header &#123; color: @var; // white &#125;&#125;#footer &#123; color: @var; // red &#125;第七节 注释与JS雷同1234567/* Hello, I'm a CSS-style comment */.class &#123; color: black &#125;LESS 同样也支持双斜线的注释, 但是编译成 CSS 的时候自动过滤掉:// Hi, I'm a silent comment, I won't show up in your CSS.class &#123; color: white &#125;第八节 避免编译有时候我们需要输出一些不正确的CSS语法或者使用一些 LESS不认识的专有语法.要输出这样的值我们可以在字符串前加上一个 ~123.class &#123; filter: ~\"ms:alwaysHasItsOwnSyntax.For.Stuff()\";&#125;我们可以将要避免编译的值用 “”包含起来，输出结果为:123.class &#123; filter: ms:alwaysHasItsOwnSyntax.For.Stuff();&#125;"},{"title":"markdown","date":"2018-05-11T08:14:17.763Z","updated":"2018-05-11T08:14:17.763Z","comments":true,"path":"tech/markdown/case.html","permalink":"http://www.JiShuXuePai.com/tech/markdown/case.html","excerpt":"","text":"第一章 Markdown是什么Markdown是Aaron Swartz 跟John Gruber共同设计的排版语言。Markdown的目标是实现「易读易写」。Markdown 语法的目标是：成为一种适用于网络的书写语言。Markdown 不是想要取代 HTML。Markdown 的理念是，能让文档更容易读、写和随意改。HTML 是一种发布的格式，Markdown 是一种书写的格式。有用吗？我觉得没有什么用，上面的内容看看了解一下就行，我们真正需要知道的就是markdown很好用，让我们专心的去注意自己的文字而不是排版，这就足够了。第二章 学习markdown需要什么基础不要被所谓的标签所谓的语法这种看起来高大上的词汇欺骗，统统不用，在我看来，markdown就是因为好用，简单容易上手才能如此的风靡，所以大胆去用就行，再说了，语法说白了不就是用法吗？对吧，所以接下来本文章的重点来了。第三章 Markdown具体用法第一节 标题在句首插入 # 表示，有六种标题效果：标题一标题二标题三标题四标题五标题六写法：123456# 标题一## 标题二### 标题三#### 标题四##### 标题五###### 标题六第二节 引用块在引用块的句首添加 &gt; 符号效果：心脏是一座有两间卧室的房子，一间住着痛苦，另一间住着欢乐，人不能笑得太响。否则笑声会吵醒隔壁房间的痛苦。–卡夫卡写法:12引用块在段首添加 &gt;&gt; 心脏是一座有两间卧室的房子，一间住着痛苦，另一间住着欢乐，人不能笑得太响。否则笑声会吵醒隔壁房间的痛苦。--卡夫卡​引用是可以嵌套的效果：人生是个含泪的微笑。这句话是欧·亨利说的，他说。​写法:12&gt; 人生是个含泪的微笑。&gt;&gt;这句话是欧·亨利说的，他说。​第三节 列表无序列表使用 * + 或者 - 来作为列表的标记（注意，是这三个符号然后加空格才是列表标记）效果：列表一列表二列表三写法：123* 列表一+ 列表二- 列表三​有序列表的使用 （数字+ . +空格作为列表的标记）。前面的数字可以不按照顺序写效果：有序列表一有序列表二有序列表三写法：1231. 有序列表一2. 有序列表二3. 有序列表三​##第四节 列表中插入引用如果列表项目中有引用，引用的标识符要缩进列表中有引用就像这样,列表中有引用要进行缩进 1个制表符tab列表中有代码块1alert(\"hello world\"); //1个制表符tab + 三个反引号​第五节 代码块的加载用反引号加载代码块效果：1alert(\"xxx\");写法：1234​``` 人生是个含泪的微笑。这句话是欧·亨利说的，他说。​123456789 ​## 第六节 超链接**效果：**3分钟学会 MarkDown**写法：**3分钟学会MarkDown12345678## 第七节 图片链接**效果：**![JavaScript中循环迭代数组](http://helloweb.wang/d/file/2017-11-19/31cf2bff95cf226ba7715854c3ff2402.jpg)**写法：**比普通链接多个感叹号123456789## 第八节 强调* 一级强调变斜体 **效果：** *一级强调变斜体* **写法：**一级强调变斜体一 *1234567* 二级强调变粗体 **效果：** **二级强调变粗体** **写法：**二级强调变粗体12345678910111213141516171819202122## 第九节 分割线&gt; 在一行中：连续三个或以上的 `*` (星号) 或者` _` (下划线) 或者 `-` (减号) 都可以生成一个分割线**效果：**下面是一条分割线------又一条------还有一条------**写法：**123456789101112## 第十节 表格&gt; 在第二列中，冒号在左面说明左对齐，冒号在右面说明右对齐。两边都有冒号的话说明居中对齐。**效果：**| 文档名（第一列名称） | 链接（第二列名称） | ...（第n列名称） || ------------- | :------------------------------ | ---------- || 3分钟学习MarkDown | [传送门](http://www.helloweb.wang) | ... |**写法：**文档名（第一列名称）链接（第二列名称）…（第n列名称）3分钟学习MarkDown传送门…`第十一节 工具推荐typora 支持markdown马克飞象 支持markdown有道云笔记 支持markdown"},{"title":"","date":"2018-05-11T08:14:17.766Z","updated":"2018-05-11T08:14:17.766Z","comments":true,"path":"tech/markdown/relative.html","permalink":"http://www.JiShuXuePai.com/tech/markdown/relative.html","excerpt":"","text":""},{"title":"","date":"2018-05-11T08:14:17.762Z","updated":"2018-05-11T08:14:17.762Z","comments":true,"path":"tech/laravel/notes.html","permalink":"http://www.JiShuXuePai.com/tech/laravel/notes.html","excerpt":"","text":"第一章 简介Laravel框架和ThinkPHP一样，也是一款好用的，而且是流行于世界的开发框架！最显著的特点就是它支持数据库迁移的这一大优点！值得我们每个人都来学习一下！这也是我们为何要学习这款框架的原因！第一节 准备因为该框架比较特殊，我们需要首先将环境配置好，才能够保证下载下来的框架不会有什么问题。1. 需要检查PHP版本 &gt; 5.5.9Mcrypt PHP 扩展openssl扩展mbstring 扩展Tokenizer PHP 扩展保证上述拓展都正确配置之后，才能进入第二节哦！可以在phpinfo.php当中来进行查看。第二节 安装要想使用这个框架，当然少不了的就是先将其下载下载，并且进行安装1.下载我们可以通过Composer将Laravel框架下载下来，Composer的好处就在于，它可以选择框架的版本号，而且都是最完整的安装。1Composer create-project laravel/laravel your-project-name --prefer-dist 版本号注意，安装时要在选定好的目录下进行安装，以保证我们可以准确的操作正确的目录第二章 配置学习任何一个框架，都应当从配置开始，配置完善的框架，更以开发和调控，Laravel也不例外，下面让我们一起来看一下，它需要经过哪些调整吧。第一节 开发前需要保证Storage和vendor目录具有写入权限，当然这只是局限于Linux系统或Unix系统保证env文件中的 APP_KEY 调试正确，可以采用 php artisan key:generate 命令进行创建或重新生成修改app.php中的时区设置为PRC，中华人民共和国时区第二节 开发中读取和设置配置12Config::get('app.timezone');Config::set('app.locale', 'cn');获取env环境配置1env('DB_HOST')关闭和启动应用1234//关闭应用php artisan down//启动应用php aritsan upURL重写1234567//apache下配置//在网站根目录下创建.htaccess文件Options +FollowSymLinksRewriteEngine OnRewriteCond %&#123;REQUEST_FILENAME&#125; !-dRewriteCond %&#123;REQUEST_FILENAME&#125; !-fRewriteRule ^ index.php [L]第三章 路由路由，是Laravel非常重要的一块内容，因为每一个方法的操作都必须要经过路由，才能执行，这是必须要通过的一条路，所以一定要对它有较深的理解才能够保证我们后续的学习更加顺畅！第一节 位置1. 路径app/Http/routes.php第二节 基本路由最常用的两种路由访问方式，分别是get和post请求访问，put、delete都是不常用的方法，因此我们不做详细讲解。1. get请求123Route::get('/test',function()&#123; 代码内容;&#125;);注意：上述路由只能通过URL的GET方式进行访问2. post请求123Route::post('/insert',function()&#123; 代码内容;&#125;);第三节 带参数的路由我们在通过路由请求方法时，当然不只是打开页面这么简单，我们通常还有传递参数的时候，下面让我们看一下各种请求方式传递参数的方法。1. 普通方式123Route::get('/goods/&#123;id&#125;', function($id)&#123; echo $id;&#125;);2. 限制参数类型123Route::get('/param/&#123;name&#125;', function($name)&#123; return $name;&#125;)-&gt;where('name','[a-z]+');3. 传递多个参数12345Route::get('/getParams/&#123;name&#125;-&#123;id&#125;', function($name, $id)&#123; //请求对象 // echo $request-&gt;route('name'); // echo $request-&gt;route('id');&#125;);第四节 路由别名某些时候，我们需要获取路由完整路径信息，但是开发中可能出现的一个问题就是，路径信息过长，导致我们在书写路径时很尴尬，因此我们可以采用路由笔名的方式省去书写的繁琐。12345678910Route::get('/Home/Goods/show/&#123;id&#125;', ['as'=&gt;'goods', function($id)&#123; //普通创建url // echo url('/param/hahah').'&lt;br&gt;'; //路由别名创建url // echo route('goods',['id'=&gt;11]).'&lt;br&gt;'; //实现页面跳转 // return redirect()-&gt;route('goods',['id'=&gt;12]); //获取路由名称 return Route::currentRouteName();&#125;]);第五节 路由组若没有路由组这一方便的使用方式，我们的路由文件将显得非常之混乱，很有可能导致我们无法区分前后台的路由信息，现在有了路由组，给我们解决了这个问题，一起来看一下吧！12345Route::group([], function()&#123; Route::get('/404', function()&#123; abort(404,'not found!!!'); &#125;);&#125;);路由组中间的数组，是用来存储中间件！1. 404界面1abort(404,'么有找到相关的页面呀!!!');第六节 CSRF保护相信写到这里，很多同学遇到了一些问题，例如，通过表单提交post请求时会报错的情况，这是因为Laravel给我们准备的一套预防跨域攻击的方法，我们只需要进行下面的操作即可完成post提交的操作。1. 普通方式1&lt;?php echo csrf_field(); ?&gt;2. 推荐方式1&#123;!! csrf_field() !!&#125;3. 自动解析1&lt;input type=\"hidden\" name=\"_token\" value=\"&lt;?php echo csrf_token(); ?&gt;\"&gt;第四章 中间件中间件，其实就是一个用于做筛选和过滤的，过滤什么呢？例如，一个后台用户想要进行一下网站后台的管理，这个时候，我们就需要做一下判断，该用户是否已经登录了？若没有登录，我们就需要让其跳转到登录页，进行登录之后才能管理，这个判断就可以使用中间件来做。第一节 创建1. 命令1php artisan make:middleware LoginMiddleware1234567891011121314&lt;?phpnamespace App\\Http\\Middleware;use Closure;class LoginMiddleware&#123; public function handle($request, Closure $next) &#123; //request变量 记录所有的请求参数 if(!$request-&gt;cookie('uid')) &#123; return redirect('/'); &#125; return $next($request); &#125;&#125;第二节 注册1. 全局注册12345Kernel.php &gt;&gt;&gt;&gt; $middleware成员属性protected $middleware = [ \\Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode::class, \\app\\Http\\Middleware\\TestMiddleware::class ];2. 路由注册123456789Kernel.php &gt;&gt;&gt;&gt; $routeMiddleware成员属性protected $routeMiddleware = [ 'auth' =&gt; \\app\\Http\\Middleware\\Authenticate::class, 'auth.basic' =&gt; \\Illuminate\\Auth\\Middleware\\AuthenticateWithBasicAuth::class, 'can' =&gt; \\Illuminate\\Foundation\\Http\\Middleware\\Authorize::class, 'guest' =&gt; \\app\\Http\\Middleware\\RedirectIfAuthenticated::class, 'throttle' =&gt; \\Illuminate\\Routing\\Middleware\\ThrottleRequests::class, 'test' =&gt; \\app\\Http\\Middleware\\TestMiddleware::class, ];第三节 使用1. 通过别名123456Route::get('/middle', [ 'middleware'=&gt;'test', 'uses'=&gt;function()&#123; return 'iloveyou'; &#125;]);2. 连贯操作123Route::get('/mm', function()&#123; return 'mm';&#125;)-&gt;middleware('test');3.路由组设置12345Route::group(['middleware'=&gt;'login'], function()&#123; Route::get('/index', function()&#123; return view('Home/index'); &#125;);&#125;);第五章 控制器第一节 创建控制器这里要注意，前后台模块如果在不同的目录，则需要制定目录路径1. 命令1php artisan make:controller UserController第二节 路由访问这里的路由访问形式有不同的几种方式，我们建议大家使用隐式控制器的形式，这种方式比较符合我们使用的习惯，当然大家也可以采用其他的几种方式。1. 普通访问1Route::get('/User/add', 'UserController@add');2. 带参数的访问1Route::get('/User/edit/&#123;id&#125;', 'UserController@edit');3. 控制器别名的使用1设置：Route::get('/User/index', ['uses' =&gt; 'UserController@index','as' =&gt; 'user']);1使用：route('user') // /User/index4. 中间件控制1234Route::get('/user/edit/&#123;id&#125;', [ 'middleware' =&gt; 'login', 'uses' =&gt; 'TestController@edit'] );1Route::get('/user/edit/&#123;id&#125;', 'TestController@edit')-&gt;middleware('login');5. 隐式控制器1Route::controller('users', 'UserController');12345678910111213141516171819202122&lt;?phpnamespace App\\Http\\Controllers;class UserController extends Controller&#123; /** * 响应／users的GET请求 */ public function getIndex() &#123; // &#125; /** * 响应／users／show／1的GET请求 */ public function getShow($id) &#123; // &#125;&#125;需要注意的一点是，使用隐式控制器，必须要争控制器类中所有方法前方加上请求方式，否则将导致该方法无法进行访问！第六章 请求本章节，我们将学习Laravel请求中可能会遇到的一些问题，并且学习Laravel请求时的一些技巧。第一节 基本获取1. 请求路径1$request-&gt;path()2. 检测路径1$request-&gt;is('admin/*')3. 检测完整url路由1$request-&gt;url();4. 获取请求方法1$request-&gt;method();5. 检测方法1$request-&gt;isMethod('post')第二节 提取请求参数本节主要需要大家掌握对于表单提交内容的多种获取方式1. 基本获取1$name = $request-&gt;input('name');2. 获取指定类型信息1\\Input::get('id');3. 设置默认值1$request-&gt;input('name', 'Sally');4. 检测是否存在1$request-&gt;has('name')5. 提取所有1$input = $request-&gt;all();6. 提取部分1选定字段：$request-&gt;only(['username', 'password']);1排除字段：$request-&gt;except(['credit_card']);第三节 闪存信息在某些时候，我们提交的信息可能会出现问题，出现问题之后的表单必定要进行重新加载，此时可能会出现一种问题，就是表单的内容不存在了，因此，Laravel给我们准备了闪存信息的方法。1.存取所有1$request-&gt;flash()2. 存取部分1$request-&gt;flashOnly('title','price')3. 排除存取1$request-&gt;flashExcept('_token');4. 简要使用1return back()-&gt;withInput();第四节 文件操作若表单中提交了文件信息，则文件信息的获取也是比较特殊的，我们需要掌握两个方法，即可完成文件的上环移动。1. 检测文件1$request-&gt;hasFile('photo')注意：括号内的信息是input表单项对应的内容。2. 执行上传1$request-&gt;file('photo')-&gt;move('./uploads/', 'iloveyou.jpg');第五节 Cookie操作Laravel当中，Cookie的操作，我们可以采用原生的$_COOKIE方式，也可以采用框架为我们准备好的可加密Cookie信息的使用方式。1. 设置1234//方式一\\Cookie::queue('name','iloveyou',10);//方式二return response('haha')-&gt;withCookie('uid',10,10);2. 读取1234//方式一$request-&gt;cookie('name');//方式二\\Cookie::get('name');第七章 响应看过请求信息的各种方式之后，我们就可以来看一下服务器给客户端响应信息的一些注意事项了。第一节 响应信息1. 返回字符串1return '哈哈哈';2. 返回内容同时设置cookie1return response('')-&gt;withCookie('id',20,60);3. 返回模板1return view('goods.add');4. 返回Json信息1return response()-&gt;json(['a'=&gt;100,'b'=&gt;2000]);5. 下载文件1return response()-&gt;download('web.config');6. 跳转页面1return redirect('/goods/add');第八章 视图Laravel使用的视图和ThinkPHP不尽相同，但是解析视图模板的流程大致一样，Laravel使用了自己独有的blade视图模板，我们只需要掌握其使用方式即可。第一节 解析模板解析模板的方式刚才我们在上述章节当中我们已经学习过了，直接使用return的方式将内容解析到模板上面即可！1. 解析方式1return view('User/index');第二节 分配数据本节我们学习如何在Laravel中将数据压入模板当中。1. 分配方式1return view('User/edit',['name'=&gt;'张三']);第三节 模板引擎的使用本节我们主要来看blade模板，了解blade模板当中可以放置的内容以及特别注意事项。1. 模板存放位置1resource/view2. 占位符123456//占位符@yield('名称')//占位空间@section('名称')@show3. 模板继承12345678910//继承模板@extends('模板布局名称')//占位符内容填充@section('名称','内容') //占位空间内容填充@section('content') new contents is here@endsection4. 模板变量的使用123//需要将变量放置到双花括号中&#123;&#123;$username&#125;&#125;&#123;&#123;$sex&#125;&#125;5. 函数的使用123//需要将php函数防止到双花括号中&#123;&#123;time()&#125;&#125; //获取时间戳&#123;&#123;substr()&#125;&#125; //字符串截取6. 设置默认值12//同样是在双花括号中进行书写&#123;&#123;$username or '游客'&#125;&#125; //若变量有内容，则使用变量内容，若没有内容，则使用默认值内容7. 显示html内容12//同样是在花括号中，只不过是单花括号，加上叹号即可&#123;!!$username!!&#125; //此时，若变量中拥有html代码的话，可以将HTML代码的内容解析出来8. 引入子视图12//引入指定目录下的blade模板@include('header')9. 流程控制在blade模板当中，也可以使用类似于php的分支语句1234567@if (count($records) === 1) I have one record!@elseif (count($records) &gt; 1) I have multiple records!@else I don't have any records!@endif10. 循环控制循环控制当然也不例外的可以使用！只需要掌握其技巧即可！123456789//for循环的使用@for ($i = 0; $i &lt; 10; $i++) The current value is &#123;&#123; $i &#125;&#125;@endfor //foreach的使用@foreach ($users as $user) &lt;p&gt;This is user &#123;&#123; $user-&gt;id &#125;&#125;&lt;/p&gt;@endforeach第九章 数据库操作Laravel让连接多种数据库和运行查询都变得非常简单，不论使用原生SQL、还是查询构建器，还是Eloquent ORM。目前，Laravel支持四种类型的数据库系统：第一节 支持列表MySQLPostgresSQLiteSQL Server第二节 数据库连接配置1. 文件位置1config/database.php2. 结果集类型设置1'fetch' =&gt; PDO::FETCH_ASSOC3. .env环境快速配置若你想快捷设置，可以直接找到项目根目录下的env文件进行相应设置即可。12345DB_CONNECTION=mysqlDB_HOST=127.0.0.1DB_DATABASE=web1709DB_USERNAME=rootDB_PASSWORD=123第三节 数据库的基本操作数据库的学习，无外乎增删改插四个操作，Laravel数据库操作的学习也是他么们几个，我我们要掌握的是它的使用方式。注意，使用数据库操作，一定要导入DB类，才能使用，在控制器最上方加上 use DB 即可。1. 查询12//查询stu表中所有的信息DB::select('select * from stu');2. 增加12//往stu表中添加信息DB::insert('insert into stu values (null,\"zhangsan\",\"w\",36)');3. 删除12//删除stu表中id未5的数据DB::delete('delete from stu where id = 5');4. 修改12//修改stu表中id为10的数据的年龄为24DB::update('update stu set age = 24 where id = 10');5. 一般语句12//删除stu数据表DB::statement('drop table stu')6. 事务操作1234567891011//开启事务DB::transaction();//执行修改语句$res = DB::update('update stu set money = money - 100 where id = 10');//判断是否修改成功if(!$res)&#123; DB::rollBack(); return back();&#125;//若执行成功，事务结束DB::commit();7. 操作多个数据库12//操作多个数据库的方法DB::connection('foo')-&gt;select(...)第四节 使用构造器数据库查询构造器提供了方便、流畅的接口，以用来创建及运行数据库查找。可用来执行应用程序中的大部分数据库操作，且能在所有被支持的数据库系统中使用。1. 增加1.1 单条1234//添加单条信息到数据库DB::table()-&gt;insert( ['email' =&gt; 'john@example.com', 'votes' =&gt; 0]);1.2 多条12345//添加多条信息DB::table('users')-&gt;insert([ ['email' =&gt; 'taylor@example.com', 'votes' =&gt; 0], ['email' =&gt; 'dayle@example.com', 'votes' =&gt; 0]]);1.3 获取id插入123$id = DB::table('users')-&gt;insertGetId( ['email' =&gt; 'john@example.com', 'votes' =&gt; 0]);2. 更新123DB::table('users') -&gt;where('id', 1) -&gt;update(['votes' =&gt; 1]);3. 删除123DB::table('users') -&gt;where('votes', '&lt;', 100) -&gt;delete();4. 查询4.1 查询所有1DB::table('users')-&gt;get()4.2 查询单条1DB::table('users')-&gt;first()4.3 查询单条结果中的某个字段1DB::table('user')-&gt;value('username')4.4 获取一列数据1DB::table('user')-&gt;lists('username')第五节 连贯操作1. 设置字段1DB::table('users')-&gt;select('name', 'email as user_email')-&gt;get()2. 条件操作12345678910111213141516171819//查询users信息中以T开头的信息DB::table('users') -&gt;where('name', 'like', 'T%') -&gt;get()//查询users表中votes大于100，或name等于John的信息DB::table('users') -&gt;where('votes', '&gt;', 100) -&gt;orWhere('name', 'John') -&gt;get();//查询users表中votes字段在1到100之间的信息DB::table('users') -&gt;whereBetween('votes', [1, 100])-&gt;get();//查询users表中id在1，2，3之中的数据DB::table('users') -&gt;whereIn('id', [1, 2, 3]) -&gt;get()3. 排序方式1DB::table('users')-&gt;orderBy('name', 'desc');4. 分页方式1DB::table('users')-&gt;skip(10)-&gt;take(5)-&gt;get();5. 连接表12345DB::table('users') -&gt;join('contacts', 'users.id', '=', 'contacts.user_id') -&gt;join('orders', 'users.id', '=', 'orders.user_id') -&gt;select('users.*', 'contacts.phone', 'orders.price') -&gt;get();6. 计算12345678//计算总数DB::table('users')-&gt;count();//最大值DB::table('orders')-&gt;max('price'); //平均值DB::table('orders')-&gt;avg('price');7. SQL语句记录方式123456App/Providers/AppServiceProvider.phpboot方法中添加DB::listen(function($sql, $bindings, $time)&#123; //写入sql file_put_contents('.sqls', \"[\".date('Y-m-d H:i:s').\"]\".$sql.\"\\r\\n\", FILE_APPEND);&#125;);"},{"title":"markdown","date":"2018-05-11T08:14:17.765Z","updated":"2018-05-11T08:14:17.765Z","comments":true,"path":"tech/markdown/notes.html","permalink":"http://www.JiShuXuePai.com/tech/markdown/notes.html","excerpt":"","text":"第一章 Markdown是什么Markdown是Aaron Swartz 跟John Gruber共同设计的排版语言。Markdown的目标是实现「易读易写」。Markdown 语法的目标是：成为一种适用于网络的书写语言。Markdown 不是想要取代 HTML。Markdown 的理念是，能让文档更容易读、写和随意改。HTML 是一种发布的格式，Markdown 是一种书写的格式。有用吗？我觉得没有什么用，上面的内容看看了解一下就行，我们真正需要知道的就是markdown很好用，让我们专心的去注意自己的文字而不是排版，这就足够了。第二章 学习markdown需要什么基础不要被所谓的标签所谓的语法这种看起来高大上的词汇欺骗，统统不用，在我看来，markdown就是因为好用，简单容易上手才能如此的风靡，所以大胆去用就行，再说了，语法说白了不就是用法吗？对吧，所以接下来本文章的重点来了。第三章 Markdown具体用法第一节 标题在句首插入 # 表示，有六种标题效果：标题一标题二标题三标题四标题五标题六写法：123456# 标题一## 标题二### 标题三#### 标题四##### 标题五###### 标题六第二节 引用块在引用块的句首添加 &gt; 符号效果：心脏是一座有两间卧室的房子，一间住着痛苦，另一间住着欢乐，人不能笑得太响。否则笑声会吵醒隔壁房间的痛苦。–卡夫卡写法:12引用块在段首添加 &gt;&gt; 心脏是一座有两间卧室的房子，一间住着痛苦，另一间住着欢乐，人不能笑得太响。否则笑声会吵醒隔壁房间的痛苦。--卡夫卡​引用是可以嵌套的效果：人生是个含泪的微笑。这句话是欧·亨利说的，他说。​写法:12&gt; 人生是个含泪的微笑。&gt;&gt;这句话是欧·亨利说的，他说。​第三节 列表无序列表使用 * + 或者 - 来作为列表的标记（注意，是这三个符号然后加空格才是列表标记）效果：列表一列表二列表三写法：123* 列表一+ 列表二- 列表三​有序列表的使用 （数字+ . +空格作为列表的标记）。前面的数字可以不按照顺序写效果：有序列表一有序列表二有序列表三写法：1231. 有序列表一2. 有序列表二3. 有序列表三​##第四节 列表中插入引用如果列表项目中有引用，引用的标识符要缩进列表中有引用就像这样,列表中有引用要进行缩进 1个制表符tab列表中有代码块1alert(\"hello world\"); //1个制表符tab + 三个反引号​第五节 代码块的加载用反引号加载代码块效果：1alert(\"xxx\");写法：1234​``` 人生是个含泪的微笑。这句话是欧·亨利说的，他说。​123456789 ​## 第六节 超链接**效果：**3分钟学会 MarkDown**写法：**3分钟学会MarkDown12345678## 第七节 图片链接**效果：**![JavaScript中循环迭代数组](http://helloweb.wang/d/file/2017-11-19/31cf2bff95cf226ba7715854c3ff2402.jpg)**写法：**比普通链接多个感叹号123456789## 第八节 强调* 一级强调变斜体 **效果：** *一级强调变斜体* **写法：**一级强调变斜体一 *1234567* 二级强调变粗体 **效果：** **二级强调变粗体** **写法：**二级强调变粗体12345678910111213141516171819202122## 第九节 分割线&gt; 在一行中：连续三个或以上的 `*` (星号) 或者` _` (下划线) 或者 `-` (减号) 都可以生成一个分割线**效果：**下面是一条分割线------又一条------还有一条------**写法：**123456789101112## 第十节 表格&gt; 在第二列中，冒号在左面说明左对齐，冒号在右面说明右对齐。两边都有冒号的话说明居中对齐。**效果：**| 文档名（第一列名称） | 链接（第二列名称） | ...（第n列名称） || ------------- | :------------------------------ | ---------- || 3分钟学习MarkDown | [传送门](http://www.helloweb.wang) | ... |**写法：**文档名（第一列名称）链接（第二列名称）…（第n列名称）3分钟学习MarkDown传送门…`第十一节 工具推荐typora 支持markdown马克飞象 支持markdown有道云笔记 支持markdown"},{"title":"bootstrap","date":"2018-05-11T08:14:17.768Z","updated":"2018-05-11T08:14:17.768Z","comments":true,"path":"tech/mobile/relative.html","permalink":"http://www.JiShuXuePai.com/tech/mobile/relative.html","excerpt":"","text":""},{"title":"","date":"2018-05-11T08:14:17.766Z","updated":"2018-05-11T08:14:17.766Z","comments":true,"path":"tech/mobile/notes.html","permalink":"http://www.JiShuXuePai.com/tech/mobile/notes.html","excerpt":"","text":"第一章 移动布局第一节 像素的基础知识移动项目分两类：（1）响应式布局 （2）移动端布局;响应式（媒体查询）移动项目：不需兼容pc设备注：有些公司，pc版和手机版会分别做像素的基础知识iphone6 宽度为： 375*667，为什么分辨率为 750*1334px css pixels 逻辑像素 ，浏览器使用的抽象单位;dp,pt device independent pixels 设备无关像素dpr devicePIxelRatio 设备像素比​​ 当dpr=2时，​ 平面上： 1px= Math.pow(dpr,2) pt;​ 在水平或垂直方向: 1px = 2 pt(dp)​ 所以对于ipone6来说 375px = 750 pt // 分辨率是以pt(dp)为单位的。dpi 与 ppidpi 打印机每英寸可以打印的墨汁点（印刷行业）;ppi 屏幕每英寸的像素数量，即单位英寸内的像素密度;以iphone6为例ppi = √ (1334^2+750^2) / 4.7 = 326 ppi; (视网膜Retina屏)//计算ppi使用的是物理像素结论：ppi越高，屏幕的清晰度会越高;第二节 viewport 基础知识pc网页在移动设备上的显示效果layout viewport (布局视口)排版需要：将页面布局在一个比较大的viewport内，ios一般为980px，保证排版准确;显示需要：移动设备屏幕比较小，对viewport进行缩放就可看到网页全貌;document.body.clientWidth 来获取​visual viewport(可视视口)无论pc还是移动设备，看到的浏览器窗口就是visual viewport可以通过window.innerWidth/height来获取调整visual viewport 和 layoutview之间的距离来放大和缩小内容;可比作相机的屏幕，当调整焦距的时候，画面中的内容大小会变化;demo范例:宽度为375px的元素在ipone6下的效果增加veiwport 设置后的效果(width=375, 将布局宽度调制为375px)设备的尺寸不同，所以可设置为 width=device-width;不同设备下，window.innerWidth大小会变化, 所以需要增加 initial-scale = 1;不容许用户缩放 : user-scalable=no第三节 meta标签设置viewport123布局视口:布局视口：设备中显示网页的区域，可能比浏览器视口大，也可能小，在手机中一般为980px;&lt;meta name=&quot;viewport&quot; content=&quot;width=&apos;device-width,initial-scale=1,user-scalable=no&apos; &quot; /&gt;device-width 设备宽度width设置*layout viewport* 的宽度，为一个正整数，或字符串”device-width”initial-scale设置页面的初始缩放值，为一个数字，可以带小数minimum-scale允许用户的最小缩放值，为一个数字，可以带小数maximum-scale允许用户的最大缩放值，为一个数字，可以带小数height设置*layout viewport* 的高度，这个属性对我们并不重要，很少使用user-scalable是否允许用户进行缩放，值为”no”或”yes”, no 代表不允许，yes代表允许项目调试时清缓存的几个meta标签（上线时去掉）123&lt;meta http-equiv=&quot;Pragma&quot; content=&quot;no-cache&quot;&gt;&lt;meta http-equiv=&quot;Cache-Control&quot; content=&quot;no-cache&quot;&gt; &lt;meta http-equiv=&quot;Expires&quot; content=&quot;0&quot;&gt;第四节 rem知识em % 相对于父级元素rem 相对于根元素或屏幕尺寸 font-size of the root elementvw vh viewport width / height 相对于浏览器窗口的百分比​ vmin vmax 屏幕的较小或较大的一个第五节 移动适配什么是适配在不同尺寸的手机设备上，页面“相对性的达到合理的展示（自适应）”或者“ 保持统一效果的等比缩放（看起来差不多）”。​适配要素一般来说，我们需要关注的是：字体、高宽、间距、图像（图标、图片），我们可以将图片设定为父容器的100%（背景使用background-size）, 这样只针对元素进行布局适配方法百分比尺寸+remmedia媒体查询​设计稿的尺寸iphone 5 640 640=6.4*100iphone6 750 750=7.5*100当设备窗口 大于750 ，只显示750当设备窗口小于750 ，按一个比率缩小;​​第二章 弹性盒模型参考网址 ： http://blog.csdn.net/mr_lp/article/details/50966842弹性盒模型传统布局方式 : table 布局—-&gt; div+css+html (浮动,定位,清浮动) —-&gt; 弹性盒模型主轴(main axis) – main start, main end;側轴(cross axis) – corss start corss end;注意：主轴或側轴的概念是相对的，在于项目的排列方向;display:flexdisplay:inline-flex; 弹性盒模型的父容器被置为行块元素;注意，设为Flex布局以后，子元素的 float、clear 和 vertical-align 属性将失效。第一节 主轴上的属性flex-direction 主轴的方向flex-wrapflex-flowjustify-contentalign-itemsalign-contentflex-direction 主轴方向| row（默认值） | 主轴为水平方向，起点在左端。 || ————– | ————– || row-reverse | 主轴为水平方向，起点在右端。 || column | 主轴为垂直方向，起点在上沿。 || column-reverse | 主轴为垂直方向，起点在下沿。 |​flex-wrap 如果一条轴线排不下，如何换行。no-wrap 不换行 (默认)wrap 正常换行wrap-reverse 反向换行​justify-content 项目在主轴上的对齐方式flex-start（默认值）左对齐flex-end右对齐center居中space-between两端对齐，项目之间的间隔都相等。space-around每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。align-items 项目在交叉轴上的对齐方式flex-start交叉轴的起点对齐。flex-end交叉轴的终点对齐。center交叉轴的中点对齐。baseline项目的第一行文字的基线对齐。stretch（默认值）如果项目未设置高度或设为auto，将占满整个容器的高度。align-content属性align-content属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。flex-start与交叉轴的起点对齐。flex-end与交叉轴的终点对齐。center与交叉轴的中点对齐。space-between与交叉轴两端对齐，轴线之间的间隔平均分布。space-around每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。stretch（默认值）轴线占满整个交叉轴。第二节 项目上的属性orderflex-growflex-shrinkflex-basisflexalign-selforder 数值越小越靠前flex-growflex-grow 属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。​ 如果所有子项都为1，则存在剩余空间，等比例分配，如果 一个是2 其余为1，则2的分配剩余空间的​ 宽度是其余的1倍flex-shrinkflex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，项目将缩小。如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。负值对该属性无效。align-self属性align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。第三章 移动项目移动端布局布局使用百分比或rem,百分比应该比rem更好控制一点；等宽布局比如导航就可以采用box-sizing:border-box;内补白的方式平分布局。123456789101112131415161718// 移动字体大小的适配--方案一@media screen and (max-width: 750px)&#123; html&#123;font-size:30px;&#125; &#125; @media screen and (min-width:640px) and (max-width:749px)&#123; html&#123;font-size:25px; &#125; &#125; @media screen and (min-width:480px) and (max-width:639px)&#123; html&#123;font-size:20px; &#125; &#125; @media screen and (min-width:320px) and (max-width:479px)&#123; html&#123;font-size:15px; &#125;&#125;关于字体iOS 系统默认中文字体是Heiti SC默认英文字体是Helvetica默认数字字体是HelveticaNeue无微软雅黑字体Android 系统默认中文字体是Droidsansfallback默认英文和数字字体是Droid Sans无微软雅黑字体各个手机系统有自己的默认字体，且都不支持微软雅黑，如无特殊需求，手机端无需定义中文字体，使用系统默认英文字体和数字字体可使用 Helvetica ，三种系统都支持1body&#123;font-family:Helvetica;&#125;​第一节 移动适配原理范例 :移动适配框架的应用12345678910111213141516171819// 自定义移动适配框架function fontSize()&#123; var _html=document.getElementsByTagName(&quot;html&quot;)[0]; var w = document.documentElement.clientWidth; console.log(w); if(w&gt;=750)&#123; _html.style.fontSize=&quot;100px&quot;; &#125;else&#123; _html.style.fontSize= w/7.5+&quot;px&quot;; &#125; &#125; window.onresize = fontSize; fontSize();第二节 框架实现移动适配移动端的框架：zepto.js,Zepto.js是支持移动WebKit浏览器的JavaScript框架，具有与jQuery兼容的语法。轻量级，大小为2-5k的库，通过不错的API处理绝大多数的基本工作,比较适合移动端。移动端banner切换的插件可以用swiper​123456789101112131415161718192021222324移动项目头部可增加的meta&lt;meta charset=&quot;UTF-8&quot;&gt;&lt;!-- 优先使用 IE 最新版本和 Chrome --&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt; &lt;!-- 为移动设备添加 viewport --&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no&quot;&gt; &lt;!-- 添加到主屏后的标题（iOS 6 新增） --&gt;&lt;meta name=&quot;apple-mobile-web-app-title&quot; content=&quot;&quot;&gt; &lt;!-- 是否启用 WebApp 全屏模式，删除苹果默认的工具栏和菜单栏 --&gt; &lt;meta name=&quot;apple-mobile-web-app-capable&quot; content=&quot;yes&quot; /&gt; &lt;!-- 设置苹果工具栏颜色 --&gt; &lt;meta name=&quot;apple-mobile-web-app-status-bar-style&quot; content=&quot;black&quot; /&gt; &lt;!-- 添加智能 App 广告条 Smart App Banner（iOS 6+ Safari） --&gt; &lt;meta name=&quot;apple-itunes-app&quot; content=&quot;app-id=myAppStoreID, affiliate-data=myAffiliateData, app-argument=myURL&quot;&gt; &lt;!-- 忽略页面中的数字识别为电话，忽略email识别 --&gt; &lt;meta name=&quot;format-detection&quot; content=&quot;telephone=no, email=no&quot; /&gt;第四章 网易云音乐第一节 项目知识jquery对象绑定数据$(“#box”).data(“属性名”,”值”) // 绑定数据$(“#box”).data(“属性名”); // 获取数据jq对象转换为js对象var box = $(“#box”).get(0) // jq对象转js对象var box —-&gt; $(box) // js对象转jq对象​音乐播放 audiovar audio =document.getElementById(“audio”);audio.play(); // 音乐播放audio.pause(); // 音乐暂停hasClass(); 判断一个元素是否具有某个类名;localStorage 本地存储cookie 存储数据相当于4kb 而localstorage 存储容量为5Msession 存储是基于登录状态的，登录过期后session数据就丢失，而 locastorage是永久保存的;localStorage 保存的是字符类型数据，因此对于json对象要字符串化后进行保存，使用时在解析为json对象​ JSON.stringify() – 将json对象转换为json字符串;JSON.parse() – 将json字符串 “{name:’tom’}” 转换为json对象;​第二节 项目作业音乐关注（收藏）我的音乐（已关注音乐）音乐播放界面（旋转cd盘）音乐歌词同步显示音乐点赞功能音乐排行榜（根据点赞的数量排行）音乐搜索（根据歌名来搜索）"},{"title":"","date":"2018-05-11T08:14:17.769Z","updated":"2018-05-11T08:14:17.769Z","comments":true,"path":"tech/mysql/case.html","permalink":"http://www.JiShuXuePai.com/tech/mysql/case.html","excerpt":"","text":""},{"title":"mysql","date":"2018-05-11T08:14:18.119Z","updated":"2018-05-11T08:14:18.119Z","comments":true,"path":"tech/mysql/relative.html","permalink":"http://www.JiShuXuePai.com/tech/mysql/relative.html","excerpt":"","text":""},{"title":"","date":"2018-05-11T08:14:18.119Z","updated":"2018-05-11T08:14:18.119Z","comments":true,"path":"tech/php/case.html","permalink":"http://www.JiShuXuePai.com/tech/php/case.html","excerpt":"","text":""},{"title":"","date":"2018-05-11T08:14:18.118Z","updated":"2018-05-11T08:14:18.118Z","comments":true,"path":"tech/mysql/notes.html","permalink":"http://www.JiShuXuePai.com/tech/mysql/notes.html","excerpt":"","text":"第一章 MySQL介绍第一节 关系型数据库关系模型：关系型数据库以行和列的形式存储数据，这一系列的行和列被称为表，一组表组成了数据库。表与表之间的数据记录有关系。数据保存在表内，行（记录）用于记录数据，列（字段）用于规定数据格式SQL(Structured Query Language)是一种特殊目的的编程语言，是一种数据库查询和程序设计语言，用于对数据库进行增、删、改、查操作。这类数据库包括：MySQL,Oracle, Sybase, SQL Server, DB2, Access 等等，SQL语言在这些数据库上是通用的。存储引擎（详见第九章）MyISAM引擎查询速度快，适合查询比较频繁的表innoDB支持事务，外键等，查询效率低于MyISAM引擎第二节 MYSQL基本语法基本规范数据库名称、表名称、字段名称全部小写SQL语句必须以分号’ ; ‘结尾注释123456789mysql&gt; select 1+1; # 这个注释直到该行结束mysql&gt; select 1+1; -- 这个注释直到该行结束mysql&gt; select 1 /* 这是一个在行中间的注释 */ + 1;mysql&gt; select 1+/*这是一个多行注释的形式*/1;修改配置文件my.ini字符集（正确显示中文）MySQL默认字符集是latin( 拉丁 )，改变为utf8才能正确显示中文[mysqld]下添加character-set-server=utf8init-connect=’\\set NAMES utf8\\’修改mysql提示符MySQL默认提示符是” mysql&gt;“ ，可以个性化定制，例如：”mysql(数据库)&gt;”[mysql]下添加prompt=”mysql(\\d)&gt;”​##第二节 登录与用户管理登录Mysql是基于C/S架构，必须在客户端通过终端窗口，连接MySQL服务器，进行操作。12shell&gt; mysql -h host -u user -pEnter password: ********用户管理超级用户 root修改账号密码，例：12345## DOS命令下修改，将root账号密码修改为1234mysqladmin -u root password 1234 ##语句最后不能加分号##mysql命令set password for &apos;root&apos;@&apos;localhost&apos;= password(&apos;1234&apos;);第二章 操作入门第一节 默认数据库information_schema提供了访问数据库元数据的方式。什么是元数据呢？元数据是关于数据的数据，如数据库名或表名，列的数据类型，或访问权限等。有些时候用于表述该信息的其他术语包括“数据词典”和“系统目录”。performance_schemamysql 5.5 版本 新增了一个性能优化的引擎mysql这个是MySQL的核心数据库，主要负责存储数据库的用户、权限设置、关键字等MySQL自己需要使用的控制和管理信息。不可以删除，也不要轻易修改这个数据库里面的表信息。test安装时候创建的一个测试用数据库，空数据库，没有任何表，可以删除（新版mysql已取消）。第二节 操作数据库查看数据库1show databases;创建数据库12345# 如果没有修改my.ini配置文件的默认字符集，在创建数据库时，指定字符集create database db_name character set &apos;utf8&apos;;# 特殊字符(关键字)用反引号create database `create`;MySQL\\data目录下将自动生成一个对应名称的目录，目录内部有一个db.opt文件显示数据库创建信息1show create database db_name;删除数据库1drop database db_name;使用数据库1use database;显示当前打开的数据库1select database();第三章 创建数据表第一节 字段类型数据类型是指列、存储过程参数、表达式和局部变量的数据特征，它决定了数据的存储方式，代表了不同的信息类型。字符串型类型大小说明char0-255字符定长字符串varchar0-65 535字符变长字符串tinytext0-255字符短文本（与char存储形式不同）text0-65 535字符文本mediumtext0-16 777 215字符中等长度文本longtext0-4 294 967 295字符极大文本整数型类型字节范围（有符号）范围（无符号）用途tinyint1(-128，127)(0，255)很小整数值例:tinyint(6)6位十进制数字smallint2(-32 768，32 767)(0，65 535)小整数值mediumint3(-8 388 608，8 388 607)(0，16 777 215)中整数值int或integer4(-2 147 483 648，2 147 483 647)(0，4 294 967 295)整数值bigint8(-9 233 372 036 854 775 808，9 223 372 036 854 775 807)(0，18 446 744 073 709 551 615)很大的整数值浮点型类型字节范围用途float(M,D)423bit（约6~7位 10进制数字）单精度浮点数值double(M,D)852bit（约15~16位 10进制数字）双精度浮点数值decimal(M,D)M+2依赖于M和D的值定点型M:精度(数子总长度) D:标度(小数点位数)浮点数在内存中是按科学计数法来存储的float和double的精度是由尾数的位数来决定的float尾数23bit：2^23 = 8388608，共7位，绝对能保证精度为6~7位有效数字double尾数52bit：2^52 = 4503599627370496，共16位，同理，double的精度为15~16位有效数字。日期型类型大小(字节)范围格式用途date31000-01-01—9999-12-31YYYY-MM-DD日期值time3‘-838:59:59’—‘838:59:59’HH:MM:SS时间值或持续时间year11901—2155YYYY年份值datetime81000-01-01 00:00:00/9999-12-31 23:59:59YYYY-MM-DD HH:MM:SS混合日期和时间值timestamp41970-01-01 00:00:00/2038结束时间是第 2147483647 秒，北京时间 2038-1-19 11:14:07，格林尼治时间 2038年1月19日 凌晨 03:14:07YYYYMMDD HHMMSS时间戳，混合日期和时间值列举与枚举名称大小说明set最多64个元素列举：可以取SET列表中的一个元素或者多个元素enum65,535个元素枚举：可以取ENUM列表中的一个元素123456789create table students( id tinyint(3), # 微小整型 name varchar(10), # 可变长度字符 age smallint(3), # 小整型 sex enum(&apos;男&apos;,&apos;女&apos;), #单选 birthday data, # 日期型 hobby set(&quot;football&quot;,&apos;basketball&apos;,&apos;swmming&apos;), #多选 introduce text );第二节 字段属性属性功能说明unsigned无符号整数/浮点数 为非负数zerofill前导0自动添加unsigned，指定长度整形前加0not null非空不允许为空（必须有值）default默认值当插入记录时没有赋值，自动赋予默认值primary key主键惟一标识一行数据的字段（主键自动为not null）auto_increment自动增量不能单独使用，必须与primary key 一起定义unique(unique key)唯一记录不能重复（允许为null）,一张表可以有多个unique第三节 操作数据表创建数据表1create table [is not exists] tbl_name(col_name data_type,....)MySQL\\data目录下的数据库目录中将自动生成一个对应名称的.frm文件删除数据表1drop table [if exists] tbl_name;查看数据表1234show tables [from tbl_name] [like &apos;pattern&apos; | where expr]/*查看字母是&apos;abc&apos;开头的表*/show tables like &apos;abc%&apos;; ### %是通配符查看表创建信息1234show create table tbl_name;/*行垂直显示*/show create table tbl_name\\G;查看数据表结构1desc db_name;添加字段1alter table tbl_name add col_name data_type修改字段类型（非字段名）1alter table tbl_name modify col_name data_type [first | after col_name]修改字段名称1alter table tbl_name change old_col_name new_col_name data_type [first | after col_name]删除字段1alter table tbl_name drop column_name;数据表更名1234alter table tbl_name rename [to|as] new_tbl_name/*rename可以同时为多个表更名*/rename table tbl_name to new_tbl_name [,tbl_name2 to new_tbl_name2]作业：使用rename，交换tbl1和tbl2的内容rename table tbl1 to tbl3,tab2 to tbl1,tbl3 to tbl2第四章 数据添加、删除、修改添加记录12345678#方法1：insert into tbl_name (col_name,...) values(&apos;val&apos;,...)insert into tbl_name(name,age) values(&apos;张三&apos;,&apos;20&apos;);#方法2： 省略字段名，字段位要对应，不能跳过（auto_increment字段，可以使用null或 default）insert into tbl_name values(null,&apos;张三&apos;,&apos;20&apos;);#方法3：set 单独赋值insert into tbl_name set name=&apos;张三&apos;,age=&apos;20&apos;;删除记录12345# 用delete删除记录，一定要加where条件，否则表数据全部删除！！delete from tbl_name where xx=xxx;# 用truncate删除记录，不能加where条件，直接删除全部记录，id索引重新从1开始truncate table tbl_name;修改记录12update tbl_name set xx=xx,xxx=xx,...update tbl_name set xx=xx,xxx=xx where xxx=xxx and xxx=xxx;第五章 索引索引是帮助MySQL高效获取数据的数据结构数据库在保存数据之外，还维护着满足特定查找算法的数据结构，这些数据结构以某种方式引用（指向）数据，这样就可以在这些数据结构上实现高级查找算法。这种数据结构，就是索引。索引可以大大提高MySQL的检索速度。在MySQL中，对于一个Primary Key的列，MySQL已经自动对其建立了Unique Index，无需重复再在上面建立索引了。123456789101112# 创建索引create table mytable( id int not null, username varchar(16) not null, index [indexname] (username(length)) ### 用username字段作为索引);# 显示索引show index from tbl_name \\G; # 删除索引alter table tbl_name drop index name;第六章 约束(constraint)约束保证数据的完整性和一致性，根据约束的字段数目的多少，约束又分为表级约束和列级约束列级约束：针对某一字段来使用表级约束：针对两个或两个以上的字段使用约束类型包括：not null(非空约束)primary key (主键约束)unique key (唯一约束)default (默认约束)foreign key(外键约束)第一节 唯一(unique)约束unique 约束唯一标识数据库表中的每条记录。unique和primary key约束均为列提供了唯一性的保证。primary key 被自动定义为unique 约束。注意: 每个表可以有多个unique约束，但是每个表只能有一个primary key 约束。1234567891011121314151617181920# 在创建 &quot;persons&quot; 表时定义约束# 第一种方式create table persons(id_p int not null,address varchar(255),city varchar(255),phone varchar(11),unique phone(phone) ##单独一行定义约束);# 第二种方式create table persons(id_p int not null,address varchar(255),city varchar(255),phone varchar(11) unique ##定义字段的同时,定义约束);# 第三种方式alter table persons add unique city(city);第二节 默认(default)约束用于约束对应列中的值的默认值（除非默认为空值，否则不可插入空值）12345create table persons(id tinyint(2) unsigned primary key auto_increment,name varchar(30),sex enum(&apos;m&apos;,&apos;w&apos;&apos;) default &apos;m&apos;, # 定义sex默认值 为 &apos;m&apos;)第二节 主键(primary key)约束每张数据表只能存在一个主键，主键保证记录的唯一性，主键自动为not null（同时作为表的索引）。12# 为没有主键的表添加主键alter table tbl_name add primary key (index_col_name)第三节 外键(foreign key)约束外键约束是为了保持数据一致性，完整性，实现一对一或一对多关系子表（具有外键列的表）和 父表（子表所参照的表），存储引擎只能为innoDB。外键列和参照列必须具有相似的数据类型。如果是数字类型，数字的长度、是否有符号位 必须相同字符类型的长度则可以不同外键列和参照列必须创建索引（如果外键列不存在索引的话，MySQL将自动创建索引）。创建外键1234567891011121314# 创建表格同时创建外键create table students(id int(5) unsigned not null primary key auto_increment,name varchar(10),livecity tinyint(5) unsigned not null,foreign key(livecity) references city(id) # livecity 字段作为外键 ，引用city表中的id)ENGINE = INNODB;# 为已有表添加外键-----------------------------------------------------------------------# 修改引擎alter table students engine=innodb; # 定义外键alter table students add foreign key(livecity) references city(id);外键约束的参照操作cascade(级联方式)从父表删除或更新记录时，自动删除或更新子表中匹配的记录12345678# 删除foreign key(livecity) references city(id) on delete cascade;# 更新foreign key(livecity) references city(id) on update cascade; # 删除或更新foreign key(livecity) references city(id) on delete cascade on update cascade;set null(置空方式)从父表删除或更新记录时，设置子表中的外键列为NULL。必须保证子表列没有指定NOT NULL。12345# 删除foreign key(livecity) references city(id) on delete set null; # 修改foreign key(livecity) references city(id) on update set null;restrict / no action (禁止方式)拒绝对父表的删除或更新操作(no action是标准SQL的关键字，在MySQL中与restrict相同)1foreign key(livecity) references city(id) on delete restrict;第四节 删除约束删除primary key1alter table tbl_name drop primary key;删除index1alter table tbl_name drop index index_name;删除外键约束1alter table tbl_name drop foreign key FK_ID;第五节 索引与约束的关系索引是面向数据库本身的，用于查询优化等操作。约束则更多的是业务上的关系。包括唯一性、外键约束等创建唯一约束就自动获取唯一索引，是因为数据库认为对数据库进行唯一检查时，如果该字段上有索引会很快，所以创s建唯一约束就默认创建唯一索引。同样，常见的主键即是唯一性的约束，也是个索引。但对于not null 这样的约束，数据库是不会创建索引的第七章 数据查询SQL语句的执行过程中，都会产生一个虚拟表，用来保存SQL语句的执行结果第一节 查询表达式1234567891011# 当前使用的数据库select database();# 查看当前MySQL版本select version();# 查看当前用户 select user();# 查看运算结果select 1+2;第二节 条件表达式from子句12345# 字段用&apos;,&apos;隔开，至少有一个字段，最终结果集按照这个这个顺序显示select col_name1,col_name2... from tbl_name;# *代表所有字段select * from tbl_name;distinct(去重)12345# 去重后的结果，distinct必须紧接着select后面select distinct col_name from tbl_name;#统计不重复的个数select count(distinct col_name) from tbl_name;where子句对记录进行过滤，如果没有指定where子句，则显示所有记录在where表达式中，可以使用MySQL支持的函数或运算符,运算符包括：算术：+ - * / %比较：&gt; &lt; &gt;= &lt;= != =逻辑： 或（or ||） 与（and &amp;&amp;） 非（not !）提升优先级：( ) 括号12345# 搜索id&lt;20的所以数据select * from tbl_name where id&lt;20;# 搜索id编号为偶数的数据select * from tbl_name where id%2=0;where条件关键字in：查询一个集合的数据123# 搜索id在（1,3,5,7,9）之中的数据select * from students where id=1 || id=3 || id=7 || id=9;select * from students where id in(1,3,5,7,9);​ between…and… ：查询一个区间的数据123# 搜索id在20-40之间的数据select * from students where id&gt;20 &amp;&amp; id&lt;40;select * from students where id between 20 and 40;​ not：排除12#搜索id除了20-40之间的数据select * from students where id not between 30 and 40;like子句模糊查询 % : 任意字符长度 _ : 一个字符长度12345678#搜索name名字以5结尾的数据select * from students where name like &apos;张%&apos;;#搜索name名字包含字母s的数据select * from students where name like &apos;%二%&apos;;#搜索id以5结尾的两位数 数据select * from students where id like &apos;_5&apos;;limit子句限制查询结果1234select * from tbl_name limit 2 # 返回两条记录select * from tbl_name limit 3,4 # 从索引为3（0起始）的记录开始，返回4条记录# php中的分页功能，偏移值的计算：当前页-1 * 每页记录数group by(结果分组)根据给定数据列的每个成员对查询结果进行分组统计，最终得到一个分组汇总表group by的常规用法是配合聚合函数，利用分组信息进行统计，常见的是配合max等聚合函数筛选数据后分析，以及配合having进行筛选后过滤。select指定的字段要么作为分组的依据（Group By语句的后面），要么就要被包含在聚合函数中。1234567891011121314151617181920# 简单分组select sex from students group by sex;+-----+| sex |+-----+| m || w |+-----+# 聚合函数分组select count(*),livecity from students group by livecity;+----------+----------+| count(*) | livecity |+----------+----------+| 7 | 1 || 8 | 2 || 1 | 3 || 3 | 4 || 2 | 5 |+----------+----------+order by(结果排序)按照给定的字段进行排序，asc：升序(默认) desc：降序如果同时选择多个字段，先按第一个字段排序，如果第一个字段值相等，再尝试第二个字段，以此类推12345# 默认升序select * from tbl_name order by age;# 降序select * from tbl_name order by age desc;查询语句的书写顺序select 字段 from 表名 where 分组前条件 group by 字段 having 分组后条件 order by 排序字段 [asc |desc] limit 分页条件别名第三节 多表查询12# 上图的语句中的where 语句还可以修改select a.name,c.name,b.score from students as a,score as b,course as c where b.user_id=6 and b.course_id=4 and a.id=b.user_id and c.id=b.course_id;1234567891011121314151617181920# 带有连接的分组---------------------------------------------------------------------------select city.name, count(*) from students,city where students.livecity=city.id group by students.livecity；+--------+----------+| name | count(*) |+--------+----------+| 北京 | 7 || 上海 | 8 || 杭州 | 1 || 深圳 | 3 |+--------+----------+# 增加having筛选过滤条件select city.name, count(*) from students,city where students.livecity=city.id group by students.livecity having not city.name=&apos;北京&apos;; +--------+----------+| name | count(*) |+--------+----------+| 上海 | 8 || 杭州 | 1 || 深圳 | 3 |+--------+----------+第四节 子查询子查询（subquery）是指出现在其他SQL语句内的select子句（嵌套在查询内部，且必须始终出现在圆括号内）1234567#查找城市名称是北京的# 普通方式查询select * from students where livecity=1;# 子查询方式select * from students where livecity=(select id from city where name=&apos;北京&apos;);子查询可以包含多个关键字或条件，如：distinct、group by、order by、limit、函数等子查询的外层查询可以是：select,insert,update第八章 存储引擎关系数据库表是用于存储和组织信息的数据结构,数据结构的不同，直接影响操作数据的效率和功能，对于MySQL来说，它提供了很多种类型的存储引擎，可以根据对数据处理的需求，选择不同的存储引擎，从而最大限度的利用MySQL强大的功能。MyISAM引擎MyISAM表是独立于操作系统的，这说明可以轻松地将其从Windows服务器移植到Linux服务器，建立一个MyISAM引擎的tb_Demo表，就会生成以下三个文件：tb_demo.frm 存储表定义tb_demo.MYD 存储数据tb_demo.MYI 存储索引。MyISAM无法处理事务，特别适合以下几种情况下使用：选择密集型的表。MyISAM存储引擎在筛选大量数据时非常迅速，这是它最突出的优点。插入密集型的表。MyISAM的并发插入特性允许同时选择和插入数据。例如：MyISAM存储引擎很适合管理邮件或Web服务器日志数据。InnoDB引擎InnoDB是一个健壮的事务型存储引擎，InnoDB还引入了外键约束，在以下场合下，使用InnoDB是最理想的选择：更新密集的表。InnoDB存储引擎特别适合处理多重并发的更新请求。事务。InnoDB存储引擎是支持事务的标准MySQL存储引擎。外键约束。MySQL支持外键的存储引擎只有InnoDB。自动灾难恢复。与其它存储引擎不同，InnoDB表能够自动从灾难中恢复。事务处理以银行转账业务为例，张三→李四转账100元，这是一个完整事务，需要两步操作：张三数据表减去100元李四数据表增加100元如果在1步完成后，操作出现错误（断电、操作异常等），使2步没有完成，此时，张三减去了100元，而张三却没有收到100元为了避免这种情况的发生，就将整个操作定义为一个事务，任何操作步骤出现错误，都会回滚到上一次断点位置，避免出现其他错误。12345678910#开始begin;update tbl_a set money=money-100 where name=&apos;zhangsan&apos;;update tbl_b set money=money+100 where name=&apos;lisi&apos;;#提交commit;#回滚rollback;第九章 MYSQL函数运算函数abs(x) : 返回x的绝对值floor(x) : 返回小于x的最大整数值round(x,y) : 返回参数x的四舍五入的有y位小数的值mod(x,y) : 返回x/y的模（余数）greatest(x1,x2,…,xn) : 返回集合中最大的值least(x1,x2,…,xn) : 返回集合中最小的值字符串函数trim(str) :去除字符串首尾两端的空格upper(str) : 字符串转大写concat(s1,s2…,sn) : 将s1,s2…,sn连接成字符串12# concatinsert into tbl_name values( concat(&apos;abc&apos;,&apos;def&apos;) );日期函数year(date) : 返回日期date的年份(1000~9999)month(date) : 返回date的月份值(1~12)curdate() : 返回当前的日期week(date) : 返回日期date为一年中第几周(0~53)now() : 返回当前的日期和时间curtime() : 返回当前的时间hour(time) : 返回time的小时值(0~23)minute(time) : 返回time的分钟值(0~59)聚合函数count(col) : 统计记录的条数sum(col) : 求和avg(col) : 求平均值max(col): 求最大值min(col) : 求最小值1234567891011# count 统计总记录数select count(*) from tbl_name;# sum 年龄总和select sum(age) from tbl_name; # avg 平均年龄select avg(age) from tbl_name; # 最大年龄select min(birthday) from tbl_name; # 日期最小的第十章 php链接MySQL函数功能返回$link=mysqli_connect(主机,用户名,密码)连接数据库成功 : 连接标识失败 : falsemysqli_set_charset($link, 字符集)定义字符集nullmysqli_select_db($link,数据库)选择数据库成功 : true失败 : falsemysqli_num_rows($link)数据记录条数intmysqli_query($link, sql语句)对数据库执行一次SQL语句增/删/改 成功:true增/删/改/查 失败：false查 成功 : 资源(object)mysqli_affected_rows($link)影响行数(增/删/改)intmysqli_fetch_assoc(资源)解析资源关联数组mysqli_fetch_row(资源)解析资源索引数组mysqli_fetch_array(资源)解析资源索引数组+关联数组mysqli_fetch_object(资源)解析资源objectmysqli_insert_id($link)添加成功的记录id号码intmysqli_error($link)MySQL错误信息stringmysqli_errno($link)MySQL错误代码intmysqli_free_result(资源)释放结果集nullmysqli_close($link)关闭连接资源boolean查询12345678910111213141516171819202122232425262728293031323334353637//1.连接数据库服务器，并判断$link = mysqli_connect(\"localhost\",\"root\",\"1234\") or die('数据库连接失败！');//2.设置字符集mysqli_set_charset($link, 'utf8');//3.选择数据库mysqli_select_db($link,'db_name');//4.定义SQL语句，并发送$result = mysqli_query($link, $sql); //统计表中的数据总条数 // $res = mysqli_num_rows($result); // var_dump($res); //5.解析结果集 if($result!=false &amp;&amp; mysqli_num_rows($result)&gt;0)&#123; //根据需要选择解析函数 // mysqli_fetch_assoc()：解析的结果保存为关联式数组(常用) // mysqli_fetch_row()：解析的结果保存为索引式数组 // mysqli_fetch_array()：解析结果保存为索引+关联式 // mysqli_fetch_object()：解析结果保存为对象型数据 while($rows = mysqli_fetch_assoc($result))&#123; //$rows为读取的一条记录（数组） &#125; &#125;else&#123; //用于获取数据库中报错信息的函数 // echo mysqli_error($link).'&lt;br/&gt;'; //获取错误信息 // echo mysqli_errno($link).'&lt;br/&gt;'; //获取错误号 die('没有查到任何数据，请检查SQL语句！'); &#125; //6.关闭数据库 mysqli_free_result($result); mysqli_close($link);添/删/改1234567891011121314151617181920212223242526272829303132//1.连接数据库服务器，并判断$link = mysqli_connect(\"localhost\",\"root\",\"1234\") or die('数据库连接失败！');//2.设置字符集mysqli_set_charset($link, 'utf8');//3.选择数据库mysqli_select_db($link,'web1709');//4.定义sql语句，并发送执行 // 添加语句 $sql = \"insert into tbl_name values (null,'lisi','m',28,'web1709',5)\"; // 删除语句 // $sql = \"delete from tbl_name where id=2\"; //修改语句 // $sql = \"update tbl_name set name='zhangsan' where id=1\";//返回boolean值$bool = mysqli_query($link, $sql);//受影响条数$a_num=mysqli_affected_rows($link);//5.判断是否执行成功if($bool!=false &amp;&amp; $a_num&gt;0)&#123; echo \"成功\";&#125;else&#123; echo \"失败！\";&#125;//6.关闭数据库mysqli_close($link);第十一章 数据库备份导出请先创建保存目录在DOS命令行下导出数据库（包含数据）1mysqldump -u root -p dbname &gt; E:\\backup\\dbname.sql在DOS命令行下导出数据表（包含数据）1mysqldump -u root -p dbname tbl_name &gt; E:\\backup\\tbl_name.sql在DOS命令行下导出数据库（不包含数据）1mysqldump -u root -p -d dbname &gt; E:\\backup\\dbname.sql在DOS命令行下导出数据表（不包含数据）1mysqldump -u root -p -d dbname tbl_name &gt; E:\\backup\\tbl_name.sql导入在MySQL命令行下导入数据库文件1234567# 如果已经删除了数据库,请重新创建数据库# 进入数据库mysql&gt;use hxsd;# 导入数据mysql&gt;source E:\\backup\\db_name.sql附录：关键字和保留字ADD ALL ALTER ANALYZE AND AS ASC ASENSITIVE BEFORE BETWEEN BIGINT BINARY BLOB BOTH BY CALL CASCADE CASE CHANGE CHAR CHARACTER CHECK COLLATE COLUMN CONDITION CONNECTION CONSTRAINT CONTINUE CONVERT CREATE CROSS CURRENT_DATE CURRENT_TIME CURRENT_TIMESTAMP CURRENT_USER CURSOR DATABASE DATABASES DAY_HOUR DAY_MICROSECOND DAY_MINUTE DAY_SECOND DEC DECIMAL DECLARE DEFAULT DELAYED DELETE DESC DESCRIBE DETERMINISTIC DISTINCT DISTINCTROW DIV DOUBLE DROP DUAL EACH ELSE ELSEIF ENCLOSED ESCAPED EXISTS EXIT EXPLAIN FALSE FETCH FLOAT FLOAT4 FLOAT8 FOR FORCE FOREIGN FROM FULLTEXT GOTO GRANT GROUP HAVING HIGH_PRIORITY HOUR_MICROSECOND HOUR_MINUTE HOUR_SECOND IF IGNORE IN INDEX INFILE INNER INOUT INSENSITIVE INSERT INT INT1 INT2 INT3 INT4 INT8 INTEGER INTERVAL INTO IS ITERATE JOIN KEY KEYS KILL LABEL LEADING LEAVE LEFT LIKE LIMIT LINEAR LINES LOAD LOCALTIME LOCALTIMESTAMP LOCK LONG LONGBLOB LONGTEXT LOOP LOW_PRIORITY MATCH MEDIUMBLOB MEDIUMINT MEDIUMTEXT MIDDLEINT MINUTE_MICROSECOND MINUTE_SECOND MOD MODIFIES NATURAL NOT NO_WRITE_TO_BINLOG NULL NUMERIC ON OPTIMIZE OPTION OPTIONALLY OR ORDER OUT OUTER OUTFILE PRECISION PRIMARY PROCEDURE PURGE RAID0 RANGE READ READS REAL REFERENCES REGEXP RELEASE RENAME REPEAT REPLACE REQUIRE RESTRICT RETURN REVOKE RIGHT RLIKE SCHEMA SCHEMAS SECOND_MICROSECOND SELECT SENSITIVE SEPARATOR SET SHOW SMALLINT SPATIAL SPECIFIC SQL SQLEXCEPTION SQLSTATE SQLWARNING SQL_BIG_RESULT SQL_CALC_FOUND_ROWS SQL_SMALL_RESULT SSL STARTING STRAIGHT_JOIN TABLE TERMINATED THEN TINYBLOB TINYINT TINYTEXT TO TRAILING TRIGGER TRUE UNDO UNION UNIQUE UNLOCK UNSIGNED UPDATE USAGE USE USING UTC_DATE UTC_TIME UTC_TIMESTAMP VALUES VARBINARY VARCHAR VARCHARACTER VARYING WHEN WHERE WHILE WITH WRITE X509 XOR YEAR_MONTH ZEROFILL找回密码先关闭MySQL数据库服务（任务管理器，找到mysqld.exe）打开DOS命令行，进入mysql的bin目录，例如：C:\\wamp\\bin\\mysql\\mysql5.6.17\\bin输入命令 mysqld –skip-grant-tables， 光标会一直在下方闪烁再打开一个DOS窗口，输入 mysql直接以root权限进入数据库进入MySQL库，查找user表，再修改root用户的authentication_string的值update user set authentication_string=password(“123456”) where User=’root’;flush privileges; 修改完后，使用该命令刷新几次重启MySQL服务，进入DOS窗口，登录修改后的密码即可"},{"title":"PHP","date":"2018-05-11T08:14:18.286Z","updated":"2018-05-11T08:14:18.286Z","comments":true,"path":"tech/php/relative.html","permalink":"http://www.JiShuXuePai.com/tech/php/relative.html","excerpt":"","text":""},{"title":"react","date":"2018-05-11T08:14:18.286Z","updated":"2018-05-11T08:14:18.286Z","comments":true,"path":"tech/react/case.html","permalink":"http://www.JiShuXuePai.com/tech/react/case.html","excerpt":"","text":""},{"title":"react","date":"2018-05-11T08:14:18.908Z","updated":"2018-05-11T08:14:18.908Z","comments":true,"path":"tech/react/notes.html","permalink":"http://www.JiShuXuePai.com/tech/react/notes.html","excerpt":"","text":"第一章 React框架第一节 React概述React 是一个用于构建用户界面的 JAVASCRIPT 库。React主要用于构建UI，很多人认为 React 是 MVC 中的 V（视图）。React 起源于 Facebook 的内部项目，用来架设 Instagram 的网站，并于 2013 年 5 月开源。React 拥有较高的性能，代码逻辑非常简单，越来越多的人已开始关注和使用它。维护：Facebook公司 React教程 官网地址用途：Web应用开发特点不直接操作DOM而是构造虚拟DOM树，将虚拟DOM树与真实DOM树进行对比，只渲染存在差异的部分，实现最小化重绘组件化将特定的功能封装成一个独立的功能模块，即组件；组件具有低耦合性，可重复使用，也可对组件进行组合嵌套不是MVC框架属于MVC中的V，即view视图层不使用模板使用JSX语法：单向响应的数据流第二章 React实例第一节 Hello React 实例引入三个文件核心库文件：&lt;script src=&quot;../react.js&quot;&gt;&lt;/script&gt;DOM操作相关库文件：&lt;script src=&quot;../react-dom.js&quot;&gt;&lt;/script&gt;js语言转换库文件：&lt;script src=&quot;../babel.js&quot;&gt;&lt;/script&gt;type类型目的：将reactjs代码转换成浏览器可以识别的js代码&lt;script type=&quot;text/babel&quot;&gt;&lt;/script&gt;JSX语法：JSX：不是一门新的语言，是个语法(语法糖)，允许开发者在javascript中书写html语法，最终会转化成js代码运行；JSX标签其实就是HTML标签，只不过在JavaScript中书写这些标签的时候，不适用“”括起来，可以向XML一样书写转换：JSX语法能够让我们更直观的看到组件的DOM结构，不能直接在浏览器上运行，最终会转化为JavaScript语法，在浏览器上运行。React实例方法：ReactDOM.render(要渲染的内容,插入的节点位置)注意点：字母大小写修改type类型为type=&quot;text/babel&quot;元素插入节点使用ID选择器有且仅有一个根元素1234567&lt;div id=\"box\"&gt;&lt;/div&gt;&lt;script type=\"text/babel\"&gt; ReactDOM.render( &lt;h1&gt;Hello, world!&lt;/h1&gt;, document.getElementById('box') );&lt;/script&gt;第二节 表达式语法：{}可输出的数据类型字符串数字数组对象简单表达式(三目运算)注意：不能输出布尔类型值12345678910111213141516171819202122232425&lt;script type=\"text/babel\"&gt; let str = 'Hello React'; let num = 123; let bool = true; let arr = ['js','vue','react',&lt;p&gt;html&lt;/p&gt;]; let obj = &#123;name:'lily',age:23&#125;; let Tempt = React.createClass(&#123; render:function()&#123; return ( &lt;div&gt; &lt;h2&gt;&#123;str&#125;&lt;/h2&gt; &lt;h2&gt;&#123;num&#125;&lt;/h2&gt; &lt;h2&gt;&#123;bool&#125;&lt;/h2&gt; &lt;h2&gt;&#123;arr&#125;&lt;/h2&gt; &lt;h2&gt;&#123;obj.name&#125;:&#123;obj.age&#125;&lt;/h2&gt; &lt;h2&gt;&#123;1&gt;2?2:1&#125;&lt;/h2&gt; &lt;/div&gt; ) &#125; &#125;); ReactDOM.render( &lt;Tempt /&gt;, document.getElementById('box') )&lt;/script&gt;数组的遍历之map方法语法：arr.map(function(参数)(return (JSX语法)))具有返回值，返回JSX语法1234567891011121314151617181920&lt;script type=\"text/babel\"&gt; let arr = ['lily','jack','jhon']; let Tempt = React.createClass(&#123; render:function()&#123; return ( &lt;div&gt; &#123; arr.map(function(item)&#123; return &lt;h2&gt;Hello,&#123;item&#125;&lt;/h2&gt; &#125;) &#125; &lt;/div&gt; ) &#125; &#125;); ReactDOM.render( &lt;Tempt /&gt;, document.getElementById('box'); )&lt;/script&gt;注释方法{/**/}第三节 样式内联样式对象样式选择器样式注意点：类选择器为className，因为class关键字在React中已经被占用了使用短横线的样式属性，key要加引号；如哦哦转化成驼峰命名则可不加引号非符合写法的样式属性，不加单位；合写的样式属性需要加单位12345678910111213141516// 选择器样式&lt;style&gt; .pStyle&#123; font-size:20px&#125;&lt;/style&gt;// 对象样式var hStyle = &#123; backgroundColor:\"green\", color:\"red\"&#125;// 内联样式&lt;div style=&#123;&#123;backgroundColor:\"yellow\",border: 5 \"black\" \"solid\"&#125;&#125;&gt; &lt;h1 style=&#123;hStyle&#125;&gt;HXSD&lt;/h1&gt; &lt;p className=\"pStyle\"&gt;hello react&lt;/p&gt;&lt;/div&gt;第三章 React组件第一节 单组件创建组件类语法：React.createClass(render:function(){return (JSX语法)})注意点：字母大小写每个组件类都必须有一个render方法具有返回值有且仅有一个根元素组件类的名字必须要大写1234567var Component = React.creatClass( &#123; render:function()&#123; return (&lt;h2&gt;Hello React&lt;h2&gt;) &#125; &#125;)组件默认值功能：没有传值时，使用默认值；传值时，使用所传的props属性值语法：getDefaultProps:function(){retrun {}}12345678910111213141516&lt;script type=\"text/babel\"&gt; var MyTitle = React.createClass(&#123; getDefaultProps:function()&#123; return &#123; title:\"hxsd\" &#125; &#125;, render:function()&#123; return &lt;h1&gt;&#123;this.props.title&#125;&lt;/h1&gt; &#125; &#125;); ReactDOM.render( &lt;MyTitle /&gt;, document.getElementById(\"box\") )&lt;/script&gt;组件中的事件配置项： 事件名：function(){}案例123456789101112131415&lt;script type=\"text/babel\"&gt; let Temp = React.createClass(&#123; change:function()&#123; console.log(1111); alert('点击事件'); &#125;, render:function()&#123; return (&lt;button onClick=&#123;this.change&#125;&gt;点击&lt;/button&gt;) &#125; &#125;); ReactDOM.render( &lt;Temp /&gt;, document.getElementById('box') )&lt;/script&gt;组件的State状态作用：用于初始化状态值语法：getInitialState:function(){return {bool:false}},案例一：选中未选中12345678910111213141516171819202122232425&lt;script type=\"text/babel\"&gt; let Temp = React.createClass(&#123; getInitialState:function()&#123; return &#123;bool:false&#125; &#125;, change:function()&#123; this.setState(&#123; bool:!this.state.bool &#125;) &#125;, render:function()&#123; let text = this.state.bool? '已选中':'未选中'; return ( &lt;div&gt; &lt;input type=\"checkbox\" onClick=&#123;this.change&#125; /&gt; &lt;span&gt;&#123;text&#125;&lt;/span&gt; &lt;/div&gt; ) &#125; &#125;); ReactDOM.render( &lt;Temp /&gt;, document.getElementById('box') )&lt;/script&gt;案例二：显示隐藏12345678910111213141516171819202122232425262728293031&lt;script type='text/babel'&gt; var arr = ['apple', 'orange', 'pear']; var Button = React.createClass(&#123; getInitialState: function()&#123; return &#123;show: true&#125; &#125;, handleClick: function()&#123; this.setState(&#123;show: !this.state.show&#125;); &#125;, render: function()&#123; var text = this.state.show ? '显示':'隐藏'; var isHide = this.state.show ? &#123;display:'none'&#125;:&#123;display:'block'&#125;; return ( &lt;div&gt; &lt;button onClick=&#123;this.handleClick&#125;&gt;&#123;text&#125;&lt;/button&gt; &lt;ul style=&#123;isHide&#125;&gt; &#123; arr.map(function(item)&#123; return &lt;li&gt;&#123;item&#125;&lt;/li&gt; &#125;) &#125; &lt;/ul&gt; &lt;/div&gt; ); &#125; &#125;); ReactDOM.render( &lt;Button /&gt;, document.getElementById('box') );&lt;/script&gt;表单双向数据绑定表单事件对象event表单事件onChange案例：双向数据流123456789101112131415161718192021222324252627&lt;script type=\"text/babel\"&gt; var Input = React.createClass(&#123; getInitialState:function()&#123; return &#123; value:\"\" &#125; &#125;, handleChange:function(event)&#123; this.setState(&#123; value:event.target.value &#125;) &#125;, render:function()&#123; var value = this.state.value; return ( &lt;div&gt; &lt;input type=\"text\" value=&#123;value&#125; onChange=&#123;this.handleChange&#125; placeholder='请输入'/&gt; &lt;p&gt;&#123;value&#125;&lt;/p&gt; &lt;/div&gt; ) &#125; &#125;); ReactDOM.render( &lt;Input /&gt;, document.getElementById(\"box\") )&lt;/script&gt;第二节 组件的组合使用div盒子将组件包围起来案例：豆瓣书影音页面12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485&lt;script type='text/babel'&gt; var title = '书影音'; var src1 = 'HLA1.jpg'; var src2 = 'HLA2.jpg'; let topic = ['首页','书影音','广播','小组','我的']; let obj = &#123; text:'影视 图书 唱片 小组等', src1:'HLA1.jpg', src2:'HLA2.jpg', src3:'HLA2.jpg', &#125;; let obj1 = &#123; title:'书影音', src1:'HLA1.jpg', src2:'HLA2.jpg', &#125;; let obj2 = &#123; title:'广播', src1:'HLA1.jpg', src2:'HLA2.jpg', &#125;; let obj3 = &#123; title:'小组', src1:'HLA1.jpg', src2:'HLA2.jpg', &#125;; var Myheader = React.createClass(&#123; render: function()&#123; return ( &lt;div className='myHeader'&gt; &#123; React.Children.map(this.props.children, function(child)&#123; return &lt;div&gt;&#123;child&#125;&lt;/div&gt; &#125;) &#125; &lt;/div&gt; ) &#125; &#125;); var MyTabbar = React.createClass(&#123; render: function()&#123; return ( &lt;div className=\"tabbarWrap\"&gt; &#123; topic.map(function (item) &#123; return ( &lt; div &gt; &lt;img src = &#123;src1&#125; alt = \"\" /&gt; &lt;br /&gt; &lt;span&gt; &#123;item&#125;&lt;/span &gt; &lt;/div&gt; ) &#125;) &#125; &lt;/div&gt; ) &#125; &#125;); ReactDOM.render( &lt;div&gt; &lt;Myheader&gt; &lt;input type='text' placeholder=&#123;obj.text&#125; /&gt; &lt;img className='search' src=&#123;obj.src1&#125; /&gt; &lt;img className='scan' src=&#123;obj.src2&#125; /&gt; &lt;img className='chat' src=&#123;obj.src3&#125; /&gt; &lt;/Myheader&gt; &lt;Myheader&gt; &lt;span&gt;&#123;obj1.title&#125;&lt;/span&gt; &lt;img className='scan' src=&#123;obj1.src1&#125; /&gt; &lt;img className='chat' src=&#123;obj1.src2&#125; /&gt; &lt;/Myheader&gt; &lt;Myheader&gt; &lt;span&gt;&#123;obj2.title&#125;&lt;/span&gt; &lt;img className='scan' src=&#123;obj2.src1&#125; /&gt; &lt;img className='chat' src=&#123;obj2.src2&#125; /&gt; &lt;/Myheader&gt; &lt;Myheader&gt; &lt;span&gt;&#123;obj3.title&#125;&lt;/span&gt; &lt;img className='scan' src=&#123;obj3.src1&#125; /&gt; &lt;img className='chat' src=&#123;obj3.src2&#125; /&gt; &lt;/Myheader&gt; &lt;MyTabbar /&gt; &lt;/div&gt;, document.getElementById('box') );&lt;/script&gt;第四章 组件间的通信props属性props只可使用，不可改变在组件头标签中书写自定义标签属性在组件类中使用props自定义属性{this.props.text}案例：豆瓣header组件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head lang=\"en\"&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width initial-scale=1.0\"/&gt; &lt;title&gt;Document&lt;/title&gt; &lt;!-- 核心库 --&gt; &lt;script src='../react.js'&gt;&lt;/script&gt; &lt;!-- 相关dom操作 --&gt; &lt;script src='../react-dom.js'&gt;&lt;/script&gt; &lt;!-- 能够将es6语法转化为es5，并能支持jsx --&gt; &lt;script src='../babel.js'&gt;&lt;/script&gt; &lt;style&gt; *&#123; padding: 0; margin: 0; .myHeader&#123; width: 100%; height: 50px; background-color: #42BF55; position: relative; &#125; .myHeader input&#123; width: 85%; height: 30px; border: none; border-radius: 5px; text-indent: 2em; position: absolute; top: 10px; left: 10px; &#125; .myHeader input::-webkit-input-placeholder&#123; color: #CDCDCD; font-size: 14px; &#125; .myHeader .search&#123; width: 20px; position: absolute; top: 15px; left: 15px; &#125; .myHeader .scan&#123; width: 20px; position: absolute; top: 15px; right: 55px; &#125; .myHeader .chat&#123; width: 30px; position: absolute; top: 10px; right: 8px; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div id=\"box\"&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;&lt;script type='text/babel'&gt; let obj = &#123; text:'影视 图书 唱片 小组等', src1:'HLA1.jpg', src2:'HLA2.jpg', src3:'HLA2.jpg', &#125;; var Myheader = React.createClass(&#123; render: function()&#123; return ( &lt;div className='myHeader'&gt; &lt;input type='text' placeholder=&#123;this.props.text&#125; /&gt; &lt;img className='search' src=&#123;this.props.src1&#125; /&gt; &lt;img className='scan' src=&#123;this.props.src2&#125; /&gt; &lt;img className='chat' src=&#123;this.props.src3&#125; /&gt; &lt;/div&gt; ) &#125; &#125;); ReactDOM.render( &lt;div&gt; &lt;Myheader text=&#123;obj.text&#125; src1=&#123;obj.src1&#125; src2=&#123;obj.src2&#125; src3=&#123;obj.src2&#125;/&gt; &lt;/div&gt;, document.getElementById('box') );&lt;/script&gt;Props扩展语法语法：{...this.props}注意点：属性必须是标签原有的属性定义位置：自定标签的头标签内使用位置：HTML标签的头标签内{...this.props}1234567891011121314151617181920212223242526&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head lang=\"en\"&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;&lt;/title&gt; &lt;script src=\"react.js\"&gt;&lt;/script&gt; &lt;script src=\"react-dom.js\"&gt;&lt;/script&gt; &lt;script src=\"babel.js\"&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;div id=\"box\"&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;&lt;script type=\"text/babel\"&gt; let url = 'http://i.hxsd.local/ihxsd/'; let compony = '火星时代'; let Link = React.createClass(&#123; render:function()&#123; return &lt;a &#123;...this.props&#125;&gt;&#123;this.props.name&#125;&lt;/a&gt; &#125; &#125;) ReactDOM.render( &lt;Link href=&#123;url&#125; name=&#123;compony&#125; style=&#123;&#123;textDecoration:'none', color:'red'&#125;&#125;/&gt;, document.getElementById(\"box\") )&lt;/script&gt;Props语法糖this.props.children功能：可在自定义标签内插入内容方法：123React.Children.map(this.props.children, function(child)&#123; return &lt;div&gt;&#123;child&#125;&lt;/div&gt;&#125;)123456789101112131415161718192021222324252627282930313233343536// 案例&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head lang=\"en\"&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;&lt;/title&gt; &lt;script src=\"react.js\"&gt;&lt;/script&gt; &lt;script src=\"react-dom.js\"&gt;&lt;/script&gt; &lt;script src=\"babel.js\"&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;div id=\"box\"&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;&lt;script type=\"text/babel\"&gt; var Temp = React.createClass(&#123; render:function()&#123; return( &lt;div&gt; &#123; React.Children.map(this.props.children, function(child)&#123; return &lt;div&gt;&#123;child&#125;&lt;/div&gt; &#125;) &#125; &lt;/div&gt; ) &#125; &#125;); ReactDOM.render( &lt;Temp&gt; &lt;h1&gt;children元素子节点&lt;/h1&gt; &lt;h1&gt;列表方法&lt;/h1&gt; &lt;/Temp&gt;, document.getElementById(\"box\") )&lt;/script&gt;第五章 生命周期三个状态挂载、更新、移除四个阶段创建、挂载、更新、销毁钩子函数创建阶段getDefaultProps挂载阶段getInitialStatecomponentWillMount(render之前调用)rendercomponentDidMount(render之后)更新阶段componentWillReceivePropsshouldComponentUpdate(返回值ture或false)componentWillUpdaterendercomponentDidUpdate销毁阶段componentWillUnmount案例12345678910111213141516171819202122232425262728293031323334353637383940414243444546&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;Document&lt;/title&gt; &lt;!-- 核心库 --&gt; &lt;script src='react.js'&gt;&lt;/script&gt; &lt;!-- 相关dom操作 --&gt; &lt;script src='react-dom.js'&gt;&lt;/script&gt; &lt;!-- 能够将es6语法转化为es5，并能支持jsx --&gt; &lt;script src='babel.js'&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;div id=\"box\"&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;&lt;!-- type类型为text/babel --&gt;&lt;script type='text/babel'&gt; var Temp = React.createClass(&#123; getDefaultProps:function()&#123; return &#123;bool:true&#125; console.log(bool) &#125;, getInitialState: function () &#123; return &#123;show: true&#125; &#125;, componentWillMount:function()&#123; console.log('componentWillMount-----------挂载前') var para = document.getElementById('box').innerText; console.log('para:'+para); &#125;, render: function () &#123; return &lt;div&gt;生命周期&lt;/div&gt; &#125;, componentDidMount:function()&#123; console.log('componentWillMount-----------挂载完成') var para = document.getElementById('box').innerText; console.log('para:'+para); &#125; &#125;); ReactDOM.render( &lt;Temp /&gt;, document.getElementById('box') );&lt;/script&gt;"},{"title":"","date":"2018-05-11T08:14:18.909Z","updated":"2018-05-11T08:14:18.909Z","comments":true,"path":"tech/react/relative.html","permalink":"http://www.JiShuXuePai.com/tech/react/relative.html","excerpt":"","text":";;;“categories”:[“react.js”],“author”:”周灿”,“title”:”react.js”,“layout”: “relative”,“materials”: [{“name”: “React 官网”,“desc”: “React 是一个用于构建用户界面的 JAVASCRIPT 库，主要用于构建UI，是 MVC 中的 V（视图）。React 起源于 Facebook 的内部项目，用来架设 Instagram 的网站，并于 2013 年 5 月开源。它拥有较高的性能，代码逻辑非常简单，越来越多的人已开始关注和使用它。”,“img”: “images/react.jpg”,“url”: “https://reactjs.org/&quot;},];;;"},{"title":"Redis","date":"2018-05-11T08:14:18.943Z","updated":"2018-05-11T08:14:18.943Z","comments":true,"path":"tech/redis/relative.html","permalink":"http://www.JiShuXuePai.com/tech/redis/relative.html","excerpt":"","text":""},{"title":"","date":"2018-05-11T08:14:18.942Z","updated":"2018-05-11T08:14:18.942Z","comments":true,"path":"tech/redis/notes.html","permalink":"http://www.JiShuXuePai.com/tech/redis/notes.html","excerpt":"","text":"第一章：Redis 非关系型数据库第一节 简介Redis 是一个开源（BSD许可）的，内存中的数据结构存储系统，它可以用作数据库、缓存和消息中间件。以往我们操作的数据库，都是存储在物理磁盘中的，Redis则是存储在缓存当中的，Redis和MySQL是需要搭配工作的，不常用的数据我们存储到MySQL中，而那些非常常用的数据，我们则可以存储在Redis当中！第二节 试用大家可以通过 互动教程（interactive tutorial） 了解Redis最重要的特征。第三节 下载下载地址：https://github.com/MSOpenTech/redis/releases。Redis 支持 32 位和 64 位。这个需要根据你系统平台的实际情况选择，这里我们下载 Redis-x64-xxx.zip压缩包到 C 盘，解压后，将文件夹重新命名为 redis。1. 使用方法打开一个 cmd 窗口 使用cd命令切换目录到 C:\\redis 运行 redis-server.exe redis.windows.conf 。如果想方便的话，可以把 redis 的路径加到系统的环境变量里，这样就省得再输路径了，后面的那个 redis.windows.conf 可以省略，如果省略，会启用默认的。输入之后，会显示如下界面：这时候另启一个cmd窗口，原来的不要关闭，不然就无法访问服务端了。切换到redis目录下运行 redis-cli.exe -h 127.0.0.1 -p 6379 。设置键值对 set myKey abc取出键值对 get myKey第二章 配置Redis 的配置文件位于 Redis 安装目录下，文件名为 redis.conf你可以通过 CONFIG 命令查看或设置配置项1. 语法Redis CONFIG 命令格式如下：1redis 127.0.0.1:6379&gt; CONFIG GET CONFIG_SETTING_NAME2. 实例1234redis 127.0.0.1:6379&gt; CONFIG GET loglevel1) \"loglevel\"2) \"notice\"使用 * 号获取所有配置项：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118redis 127.0.0.1:6379&gt; CONFIG GET * 1) \"dbfilename\" 2) \"dump.rdb\" 3) \"requirepass\" 4) \"\" 5) \"masterauth\" 6) \"\" 7) \"unixsocket\" 8) \"\" 9) \"logfile\" 10) \"\" 11) \"pidfile\" 12) \"/var/run/redis.pid\" 13) \"maxmemory\" 14) \"0\" 15) \"maxmemory-samples\" 16) \"3\" 17) \"timeout\" 18) \"0\" 19) \"tcp-keepalive\" 20) \"0\" 21) \"auto-aof-rewrite-percentage\" 22) \"100\" 23) \"auto-aof-rewrite-min-size\" 24) \"67108864\" 25) \"hash-max-ziplist-entries\" 26) \"512\" 27) \"hash-max-ziplist-value\" 28) \"64\" 29) \"list-max-ziplist-entries\" 30) \"512\" 31) \"list-max-ziplist-value\" 32) \"64\" 33) \"set-max-intset-entries\" 34) \"512\" 35) \"zset-max-ziplist-entries\" 36) \"128\" 37) \"zset-max-ziplist-value\" 38) \"64\" 39) \"hll-sparse-max-bytes\" 40) \"3000\" 41) \"lua-time-limit\" 42) \"5000\" 43) \"slowlog-log-slower-than\" 44) \"10000\" 45) \"latency-monitor-threshold\" 46) \"0\" 47) \"slowlog-max-len\" 48) \"128\" 49) \"port\" 50) \"6379\" 51) \"tcp-backlog\" 52) \"511\" 53) \"databases\" 54) \"16\" 55) \"repl-ping-slave-period\" 56) \"10\" 57) \"repl-timeout\" 58) \"60\" 59) \"repl-backlog-size\" 60) \"1048576\" 61) \"repl-backlog-ttl\" 62) \"3600\" 63) \"maxclients\" 64) \"4064\" 65) \"watchdog-period\" 66) \"0\" 67) \"slave-priority\" 68) \"100\" 69) \"min-slaves-to-write\" 70) \"0\" 71) \"min-slaves-max-lag\" 72) \"10\" 73) \"hz\" 74) \"10\" 75) \"no-appendfsync-on-rewrite\" 76) \"no\" 77) \"slave-serve-stale-data\" 78) \"yes\" 79) \"slave-read-only\" 80) \"yes\" 81) \"stop-writes-on-bgsave-error\" 82) \"yes\" 83) \"daemonize\" 84) \"no\" 85) \"rdbcompression\" 86) \"yes\" 87) \"rdbchecksum\" 88) \"yes\" 89) \"activerehashing\" 90) \"yes\" 91) \"repl-disable-tcp-nodelay\" 92) \"no\" 93) \"aof-rewrite-incremental-fsync\" 94) \"yes\" 95) \"appendonly\" 96) \"no\" 97) \"dir\" 98) \"/home/deepak/Downloads/redis-2.8.13/src\" 99) \"maxmemory-policy\"100) \"volatile-lru\"101) \"appendfsync\"102) \"everysec\"103) \"save\"104) \"3600 1 300 100 60 10000\"105) \"loglevel\"106) \"notice\"107) \"client-output-buffer-limit\"108) \"normal 0 0 0 slave 268435456 67108864 60 pubsub 33554432 8388608 60\"109) \"unixsocketperm\"110) \"0\"111) \"slaveof\"112) \"\"113) \"notify-keyspace-events\"114) \"\"115) \"bind\"116) \"\"3. 编辑配置你可以通过修改 redis.conf 文件或使用 CONFIG set 命令来修改配置。3.1 语法CONFIG SET 命令基本语法：1redis 127.0.0.1:6379&gt; CONFIG SET CONFIG_SETTING_NAME NEW_CONFIG_VALUE3.2 实例123456redis 127.0.0.1:6379&gt; CONFIG SET loglevel \"notice\"OKredis 127.0.0.1:6379&gt; CONFIG GET loglevel1) \"loglevel\"2) \"notice\"4. 参数说明redis.conf 配置项说明如下：\\1. Redis默认不是以守护进程的方式运行，可以通过该配置项修改，使用yes启用守护进程​ daemonize no\\2. 当Redis以守护进程方式运行时，Redis默认会把pid写入/var/run/redis.pid文件，可以通过pidfile指定​ pidfile /var/run/redis.pid\\3. 指定Redis监听端口，默认端口为6379，作者在自己的一篇博文中解释了为什么选用6379作为默认端口，因为6379在手机按键上MERZ对应的号码，而MERZ取自意大利歌女Alessia Merz的名字​ port 6379\\4. 绑定的主机地址​ bind 127.0.0.15.当 客户端闲置多长时间后关闭连接，如果指定为0，表示关闭该功能​ timeout 300\\6. 指定日志记录级别，Redis总共支持四个级别：debug、verbose、notice、warning，默认为verbose​ loglevel verbose\\7. 日志记录方式，默认为标准输出，如果配置Redis为守护进程方式运行，而这里又配置为日志记录方式为标准输出，则日志将会发送给/dev/null​ logfile stdout\\8. 设置数据库的数量，默认数据库为0，可以使用SELECT命令在连接上指定数据库id​ databases 16\\9. 指定在多长时间内，有多少次更新操作，就将数据同步到数据文件，可以多个条件配合​ save​ Redis默认配置文件中提供了三个条件：​ save 900 1save 300 10save 60 10000​ 分别表示900秒（15分钟）内有1个更改，300秒（5分钟）内有10个更改以及60秒内有10000个更改。\\10. 指定存储至本地数据库时是否压缩数据，默认为yes，Redis采用LZF压缩，如果为了节省CPU时间，可以关闭该选项，但会导致数据库文件变的巨大​ rdbcompression yes\\11. 指定本地数据库文件名，默认值为dump.rdb​ dbfilename dump.rdb\\12. 指定本地数据库存放目录​ dir ./\\13. 设置当本机为slav服务时，设置master服务的IP地址及端口，在Redis启动时，它会自动从master进行数据同步​ slaveof\\14. 当master服务设置了密码保护时，slav服务连接master的密码​ masterauth\\15. 设置Redis连接密码，如果配置了连接密码，客户端在连接Redis时需要通过AUTH命令提供密码，默认关闭​ requirepass foobared\\16. 设置同一时间最大客户端连接数，默认无限制，Redis可以同时打开的客户端连接数为Redis进程可以打开的最大文件描述符数，如果设置 maxclients 0，表示不作限制。当客户端连接数到达限制时，Redis会关闭新的连接并向客户端返回max number of clients reached错误信息​ maxclients 128\\17. 指定Redis最大内存限制，Redis在启动时会把数据加载到内存中，达到最大内存后，Redis会先尝试清除已到期或即将到期的Key，当此方法处理 后，仍然到达最大内存设置，将无法再进行写入操作，但仍然可以进行读取操作。Redis新的vm机制，会把Key存放内存，Value会存放在swap区​ maxmemory\\18. 指定是否在每次更新操作后进行日志记录，Redis在默认情况下是异步的把数据写入磁盘，如果不开启，可能会在断电时导致一段时间内的数据丢失。因为 redis本身同步数据文件是按上面save条件来同步的，所以有的数据会在一段时间内只存在于内存中。默认为no​ appendonly no\\19. 指定更新日志文件名，默认为appendonly.aof​ appendfilename appendonly.aof\\20. 指定更新日志条件，共有3个可选值：​ no：表示等操作系统进行数据缓存同步到磁盘（快）​ always：表示每次更新操作后手动调用fsync()将数据写到磁盘（慢，安全）​ everysec：表示每秒同步一次（折衷，默认值）​ appendfsync everysec\\21. 指定是否启用虚拟内存机制，默认值为no，简单的介绍一下，VM机制将数据分页存放，由Redis将访问量较少的页即冷数据swap到磁盘上，访问多的页面由磁盘自动换出到内存中（在后面的文章我会仔细分析Redis的VM机制）​ vm-enabled no\\22. 虚拟内存文件路径，默认值为/tmp/redis.swap，不可多个Redis实例共享​ vm-swap-file /tmp/redis.swap\\23. 将所有大于vm-max-memory的数据存入虚拟内存,无论vm-max-memory设置多小,所有索引数据都是内存存储的(Redis的索引数据 就是keys),也就是说,当vm-max-memory设置为0的时候,其实是所有value都存在于磁盘。默认值为0​ vm-max-memory 0\\24. Redis swap文件分成了很多的page，一个对象可以保存在多个page上面，但一个page上不能被多个对象共享，vm-page-size是要根据存储的 数据大小来设定的，作者建议如果存储很多小对象，page大小最好设置为32或者64bytes；如果存储很大大对象，则可以使用更大的page，如果不 确定，就使用默认值​ vm-page-size 32\\25. 设置swap文件中的page数量，由于页表（一种表示页面空闲或使用的bitmap）是在放在内存中的，，在磁盘上每8个pages将消耗1byte的内存。​ vm-pages 134217728\\26. 设置访问swap文件的线程数,最好不要超过机器的核数,如果设置为0,那么所有对swap文件的操作都是串行的，可能会造成比较长时间的延迟。默认值为4​ vm-max-threads 4\\27. 设置在向客户端应答时，是否把较小的包合并为一个包发送，默认为开启​ glueoutputbuf yes\\28. 指定在超过一定的数量或者最大的元素超过某一临界值时，采用一种特殊的哈希算法​ hash-max-zipmap-entries 64hash-max-zipmap-value 512\\29. 指定是否激活重置哈希，默认为开启（后面在介绍Redis的哈希算法时具体介绍）​ activerehashing yes\\30. 指定包含其它的配置文件，可以在同一主机上多个Redis实例之间使用同一份配置文件，而同时各个实例又拥有自己的特定配置文件​ include /path/to/local.conf第三章 Redis 数据类型Redis支持五种数据类型：string（字符串），hash（哈希），list（列表），set（集合）及zset(sorted set：有序集合)。第一节 String (字符串)string是redis最基本的类型，你可以理解成与Memcached一模一样的类型，一个key对应一个value。string类型是二进制安全的。意思是redis的string可以包含任何数据。比如jpg图片或者序列化的对象string类型是Redis最基本的数据类型，一个键最大能存储512MB1234redis 127.0.0.1:6379&gt; SET name \"runoob\"OKredis 127.0.0.1:6379&gt; GET name\"runoob\"第二节 Hash(哈希)Redis hash 是一个键值(key=&gt;value)对集合Redis hash是一个string类型的field和value的映射表，hash特别适合用于存储对象123456redis&gt; HMSET myhash field1 \"Hello\" field2 \"World\"\"OK\"redis&gt; HGET myhash field1\"Hello\"redis&gt; HGET myhash field2\"World\"以上实例中 hash 数据类型存储了包含用户脚本信息的用户对象。 实例中我们使用了 Redis HMSET, HGETALL 命令，user:1 为键值。每个 hash 可以存储 2的32次方-1 键值对（40多亿）第四节 List(列表)Redis 列表是简单的字符串列表，按照插入顺序排序。你可以添加一个元素到列表的头部（左边）或者尾部（右边）1234567891011redis 127.0.0.1:6379&gt; lpush runoob redis(integer) 1redis 127.0.0.1:6379&gt; lpush runoob mongodb(integer) 2redis 127.0.0.1:6379&gt; lpush runoob rabitmq(integer) 3redis 127.0.0.1:6379&gt; lrange runoob 0 101) \"rabitmq\"2) \"mongodb\"3) \"redis\"redis 127.0.0.1:6379&gt;列表最多可存储 2的32次方 - 1 元素 (4294967295, 每个列表可存储40多亿)。第五节 Set(集合)Redis的Set是string类型的无序集合。集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是O(1)1. sadd 命令添加一个string元素到,key对应的set集合中，成功返回1,如果元素已经在集合中返回0,key对应的set不存在返回错误1sadd key member12345678910111213redis 127.0.0.1:6379&gt; sadd runoob redis(integer) 1redis 127.0.0.1:6379&gt; sadd runoob mongodb(integer) 1redis 127.0.0.1:6379&gt; sadd runoob rabitmq(integer) 1redis 127.0.0.1:6379&gt; sadd runoob rabitmq(integer) 0redis 127.0.0.1:6379&gt; smembers runoob1) \"rabitmq\"2) \"mongodb\"3) \"redis\"注意：以上实例中 rabitmq 添加了两次，但根据集合内元素的唯一性，第二次插入的元素将被忽略。集合中最大的成员数为 2的32次方 - 1(4294967295, 每个集合可存储40多亿个成员)2. zadd 命令添加元素到集合，元素在集合中存在则更新对应score1zadd key score member12345678910111213redis 127.0.0.1:6379&gt; zadd runoob 0 redis(integer) 1redis 127.0.0.1:6379&gt; zadd runoob 0 mongodb(integer) 1redis 127.0.0.1:6379&gt; zadd runoob 0 rabitmq(integer) 1redis 127.0.0.1:6379&gt; zadd runoob 0 rabitmq(integer) 0redis 127.0.0.1:6379&gt; ZRANGEBYSCORE runoob 0 10001) \"redis\"2) \"mongodb\"3) \"rabitmq\"第四章 Redis 命令Redis 命令用于在 redis 服务上执行操作。要在 redis 服务上执行命令需要一个 redis 客户端。Redis 客户端在我们之前下载的的 redis 的安装包中。1. 语法Redis 客户端的基本语法为：1$ redis-cli12345$redis-cliredis 127.0.0.1:6379&gt;redis 127.0.0.1:6379&gt; PINGPONG在以上实例中我们连接到本地的 redis 服务并执行 PING 命令，该命令用于检测 redis 服务是否启动。2. 远程服务器上执行命令如果需要在远程 redis 服务上执行命令，同样我们使用的也是 redis-cli 命令2.1 语法1$ redis-cli -h host -p port -a password2.2 实例以下实例演示了如何连接到主机为 127.0.0.1，端口为 6379 ，密码为 mypass 的 redis 服务上12345$redis-cli -h 127.0.0.1 -p 6379 -a \"mypass\"redis 127.0.0.1:6379&gt;redis 127.0.0.1:6379&gt; PINGPONG第七章 Redis 键(key)Redis 键命令用于管理 redis 的键。第一节 语法Redis 键命令的基本语法如下：1redis 127.0.0.1:6379&gt; COMMAND KEY_NAME1234redis 127.0.0.1:6379&gt; SET runoobkey redisOKredis 127.0.0.1:6379&gt; DEL runoobkey(integer) 1在以上实例中 DEL 是一个命令， runoobkey 是一个键。 如果键被删除成功，命令执行后输出 (integer) 1，否则将输出 (integer) 0第二节 Redis keys命令下表给出了与 Redis 键相关的基本命令：序号命令及描述1DEL key该命令用于在 key 存在时删除 key。2DUMP key 序列化给定 key ，并返回被序列化的值。3EXISTS key 检查给定 key 是否存在。4EXPIRE key seconds为给定 key 设置过期时间。5EXPIREAT key timestamp EXPIREAT 的作用和 EXPIRE 类似，都用于为 key 设置过期时间。 不同在于 EXPIREAT 命令接受的时间参数是 UNIX 时间戳(unix timestamp)。6PEXPIRE key milliseconds 设置 key 的过期时间以毫秒计。7PEXPIREAT key milliseconds-timestamp 设置 key 过期时间的时间戳(unix timestamp) 以毫秒计8KEYS pattern 查找所有符合给定模式( pattern)的 key 。9MOVE key db 将当前数据库的 key 移动到给定的数据库 db 当中。10PERSIST key 移除 key 的过期时间，key 将持久保持。11PTTL key 以毫秒为单位返回 key 的剩余的过期时间。12TTL key 以秒为单位，返回给定 key 的剩余生存时间(TTL, time to live)。13RANDOMKEY 从当前数据库中随机返回一个 key 。14RENAME key newkey 修改 key 的名称15RENAMENX key newkey 仅当 newkey 不存在时，将 key 改名为 newkey 。16TYPE key 返回 key 所储存的值的类型。第八章 Redis 字符串(String)第一节 Redis 字符串Redis 字符串数据类型的相关命令用于管理 Redis 字符串值，基本语法如下1redis 127.0.0.1:6379&gt; COMMAND KEY_NAME1234redis 127.0.0.1:6379&gt; SET runoobkey redisOKredis 127.0.0.1:6379&gt; GET runoobkey\"redis\"在以上实例中我们使用了 SET 和 GET 命令，键为 runoobkey。第二节 Redis字符串命令下表列出了常用的 redis 字符串命令：序号命令及描述1SET key value 设置指定 key 的值2GET key 获取指定 key 的值。3GETRANGE key start end 返回 key 中字符串值的子字符4GETSET key value将给定 key 的值设为 value ，并返回 key 的旧值(old value)。5GETBIT key offset对 key 所储存的字符串值，获取指定偏移量上的位(bit)。6MGET key1 [key2..]获取所有(一个或多个)给定 key 的值。7SETBIT key offset value对 key 所储存的字符串值，设置或清除指定偏移量上的位(bit)。8SETEX key seconds value将值 value 关联到 key ，并将 key 的过期时间设为 seconds (以秒为单位)。9SETNX key value只有在 key 不存在时设置 key 的值。10SETRANGE key offset value用 value 参数覆写给定 key 所储存的字符串值，从偏移量 offset 开始。11STRLEN key返回 key 所储存的字符串值的长度。12MSET key value [key value …]同时设置一个或多个 key-value 对。13MSETNX key value [key value …] 同时设置一个或多个 key-value 对，当且仅当所有给定 key 都不存在。14PSETEX key milliseconds value这个命令和 SETEX 命令相似，但它以毫秒为单位设置 key 的生存时间，而不是像 SETEX 命令那样，以秒为单位。15INCR key将 key 中储存的数字值增一。16INCRBY key increment将 key 所储存的值加上给定的增量值（increment） 。17INCRBYFLOAT key increment将 key 所储存的值加上给定的浮点增量值（increment） 。18DECR key将 key 中储存的数字值减一。19DECRBY key decrementkey 所储存的值减去给定的减量值（decrement） 。20APPEND key value如果 key 已经存在并且是一个字符串， APPEND 命令将 value 追加到 key 原来的值的末尾。第九章 Redis 哈希(Hash)第一节 Redis 哈希Redis hash 是一个string类型的field和value的映射表，hash特别适合用于存储对象Redis 中每个 hash 可以存储 2的32次方 - 1 键值对（40多亿）1234567891011127.0.0.1:6379&gt; HMSET runoobkey name \"redis tutorial\" description \"redis basic commands for caching\" likes 20 visitors 23000OK127.0.0.1:6379&gt; HGETALL runoobkey1) \"name\"2) \"redis tutorial\"3) \"description\"4) \"redis basic commands for caching\"5) \"likes\"6) \"20\"7) \"visitors\"8) \"23000\"在以上实例中，我们设置了 redis 的一些描述信息(name, description, likes, visitors) 到哈希表的 runoobkey 中第二节 Redis hash 命令下表列出了 redis hash 基本的相关命令：序号命令及描述1HDEL key field1 [field2] 删除一个或多个哈希表字段2HEXISTS key field 查看哈希表 key 中，指定的字段是否存在。3HGET key field 获取存储在哈希表中指定字段的值。4HGETALL key 获取在哈希表中指定 key 的所有字段和值5HINCRBY key field increment 为哈希表 key 中的指定字段的整数值加上增量 increment 。6HINCRBYFLOAT key field increment 为哈希表 key 中的指定字段的浮点数值加上增量 increment 。7HKEYS key 获取所有哈希表中的字段8HLEN key 获取哈希表中字段的数量9HMGET key field1 [field2] 获取所有给定字段的值10HMSET key field1 value1 [field2 value2 ] 同时将多个 field-value (域-值)对设置到哈希表 key 中。11HSET key field value 将哈希表 key 中的字段 field 的值设为 value 。12HSETNX key field value 只有在字段 field 不存在时，设置哈希表字段的值。13HVALS key 获取哈希表中所有值14HSCAN key cursor [MATCH pattern][COUNT count] 迭代哈希表中的键值对。第十章 Redis 列表(List)Redis列表是简单的字符串列表，按照插入顺序排序。你可以添加一个元素到列表的头部（左边）或者尾部（右边）一个列表最多可以包含 2的32次方 - 1 个元素 (4294967295, 每个列表超过40亿个元素)1234567891011redis 127.0.0.1:6379&gt; LPUSH runoobkey redis(integer) 1redis 127.0.0.1:6379&gt; LPUSH runoobkey mongodb(integer) 2redis 127.0.0.1:6379&gt; LPUSH runoobkey mysql(integer) 3redis 127.0.0.1:6379&gt; LRANGE runoobkey 0 101) \"mysql\"2) \"mongodb\"3) \"redis\"在以上实例中我们使用了 LPUSH 将三个值插入了名为 runoobkey 的列表当中。第一节 列表命令下表列出了列表相关的基本命令：序号命令及描述1BLPOP key1 [key2 ] timeout 移出并获取列表的第一个元素， 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止。2BRPOP key1 [key2 ] timeout 移出并获取列表的最后一个元素， 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止。3BRPOPLPUSH source destination timeout 从列表中弹出一个值，将弹出的元素插入到另外一个列表中并返回它； 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止。4LINDEX key index 通过索引获取列表中的元素5[LINSERT key BEFORE\\AFTER pivot value](http://www.runoob.com/redis/lists-linsert.html) 在列表的元素前或者后插入元素6LLEN key 获取列表长度7LPOP key 移出并获取列表的第一个元素8LPUSH key value1 [value2] 将一个或多个值插入到列表头部9LPUSHX key value 将一个值插入到已存在的列表头部10LRANGE key start stop 获取列表指定范围内的元素11LREM key count value 移除列表元素12LSET key index value 通过索引设置列表元素的值13LTRIM key start stop 对一个列表进行修剪(trim)，就是说，让列表只保留指定区间内的元素，不在指定区间之内的元素都将被删除。14RPOP key 移除并获取列表最后一个元素15RPOPLPUSH source destination 移除列表的最后一个元素，并将该元素添加到另一个列表并返回16RPUSH key value1 [value2] 在列表中添加一个或多个值17RPUSHX key value 为已存在的列表添加值第十一章 Redis集合(set)Redis 的 Set 是 String 类型的无序集合。集合成员是唯一的，这就意味着集合中不能出现重复的数据。Redis 中集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是 O(1)。集合中最大的成员数为 232 - 1 (4294967295, 每个集合可存储40多亿个成员)。第一节 实例12345678910111213redis 127.0.0.1:6379&gt; SADD runoobkey redis(integer) 1redis 127.0.0.1:6379&gt; SADD runoobkey mongodb(integer) 1redis 127.0.0.1:6379&gt; SADD runoobkey mysql(integer) 1redis 127.0.0.1:6379&gt; SADD runoobkey mysql(integer) 0redis 127.0.0.1:6379&gt; SMEMBERS runoobkey1) &quot;mysql&quot;2) &quot;mongodb&quot;3) &quot;redis&quot;第二节 集合命令下表列出了 Redis 集合基本命令：序号命令及描述1SADD key member1 [member2] 向集合添加一个或多个成员2SCARD key 获取集合的成员数3SDIFF key1 [key2] 返回给定所有集合的差集4SDIFFSTORE destination key1 [key2] 返回给定所有集合的差集并存储在 destination 中5SINTER key1 [key2] 返回给定所有集合的交集6SINTERSTORE destination key1 [key2] 返回给定所有集合的交集并存储在 destination 中7SISMEMBER key member 判断 member 元素是否是集合 key 的成员8SMEMBERS key 返回集合中的所有成员9SMOVE source destination member 将 member 元素从 source 集合移动到 destination 集合10SPOP key 移除并返回集合中的一个随机元素11SRANDMEMBER key [count] 返回集合中一个或多个随机数12SREM key member1 [member2] 移除集合中一个或多个成员13SUNION key1 [key2] 返回所有给定集合的并集14SUNIONSTORE destination key1 [key2] 所有给定集合的并集存储在 destination 集合中15SSCAN key cursor [MATCH pattern] [COUNT count] 迭代集合中的元素第十二章 Redis 有序集合(sorted set)Redis 有序集合和集合一样也是string类型元素的集合,且不允许重复的成员。不同的是每个元素都会关联一个double类型的分数。redis正是通过分数来为集合中的成员进行从小到大的排序。有序集合的成员是唯一的,但分数(score)却可以重复。集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是O(1)。 集合中最大的成员数为 232 - 1 (4294967295, 每个集合可存储40多亿个成员)。第一节 实例123456789101112131415161718redis 127.0.0.1:6379&gt; ZADD runoobkey 1 redis(integer) 1redis 127.0.0.1:6379&gt; ZADD runoobkey 2 mongodb(integer) 1redis 127.0.0.1:6379&gt; ZADD runoobkey 3 mysql(integer) 1redis 127.0.0.1:6379&gt; ZADD runoobkey 3 mysql(integer) 0redis 127.0.0.1:6379&gt; ZADD runoobkey 4 mysql(integer) 0redis 127.0.0.1:6379&gt; ZRANGE runoobkey 0 10 WITHSCORES1) \"redis\"2) \"1\"3) \"mongodb\"4) \"2\"5) \"mysql\"6) \"4\"在以上实例中我们通过命令 ZADD 向 redis 的有序集合中添加了三个值并关联上分数。第二节 有序集合命令下表列出了 redis 有序集合的基本命令:序号命令及描述1ZADD key score1 member1 [score2 member2] 向有序集合添加一个或多个成员，或者更新已存在成员的分数2ZCARD key 获取有序集合的成员数3ZCOUNT key min max 计算在有序集合中指定区间分数的成员数4ZINCRBY key increment member 有序集合中对指定成员的分数加上增量 increment5ZINTERSTORE destination numkeys key [key …] 计算给定的一个或多个有序集的交集并将结果集存储在新的有序集合 key 中6ZLEXCOUNT key min max 在有序集合中计算指定字典区间内成员数量7ZRANGE key start stop [WITHSCORES] 通过索引区间返回有序集合成指定区间内的成员8ZRANGEBYLEX key min max [LIMIT offset count] 通过字典区间返回有序集合的成员9ZRANGEBYSCORE key min max [WITHSCORES] [LIMIT] 通过分数返回有序集合指定区间内的成员10ZRANK key member 返回有序集合中指定成员的索引11ZREM key member [member …] 移除有序集合中的一个或多个成员12ZREMRANGEBYLEX key min max 移除有序集合中给定的字典区间的所有成员13ZREMRANGEBYRANK key start stop 移除有序集合中给定的排名区间的所有成员14ZREMRANGEBYSCORE key min max 移除有序集合中给定的分数区间的所有成员15ZREVRANGE key start stop [WITHSCORES] 返回有序集中指定区间内的成员，通过索引，分数从高到底16ZREVRANGEBYSCORE key max min [WITHSCORES] 返回有序集中指定分数区间内的成员，分数从高到低排序17ZREVRANK key member 返回有序集合中指定成员的排名，有序集成员按分数值递减(从大到小)排序18ZSCORE key member 返回有序集中，成员的分数值19ZUNIONSTORE destination numkeys key [key …] 计算给定的一个或多个有序集的并集，并存储在新的 key 中20ZSCAN key cursor [MATCH pattern] [COUNT count] 迭代有序集合中的元素（包括元素成员和元素分值）"},{"title":"","date":"2018-05-11T08:14:18.911Z","updated":"2018-05-11T08:14:18.911Z","comments":true,"path":"tech/redis/case.html","permalink":"http://www.JiShuXuePai.com/tech/redis/case.html","excerpt":"","text":""},{"title":"","date":"2018-05-11T08:14:18.945Z","updated":"2018-05-11T08:14:18.945Z","comments":true,"path":"tech/sass/case.html","permalink":"http://www.JiShuXuePai.com/tech/sass/case.html","excerpt":"","text":""},{"title":"sass 教学讲义","date":"2018-05-11T08:14:19.188Z","updated":"2018-05-11T08:14:19.188Z","comments":true,"path":"tech/sass/notes.html","permalink":"http://www.JiShuXuePai.com/tech/sass/notes.html","excerpt":"","text":"第一章 sass简介第一节 sass简介sass 和 less 都属于预编译css，为提高css应用的灵活性和效率，sass是基于ruby，而less是基于javascript，在大文件编译方面，sass略胜一筹；sass功能会比less更强大，而less 属于极简。bootstrap框架最新版底层就是基于sass。sass官网：https://www.sass.hk;第二节 sass的安装与编译sass的安装下载和安装ruby 验证： ruby -v 显示版本号下载和安装sassgem install // 将本地安装拖动到命令行处;验证：sass -v 能显示版本号，安装成功;​sass的编译​sass的编译 ： sass写好之后，需要编译为css文件再引入到html中;Sass 和 SCSS 我们平时都称之为 Sass，两者区别：文件扩展名不同，Sass 扩展名为“.sass”，而 SCSS 扩展名“.scss”;语法不同，Sass 是以严格的缩进式语法规则来书写，不带大括号({})和分号(;)，而 SCSS 语法和 CSS 语法非常类似;​​命令行方式sass test.scss css/test.css // 单文件编译sass –watch test.scss:css/test.css // 自动编译sass –watch scss:css // 监测目录sass –watch scss:css –style compact // 编译为指定格式​​GUI工具编译（koala软件）自动化编译（ide工具自动编译）注意事项： (1) 使用utf-8编码 (2) 使用英文或拼音的路径;GUI工具编译 推荐工具Koala (http://www.w3cplus.com/preprocessor/sass-gui-tool-koala.html)​编译的格式nested： 嵌套缩进的css代码(默认)expanded：展开的多行css代码（常规）compact：简洁格式的css代码 （单行）compressed：压缩后的css代码学习可以按默认或expanded生产环境当中，一般使用最后一个选项。​123456789101112131415161718192021【范例】 导入其他scss文件，sass的import效率要高于css的 importreset.scsshtml,body,ul,ol &#123; margin: 0; padding: 0;&#125;// base.scss @import &apos;reset&apos;;body &#123; font-size: 100% Helvetica, sans-serif; background-color: #efefef;&#125;sass的注释// 单行注释 , 单行注释不会编译到css文件中;/ 普通注释 / 会出现在生成的css文件内;第二章 sass的基本用法第一节 sass变量的使用变量的定义和赋值范例： 使用变量来定义媒体查询中设备尺寸;$screen-sm-min:768px; // 平板$screen-md-min:992px; // 普通桌面$screen-lg-min:1200px; // 大屏​变量使用规则sass的变量必须是以$开头;变量名与值间用冒号隔开（就像CSS属性设置一样）;在属性中使用变量 #{$btn-color}值后面加上 !default则表示默认值。变量的默认值在组件化开发的时非常有用​123456789101112【范例1】 sass变量的使用 $fontStack: Helvetica, sans-serif;$primaryColor: #333;$side : left;body &#123; font-family: $fontStack; color: $primaryColor; border-#&#123;side&#125;-radius:5px;&#125;第二节 sass的嵌套引入：用传统css方法做一个简单的导航sass的优点：简化css语法，层次结构清晰，可读性强选择器嵌套和属性嵌套&amp;父级选择器的使用（a的hover范例）map文件的作用（关联css与scss文件，浏览器可以直接调试scss文件）123456789101112131415161718192021222324252627282930313233343536373839【范例2】 sass的嵌套使用 nav ul;nav linav a// 选择器嵌套nav &#123; ul &#123; list-style: none; &#125; li &#123; display: inline-block; &#125; a &#123; text-decoration: none; &#125; &amp;:hover&#123; color: red; &#125;&#125;// 属性嵌套// border:1px red solid;// border-width:1px// border-color:red;// border-style:solid;.border&#123; border:&#123; width:1px; color:red; style:solid; &#125; background:&#123;color:green; size:cover;position:0 0;&#125;&#125;相当于.border&#123; border-width:1px; border-color:red; border-style:solid;&#125;第三节 sass的 mixin混合器的用法如果网站中有几处小的样式类似（例如一致的颜色和字体），使用变量来统一;网站中需要大段重用样式，可以通过sass的混合器实现样式重用;混合器的声明 @mixin 混合器名;混合器的调用 @include 混合器名;有参数的混合器声明与调用，参数使用$开头，多个参数逗号分隔 ;多个参数的声明与调用12345678910111213141516【范例1】混合器的基本用法 - 圆角的实现 @mixin rounded-corners &#123; -moz-border-radius: 5px; -webkit-border-radius: 5px; -ms-border-radius:5px; -o-border-radius:5px; border-radius: 5px;&#125;.notice &#123; background-color: green; border: 2px solid #00aa00; @include rounded-corners;&#125;123456789101112131415【范例2】混合器传参-box-sizing的兼容写法;@mixin box-sizing ($sizing) &#123; -webkit-box-sizing:$sizing; -moz-box-sizing:$sizing; box-sizing:$sizing;&#125;.box-border&#123; border:1px solid #ccc; @include box-sizing(border-box);&#125;//-------------------------------123456789101112131415【范例3】 不透明度的兼容写法;@mixin opacity($opacity:50) &#123; opacity: $opacity / 100; filter: alpha(opacity=$opacity); &#125;.opacity&#123; @include opacity; //参数使用默认值&#125;.opacity-80&#123; @include opacity(80); //传递参数&#125;123456789101112【范例4】多参数的调用 @mixin horizontal-line($border:1px dashed #ccc, $padding:10px)&#123; border-bottom:$border; padding:$padding 0;&#125;.text1 li&#123; @include horizontal-line(1px solid #ccc);&#125;.text2 @include horizontal-line($padding:15px);&#125;第四节 sass继承用法继承与混合器的区别继承也是减少代码重用，不过与混合器不同，混合器主要用于展示性样式重用，继承是基于语义化的，例如： .success和 .message ,前者基于后者，可用继承extend ;1234567891011// 基于类的语义化关系.error&#123; color:red;&#125;.seriousError&#123; extend .error; border:1px red solid;&#125;12345678910111213141516171819202122// 基于类的语义化关系.message &#123; border: 1px solid #ccc; padding: 10px; color: #333;&#125;.success &#123; @extend .message; border-color: green;&#125;.error &#123; @extend .message; border-color: red; &#125;.warning &#123; @extend .message; border-color: yellow;&#125;第五节 sass的运算123456789101112.container &#123; width: 100%; &#125;article[role=&quot;article&quot;] &#123; float: left; width: 600px / 960px * 100%;&#125;aside[role=&quot;aside&quot;] &#123; float: right; width: 300px / 960px * 100%;&#125;第六节 Compass简介1234567891011121314151617181920// Compass 是一个非常丰富的样式框架，是sass核心团队开发出来的大量已定义好的 mixin函数库;// 常用的函数 // 自定义部分写一个 Compass中的混合器【范例】鼠标悬停颜色加深;$linkColor: #08c;a &#123; text-decoration:none; color:$linkColor; &amp;:hover&#123; color:darken($linkColor,10%); &#125;&#125;// 此外还有 lighten($linkColor,10%); 颜色减轻10%;第三章 使用sass搭建ui库第一节 sass搭建ui组件库(按钮)通过混合器传参来定义不同大小按钮;通过混合器传参来定义不同颜色按钮;定义按钮大小和颜色的混合器;声明变量，对于按钮的大小和颜色进行定义;123456789101112131415161718192021222324252627282930313233【范例】 使用sass实现ui组件库// 变量的定义$padding-small-vertical: 5px !default;$padding-small-horizontal: 10px !default;$font-size-small:ceil(($font-size-base * 0.85)) !default;$line-height-small: 1.5 !default;$btn-border-radius-small: $border-radius-small !default;$border-radius-small: 3px !default;// 混合器的声明@mixin button-size($padding-vertical, $padding-horizontal, $font-size, $line-height, $border-radius) &#123; padding: $padding-vertical $padding-horizontal; font-size: $font-size; line-height: $line-height; border-radius: $border-radius; &#125;@mixin btn-color($bg,$color)&#123; background-color:$bg; color:$color;&#125;// 使用混合器定义按钮.btn-sm&gt;input&#123; @include button-size($padding-small-vertical, $padding-small-horizontal, $font-size-small, $line-height-small, $btn-border-radius-small); &#125;第二节 sass实现组件模块化sass的模块化为什么需要导入scss文件（模块化思想）导入scss文件的基本语法导入scss文件的优点​混合器声明，变量声明模块化;sass文件名以 “_” 开头，是被用来引入到其他scss文件的，这样的文件不会单独被编译，这些文件称为独立模块，模块化更有利于scss文件维护；引入方式 : @import “filename” // 注意不需要加后缀名;"},{"title":"","date":"2018-05-11T08:14:19.189Z","updated":"2018-05-11T08:14:19.189Z","comments":true,"path":"tech/serve/case.html","permalink":"http://www.JiShuXuePai.com/tech/serve/case.html","excerpt":"","text":""},{"title":"","date":"2018-05-11T08:14:19.360Z","updated":"2018-05-11T08:14:19.360Z","comments":true,"path":"tech/serve/notes.html","permalink":"http://www.JiShuXuePai.com/tech/serve/notes.html","excerpt":"","text":"第一章 网络概述第一节 局域网和广域网局域网LAN—Local Area Network又被称为内网、私网、本地网，内网一般是指在某一区域内由多台计算机互联成的计算机组。局域网是封闭型的。所谓广域网（简称WAN)，是指一种跨地区的数据通讯网络，通常包含一个国家或地区。 广域网WAN—Wide Area Network又被称为外网、公网、远程网，是指一种跨地区的数据通讯网络,通常包含一个国家或地区。 广域网通常由两个或多个局域网组成。第二节 网络设备路由器路由器（Router），是连接因特网中各局域网、广域网的设备，它会根据信道的情况自动选择和设定路由，以最佳路径，按前后顺序发送信号。网卡网卡是工作在链路层的网络组件，是局域网中连接计算机和传输介质的接口，按照网卡支持的传输速率分类，主要分为10Mbps网卡、100Mbps网卡、10/100Mbps自适应网卡和1000Mbps网卡四类第二章 网络协议计算机网络是由许多计算机组成的，要实现网络的计算机之间传输数据，必须要作两件事，数据传输目的地址和保证数据迅速可靠传输的措施，这是因为数据在传输 过程中很容易丢失或传错，Internet使用一种专门的计算机语言(协议)，以保证数据安全、可靠地到达指定的目的地，这种语言分两部TCP(Transmission Control Protocol 传输控制协议)和 IP (Internet Protocol网间协议)。网络协议就是为计算机网络中进行数据交换而建立的规则、标准或约定的集合。第一节 协议构架OSI(Open System Interconnection)是一个开放性的通信系统互连参考模型，他是一个定义得非常好的协议规范。OSI模型有7层结构，每层都可以有几个子层。 其中高层（即7、6、5、4层）定义了应用程序的功能，下面3层（即3、2、1层）主要面向通过网络的端到端的数据流。OSI的7层构架OSI 层功能TCP/IP协议族应用层文件传输、电子邮件、文件服务、虚拟终端TFTP HTTP SNMP FTP SMTP DNS RIP Telnet表示层数据格式化、代码转换、数据加密没有协议会话层解除或建立与别的节点的联系没有协议传输层提供端对端的接口TCP UDP网络层为数据包选择路由IP，ICMP，RIP，OSPF，BGP，IGMP数据链路层传输有地址的帧以及错误检测功能SLIP，CSLIP，PPP，ARP，RARP，MTU物理层以二进制数据形式在物理媒体上传输数据ISO2110，IEEE802，IEEE802.2，IEEE802.11第二节 TCP/IP协议Transmission Control Protocol/Internet Protocol的简写，中译名为传输控制协议/因特网互联协议，又名网络通讯协议，是Internet最基本的协议、Internet国际互联网络的基础，由网络层的IP协议和传输层的TCP协议组成。TCP/IP 定义了电子设备如何连入因特网，以及数据如何在它们之间传输的标准。协议采用了4层的层级结构，每一层都呼叫它的下一层所提供的协议来完成自己的需求。通俗而言：TCP负责发现传输的问题，一有问题就发出信号，要求重新传输，直到所有数据安全正确地传输到目的地。而IP是给因特网的每一台联网设备规定一个地址。第三章 IP地址与端口第一节 ip地址格式IP地址是一个32位的二进制数，通常被分割为4个“8位二进制数”（也就是4个字节）二进制：11000000 . 10101000 . 00001010 . 00001100十进制：192 . 168 . 10 . 12第二节 ip地址划分互联网上的IP地址统一由一个叫IANA(Internet Assigned Numbers Authority，互联网网络号分配机构)的组织来管理。根据用途和安全性级别的不同，IP地址还可以大致分为两类：公共地址和私有地址。公用地址在Internet中使用，可以在Internet中随意访问。私有地址只能在内部网络中使用，在Internet上无法访问到（只有通过代理服务器才能与Internet通信）。第三节 保留地址10.0.0.0－10.255.255.255172.16.0.0－172.31.255.255192.168.0.0－192.168.255.255127.0.0.1 （本机）这些地址被大量用于企业内部网络中。一些宽带路由器，也往往使用192.168.1.1作为缺省地址。IPv4与IPv6IPv4（IP协议4.0版）使用32位地址。这意味着，最多只有4,294,967,296(40多亿)个地址，IPv6（IP协议6.0版）中IP地址的长度为128位，增加了340万亿个IP地址，增加了8万倍 ，几乎可以不受限制地提供地址，2012年6月6日，国际互联网协会举行了世界IPv6启动纪念日，这一天，全球IPv6网络正式启动。第四节 端口端口一般是指TCP/IP协议中的端口号，可以认为是计算机与外界通讯交流的出口，端口号的范围(2^16)从0到65535常用端口：http：80ftp：21mysql：3306QQ：4000（动态）微信：5222 5223 5228 80 8080 443（动态）第三章 建站第一节 硬件—服务器web服务器Web服务器一般指网站服务器，是指驻留于因特网上某种类型计算机的程序，可以向浏览器等Web客户端提供文档，也可以放置网站文件，让全世界浏览；可以放置数据文件，让全世界下载。主流的三个Web服务器程序是: Apache、 Tomcat、 IIS。独立服务器虚拟主机虚拟主机，也叫“网站空间”，就是把一台运行在互联网上的物理服务器划分成多个“虚拟”服务器。在外界看来，每一台虚拟主机和一台单独的主机的表现完全相同。所以这种被虚拟化的逻辑主机被形象地称为“虚拟主机”。虚拟主机技术极大的促进了网络技术的应用和普及。同时虚拟主机的租用服务也成了网络时代的一种新型经济形式。第二节 接入互联网去电信部门申请一条能够连接互联网的线路—互联网专线（得到ip地址）第三节 申请域名域名网络是基于TCP/IP协议进行通信和连接的，每一台主机都有一个唯一的标识固定的IP地址，以区别在网络上成千上万个用户和计算机。由于IP地址是数字标识，使用时难以记忆和书写，因此在IP地址的基础上又发展出一种符号化的地址方案，来代替数字型的IP地址。每一个符号化的地址都与特定的IP地址对应，这样网络上的资源访问起来就容易得多了。这个与网络上的数字型IP地址相对应的字符型地址，就被称为域名。域名种类英文域名格式如下：域名由各国文字的特定字符集、英文字母、数字及“ - ” ( 即连字符或减号 ) 任意组合而成 , 但开头及结尾均不能含有“ - ”。 域名中字母不分大小写。域名最长可达 67 个字节 ( 包括后缀 .com 、.top、.tech、.net 、.org 、.biz等 ) 。 中文域名格式如下：各级域名长度限制在26个合法字符（汉字，英文a-z ，A-Z ，数字0-9 和 - 等均算一个字符）；不能是纯英文或数字域名，应至少有一个汉字。“-”不能连续出现。常见后缀形式：COM 商业性的机构或公司 .TOP机构公司个人TECH科技、技术ORG 非盈利的组织、团体GOV 政府部门 .MIL 军事部门 .NET 从事Internet相关的的机构或公司；AC 科研机构.申请域名在国内，可以通过新网、阿里云、数据中国等代理商申请域名第四节 域名解析域名解析就是域名到IP地址的转换过程。域名的解析工作由DNS服务器完成。DNS中保存了一张域名(domain name)和与之相对应的IP地址 (IP address)的表，以解析消息的域名。以在新网注册域名为例，接下来需要将域名与网络服务器的地址进行绑定：在新网注册的域名，并且使用新网域名解析服务器，都可以在域名自助管理平台(dcp.xinnet.com）,简称“DCP平台”)完成解析设置。登录域名自助管理平台，使用域名和管理密码登陆到域名自助服务平台，点击“解析设置”进入解析页面。第四章 网络服务器web服务器（略）ftp服务器FTP服务器（File Transfer Protocol Server）是在互联网上提供文件存储和访问服务的计算机，它们依照FTP协议提供服务。 FTP是File Transfer Protocol(文件传输协议)。顾名思义，就是专门用来传输文件的协议。简单地说，支持FTP协议的服务器就是FTP服务器。DNS服务器DNS（Domain Name Server，域名服务器）是进行域名(domain name)和与之相对应的IP地址 (IP address)转换的服务器。DNS中保存了一张域名(domain name)和与之相对应的IP地址 (IP address)的表，以解析消息的域名。根服务器主要用来管理互联网的主目录，全世界只有13台（这13台根域名服务器名字分别为“A”至“M”），1个为主根服务器在美国。其余12个均为辅根服务器，其中9个在美国，欧洲2个，位于英国和瑞典，亚洲1个位于日本。DHCP服务器DHCP（Dynamic Host Configure Protocol，动态主机配置协议），可以为网络中的电脑动态分配ip地址，这种网络服务有利于对网络中的客户机IP地址进行有效管理，而不需要一个一个手动指定IP地址。如果网络中dhcp发生故障或者请求超时，系统会分配169.254.x.x这样一个地址，说明主机没有被分配ip地址。CDNCDN的全称是Content Delivery Network，即内容分发网络。CDN主要解决因分布、带宽、服务器性能带来的访问延迟问题，适用于站点加速、点播、直播等场景。当用户访问加入CDN服务的网站时，域名解析请求将最终交给全局负载均衡DNS进行处理。全局负载均衡DNS通过一组预先定义好的策略，将当时最接近用户的节点地址提供给用户，使用户能够得到快速的服务。同时，它还与分布在世界各地的所有CDNC节点保持通信，搜集各节点的通信状态，确保不将用户的请求分配到不可用的CDN节点上，实际上是通过DNS做全局负载均衡。对于普通的Internet用户来讲，每个CDN节点就相当于一个放置在它周围的WEB。通过全局负载衡DNS的控制，用户的请求被透明地指向离他最近的节点，节点中CDN服务器会像网站的原始服务器一样，响应用户的请求。由于它离用户更近，因而响应时间必然更快。"},{"title":"","date":"2018-05-11T08:14:19.360Z","updated":"2018-05-11T08:14:19.360Z","comments":true,"path":"tech/serve/relative.html","permalink":"http://www.JiShuXuePai.com/tech/serve/relative.html","excerpt":"","text":";;;“layout”: “relative”,“categories”:[“server”],“author”:”江卫”,“materials”: [{&quot;name&quot;: &quot;&quot;, &quot;desc&quot;: &quot;&quot;, &quot;img&quot;: &quot;&quot;, &quot;url&quot;: &quot;&quot; };;;"},{"title":"","date":"2018-05-11T08:14:19.360Z","updated":"2018-05-11T08:14:19.360Z","comments":true,"path":"tech/smarty/case.html","permalink":"http://www.JiShuXuePai.com/tech/smarty/case.html","excerpt":"","text":""},{"title":"","date":"2018-05-11T08:14:19.377Z","updated":"2018-05-11T08:14:19.377Z","comments":true,"path":"tech/smarty/notes.html","permalink":"http://www.JiShuXuePai.com/tech/smarty/notes.html","excerpt":"","text":"第一章 模板引擎简介模板引擎，是为了使用户界面与业务数据分离而产生的，它可以生成特定格式的文档，用于网站的模板引擎就会生成一个标准的HTML文档。第一节 为什么用？1. 问题我们的工作是网站开发，网站开发则必然离不开HTML和PHP，在初级课程中，我们能够通过使用HTML和PHP的 混编形式，实现不少网站功能，例如：用户的登录注册，分类的添加修改，商品的添加删除，订单的状态修改等等……虽然代码一目了然，但是也出现了不少问题，例如：代码量巨大依赖HTML不利于维护升级前端和后台的矛盾第二节 如何来用?1. HTML文档1234567891011121314151617181920212223242526272829303132** 1.html文档 **&lt;!DOCTYPE html&gt;&lt;htmL&gt; &lt;head&gt; &lt;meta charset='utf-8'/&gt; &lt;title&gt;天涯论坛&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;table&gt; &lt;tr&gt; &lt;td&gt;帖子ID：&lt;/td&gt; &lt;td&gt;&#123;$id&#125;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;帖子标题：&lt;/td&gt; &lt;td&gt;&#123;$title&#125;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;发帖人：&lt;/td&gt; &lt;td&gt;&#123;$author&#125;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;发帖时间&lt;/td&gt; &lt;td&gt;&#123;$time&#125;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;点击量&lt;/td&gt; &lt;td&gt;&#123;$point&#125;&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/body&gt;&lt;/htmL&gt;2. PHP文档123456789101112131415161718192021222324252627282930313233343536373839** 1.php文档 **//1.设置响应头header('content-type:text/html;charset=utf-8');//2.创建pdo对象$pdo = new PDO('mysql:host=localhost;dbname=lamp;charset=utf8','root','123');//3.查询数据库$pdo-&gt;prepare('select * from tianya where id=:id');//4.参数绑定$arr = array(':id'=&gt;2);//5.执行$stmt-&gt;execute($arrf);//6.提取结果$res = $stmt-&gt;fetch(PDO::FETCH_ASSOC);//7.引入静态模板(这样不行)//include \"./test.html\";//模版引擎原理//1.读取文件内容$str = file_get_contents('1.html');//2.定义数组$arr = array( 'id' =&gt; $res['id'], 'title' =&gt; $res['title'], 'author' =&gt; $res['author'], 'time' =&gt; $res['time'], 'point' =&gt; $res['point'], );//3.执行遍历替换foreach($arr as $k=&gt;$v)&#123; $str = str_replace('&#123;$'.$k.'&#125;',$v,$str);&#125;第二章 自定义模板引擎第一节 自定义类1. 代码内容12345678910111213141516171819202122232425**MySmarty.class.php文件**//自定义模版引擎class MySmarty&#123; //定义成员属性 public $data = array(); //用于存储模板数据 //创建数组 public function assign($name, $value) &#123; $this-&gt;data[$name] = $value; &#125; //解析模板 public function display($tpl) &#123; //获取模板文件所有内容 $str = $file_get_contents($tpl); //执行替换 foreach($this-&gt;data as $k=&gt;$v)&#123; $str = str_replace('&#123;$'.$k.'&#125;',$v,$str); &#125; &#125;&#125;2. 使用模板123456789101112131415**2.php文件**/1.引入类文件include \"MySmarty.class.php\";//2.创建对象$my = new MySmarty();//3.分配变量(压入数据)$my-&gt;assign('laravel', 'laravel框架的学习，最优雅的框架！');$my-&gt;assign('mysql', 'mysql的学习，免费的数据库');$my-&gt;assign('memcache', 'memcache缓存的学习，是一种内存缓存');$my-&gt;assign('redis', 'redis的学习，也是一个内存缓存');//4.解析模板$my-&gt;display('3.html');第三章 Smarty模板引擎第一节 简介1. 定义Smarty模版引擎是一个开源引擎，是为了使用户界面与业务数据分离而产生的，它可以生成特定格式的文档，用于网站的模版引擎就会生成一个标准的HTML文档2. 下载直接在 http://www.smarty.net 官网进行下载即可3. 功能实现动静分离缓存代码内容第二节 使用1. 引入Smarty类文件12//直接引入require './libs/smarty.class.php';2. 实例化Smarty对象1$s = new Smarty();3. 初始化参数1234567891011121314151617181920212223//设置模板文件存储目录$s-&gt;template_dir = './Views';//设置编译缓存文件存储目录$s-&gt;compile_dir = './Views_c';//设置配置文件存储目录$s-&gt;config_dir = './config';//设置左定界符$s-&gt;left_delimiter = '&lt;&#123;';//设置右定界符$s-&gt;right_delimiter = '&#125;&gt;';//是否开启静态缓存$s-&gt;caching = true;//设置静态缓存存储目录$s-&gt;cache_dir = './cache';//设置静态缓存生存更新时间(单位：秒)$s-&gt;cache_lifetime = 5;4. 分配变量1234567//压入信息$s-&gt;assign('title','smarty的基本使用');$s-&gt;assign('version','3.1.18');$s-&gt;assign('time',time());$s-&gt;assign('chifan',true); //显示1，false为空字符串$s-&gt;assign('pie',3.1415926); //浮点$s-&gt;assign('active',['睡觉','敲代码','吃饭','上网']);5. 解析模板12//将信息解析到模板上$s-&gt;display('1.html');6. 模板内容123456789101112131415&lt;!DOCTYPE html&gt;&lt;htmL&gt; &lt;head&gt; &lt;meta charset='utf-8'/&gt; &lt;title&gt;&#123;$title&#125;&lt;/title&gt; &lt;/head&gt; &lt;body&gt; 当前的版本：&#123;$version&#125;&lt;br/&gt; 当前的时间戳：&#123;$time&#125;&lt;br/&gt; 您吃饭了吗：&#123;$chifan&#125;&lt;br/&gt; π：&#123;$pie&#125;&lt;br/&gt; 活动：&#123;$active[0]&#125;----&#123;$active[1]----&#123;$active[2]&#125;&#125;&lt;br/&gt; //使用方式同数组一致 &lt;/body&gt;&lt;/htmL&gt;第三节 缓存1. 开启在实例化Smarty类之后，可以直接通过实例化处的对象进行开启1234//开启方式require('Smarty.class.php');$smarty = new Smarty;$smarty-&gt;caching = true;2. 设置缓存周期1234567// 设置index.php的cache_lifetime为5分钟$smarty-&gt;cache_lifetime = 300;$smarty-&gt;display('index.php');// 设置home.tpl的cache_lifetime为1小时$smarty-&gt;cache_lifetime = 3600;$smarty-&gt;display('index.php');第四节 基本语法1. 注释单行注释：1&#123;* 我是Smarty 注释, 在编译输出后我并不存在 *&#125;多行注释：123&#123;*多行注释内容*&#125;区块注释：1234567&#123;*********************************************************带说明块的多行注释块@ author: bg@example.com@ maintainer: support@example.com@ para: var that sets block style@ css: the style output**********************************************************&#125;​2. 快速获取可以直接在模板当中使用的内容123456789101112131415161718192021222324&lt;style&gt; /*因为css样式有大括号，可以使用literal禁止smarty模板解析大括号内内容*/ &#123;literal&#125; *&#123;font-size:16px;&#125; &#123;/literal&#125;&lt;/style&gt;&lt;body&gt; &lt;!--一些提交信息--&gt; $_GET: &#123;$smarty.get.name&#125;&lt;br/&gt; $_POST: &#123;$smarty.post.id&#125;&lt;br/&gt; $_SERVER: &#123;$smarty.server.REQUEST_URI&#125;&lt;br/&gt; $_SESSION: &#123;$smarty.session.group&#125;&lt;br/&gt; $_COOKIE: &#123;$smarty.cookie.uid&#125;&lt;br/&gt; &lt;!--快速获取的其他信息--&gt; 时间戳: &#123;$smarty.now&#125;&lt;br/&gt; 常量：&#123;$smarty.const.MESSAGE&#125;&lt;br/&gt; 当前模板名称: &#123;$smarty.template&#125;&lt;br/&gt; 当前模板目录: &#123;$smarty.current_dir&#125;&lt;br/&gt; 当前的版本: &#123;$smarty.version&#125;&lt;br/&gt; 左右界符: &#123;$smarty.ldelim&#125; -- &#123;$smarty.rdelim&#125;&lt;br/&gt; 读取配置：&#123;$smarty.config.name&#125; //需要在smarty根目录创建config配置文件&lt;/body&gt;3. 配置文件需要先行开启，方可使用步骤声明配置文件的默认存放目录：创建该文件夹在该文件夹中创建配置文件（文件名称随便写）内容的格式：配置名 = 配置值;在模板最上方：{config_load file=”引入路径”}使用{$smart.config.name}提取信息12345678//应当按这种格式来书写name = zhangsan;sex = nv;age = 18;classid = 1705;//在html标签中使用如下格式引入&#123;config_load file=\"config.php\"&#125;4. 解析模板smarty注释{*这是smarty注释*} //看不到literal解析使用{literal}避免css样式被解析模板中的函数{time()}时间戳{substr($love,1,4)}截取{$love|upper}大写变量调节器{$love|substr:1:4}{$love|default:’不喜欢你’}三元运算{$intro|truncate:20}截取20个字符{$intro|mb_substr:0:20:’utf-8’}{$love|replace:’love’:’like’}替换5. 其他方法capture：预存模板123456789//预存div&#123;capture name=\"clear\"&#125; &lt;div id=\"one\"&gt;&lt;/div&gt;&#123;/capture&#125;//使用div，可多次使用&#123;smarty.capture.clear&#125;&#123;smarty.capture.clear&#125;&#123;smarty.capture.clear&#125;debug：12//bug调试，模板文件中直接使用&#123;debug&#125;{include file=”引入文件路径”}12&#123;include file=\"header\"&#125;&#123;include file=\"footer\"&#125;{extends file=”继承文件路径”}1&#123;extends file=\"index.html\"&#125;{block name=”替换更改文件路径”}12345&#123;block name=\"content\"&#125; &lt;div id=\"section\" style=\"background:lightgreen;\"&gt;&lt;/div&gt;&#123;/block&#125;//这里是模板引擎{for $i=0 to 100 step=2}{\\$i}{/for}123&#123;for $i=0 to 100 step=2&#125; &#123;$i&#125;&#123;/for&#125;{foreach}{/foreach}123&#123;foreach $fruit as $k=&gt;$v&#125; &#123;$v&#125;&#123;/foreach&#125;{if}{elseif}{/if}123456789&#123;if $total &gt; 90 &amp;&amp; $total &lt;= 100&#125; 给你买个游戏机&#123;elseif $total &gt; 80 &amp;&amp; $total &lt;= 90&#125; 给你买个望远镜&#123;elseif $total &gt;70 &amp;&amp; $total &lt;= 80&#125; 给你买个铅笔盒&#123;elseif $total &gt;70 &amp;&amp; $total &lt;= 80&#125; 给你买个锤子&#123;/if&#125;{nocache}{/nocache}1234//不缓存被选中的信息&#123;nocache&#125; &#123;time()&#125;&#123;nocache&#125;{strip}{/strip}1234//压缩代码&#123;strip&#125; 被压缩的代码，不能是引入的内容&#123;/strip&#125;​"},{"title":"Smarty","date":"2018-05-11T08:14:19.378Z","updated":"2018-05-11T08:14:19.378Z","comments":true,"path":"tech/smarty/relative.html","permalink":"http://www.JiShuXuePai.com/tech/smarty/relative.html","excerpt":"","text":""},{"title":"","date":"2018-05-11T08:14:19.378Z","updated":"2018-05-11T08:14:19.378Z","comments":true,"path":"tech/thinkphp/case.html","permalink":"http://www.JiShuXuePai.com/tech/thinkphp/case.html","excerpt":"","text":""},{"title":"ThinkPHP","date":"2018-05-11T08:14:19.388Z","updated":"2018-05-11T08:14:19.388Z","comments":true,"path":"tech/thinkphp/relative.html","permalink":"http://www.JiShuXuePai.com/tech/thinkphp/relative.html","excerpt":"","text":""},{"title":"","date":"2018-05-11T08:14:19.388Z","updated":"2018-05-11T08:14:19.388Z","comments":true,"path":"tech/thinkphp/notes.html","permalink":"http://www.JiShuXuePai.com/tech/thinkphp/notes.html","excerpt":"","text":"第一章 ThinkPHP简介第一节 获取1. 地址http://www.thinkphp.cn/down/610.htmlcomposer安装命令：composer create-project topthink/thinkphp your-project-name2. 安装安装真的是so easy，我们只需要将下载下来的压缩包进行解压，并且放到相应的服务器根目录下，即可直接来进行使用啦！3. 访问在浏览器中，访问localhost本地主机，并且找到解压缩之后的目录，即可看到框架加载成功的界面了！是一个很可爱的小笑脸！能够看到他，说明你的TP框架已经安装成功！第二节 目录结构1. 结构未访问该框架的时候，目录结构如下123456www WEB部署目录（或者子目录）├─index.php 入口文件├─README.md README文件├─Application 应用目录├─Public 资源文件目录└─ThinkPHP 框架目录框架目录ThinkPHP结构如下！12345678910111213141516├─ThinkPHP 框架系统目录（可以部署在非web目录下面）│ ├─Common 核心公共函数目录│ ├─Conf 核心配置目录 │ ├─Lang 核心语言包目录│ ├─Library 框架类库目录│ │ ├─Think 核心Think类库包目录│ │ ├─Behavior 行为类库目录│ │ ├─Org Org类库包目录│ │ ├─Vendor 第三方类库目录│ │ ├─ ... 更多类库目录│ ├─Mode 框架应用模式目录│ ├─Tpl 系统模板目录│ ├─LICENSE.txt 框架授权协议文件│ ├─logo.png 框架LOGO文件│ ├─README.txt 框架README文件│ └─ThinkPHP.php 框架入口文件2. 创建应用123456789101112// 应用入口文件// 检测PHP环境if(version_compare(PHP_VERSION,'5.3.0','&lt;')) die('require PHP &gt; 5.3.0 !');// 开启调试模式 建议开发阶段开启 部署阶段注释或者设为falsedefine('APP_DEBUG',True);// 定义应用目录（修改这里的内容，就可以创建你想要的应用名称）define('APP_PATH','./Web1709/');// 引入ThinkPHP入口文件require './ThinkPHP/ThinkPHP.php';3. 其他设置常量描述THINK_PATH框架目录APP_PATH应用目录RUNTIME_PATH应用运行时目录（可写）APP_DEBUG应用调试模式 （默认为false）STORAGE_TYPE存储类型（默认为File）APP_MODE应用模式（默认为common）第三节 自动生成1.应用目录结构123456789101112131415web1709├─Common 应用公共模块│ ├─Common 应用公共函数目录│ └─Conf 应用公共配置文件目录├─Home 默认生成的Home模块│ ├─Conf 模块配置文件目录│ ├─Common 模块函数公共目录│ ├─Controller 模块控制器目录│ ├─Model 模块模型目录│ └─View 模块视图文件目录├─Runtime 运行时目录│ ├─Cache 模版缓存目录│ ├─Data 数据目录│ ├─Logs 日志目录│ └─Temp 缓存目录2. 安全文件第二章 模块设计第一节 模块划分1. 目录结构123456web1709 我们的目录（可以设置）├─Common 公共模块（不能直接访问）├─Home 前台模块├─Admin 后台模块├─... 其他更多模块├─Runtime 默认运行时目录（可以设置）2. MVC详解1234567├─Home 默认生成的Home模块│ ├─Conf 模块配置文件目录│ ├─Common 模块函数公共目录│ ├─Controller 模块控制器目录│ │ ├─IndexController.class.php│ ├─Model 模块模型目录│ └─View 模块视图文件目录2.1 控制器12345678//默认Index控制器的内容，若我们对index方法的内容进行了修改namespace Home\\Controller;use Think\\Controller;class IndexController extends Controller &#123; public function index()&#123; echo 'hello,world!'; &#125;&#125;2.2 视图123456789├─View 前台模板存储目录│ ├─Index 默认存储前台主页信息的目录│ ├─User 前台用户管理目录 │ │ ├─index.html 用户中心模板│ │ ├─add.html 用户添加模板│ │ ├─edit.html 用户修改模板│ ├─Goods 前台商品目录│ ├─Model 模块模型目录│ └─View 模块视图文件目录2.3 模型1234namespace Home\\Model;use Think\\Model;class UserModel extends Model &#123;&#125;作用：模型类的作用大多数情况是操作数据表的，如果按照系统的规范来命名模型类的话，大多数情况下是可以自动对应数据表。命名模型类的命名规则是除去表前缀的数据表名称，采用驼峰法命名，并且首字母大写，然后加上模型层的名称（默认定义是Model），例如：模型名约定对应数据表（假设数据库的前缀定义是 think_）UserModelthink_userUserTypeModelthink_user_type数据表定义在ThinkPHP的模型里面，有几个关于数据表名称的属性定义：属性说明tablePrefix定义模型对应数据表的前缀，如果未定义则获取配置文件中的DB_PREFIX参数tableName不包含表前缀的数据表名称，一般情况下默认和模型名称相同，只有当你的表名和当前的模型类的名称不同的时候才需要定义。trueTableName包含前缀的数据表名称，也就是数据库中的实际表名，该名称无需设置，只有当上面的规则都不适用的情况或者特殊情况下才需要设置。dbName定义模型当前对应的数据库名称，只有当你当前的模型类对应的数据库名称和配置文件不同的时候才需要定义。第三章 配置第一节 存放位置1.前台配置默认的配置文件都是存储在Conf目录当中的，前台配置文件的存放位置则为Application/Home/Conf/config.php，后台当然就是Application/Admin/Conf/config.php文件啦！但是这里我们还是建议大家在ThinkPHP/Conf/convention.php文件中去寻找相应配置，并将其复制到前后台的配置文件中，尽量不要修改ThinkPHP框架中的惯例配置文件。第二节 定义方式1.配置文件定义12345678910111213//项目配置文件return array( /* 数据库设置 */ 'DB_TYPE' =&gt; 'mysql', // 数据库类型 'DB_HOST' =&gt; 'localhost', // 服务器地址 'DB_NAME' =&gt; 'web1709', // 数据库名 'DB_USER' =&gt; 'root', // 用户名 'DB_PWD' =&gt; '123', // 密码 'DB_PORT' =&gt; '3306', // 端口 'DB_PREFIX' =&gt; 'think_', // 数据库表前缀 //更多配置参数 //...);2. 入口文件定义1define('DB_TYPE','mysql');第三节 加载顺序1惯例配置-&gt;应用配置-&gt;模式配置-&gt;调试配置-&gt;状态配置-&gt;模块配置-&gt;扩展配置-&gt;动态配置第四节 读取配置1. 读取方式12$model = C('DB_HOST');echo $model; //localhost第五节 动态配置1. 配置方式12// 动态改变缓存有效期C('DATA_CACHE_TIME',60);第六节 拓展配置1. 创建文件12345return array( 'USER_TYPE' =&gt; 2, //用户类型 'USER_AUTH_ID' =&gt; 10, //用户认证ID 'USER_AUTH_TYPE' =&gt; 2, //用户认证模式);2. 自定义配置文件配置1C('USER_AUTH_ID');第七节 批量配置1. C方法配置12$config = array('WEB_SITE_TITLE'=&gt;'ThinkPHP','WEB_SITE_DESCRIPTION'=&gt;'开源PHP框架');C($config);2.读取方式123456// 读取数据库中的配置（假设有一个config表用于保存配置参数）$config = M('Config')-&gt;getField('name,value');// config是一个关联数组 键值就是配置参数 值就是配置值// 例如： array('config1'=&gt;'val1','config2'=&gt;'val2',...)C($config); // 合并配置参数到全局配置第四章 架构第一节 模块化设计1. 设计方式1http://localhost/index.php（或者其他应用入口文件）/模块/控制器/操作/[参数名/参数值...]名称描述应用基于同一个入口文件访问的项目我们称之为一个应用。模块一个应用下面可以包含多个模块，每个模块在应用目录下面都是一个独立的子目录。控制器每个模块可以包含多个控制器，一个控制器通常体现为一个控制器类。操作每个控制器类可以包含多个操作方法，也可能是绑定的某个操作类，每个操作是URL访问的最小单元。2. 公共模块Common模块是一个特殊的模块，是应用的公共模块，访问所有的模块之前都会首先加载公共模块下面的配置文件（Conf/config.php）和公共函数文件（Common/function.php）。但Common模块本身不能通过URL直接访问，公共模块的其他文件则可以被其他模块继承或者调用。3. 改变公共模块123define('COMMON_PATH','./Common/');define('APP_PATH','./Application/');require './ThinkPHP/ThinkPHP.php';改变之后，期目录结构就变成了1234567www WEB部署目录（或者子目录）├─index.php 入口文件├─README.md README文件├─Common 应用公共模块目录├─Application 应用模块目录├─Public 应用资源文件目录└─ThinkPHP 框架目录第二节 URL模式1. 参考1http://serverName/index.php/模块/控制器/操作2. URL大小写1'URL_CASE_INSENSITIVE' =&gt; true3. 不同模式12http://serverName/index.phphttp://serverName/index.php/Home/Index/indexURL模式URL_MODEL设置普通模式0PATHINFO模式1REWRITE模式2兼容模式3第三节 命名空间3.2版本全面采用命名空间方式定义和加载类库文件，有效的解决多个模块之间的冲突问题，并且实现了更加高效的类库自动加载机制。命名空间的概念必须了解，否则会成为3.2版本开发的重大障碍。如果不清楚什么是命名空间，可以参考PHP手册：PHP命名空间由于新版完全采用了命名空间的特性，因此只需要给类库正确定义所在的命名空间，而命名空间的路径与类库文件的目录一致，那么就可以实现类的自动加载。 例如，Org\\Util\\File类的定义为：123namespace Org\\Util;class File &#123;&#125;其所在的路径是 ThinkPHP/Library/Org/Util/File.class.php，因此，如果我们实例化该类的话：1$class = new \\Org\\Util\\File();系统会自动加载 ThinkPHP/Library/Org/Util/File.class.php 文件。第五章 控制器第一节 控制器定义1. 定义方式12345678&lt;?phpnamespace Home\\Controller;use Think\\Controller;class IndexController extends Controller &#123; public function hello()&#123; echo 'hello,兄弟们好!'; &#125;&#125;接下来我们访问 http://web1709.com/index.php/Home/Index/hello1hello,兄弟们好！2.后缀1'ACTION_SUFFIX' =&gt; 'Action', // 操作方法后缀设置操作方法的后缀为Action，这样，控制器的操作方法定义调整为：12345678910111213namespace Home\\Controller;use Think\\Controller;class IndexController extends Controller &#123; public function listAction()&#123; echo 'list'; &#125; public function helloAction()&#123; echo 'hello'; &#125; public function testAction()&#123; echo 'test'; &#125;&#125;第二节 前置和后置操作12345678910111213141516&lt;?phpnamespace Home\\Controller;use Think\\Controller;class IndexController extends Controller&#123; //前置操作方法 public function _before_index()&#123; echo 'before&lt;br/&gt;'; &#125; public function index()&#123; echo 'index&lt;br/&gt;'; &#125; //后置操作方法 public function _after_index()&#123; echo 'after&lt;br/&gt;'; &#125;&#125;如果我们访问 http://serverName/index.php/Home/Index/index123beforeindexafter第三节 Action参数绑定1. 启动1'URL_PARAMS_BIND' =&gt; true, // URL变量绑定到操作方法作为参数2. 按变量名绑定12345678910namespace Home\\Controller;use Think\\Controller;class BlogController extends Controller&#123; public function read($id)&#123; echo 'id='.$id; &#125; public function archive($year='2013',$month='01')&#123; echo 'year='.$year.'&amp;month='.$month; &#125;&#125;第四节 伪静态1. 设置方式1'URL_HTML_SUFFIX'=&gt;'shtml'2. 默认值1'URL_HTML_SUFFIX'=&gt;''第五节 跳转和重定向1. 成功失败跳转123456789$User = M('User'); //实例化User对象$result = $User-&gt;add($data); if($result)&#123; //设置成功后跳转页面的地址，默认的返回页面是$_SERVER['HTTP_REFERER'] $this-&gt;success('新增成功', 'User/list');&#125; else &#123; //错误页面的默认跳转页面是返回前一页，通常不需要设置 $this-&gt;error('新增失败');&#125;1. 1 方法一1234// 操作完成3秒后跳转到 /Article/index$this-&gt;success('操作完成','/Article/index',3);// 操作失败5秒后跳转到 /Article/error$this-&gt;error('操作失败','/Article/error',5);1.2 方法二1234//默认错误跳转对应的模板文件'TMPL_ACTION_ERROR' =&gt; 'Public:error';//默认成功跳转对应的模板文件'TMPL_ACTION_SUCCESS' =&gt; 'Public:success';1.3 自定义设置模板信息变量含义$msgTitle操作标题$message页面提示信息$status操作状态 1表示成功 0 表示失败 具体还可以由项目本身定义规则$waitSecond跳转等待时间 单位为秒$jumpUrl跳转页面地址success和error方法会自动判断当前请求是否属于Ajax请求，如果属于Ajax请求则会调用ajaxReturn方法返回信息。 ajax方式下面，success和error方法会封装下面的数据返回：123$data['info'] = $message; // 提示信息内容$data['status'] = $status; // 状态 如果是success是1 error 是0$data['url'] = $jumpUrl; // 成功或者错误的跳转地址2. 重定向12//重定向到New模块的Category操作$this-&gt;redirect('New/category', array('cate_id' =&gt; 2), 5, '页面跳转中...');如果你仅仅是想重定向要一个指定的URL地址，而不是到某个模块的操作方法，可以直接使用redirect函数重定向，例如：12//重定向到指定的URL地址redirect('/New/category/cate_id/2', 5, '页面跳转中...')第六节 输入变量1. 获取变量12345$id = $_GET['id']; // 获取get变量$name = $_POST['name']; // 获取post变量$value = $_SESSION['var']; // 获取session变量$name = $_COOKIE['name']; // 获取cookie变量$file = $_SERVER['PHP_SELF']; // 获取server变量2. I方法使用1I('变量类型.变量名/修饰符',['默认值'],['过滤方法'],['额外数据源'])变量类型是指请求方式或者输入类型，包括：变量类型含义get获取GET参数post获取POST参数param自动判断请求类型获取GET、POST或者PUT参数request获取REQUEST 参数put获取PUT 参数session获取 $_SESSION 参数cookie获取 $_COOKIE 参数server获取 $_SERVER 参数globals获取 $GLOBALS参数path获取 PATHINFO模式的URL参数（3.2.2新增）data获取 其他类型的参数，需要配合额外数据源参数（3.2.2新增）3. 变量过滤12// 系统默认的变量过滤机制'DEFAULT_FILTER' =&gt; 'htmlspecialchars'也就说，I方法的所有获取变量如果没有设置过滤方法的话都会进行htmlspecialchars过滤，那么：12// 等同于 htmlspecialchars($_GET['name'])I('get.name');同样，该参数也可以设置支持多个过滤，例如：1'DEFAULT_FILTER' =&gt; 'strip_tags,htmlspecialchars'设置后，我们在使用：12// 等同于 htmlspecialchars(strip_tags($_GET['name']))I('get.name');如果我们在使用I方法的时候 指定了过滤方法，那么就会忽略DEFAULT_FILTER的设置，例如：12// 等同于 strip_tags($_GET['name'])echo I('get.name','','strip_tags');表示 会对$_POST[&#39;email&#39;] 进行 格式验证，如果不符合要求的话，返回空字符串。 （关于更多的验证格式，可以参考 官方手册的filter_var用法。） 或者可以用下面的字符标识方式：1I('post.email','','email');可以支持的过滤名称必须是filter_list方法中的有效值（不同的服务器环境可能有所不同），可能支持的包括：123456789101112131415161718intbooleanfloatvalidate_regexpvalidate_urlvalidate_emailvalidate_ipstringstrippedencodedspecial_charsunsafe_rawemailurlnumber_intnumber_floatmagic_quotescallback3.2.3版本开始支持进行正则匹配过滤，例如：123// 采用正则表达式进行变量过滤I('get.name','','/^[A-Za-z]+$/');I('get.id',0,'/^\\d+$/');第七节 请求类型常量说明IS_GET判断是否是GET方式提交IS_POST判断是否是POST方式提交IS_PUT判断是否是PUT方式提交IS_DELETE判断是否是DELETE方式提交IS_AJAX判断是否是AJAX提交REQUEST_METHOD当前提交类型例如：123456789101112class UserController extends Controller&#123; public function update()&#123; if (IS_POST)&#123; $User = M('User'); $User-&gt;create(); $User-&gt;save(); $this-&gt;success('保存完成'); &#125;else&#123; $this-&gt;error('非法请求'); &#125; &#125;&#125;第八节 空操作1234567891011121314&lt;?phpnamespace Home\\Controller;use Think\\Controller;class CityController extends Controller&#123; public function _empty($name)&#123; //把所有城市的操作解析到city方法 $this-&gt;city($name); &#125; //注意 city方法 本身是 protected 方法 protected function city($name)&#123; //和$name这个城市相关的处理 echo '当前城市' . $name; &#125;&#125;第九节 空控制器1http://serverName/index.php/Home/City/shanghai/变成1http://serverName/index.php/Home/shanghai/我们可以给项目定义一个EmptyController类123456789101112131415&lt;?phpnamespace Home\\Controller;use Think\\Controller;class EmptyController extends Controller&#123; public function index()&#123; //根据当前控制器名来判断要执行那个城市的操作 $cityName = CONTROLLER_NAME; $this-&gt;city($cityName); &#125; //注意 city方法 本身是 protected 方法 protected function city($name)&#123; //和$name这个城市相关的处理 echo '当前城市' . $name; &#125;&#125;接下来，我们就可以在浏览器里面输入123http://serverName/index.php/Home/beijing/http://serverName/index.php/Home/shanghai/http://serverName/index.php/Home/shenzhen/由于系统并不存在beijing、shanghai或者shenzhen控制器，因此会定位到空控制器（EmptyController）去执行，会看到依次输出的结果是：123当前城市:beijing当前城市:shanghai当前城市:shenzhen"},{"title":"vue","date":"2018-05-11T08:14:19.389Z","updated":"2018-05-11T08:14:19.389Z","comments":true,"path":"tech/vue/case.html","permalink":"http://www.JiShuXuePai.com/tech/vue/case.html","excerpt":"","text":""},{"title":"vue","date":"2018-05-11T08:14:19.586Z","updated":"2018-05-11T08:14:19.586Z","comments":true,"path":"tech/vue/relative.html","permalink":"http://www.JiShuXuePai.com/tech/vue/relative.html","excerpt":"","text":""},{"title":"webpack 教学讲义","date":"2018-05-11T08:14:19.589Z","updated":"2018-05-11T08:14:19.589Z","comments":true,"path":"tech/webpack/notes.html","permalink":"http://www.JiShuXuePai.com/tech/webpack/notes.html","excerpt":"","text":"第一章 前言第一节 webpack基础知识什么是webpack为什么使用webpack​网页丰富应用，依赖复杂的js代码以及依赖包，为简化，前端社区涌现了很多很好的实践方法：模块化，typescript，scss与less这些改进提高了效率，但这些文件需要额外的处理才能为浏览器识别，手动处理比较繁琐这样就出现了很多工具，例如 grunt gulp webpackwebpack面向的是大型单页面应用webpack 与grunt和gulp的比较webpack 可以看作模块打包机，作用是分析你的项目，找到浏览器不能识别的语言（scss,typescript等）并将其打包为合适的格式供浏览器使用;【区别】（1）grunt 和 gulp 是优化前端工作流程的工具，​ 原理：在配置文件中指明对某些文件的编译，压缩，合并，工具自动完成任务；（2）webpack属于模块化解决方案，其速度更快，能处理的文件类型更多，可完全替代前两个工具;​ 原理：通过主文件 index.js 查找依赖文件，loaders处理并生成一个浏览器可识别的js文件;第二节 webpack的安装nodejs的安装因为webpack需要node环境支持，所以需要先安装nodejsWindows 安装包(.msi)32 位安装包下载地址 : https://nodejs.org/dist/v4.4.3/node-v4.4.3-x86.msi64 位安装包下载地址 : https://nodejs.org/dist/v4.4.3/node-v4.4.3-x64.msi安装完成node后，使用 node -v 测试如果显示版本号 证明安装成功webpack的安装因为webpack的npm安装安装速度比较慢，使用淘宝的镜像安装包12345全局安装$ cnpm install webpack -g安装到项目目录$ cnpm install --save-dev webpack第二章 webpack的使用第一节 命令行打包webpack 会首先加载 主入口文件 app.js ，然后其他文件会在require时被调入，所有的文件最终都会被包含到bundle.js文件中。loader模块Webpack 本身只能处理 JavaScript 模块，如果要处理其他类型的文件，就需要使用 loader 进行转换。如果我们需要在应用中添加 css 文件，就需要使用到 css-loader 和 style-loader安装 css-loader 和 style-loader$ cnpm install css-loader style-loader插件插件在 webpack 的配置信息 plugins 选项中指定，用于完成一些 loader 不能完成的工作。webpack 自带一些插件，你可以可以通过 cnpm 安装一些插件。$ cnpm install webpack –save-dev // 安装内置插件第二节 配置文件打包在项目目录下创建文件 webpack.config.js 文件，将所有的与构建有关的信息放到里面，在执行构建任务时，会自动读取配置文件的信息。配置文件12345678910module.exports = &#123; entry: __dirname + &quot;/app/main.js&quot;,//已多次提及的唯一入口文件 output: &#123; path: __dirname + &quot;/public&quot;,//打包后的文件存放的地方 filename: &quot;bundle.js&quot;//打包后输出文件的文件名 &#125;&#125;//注：“__dirname”是node.js中的一个全局变量，它指向当前执行脚本所在的目录。快捷打包1&quot;start&quot;: &quot;webpack&quot;; // package.json第三节 构建本地web服务器想不想让你的浏览器监测你都代码的修改，并自动刷新修改后的结果，其实Webpack提供一个可选的本地开发服务器，这个本地服务器基于node.js构建，可以实现你想要的这些功能，不过属于单独组件需要在webpack配置前安装作为项目依赖配置webpack服务器12345devServer: &#123; contentBase: &quot;./public&quot;, historyApiFallback: true, inline: true &#125;安装 webpack-dev-server1npm install --save-dev webpack-dev-server配置快捷启动1&quot;server&quot;: &quot;webpack-dev-server --open&quot; // package.json第四节 loadersLoaders是webpack中最让人激动人心的功能之一了。通过使用不同的loader，webpack通过调用外部的脚本或工具可以对各种各样的格式的文件进行处理，或者说把下一代的JS文件（ES6，ES7)转换为现代浏览器可以识别的JS文件。加载css的loaderwebpack提供两个工具处理样式表，css-loader 和 style-loader，二者处理的任务不同，css-loader使你能够使用类似@import 和 url(...)的方法实现 require()的功能,style-loader将所有的计算后的样式加入页面中，二者组合在一起使你能够把样式表嵌入webpack打包后的JS文件中。安装css的loader1cnpm install --save-dev style-loader css-loader配置文件123456789101112131415161718module.exports = &#123; module: &#123; rules: [ &#123; test: /\\.css$/, use: [ &#123; loader: &quot;style-loader&quot; &#125;, &#123; loader: &quot;css-loader&quot; &#125; ] &#125; ] &#125;&#125;;app/main.css 文件1#root&#123; border:3px green solid; &#125;主文件app.js中加载css文件1import &quot;./main.css&quot;;安装scss的loader12npm install --save-dev node-sassnpm install --save-dev sass-loader引入外部样式1import &apos;./test.scss&apos;;"},{"title":"webpack","date":"2018-05-11T08:14:19.589Z","updated":"2018-05-11T08:14:19.589Z","comments":true,"path":"tech/webpack/relative.html","permalink":"http://www.JiShuXuePai.com/tech/webpack/relative.html","excerpt":"","text":""},{"title":"vue","date":"2018-05-11T08:14:19.585Z","updated":"2018-05-11T08:14:19.585Z","comments":true,"path":"tech/vue/notes.html","permalink":"http://www.JiShuXuePai.com/tech/vue/notes.html","excerpt":"","text":"第一章 基础第一节 Vue.js课程介绍Vue是什么？Vue是一种MVC思想的前端框架什么是框架？框架：就是将那些与业务逻辑无关的重复代码进行封装，形成框架；类似函数的封装，jQuery库。解释：业务逻辑无关内在含义是指它们在业务逻辑上没有差异，也就是指在结构（HTML结构）和功能上相似或完全一致，只是展出来的内容不同而已，比如：新闻列表。特点：避免书写大量重复代码，提高开发效率什么是MVC思想？MVC思想：是一种开发设计模式，注重对数据的处理，而PC端注重页面展示M：model，代表数据模型V：view，代表视图层C：Controller，代表控制器（作为model数据与view视图层的连接纽带，将数据内容显示到页面视图上）分析：MVC思想划分了M/V/C三个部分，将数据与视图分离开，而是通过controller控制器来建立联系，这样使开发者方便开发者将注意力集中在数据上，直接对数据进行操作，而无需像js那样先获得视图元素(操作DOM)才能对数据进行操作，即无需操作DOM。12345678910111213//程序员不需要界面，控制台操作数据，无需操作DOM&lt;script&gt; //待办事项列表 var arr = ['eat', 'sleep', 'beat']; //增加代办事项function add(task)&#123; arr.push(task)&#125;//删除代办事项function del(index)&#123; arr.splice(index,1)&#125;&lt;/script&gt;对比原生与Vue代码量Vue有什么用？主要用于移动端单页面应用程序的开发，如手机app等硬件设备：电脑 ——&gt; 手机、Pad前端发展史：PC端开发(Web网页) ——&gt; 移动端开发（App），单页面应用程序SPA：不重载网页、刷新自动跳转到首页Vue该如何学习与应用？学习作者：尤雨溪，华人，前谷歌员工，有较好的社区学习环境官网：https://cn.vuejs.org/版本：1.0（过时） 2.x（所学版本）安装：开发版本，下载vue.js库文件 VS 引入库文件特点：小巧，简洁，易上手API：查看API文档应用【案例】Hello World第二节 创建Vue实例引入库文件&lt;script&gt;、src一片html代码 / 配合上json，new出来vue实例定义MVC定义View定义Model定义ViewModel，（创建Vue实例） 用于连接View和Model创建Vue实例语法new关键字Vue首字母大写内部是一个JSON对象使用逗号分隔配置项el: 父集选择器，element的简写，固定写法不可变更data: JSON对象，存放数据Model，数据类型，固定写法不可变更methods: 方法或函数，固定写法不可变更1234567891011121314151617&lt;script src=\"js/vue.js\"&gt;&lt;/script&gt;&lt;body&gt; &lt;!--这是我们的View视图--&gt; &lt;div id=\"app\"&gt; &#123;&#123; message &#125;&#125; &lt;/div&gt;&lt;/body&gt;&lt;script&gt; // 创建一个 Vue 实例，controller new Vue(&#123; el: '#app', //model数据 data: &#123; message:'Hello World' &#125; &#125;)&lt;/script&gt;第二章 Vue指令指令：以v-XXX开头，是对标签属性功能的扩展输出-循环：v-for用处：遍历数组和JSON数据语法：v-for=&quot;(item,index) in items&quot;输出-文本：v-text指令，内容全部为字符串v-html指令，可以解析HTML标签元素输出-显示隐藏：v-show底层原理：display:none语法：&lt;p v-show=&quot;true&quot;&gt;布尔控制显示隐藏&lt;/p&gt;事件：v-on:click简写：@click=&quot;事件名称&quot;输入-表单数据：v-model特点：双向数据绑定思想：MVVM思想语法：&lt;input type=&#39;text&#39; v-model=&quot;msg&quot;/&gt;属性绑定：v-bind简写：:class :style :src作用：动态切换语法：&lt;div v-bind:class=&quot;{类名：布尔值}&quot;&gt;&lt;/div&gt;特点：通过布尔值来控制该属性是否生效12345678910111213141516171.对象分写形式 *&lt;p :class=\"&#123;active1:bool1,active2:bool2&#125;\"&gt;你瞅啥!&lt;/p&gt;data:&#123; bool1:false, bool2:false&#125;2.对象形式&lt;p :class=\"classObject\"&gt;你瞅啥!&lt;/p&gt;data:&#123; bool1: false, bool2: false, classObject:&#123; active1:bool1, active2:bool2 &#125;&#125;行内样式123456789101112131415// 1.对象分写形式 &lt;div v-bind:style=\"&#123; color: activeColor, fontSize: fontSize + 'px' &#125;\"&gt;&lt;/div&gt; data: &#123; activeColor: 'red', fontSize: 30&#125;// 2.对象形式&lt;div v-bind:style=\"styleObject\"&gt;&lt;/div&gt; data: &#123; styleObject: &#123; color: 'red', fontSize: '13px' &#125;&#125;总结v-bind使用场景：仅用于需要动态切换的项目功能，非动态切换场景使用内部样式！【项目】任务列表todoList任务列表星座查询图书管理系统第三章 事件对象($event)鼠标事件click、contextmenu、dlclick、mouseover、mouseout、mouseup、mousedown鼠标事件修饰符.prevent 阻止默认行为案例：右键菜单.stop 阻止冒泡(了解)案例：盒子里面套盒子，各绑定一个事件，点不同盒子控制台输出结果键盘事件keydown、keyup键盘事件修饰符.up.down.enter.tab.ctrl.delete.prevent案例：up光标位置【项目】百度搜索网易登录邮箱第四章 网络请求什么是网络请求？网络请求就是前后端数据交互前端向后端请求数据后端向前端提供数据前端获取并使用数据请求需要什么资料？接口文档请求接口：后端开发人员提供给前端开发人员请求方式：GET、POST、JSONP请求地址：url请求参数：需要提供给后端的信息请求返回值：标明返回数据的含义status状态码200请求成功404报错没有找到地址举例饭店点餐如何进行网络请求？请求环境配置引入vue.js引入vue-axios.js文件注意：文件引入顺序创建数据文件文本文件.txt数据接口src请求语法：promise语法get请求post请求jsonp请求123456789this.axios.get(api).then((response) =&gt; &#123; console.log(response.data)&#125;)this.axios.post(api).then((response) =&gt; &#123; console.log(response.data)&#125;)this.axios.jsonp(api).then((response) =&gt; &#123; console.log(response.data)&#125;)第五章 生命周期四个过程创建挂载更新销毁举例春、夏、秋、冬出、生、病、死8个钩子函数beforeCreatecreatedbeforeMountedmountedbeforUpdateupdatedbeforeDestroydestroyed代码演示123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head lang=\"en\"&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;生命周期&lt;/title&gt; &lt;script src=\"vue.js\"&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=\"box\"&gt; &lt;p id=\"para\"&gt;&#123;&#123;msg&#125;&#125;&lt;/p&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;&lt;script&gt; var vm = new Vue(&#123; el:'#box', data:&#123; msg:'word' &#125;, beforeCreate:function()&#123; console.log('beforeCreate---------------创建前'); //vue实例本身自带一些属性：$el、$data console.log('el:'+this.$el); console.log('data:'+this.$data); console.log('msg:'+this.msg); &#125;, created:function()&#123; console.log('created--------------------创建完成'); console.log('el:'+this.$el); console.log('data:'+this.$data); console.log('msg:'+this.msg); &#125;, beforeMount:function()&#123; console.log('beforeMount----------------挂载前'); console.log('el:'+this.$el); //占位 console.log('data:'+this.$data); console.log('msg:'+this.msg); var para = document.getElementById('para').innerText; console.log('para:'+para); &#125;, mounted:function()&#123; console.log('mounted--------------------挂载完成'); console.log('el:'+this.$el); console.log('data:'+this.$data); console.log('msg:'+this.msg); var para = document.getElementById('para').innerText; console.log('para:'+para); &#125;, beforeUpdate:function()&#123; console.log('beforeUpdate---------------更新前'); console.log('el:'+this.$el); //控制台更改msg数据 console.log('data:'+this.$data); console.log('msg:'+this.msg); var para = document.getElementById('para').innerText; console.log('para:'+para); &#125;, updated:function()&#123; console.log('updated--------------------更新完成'); console.log('el:'+this.$el); console.log('data:'+this.$data); console.log('msg:'+this.msg); var para = document.getElementById('para').innerText; console.log('para:'+para); &#125;, beforeDestroy:function()&#123; console.log('beforeDestroy---------------销毁前'); console.log('el:'+this.$el); console.log('data:'+this.$data); console.log('msg:'+this.msg); &#125;, destroyed:function()&#123; console.log('destroyed-------------------销毁完成'); console.log('el:'+this.$el); console.log('data:'+this.$data); console.log('msg:'+this.msg); &#125; &#125;)&lt;/script&gt;【项目】自定义右键菜单微博留言板第六章 Vue组件化开发第一节 组件化开发什么是组件？解释：就是将结构上(HTML)相近或相同的代码进行封装，成为一个高度可重复使用的部件称为组件【项目】：海澜之家商品为什么进行组件化开发？组件化开发具有高度可复用性，大大减少减少冗余代码组件具有低耦合性，在大型项目中，便于团队协作开发如何定义和使用组件？组件的定义定义方法：Vue.component(&#39;组件名&#39;,{配置项})配置项template: 模板，绑定iddata: 必须为函数，必须有return，返回值为对象{}methods: 方法函数组件的特点组件实例的作用域是孤立的，即组件不能彼此直接使用对方的数据123456789101112131415161718192021// 1.合写Vue.component('my-component',&#123;template:'&lt;div&gt;&lt;h3&gt;组件&lt;h3&gt;&lt;div&gt;',data: function()&#123; return &#123;&#125;&#125;,methods:&#123;&#125;&#125;);// 2.分写&lt;template id='temp'&gt; &lt;div&gt;&lt;h3&gt;组件&lt;/h3&gt;&lt;/div&gt;&lt;/template&gt;Vue.component('my-component',&#123; template:'#temp', data: function()&#123; return &#123;&#125;&#125;,methods:&#123;&#125;&#125;);组件的使用123&lt;div id='box'&gt; &lt;my-component&gt;&lt;/my-component&gt;&lt;/div&gt;注意事项Vue首字母大写模板：使用id绑定组件名：驼峰命名改为短横线例如：myComponent —&gt; my-component配置项：用逗号分隔第二节 组件分类组件的分类全局组件(见上节)作用域：所有Vue实例都可以使用局部组件作用域：只能让注册了这个组件的Vue的实例使用，即仅在其作用域中可用123456789101112131415161718&lt;script&gt;new Vue(&#123; el:'#box', data:&#123;&#125;, methods:&#123;&#125;, components:&#123; myTest:&#123; template:'#tmp', data:function()&#123; return &#123;msg:'Local component'&#125; &#125;, methods:&#123; change:function()&#123; alert('Local component') &#125; &#125;&#125;)&lt;/script&gt;​第三节 组件间的通信组件的组合父组件子组件1234567891011121314151617181920212223&lt;script&gt; var app = new Vue(&#123; el:'#box', data:&#123;&#125;, methods:&#123;&#125;, components:&#123; //父组件 parent:&#123; template:'#parent', data:function()&#123; return &#123;&#125; &#125;, methods:&#123;&#125; &#125;, child:&#123; //子组件 template:'#child', data:function()&#123; return &#123;&#125; &#125;, methods:&#123;&#125;, &#125; &#125; &#125;)&lt;/script&gt;组件间的通信props属性特点：props 是单向绑定的，当父组件的属性变化时，将传导给子组件，但是反过来不会；使用场景：父往子传值时使用props，即父组件的数据需要通过 props 才能下发到子组件中；props使用方法声明位置： props 属性在子组件中声明属性赋值：在模板自定义标签的首标签内使用属性值绑定显示：在组件模板中绑定注意事项：只能使用，不能改变1234567891011121314// 1.声明 props props: ['message']​```html// 2.给声明的属性赋值 &lt;child message=\"hello!\"&gt;&lt;/child&gt;`// 3.在组件模板中绑定已声明的属性，将属性值显示到页面&lt;template&gt; &lt;span&gt;&#123;&#123; message &#125;&#125;&lt;/span&gt;&lt;/template&gt;// 4.动态props结合`v-bind` 来动态地将 prop 绑定到父组件的数据。每当父组件的数据变化时，该变化也会传导给子组件1234567891011121314151617// 1.子组件中声明propsprops: ['address']// 2.子组件使用props属性绑定父组件中的数据，绑定的为变量名&lt;child :address=\"url\"&gt;&lt;/child&gt;// 3.子组件模板&lt;template&gt;&lt;div&gt;&lt;img src=\"address\" /&gt;&lt;/div&gt;&lt;/template&gt;// 4.父组件中的messagedata:function()&#123;return url:'./images/ico_chat.jpg'&#125;$emit事件触发使用场景：子往父传值时使用$emit注意事项：触发事件不能使用括号【项目】电脑配件购物车海澜之家点餐系统网易新闻APP豆瓣tabbar设置移动端自适应meta viewport语法：&lt;meta name=&quot;viewport&quot; content=&quot;参数名称=参数值（多个参数用逗号隔开）&quot; /&gt;使用：&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,user-scalable=0&quot; /&gt;viewport：是移动设备上的虚拟的“窗口”，用来显示网页的那部分区域主要参数有下面几个：maximum-scale：用户可以缩放的最大值minimum-scale：用户可以缩放的最小值initial-scale：viewport的默认缩放大小width：固定viewport的宽度height：固定viewport的高度user-scalable：是否允许用户缩放123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head lang=\"en\"&gt;&lt;meta charset=\"UTF-8\"&gt;&lt;meta name=\"viewport\" content=\"user-scalable=0, initial-scale=1.0, width=device-width\"/&gt;&lt;title&gt;&lt;/title&gt;&lt;script src=\"vue.js\"&gt;&lt;/script&gt;&lt;style&gt;* &#123;padding: 0;margin: 0;&#125;.tabbarWrap &#123;width: 100%;height: 64px;background-color: #F6F6F6;border-top: 1px solid #B5B5B5;position: fixed;left: 0;bottom: 0;&#125;.tabbarWrap img &#123;width: 45px;&#125;.tabbarWrap .itemWrap &#123;width: 20%;float: left;text-align: center;font-size: 0;&#125;.tabbarWrap .title &#123;font-size: 14px;color: #8B8B8B;&#125;.itemWrap .red &#123;color: #42BF55;&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div id=\"box\"&gt; &lt;tabbar&gt;&lt;/tabbar&gt;&lt;/div&gt;&lt;template id=\"tabbar\"&gt; &lt;div class=\"tabbarWrap\"&gt; &lt;item title=\"首页\" mark=1 @respond=\"getValue\" :sel=\"select\"&gt; &lt;img src=\"./images/ic_tab_home_normal.png\" alt=\"\" slot=\"normal\"/&gt; &lt;img src=\"./images/ic_tab_home_active.png\" alt=\"\" slot=\"active\"/&gt; &lt;/item&gt; &lt;item title=\"书影音\" mark=2 @respond=\"getValue\" :sel=\"select\"&gt; &lt;img src=\"./images/ic_tab_subject_normal.png\" alt=\"\" slot=\"normal\"/&gt; &lt;img src=\"./images/ic_tab_subject_active.png\" alt=\"\" slot=\"active\"/&gt; &lt;/item&gt; &lt;item title=\"广播\" mark=3 @respond=\"getValue\" :sel=\"select\"&gt; &lt;img src=\"./images/ic_tab_status_normal.png\" alt=\"\" slot=\"normal\"/&gt; &lt;img src=\"./images/ic_tab_status_active.png\" alt=\"\" slot=\"active\"/&gt; &lt;/item&gt; &lt;item title=\"小组\" mark=4 @respond=\"getValue\" :sel=\"select\"&gt; &lt;img src=\"./images/ic_tab_group_normal.png\" alt=\"\" slot=\"normal\"/&gt; &lt;img src=\"./images/ic_tab_group_active.png\" alt=\"\" slot=\"active\"/&gt; &lt;/item&gt; &lt;item title=\"我的\" mark=5 @respond=\"getValue\" :sel=\"select\"&gt; &lt;img src=\"./images/ic_tab_profile_female_normal.png\" alt=\"\" slot=\"normal\"/&gt; &lt;img src=\"./images/ic_tab_profile_female_active.png\" alt=\"\" slot=\"active\"/&gt; &lt;/item&gt; &lt;/div&gt;&lt;/template&gt;&lt;template id=\"item\"&gt; &lt;div class=\"itemWrap\" @click=\"change\"&gt; &lt;span v-show=\"bool\"&gt;&lt;slot name=\"normal\"&gt;&lt;/slot&gt;&lt;br/&gt;&lt;/span&gt; &lt;span v-show=\"!bool\"&gt;&lt;slot name=\"active\"&gt;&lt;/slot&gt;&lt;br/&gt;&lt;/span&gt; &lt;span class=\"title\" :class=\"&#123;red:!bool&#125;\"&gt;&#123;&#123;title&#125;&#125;&lt;/span&gt; &lt;/div&gt;&lt;/template&gt;&lt;/body&gt;&lt;/html&gt;&lt;script&gt; var app = new Vue(&#123; el: '#box', data: &#123;&#125;, methods: &#123;&#125;, components: &#123; tabbar: &#123; template: '#tabbar', data: function () &#123; return &#123;select: 1&#125; &#125;, methods: &#123; getValue: function (val) &#123; this.select = val; console.log('val:',val); &#125; &#125;, components: &#123; item: &#123; template: '#item', props: ['title', 'mark', 'sel'], methods: &#123; change: function () &#123; //this.bool = !this.bool; this.$emit('respond', this.mark); console.log('mark:',this.mark); //console.log('sel:',this.sel); &#125; &#125;, //初始状态时，首页高亮，computed具有自动计算更新的功能，无需触发即可计算并判断 computed: &#123; bool: function () &#123; console.log('sel:',this.sel); if (this.mark == this.sel) &#123; return false; &#125; else &#123; return true; &#125; &#125; &#125; &#125;)&lt;/script&gt;​第七章 路由什么是路由？路由：概念：顾名思义——路径经由的意思，就是到达目的地所选择的路线；例如：高德的地图导航路线、路由器路由器：根据目标IP地址，找到中间需要经过的路由器路径。网络原理：路由指的是根据上一接口的数据包中的IP地址，查询路由表转发到另一个接口，它决定的是一个端到端的网络路径。Web：根据网址找到能处理这个URL链接的程序或模块。作用分配组件路径实现显示内容切换为什么使用路由？SPA解释：单页应用程序；即只有一张Web页面的应用程序，类似锚点 (回到顶部)好处良好的交互体验：用户不需要重新刷新页面，页面显示流畅。前后端工作分离模式：服务器只用出数据就可以，不用管展示逻辑和页面合成，减轻服务器压力。路由的分类一级路由底部tabbar选项：首页、书影音、广播、小组、我的，均是一级路由二级路由书影音顶部nav选项：电影、读书、电视、同城、音乐，均是二级路由如何实现路由？路由环境搭建引入vue-router.js引入vue-router.js注意：引入顺序，vue-router.js依赖于vue.js，因此要先引入vue.js配置路由创建路由对象语法：router: new VueRouter({})使用new关键字VueRouter首字母大写路由配置项语法：routes:[] 用于存放所有路径的数组分配路径信息语法：path:&quot;/&quot;扩展123456 表示根目录. 表示当前目录.. 表示当前目录的上一级目录。/表示根目录下的某个文件或文件夹，视后面跟着的名字而定./表示当前目录下的某个文件或文件夹，视后面跟着的名字而定../表示当前目录上一级目录的文件或文件夹，视后面跟着的名字而定。创建组件模板语法：component:{template:&#39;&lt;h1&gt;新闻&lt;/h1&gt;}&#39;使用路由链接路由语法：&lt;router-link to=&#39;/home&#39;&gt;主页&lt;/router-link&gt;会被渲染成&lt;a&gt;&lt;/a&gt;标签渲染组件内容到视图语法：&lt;router-view&gt;&lt;/router-view&gt;作用：将路由匹配到的组件将渲染到视图的某个位置。设置路由初始路径router.push(&#39;/home&#39;)this.$router.push(&#39;/home&#39;); 该方法常用于项目环境中注意事项二级路由配置路径时不能使用“/”，因为以 / 开头的嵌套路径会被当作根路径二级路由：两个路由都渲染同个组件，比起销毁再创建，复用则显得更加高效【项目】新闻导航菜单一级与二级路由合写形式 VS 分写形式1234567891011121314151617181920212223242526272829303132333435361.合写方式&lt;body&gt;&lt;div id=\"box\"&gt; &lt;ul&gt; &lt;li&gt;&lt;router-link to=\"/home\"&gt;首页&lt;/router-link&gt;&lt;/li&gt; &lt;li&gt;&lt;router-link to=\"/hot\" &gt;热点&lt;/router-link&gt;&lt;/li&gt; &lt;li&gt;&lt;router-link to=\"/news\"&gt;新闻&lt;/router-link&gt;&lt;/li&gt; &lt;/ul&gt; &lt;div class=\"content\"&gt; &lt;router-view&gt;&lt;/router-view&gt; &lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;&lt;script&gt; var vm = new Vue(&#123; el:'#box', data:&#123;&#125;, router:new VueRouter(&#123; routes:[ &#123;path:'/home',component:&#123; template:'&lt;h1&gt;首页&lt;/h1&gt;' &#125;&#125;, &#123;path:'/hot',component:&#123; template:'&lt;h1&gt;热点&lt;/h1&gt;' &#125;&#125;, &#123;path:'/news',component:&#123; template:'&lt;h1&gt;新闻&lt;/h1&gt;' &#125;&#125; ] &#125;), created:function()&#123; this.$router.push('/home') &#125; &#125;)&lt;/script&gt;123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051// 2.分写方式&lt;body&gt; &lt;div id=\"box\"&gt; &lt;ul&gt; &lt;li&gt;&lt;router-link to=\"/home\"&gt;首页&lt;/router-link&gt;&lt;/li&gt; &lt;li&gt;&lt;router-link to=\"/hot\" &gt;热点&lt;/router-link&gt;&lt;/li&gt; &lt;li&gt;&lt;router-link to=\"/news\"&gt;新闻&lt;/router-link&gt;&lt;/li&gt; &lt;/ul&gt; &lt;div class=\"content\"&gt; &lt;router-view&gt;&lt;/router-view&gt; &lt;/div&gt; &lt;/div&gt; &lt;template id=\"h\"&gt; &lt;h1&gt;首页&lt;/h1&gt; &lt;/template&gt; &lt;template id=\"t\"&gt; &lt;h1&gt;热点&lt;/h1&gt; &lt;/template&gt; &lt;template id=\"n\"&gt; &lt;h1&gt;新闻&lt;/h1&gt; &lt;/template&gt;&lt;/body&gt;&lt;/html&gt;&lt;script&gt; var Home = Vue.extend(&#123; template:'#h' &#125;); var Hot = Vue.extend(&#123; template:'#t' &#125;); var News = Vue.extend(&#123; template:'#n' &#125;); var routes = [ &#123;path:'/home',component:Home&#125;, &#123;path:'/hot',component:Hot&#125;, &#123;path:'/news',component:News&#125; ]; var router = new VueRouter(&#123; routes:routes &#125;); var vm = new Vue(&#123; el:'#box', data:&#123;&#125;, router:router &#125;); router.push('/home')&lt;/script&gt;第八章 项目实战第一节 项目环境搭建项目环境搭建开发环境配置项及配置方法123456789101112131415161718192021221、安装node.js; 安装完成后，输入“node -v”查看是否安装成功2、安装vue-cli “npm install -g vue-cli”,可使用“vue”查看是否安装成功3、安装webpack &quot;npm install webpack -g&quot; 4、切换到D盘 &quot;d:&quot; 5、切换到D盘指定文件夹 &quot;cd 路径名&quot;6、创建项目:这里项目名不能使用大写(Project name) &quot;vue init webpack my-vue&quot;7、注：创建项目过程中，一直按“enter”，选择安装的部分，只有router选择安装按‘y’，其他都按‘n’注：安装cnpm安装速度更快 &quot;npm install -g cnpm -registry=https://registry.npm.taobao.org&quot;项目文件介绍与分析bulid中配置了webpack的基本配置、开发环境配置、生产环境配置config中配置了路径端口值等node_moudles为依赖的模块assets放置静态资源，放可能会变动的文件，如图片src放置组件和入口文件static放置静态资源文件，放不变动的文件，如引入的资源文件index.html文件入口项目环境下的组件剖析组件的组成三部分template 模板部分script 逻辑部分style 样式部分组件的嵌套引用语法：import item from &#39;./tabbarChild&#39;;思想：模块化思想组件内部数据暴露1234567891011121314export default&#123;components:&#123;item&#125;,name: \"tabbarParent\",data: function () &#123;return &#123;select: \"home\"&#125;&#125;,methods: &#123;getValue: function (val) &#123;this.select = val;&#125;&#125;&#125;第二节 项目分析与开发豆瓣APP项目整体分析组件分析header组件首页书影音、广播、小组组件tabbar组件父组件子组件content组件轮播图组件路由分析一级路由二级路由项目打包部署到服务器webpack打包功能工具xampp阿帕奇本地服务器豆瓣APP组件开发123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172//header组件&lt;template&gt; &lt;div class=\"bookWrap home\"&gt; &lt;slot name=\"input\"&gt;&lt;/slot&gt; &lt;slot name=\"search\"&gt;&lt;/slot&gt; &lt;slot name=\"scan\"&gt;&lt;/slot&gt; &lt;slot name=\"title\"&gt;&lt;/slot&gt; &lt;slot name=\"left\"&gt;&lt;/slot&gt; &lt;slot name=\"right\"&gt;&lt;/slot&gt; &lt;/div&gt;&lt;/template&gt;&lt;script&gt; export default&#123; name: \"Header\", data:function()&#123; return &#123;&#125; &#125;, methods:&#123;&#125;, &#125;&lt;/script&gt;&lt;style&gt; .bookWrap&#123; width: 100%; height: 50px; line-height: 50px; background-color: #F6F6F6; text-align: center; border-bottom: 1px solid #B6B6B6; position: relative; &#125; .bookWrap .search&#123; width: 20px; position: absolute; top: 15px; right: 70px; &#125; .bookWrap .chat&#123; width: 20px; position: absolute; top: 15px; right: 20px; &#125; .bookWrap input&#123; width: 85%; height: 30px; border: none; border-radius: 5px; text-indent: 2em; position: absolute; top: 10px; left: 10px; &#125; .bookWrap input::-webkit-input-placeholder&#123; color: #CDCDCD; font-size: 14px; &#125; .bookWrap .homeSearch&#123; width: 20px; position: absolute; top: 15px; left: 15px; &#125; .bookWrap .homeScan&#123; width: 20px; position: absolute; top: 15px; right: 55px; &#125;&lt;/style&gt;123456789101112131415161718192021222324252627282930313233343536//tabbar子组件&lt;template&gt; &lt;div class=\"itemWrap\" @click=\"change\"&gt; &lt;span v-show=\"bool\"&gt;&lt;slot name=\"normal\"&gt;&lt;/slot&gt;&lt;br/&gt;&lt;/span&gt; &lt;span v-show=\"!bool\"&gt;&lt;slot name=\"active\"&gt;&lt;/slot&gt;&lt;br/&gt;&lt;/span&gt; &lt;span class=\"title\" :class=\"&#123;red:!bool&#125;\"&gt;&#123;&#123;title&#125;&#125;&lt;/span&gt; &lt;/div&gt;&lt;/template&gt;&lt;script&gt; export default&#123; name: \"tabbarChild\", props: ['title', 'mark', 'sel'], methods: &#123; change: function () &#123; this.$emit('respond', this.mark); this.$router.push('/'+this.mark) &#125; &#125;, computed: &#123; bool: function () &#123; if (this.mark == this.sel) &#123; return false; &#125; else &#123; return true; &#125; &#125; &#125; &#125;&lt;/script&gt;&lt;style&gt; .itemWrap .red&#123; color: #42BF55; &#125;&lt;/style&gt;123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172//tabbar父组件&lt;template&gt; &lt;div class=\"tabbarWrap\"&gt; &lt;item title=\"首页\" mark=\"home\" @respond=\"getValue\" :sel=\"select\"&gt; &lt;img src=\"./images/ic_tab_home_normal.png\" alt=\"\" slot=\"normal\"/&gt; &lt;img src=\"./images/ic_tab_home_active.png\" alt=\"\" slot=\"active\"/&gt; &lt;/item&gt; &lt;item title=\"书影音\" mark=\"book\" @respond=\"getValue\" :sel=\"select\"&gt; &lt;img src=\"./images/ic_tab_subject_normal.png\" alt=\"\" slot=\"normal\"/&gt; &lt;img src=\"./images/ic_tab_subject_active.png\" alt=\"\" slot=\"active\"/&gt; &lt;/item&gt; &lt;item title=\"广播\" mark=\"broadcast\" @respond=\"getValue\" :sel=\"select\"&gt; &lt;img src=\"./images/ic_tab_status_normal.png\" alt=\"\" slot=\"normal\"/&gt; &lt;img src=\"./images/ic_tab_status_active.png\" alt=\"\" slot=\"active\"/&gt; &lt;/item&gt; &lt;item title=\"小组\" mark=\"group\" @respond=\"getValue\" :sel=\"select\"&gt; &lt;img src=\"./images/ic_tab_group_normal.png\" alt=\"\" slot=\"normal\"/&gt; &lt;img src=\"./images/ic_tab_group_active.png\" alt=\"\" slot=\"active\"/&gt; &lt;/item&gt; &lt;item title=\"我的\" mark=\"personal\" @respond=\"getValue\" :sel=\"select\"&gt; &lt;img src=\"./images/ic_tab_profile_female_normal.png\" alt=\"\" slot=\"normal\"/&gt; &lt;img src=\"./images/ic_tab_profile_female_active.png\" alt=\"\" slot=\"active\"/&gt; &lt;/item&gt; &lt;/div&gt;&lt;/template&gt;&lt;script&gt; import item from './tabbarChild'; export default&#123; components:&#123; item &#125;, name: \"tabbarParent\", data: function () &#123; return &#123;select: \"home\"&#125; &#125;, methods: &#123; getValue: function (val) &#123; this.select = val; &#125; &#125; &#125;&lt;/script&gt;&lt;style&gt; .tabbarWrap &#123; width: 100%; height: 64px; background-color: #F6F6F6; border-top: 1px solid #B5B5B5; position: fixed; left: 0; bottom: 0; &#125; .tabbarWrap img &#123; width: 45px; &#125; .tabbarWrap .itemWrap &#123; width: 20%; float: left; text-align: center; font-size: 0; &#125; .tabbarWrap .title &#123; font-size: 14px; color: #8B8B8B; &#125;&lt;/style&gt;豆瓣APP路由实现一级路由二级路由Swiper轮播图插件插件介绍网址SwiperHTML页面中使用文件引入方式及位置&lt;link rel=&quot;stylesheet&quot; href=&quot;swiper-3.4.2.min.css&quot;/&gt;&lt;script src=&quot;swiper-3.4.2.min.js&quot;&gt;&lt;/script&gt;相关配置项，如：direction、loop、autoplay、pagination等1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head lang=\"en\"&gt;&lt;meta charset=\"UTF-8\"&gt;&lt;title&gt;&lt;/title&gt;&lt;link rel=\"stylesheet\" href=\"swiper-3.4.2.min.css\"/&gt;&lt;script src=\"swiper-3.4.2.min.js\"&gt;&lt;/script&gt;&lt;style&gt;*&#123; padding: 0; margin: 0;&#125;.swiper-container &#123; width: 600px; height: 300px;&#125;.slide1&#123; background-color: lightcoral;&#125;.slide2&#123; background-color: mediumvioletred;&#125;.slide3&#123; background-color: greenyellow;&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div class=\"swiper-container\"&gt; &lt;div class=\"swiper-wrapper\"&gt; &lt;div class=\"swiper-slide slide1\"&gt;Slide 1&lt;/div&gt; &lt;div class=\"swiper-slide slide2\"&gt;Slide 2&lt;/div&gt; &lt;div class=\"swiper-slide slide3\"&gt;Slide 3&lt;/div&gt; &lt;/div&gt; &lt;div class=\"swiper-pagination\"&gt;&lt;/div&gt; &lt;div class=\"swiper-button-prev\"&gt;&lt;/div&gt; &lt;div class=\"swiper-button-next\"&gt;&lt;/div&gt; &lt;div class=\"swiper-scrollbar\"&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;&lt;script&gt;var mySwiper = new Swiper ('.swiper-container', &#123; direction: 'horizontal', loop: true, autoplay: 1000, pagination: '.swiper-pagination', nextButton: '.swiper-button-next', prevButton: '.swiper-button-prev', scrollbar: '.swiper-scrollbar',&#125;)&lt;/script&gt;项目环境中使用文件引入方式及位置import &quot;./swiper-3.4.2.min.js&quot;;@import &#39;./swiper-3.4.2.min.css&#39;;注意：1) 直接引入，不要命名；2) @符号的使用3) 分号一定不能遗漏相关配置项12345678910111213141516171819202122232425262728293031323334&lt;template&gt;&lt;div class=&quot;swiper-container&quot;&gt; &lt;div class=&quot;swiper-wrapper&quot;&gt; &lt;div class=&quot;swiper-slide&quot;&gt;&lt;img src=&quot;./banner-img/01.jpg&quot;&gt;&lt;/div&gt; &lt;div class=&quot;swiper-slide&quot;&gt;&lt;img src=&quot;./banner-img/02.jpg&quot;&gt;&lt;/div&gt; &lt;div class=&quot;swiper-slide&quot;&gt;&lt;img src=&quot;./banner-img/03.jpg&quot;&gt;&lt;/div&gt; &lt;/div&gt;&lt;div class=&quot;swiper-pagination&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/template&gt;&lt;script&gt;import &quot;./swiper-3.4.2.min.js&quot;;export default&#123; mounted:function()&#123; new Swiper(&apos;.swiper-container&apos;,&#123; direction: &apos;horizontal&apos;, loop: true, autoplay: 1000, pagination: &apos;.swiper-pagination&apos;, &#125;) &#125;&#125;&lt;/script&gt;&lt;style&gt;@import &apos;./swiper-3.4.2.min.css&apos;; .swiper-container&#123; width:100%;&#125;.swiper-container img&#123; width:100%&#125;&lt;/style&gt;banner插件组件在首页中的使用12345678910&lt;Banner&gt;&lt;/Banner&gt;import Banner from &apos;./banner&apos;;export default&#123; name: &quot;Home&quot;, components: &#123; Banner &#125;&#125;第三节 数据请求创建content组件组件模板template组件样式style组件数据script模拟后台JSON数据请求JSON数据axios请求123456789101112131415161718191、vue-cli配置axios请求环境npm install --save axios vue-axios2、在组件文件中引入依赖包import Vue from &apos;vue&apos;import axios from &apos;axios&apos;import VueAxios from &apos;vue-axios&apos;Vue.use(VueAxios, axios)3、进行网络请求Vue.axios.get(api).then((response) =&gt; &#123;console.log(response.data)&#125;)this.axios.get(api).then((response) =&gt; &#123;console.log(response.data)&#125;)this.$http.get(api).then((response) =&gt; &#123;console.log(response.data)&#125;)错误调试1报错原因：v-bind:src=&#39;img.jpg&#39;因为在浏览器上运行的是网站的根目录，而不是项目文件的根目录，在这里把网站的根目录作为相对路径的根目录了，然而我们文件的路径是相对于项目文件的根目录的，于是就找不到报错了。解决方法：图片一类的静态文件，应该放在这个static文件夹下，这个文件夹下的文件（夹）会按照原本的结构放在网站根目录下。这时我们再去使用/static绝对路径，就可以访问这些静态文件了。static这个文件夹是vue-cli内置服务器向外暴露的静态文件夹错误调试2报错原因：同上解决方法：同上且this.axios.get(&#39;/static/homeData.json&#39;).then((response) =&gt; {console.log(response.data)})第四节 打包发布打包dist文件部署到本地服务器开启本地阿帕奇服务器浏览器查看 localhost:80/dist/index.html123Chrome浏览器调试报错：Failed to load resource: Cannot GET /favicon.ico, a status of 404 (Not Found)报错原因：chrome浏览器在调试的时候默认会查找根目录下的favicon.ico文件，如果不存在就会报错。解决办法：F12，点击&lt;top frame&gt;左侧漏斗形状的filter，勾选上”Hide network messages”，问题解决。第九章 Vuex状态管理vuex是一个专门为vue.js设计的集中式状管理架构。状态，可把它理解为data中需要共享给其他vue组件使用的属性，就叫做状态。即，data中需要共用的属性。比如：我们有几个页面要显示用户名称和用户等级，或者显示用户的地理位置。如果我们不把这些属性设置为状态，那每个页面遇到后，都会到服务器进行查找计算，返回后再显示。在中大型项目中会有很多共用的数据，所以尤大神给我们提供了vuex。第一节 项目环境搭建安装npm install vuex –save第二节 创建状态文件项目文件创建store.js引入依赖123import Vue from 'vue'import Vuex from 'vuex'Vue.use(Vuex)状态数据就是我们SPA（单页应用程序）中的共享值12345const state = &#123;count:1&#125;export default new Vuex.Store(&#123; state, mutations&#125;)状态方法:mutations是固定的写法就是修改共享值的方法12345678const mutations = &#123; add(state)&#123; state.count++ &#125;, reduce(state)&#123; state.count-- &#125;&#125;第三节 创建组件文件读取state入门写法写法直接，代码繁琐，不符合使用习惯12345678910111213141516171819202122&lt;template&gt; &lt;div&gt; &lt;h2&gt;&#123;&#123;msg&#125;&#125;&lt;/h2&gt; &lt;hr/&gt; &lt;h3&gt;&#123;&#123;$store.state.count&#125;&#125;&lt;/h3&gt; &lt;div&gt; &lt;button @click=&quot;$store.commit(&apos;add&apos;)&quot;&gt;+&lt;/button&gt; &lt;button @click=&quot;$store.commit(&apos;reduce&apos;)&quot;&gt;-&lt;/button&gt; &lt;/div&gt; &lt;/div&gt;&lt;/template&gt;&lt;script&gt; import store from &apos;@/vuex/store&apos; export default&#123; data()&#123; return&#123; msg:&apos;Hello Vuex&apos;, &#125; &#125;, store &#125;&lt;/script&gt;进阶写法computed实际开发中我们也不喜欢看到$store.state.count这样的方法出现，我们希望跟调用模板里的属性一样调用。该写法好理解，书写仍比较麻烦12345678910111213141516171819202122232425262728&lt;template&gt; &lt;div&gt; &lt;h2&gt;&#123;&#123;msg&#125;&#125;&lt;/h2&gt; &lt;hr/&gt; //精简写法 &lt;h3&gt;&#123;&#123;count&#125;&#125;&lt;/h3&gt; &lt;div&gt; &lt;button @click=\"$store.commit('add')\"&gt;+&lt;/button&gt; &lt;button @click=\"$store.commit('reduce')\"&gt;-&lt;/button&gt; &lt;/div&gt; &lt;/div&gt;&lt;/template&gt;&lt;script&gt; import store from '@/vuex/store' export default&#123; data()&#123; return&#123; msg:'Hello Vuex', &#125; &#125;, computed:&#123; count()&#123; return this.$store.state.count &#125; &#125;, store &#125;&lt;/script&gt;高级写法一：mapState对象12345678910111213141516171819202122232425262728&lt;template&gt; &lt;div&gt; &lt;h2&gt;&#123;&#123;msg&#125;&#125;&lt;/h2&gt; &lt;hr/&gt; //精简写法 &lt;h3&gt;&#123;&#123;count&#125;&#125;&lt;/h3&gt; &lt;div&gt; &lt;button @click=\"$store.commit('add')\"&gt;+&lt;/button&gt; &lt;button @click=\"$store.commit('reduce')\"&gt;-&lt;/button&gt; &lt;/div&gt; &lt;/div&gt;&lt;/template&gt;&lt;script&gt; import store from '@/vuex/store' //首先引入mapState import &#123;mapState&#125; from 'vuex'; export default&#123; data()&#123; return&#123; msg:'Hello Vuex', &#125; &#125;, computed:mapState(&#123; count:state =&gt; state.count &#125;), store &#125;&lt;/script&gt;高级写法二：mapState数组这个算是最简单的写法，在实际项目开发当中也经常这样使用1computed:mapState([\"count\"])修改读取stateVuex提供了commit()方法来修改状态12&lt;button @click=\"$store.commit('add')\"&gt;+&lt;/button&gt; &lt;button @click=\"$store.commit('reduce')\"&gt;-&lt;/button&gt;传值上面只是一个最简单的修改状态的操作，而在实际项目中常常需要在修改状态时传值。根据需求传入不同的值，以得到不同的状态；比如上边的例子，是每次只加1，而现在有需求：要通过所传的值进行相加。针对这种需求，只需要在Mutations里再加上一个参数，并在commit的时候传递就就可以了12345678910111213// store.js文件const mutations = &#123; add(state,n)&#123; state.count += n; &#125; reduce(state)&#123; state.count-- &#125;&#125;// count.vue文件&lt;button @click=&quot;$store.commit(&apos;add&apos;,10)&quot;&gt;+&lt;/button&gt; &lt;button @click=&quot;$store.commit(&apos;reduce&apos;)&quot;&gt;-&lt;/button&gt;模板文件内获取mutations方法实际开发中我们也不喜欢看到$store.commit( )这样的方法出现，我们希望跟调用模板里的方法一样调用。在count.vue组件中引入mapMutations1import &#123;mapState,mapMutations&#125; from 'vuex'在&lt;script&gt;标签里添加methods属性，并加入mapMutations1methods:mapMutations(['add','reduce'])在template模板中直接使用add、reduce方法12&lt;button @click=\"add\"&gt;+&lt;/button&gt;&lt;button @click=\"reduce\"&gt;-&lt;/button&gt;第四节 getters计算过滤操作getters从表面是获得的意思，可在获取数据之前进行再编辑，对数据进行过滤和加工。可把它看作store.js的计算属性基本用法声明getters属性123const getters = &#123; count:state =&gt; state.count += 100;&#125;导出暴露getters属性123export default new Vuex.Store(&#123; state,mutations,getters&#125;)在vue组件中对computed进行配置因在vue 的构造器里只能有一个computed属性，如果写多个，只有最后一个computed属性可用，所以要对computed属性进行一个改造。改造时需要使用ES6中的展开运算符”…”123456computed:&#123; ...mapState([\"count\"]), count()&#123; return this.$store.getters.count; &#125; &#125;使用mapGetters简化模板写法(使用map的引用方法)12345678//引入mapGettersimport &#123;mapState,mapMutations,mapGetters&#125; from 'vuex'//在computed属性中加入mapGetterscomputed:&#123; ...mapState([\"count\"]), ...mapGetters([\"count\"])&#125;第五节 actions异步修改状态actions和Mutations功能基本一样，不同点是：actions是异步的改变state状态，而Mutations是同步改变状态actions可以调用Mutations里的方法在store.js中声明actionscontext：上下文对象，这里你可以理解称store本身{commit}：直接把commit对象传递过来，可以让方法体逻辑和代码更清晰明了12345678const actions = &#123; addAction(context)&#123; context.commit('add',10) &#125;, reduceAction(&#123;commit&#125;)&#123; commit('reduce') &#125;&#125;在组件文件的模板使用引入mapActions1import &#123;mapState,mapMutations,mapGetters,mapActions&#125; from 'vuex'修改methods方法需要使用ES6扩展运算符1234methods:&#123; ...mapMutations(['add','reduce']), ...mapActions(['addAction','reduceAction'])&#125;异步检查在addAction里增加一个计时器（setTimeOut）进行延迟执行。123456789const actions = &#123; addAction(context)&#123; setTimeout(()=&gt;&#123;context.commit('add',10)&#125;,3000); console.log('异步检验我先与add执行') &#125;, reduceAction(&#123;commit&#125;)&#123; commit('reduce') &#125;&#125;第六节 模块组状态管理器的模块组操作：随着项目的复杂性增加，我们共享的状态越来越多，这时候我们就需要把我们状态的各种操作进行一个分组，分组后再进行按组编写声明模块组1234const moduleA = &#123;state,mutations,getters,actions&#125;export default new Vuex.Store(&#123; modules:&#123;a:moduleA&#125;&#125;)在组件中使用12345computed:&#123; count()&#123; return this.$store.state.a.count &#125;&#125;​"},{"title":"wechat","date":"2018-05-11T08:14:19.591Z","updated":"2018-05-11T08:14:19.591Z","comments":true,"path":"tech/wechat/relative.html","permalink":"http://www.JiShuXuePai.com/tech/wechat/relative.html","excerpt":"","text":""},{"title":"","date":"2018-05-11T08:14:19.591Z","updated":"2018-05-11T08:14:19.591Z","comments":true,"path":"tech/wechat/notes.html","permalink":"http://www.JiShuXuePai.com/tech/wechat/notes.html","excerpt":"","text":"第一章 微信小程序开发概述第一节 小程序介绍什么是微信小程序？2015年年底张小龙在一次大会上提出来的，最初叫微信号，现在叫微信小程序；因苹果不允许出现‘应用’二字，后改称小程序小程序可以做什么？可以做99%的互联网产品，比如淘宝、美团、滴滴等小程序为什么会火？生态系统：微信的用户量大，每天差不多有7亿用户优点：”无需下载，扫码即用，用完即走”小巧：小程序项目的大小不能超过2M对比：微信小程序有项目大小的限制，而APP则没有这种大小的限制；另外就是小程序不同于APP软件它是运行在微信上的；除此之外，因为他是运行在微信上的，所以它可以调用微信的API接口，比如：它可以获取用户信息。小程序的发展前景？微信互联网：搜索引擎、用户关系、微信支付、传播渠道、订阅号、服务号除了能开发最初的的互联网产品外，目前又开发出直播、游戏等功能；对初创企业是很好的切入点，成本低，未来拭目以待第二节 开发环境搭建搭建开发环境下载安装运行创建小程序开发项目扫码进入AppID项目名称quick start选项项目目录介绍开发界面介绍菜单栏编辑调试项目前后台开发助手小程序开发文档第三节 项目结构分析app文件app.js (必须)全局脚本，有一个App()方法，注册程序，并将对程序做初始化的操作方法首字母大写app.json (必须)全局配置，配置页面信息(页面个数、页面名称、页面路径、窗口表现、设置网络超时时间、设置多 tab)演示：配置一个新的demo页面，然后查看项目目录注意：json数据格式app.wxss全局样式，定义在 app.wxss 中的样式为全局样式，作用于每一个页面pages文件 (规定：为了方便开发者减少配置项，文件名必须与页面的文件夹名相同，便于框架自动查找，不需要做更多的配置文件名.wxml (必须)页面结构文件名.wxss页面样式，页面文件中定义的样式为局部样式，只作用在对应的页面，并会覆盖 app.wxss 中相同的选择器。文件名.js (必须)页面脚本，有一个Page()方法，注册页面，如果不注册页面的话，编译器会报警”XXXX出现脚本错误或者未正确调用 Page()”方法首字母大写文件名.json页面配置注意：如果不打算给页面写单独的配置文件，不要创建空白的.json文件，会导致页面路径查找失败。如果你不小心创建了，请务必保证文件里至少有个{},否则编译器会报错。注意：json数据格式演示：创建页面，查看全局配置文件app.jsonutils文件util.js主要用于存放全局的一些.js文件，公共用到的一些事件处理代码文件可以放到该文件夹下，用于全局调用第四节 创建小程序空项目从一无所有到创建完整项目结构，深刻体验和了解项目的组成与各个文件的作用不勾选quick start快速创建项目选项声明：空项目最初什么都没有，必然会报错创建全局app文件创建app.js全局脚本文件，注册程序创建app.json全局文件json数据必须要有一个对象{}，否则报错全局配置页面、window、tabbar创建页面pages文件夹创建页面文件方法一：全局配置生成新页面方法二：用户界面手动创建页面结构搭建页面数据逻辑页面窗口配置页面配置window窗口第二章 组件视图层框架为开发者提供了一系列基础组件，开发者可以通过组合这些基础组件进行快速开发。什么是组件组件类似HTML标签视图层的基本组成单元组件自带一些功能与微信风格的样式一个组件通常包括开始标签和结束标签，属性用来修饰这个组件，内容在两个标签之内注意：所有组件与属性都是小写，以连字符-连接基础常用组件视图容器组件viewswiper (可选)covor-view (可选)movable-view (可选)基础内容组件texticon (可选)progress (可选)表单组件inputbuttoncheckbox (可选)form (可选)label (可选)radio (可选)textarea (可选)switch (可选)slide (可选)picker (可选)picker-view (可选)导航navigator (可选)多媒体组件imageaudio (可选)video (可选)地图map (可选)选择器classidelementelement, element::after::before样式选择器样式 (通过选择器属性)内联样式 (通过style属性)使用规则：静态的样式统一写到 class 中。style 接收动态的样式，在运行时会进行解析，请尽量避免将静态的样式写进 style 中，以免影响渲染速度尺寸单位在写 CSS 样式时，开发者需要考虑到手机设备的屏幕会有不同的宽度和设备像素比，采用一些技巧来换算一些像素单位，新增了尺寸单位rpx；WXSS 在底层支持新的尺寸单位 rpx ，开发者可以免去换算的烦恼，只要交给小程序底层来换算即可，由于换算采用的浮点数运算，所以运算结果会和预期结果有一点点偏差rpx（responsive pixel）: 可以根据屏幕宽度进行自适应比如：规定屏幕宽为750rpx。如在 iPhone6 上，屏幕宽度为375px，共有750个物理像素，则750rpx = 375px = 750物理像素，1rpx = 0.5px = 1物理像素建议：开发微信小程序时设计师用 iPhone6 作为视觉稿的标准注意：在较小的屏幕上不可避免的会有一些毛刺，请在开发时尽量避免这种情况第三章 脚本逻辑层第一节 逻辑层结构Page()作用：使用该函数注册来一个新页面功能：接受一个 object 参数，指定页面的初始数据、生命周期函数、事件处理函数等注意：object 内容在页面加载时会进行一次深拷贝，需考虑数据大小对页面加载的开销配置项data—页面的初始数据function—页面相关事件处理函数生命周期函数—(备注：后续单独讲解)第二节 数据渲染数据绑定使用 Mustache 语法（双大括号）将变量包起来组件内容：&lt;text&gt;&lt;/text&gt;可以渲染的数据类型StringNumberBooleanArrayObject简单逻辑运算1&lt;view&gt;&#123;&#123;1&gt;2?2:1&#125;&#125;&lt;/view&gt;简单算术运算1&lt;view&gt; &#123;&#123;1 + 1&#125;&#125; + &#123;&#123;2&#125;&#125; + 2 &lt;/view&gt;字符串拼接1&lt;view&gt;&#123;&#123;\"hello\" + name&#125;&#125;&lt;/view&gt;组件属性：&lt;image src=&quot;&quot;&gt;&lt;/image&gt;关键字：&lt;checkbox checked=&quot;false&quot;&gt; &lt;/checkbox&gt;注意：不论是组件内容、组件属性还是关键字，均需要在双引号之内友情提示：不要直接写 checked=”false”，其计算结果是一个字符串，转成 boolean 类型后代表真值。列表渲染wx:for=&quot;&quot;数组下标变量名默认为 index，数组当前项的变量名默认为 item使用 wx:for-item 可以指定数组当前元素的变量名使用 wx:for-index 可以指定数组当前下标的变量名当 wx:for 的值为字符串时，会将字符串解析成字符串数组 &lt;view wx:for=&quot;hello Mini Program&quot;&gt;&lt;/view&gt;1234567891011&lt;view wx:for=\"&#123;&#123;array&#125;&#125;\"&gt; &#123;&#123;index&#125;&#125;: &#123;&#123;item.message&#125;&#125;&lt;/view&gt;Page(&#123; data: &#123; array: [ &#123; message: 'foo'&#125;, &#123; message: 'bar'&#125; ] &#125;&#125;)block wx:for可以将 wx:for 用在&lt;block/&gt;标签上，以渲染一个包含多节点的结构块block 只作为列表渲染用，自身不显示在页面中，不起布局作用注意： &lt;block/&gt; 并不是一个组件，它仅仅是一个包装元素，不会在页面中做任何渲染，只接受控制属性。wx:key如果列表中项目的位置会动态改变或者有新的项目添加到列表中时，希望列表中的项目保持自己的特征和状态(如 &lt;input/&gt; 中的输入内容，&lt;switch/&gt; 的选中状态)，需要使用 wx:key 来指定列表中项目的唯一标识符。如不提供 wx:key，会报一个 warning， 如果明确知道该列表是静态，或者不必关注其顺序，可以选择忽略。条件渲染&lt;viewwx:if=&quot;&quot;&gt;1&lt;/view&gt;&lt;view wx:elif=&quot;bool1&quot;&gt;2&lt;/view&gt;&lt;view wx:if&gt;3&lt;/view&gt;block wx:if1234&lt;block wx:if=&quot;&#123;&#123;true&#125;&#125;&quot;&gt; &lt;view&gt; view1 &lt;/view&gt; &lt;view&gt; view2 &lt;/view&gt;&lt;/block&gt;wx:if 与 hidden的区别wx:if 是惰性的，如果在初始渲染条件为 false，框架什么也不做，在条件第一次变成真的时候才开始局部渲染相比之下，hidden 就简单的多，组件始终会被渲染，只是简单的控制显示与隐藏。hidden只对非block组件生效，属性值为true或false一般来说，wx:if 有更高的切换消耗而 hidden 有更高的初始渲染消耗。因此，如果需要频繁切换的情景下，用 hidden 更好，如果在运行时条件不大可能改变则 wx:if 较好。第三节 事件处理函数事件绑定bind绑定，bind事件绑定不会阻止冒泡事件向上冒泡catch绑定，catch事件绑定可以阻止冒泡事件向上冒泡事件分类冒泡事件，当一个组件上的事件被触发后，该事件会向父节点传递非冒泡事件，当一个组件上的事件被触发后，该事件不会向父节点传递冒泡事件捕获阶段冒泡阶段事件对象event解释：当组件触发事件时，逻辑层绑定该事件的处理函数会收到一个事件对象点击事件对象相关属性type—事件类型timeStamp—事件生成时的时间戳，页面打开到触发事件所经过的毫秒数。target—触发事件的组件的一些属性值集合，触发事件的源组件，即事件源currentTarget—当前组件的一些属性值集合，事件绑定的当前组件，含冒泡阶段touch触摸事件相关属性touchstart—手指触摸动作开始touchmove—手指触摸后移动touchend—手指触摸动作结束longtap—手指触摸后，超过350ms再离开(推荐使用longpress事件代替)longpress—手指触摸后，超过350ms再离开，如果指定了事件回调函数并触发了这个事件，tap事件将不被触发特殊事件处理函数onPullDownRefresh: 下拉刷新onReachBottom: 上拉触底onPageScroll: 页面滚动onShareAppMessage: 用户转发第四章 生命周期函数小程序由两大线程组成：负责界面的线程（view thread）和服务线程（appservice thread），各司其职又互相配合界面线程初始化状态初始化界面线程所需要的工作，主要包括工作机制；等初始化完毕就向 “服务线程”发送初始化完毕信号，然后进入等待传回初始化数据状态。首次渲染状态收到“服务线程”发来的初始化数据后（就是 json和js中的data数据），就开始渲染小程序界面，渲染完毕后，发送“首次渲染完毕信号”给服务线程，并将页面展示给用户持续渲染状态此时界面线程继续一直等待“服务线程”通过this.setdata（）函数发送来的界面数据，只要收到就重新局部渲染，也因此只要更新数据并发送信号，界面就自动更新结束状态服务线程初始化状态此阶段就是启动服务线程所需的基本功能，比如信号发送模块。系统的初始化工作完毕，就调用自定义的onload和onshow，然后等待界面线程的“界面线程初始化完成”信号；onload是只会首次渲染的时候执行一次，onshow是每次界面切换都会执行等待激活状态接收到“界面线程初始化完成”信号后，将初始化数据发送给“界面线程”，等待界面线程完成初次渲染激活状态收到界面线程发送来的“首次渲染完成”信号后，就进入激活状态既程序的正常运行状态，并调用自定义的onReady()函数；此状态下就可以通过 this.setData 函数发送界面数据给界面线程进行局部渲染，更新页面后台运行状态如果界面进入后台，服务线程就进入后台运行状态结束状态第一节 小程序运行机制小程序启动方式冷启动解释：冷启动指的是用户首次打开或小程序被微信主动销毁后再次打开的情况，此时小程序需要重新加载启动热启动解释：用户打开过某小程序，然后在一定时间内再次打开该小程序，此时无需重新启动，只需将后台态的小程序切换到前台，这个过程就是热启动更新机制小程序冷启动时如果发现有新版本，将会异步下载新版本的代码包，并同时用客户端本地的包进行启动，即新版本的小程序需要等下一次冷启动才会应用上。运行机制小程序没有重启的概念当小程序进入后台，客户端会维持一段时间的运行状态，超过一定时间后（目前是5分钟）会被微信主动销毁置顶的小程序不会被微信主动销毁当收到系统内存告警也会进行小程序的销毁第二节 App的生命周期App() 函数用来注册一个小程序。接受一个 object 参数，其指定小程序的生命周期函数等；以下讲解小程序的生命周期函数及其调用顺序onLaunch—-监听小程序初始化解释：当小程序初始化完成时，会触发 onLaunch（全局只触发一次）onShow—监听小程序显示解释：当小程序启动，或从后台进入前台显示，会触发 onShowonHide—监听小程序隐藏解释：当小程序从前台进入后台，会触发 onHideonError—错误监听函数当小程序发生脚本错误，或者 api 调用失败时，会触发 onError 并带上错误信息注释：当小程序启动时(前台工作模式)，会触发前两个函数当小程序进入后台工作模式时，会触发onHide函数当再次切换到前台工作模式时，会再次触发onShow函数第三节 Page的生命周期Page() 函数用来注册一个页面。接受一个 object 参数，其指定页面的初始数据、生命周期函数、事件处理函数等；以下讲解页面的生命周期函数及其调用顺序onLoad—监听页面加载onShow—监听页面显示解释：切换至前台模式时触发onReady—监听页面初次渲染完成onHide—监听页面隐藏解释：切换至后台模式时触发onUnload—监听页面卸载使用redirectTo方法实现页面跳转时触发第四节 App生命周期与Page生命周期的结合以下是生命周期函数的执行先后顺序程序启动时App生命周期函数—onLaunchApp生命周期函数—onShowPage生命周期函数—onLoadPage生命周期函数—onShowPage生命周期函数—onReady点击“后台”时Page生命周期函数—onHideApp生命周期函数—onHide点击“前台”时Page生命周期函数—onShowApp生命周期函数—onShownavigateTo方法页面跳转时redirectTo方法页面跳转时第五章 模块化第一节 WXML模板WXML提供模板（template），可以在模板中定义代码片段，然后在不同的地方调用定义模板位置：在&lt;template/&gt;内定义代码片段属性：使用 name 属性，作为模板的名字123456&lt;template name=&quot;myTemplate&quot;&gt; &lt;view&gt; &lt;text&gt; 定义模板 &lt;/text&gt; &lt;text&gt; define template &lt;/text&gt; &lt;/view&gt;&lt;/template&gt;引用模板说明：WXML 提供两种文件引用方式import和includeimport作用：import可以在该文件中使用目标文件定义的template12345678&lt;!-- item.wxml --&gt;&lt;template name=&quot;item&quot;&gt; &lt;text&gt;&#123;&#123;text&#125;&#125;&lt;/text&gt;&lt;/template&gt;&lt;!-- index.wxml --&gt;&lt;import src=&quot;item.wxml&quot;/&gt;&lt;template is=&quot;item&quot; data=&quot;&#123;&#123;text: &apos;forbar&apos;&#125;&#125;&quot;/&gt;作用域说明：只会 import 目标文件中定义的 template，而不会 import 目标文件 import 的 template模板解释：C import B，B import A，在C中可以使用B定义的template，在B中可以使用A定义的template，但是C不能使用A定义的template。123456789101112131415&lt;!-- A.wxml --&gt;&lt;template name=&quot;A&quot;&gt; &lt;text&gt; A template &lt;/text&gt;&lt;/template&gt;&lt;!-- B.wxml --&gt;&lt;import src=&quot;a.wxml&quot;/&gt;&lt;template name=&quot;B&quot;&gt; &lt;text&gt; B template &lt;/text&gt;&lt;/template&gt;&lt;!-- C.wxml --&gt;&lt;import src=&quot;b.wxml&quot;/&gt; &lt;template is=&quot;A&quot;/&gt; &lt;!-- Error! Can not use tempalte when not import A. --&gt;&lt;template is=&quot;B&quot;/&gt;include解释：include 可以将目标文件除了 &lt;template/&gt; &lt;wxs/&gt; 外的整个代码引入，相当于是拷贝到 include 位置12345678910&lt;!-- index.wxml --&gt;&lt;include src=&quot;header.wxml&quot;/&gt;&lt;view&gt; body &lt;/view&gt;&lt;include src=&quot;footer.wxml&quot;/&gt;&lt;!-- header.wxml --&gt;&lt;view&gt; header &lt;/view&gt;&lt;!-- footer.wxml --&gt;&lt;view&gt; footer &lt;/view&gt;使用模板位置：所需的页面.wxml文件中属性：使用 is 属性，声明需要的使用的模板，然后将模板所需要的 data 传入剩余运算符： { {...arr}} ，使用剩余运算符后，在模板文件中使用数据时，可以直接写每一项的key值1&lt;template is=&quot;msgItem&quot; data=&quot;&#123;&#123;...item&#125;&#125;&quot;/&gt;扩展is 属性可以使用 Mustache 语法，来动态决定具体需要渲染哪个模板模板作用域：模板拥有自己的作用域，只能使用 data 传入的数据以及模版定义文件中定义的 &lt;wxs /&gt; 模块12345678910&lt;template name=&quot;odd&quot;&gt; &lt;view&gt; odd &lt;/view&gt;&lt;/template&gt;&lt;template name=&quot;even&quot;&gt; &lt;view&gt; even &lt;/view&gt;&lt;/template&gt;&lt;block wx:for=&quot;&#123;&#123;[1, 2, 3, 4, 5]&#125;&#125;&quot;&gt; &lt;template is=&quot;&#123;&#123;item % 2 == 0 ? &apos;even&apos; : &apos;odd&apos;&#125;&#125;&quot;/&gt;&lt;/block&gt;第二节 WXSS 模板定义wxss模板1234/** common.wxss **/.small-p &#123; padding:5px;&#125;引用wxss模板使用@import语句可以导入外联样式表，@import后跟需要导入的外联样式表的相对路径，用;表示语句结束。12345/** app.wxss **/@import &quot;common.wxss&quot;;.middle-p &#123; padding:15px;&#125;第三节 WXS模板(数据或逻辑代码，脚本)介绍WXS 代码可以编写在 wxml 文件中的 &lt;wxs&gt; 标签内，或以 .wxs 为后缀名的文件内，在该文件中直接编写 WXS 脚本解释：每一个 .wxs 文件和 &lt;wxs&gt; 标签都是一个单独的模块，该 .wxs 文件可以被其他的 .wxs 文件 或 WXML 中的 &lt;wxs&gt; 标签引用说明：每个模块都有自己独立的作用域，即在一个模块里面定义的变量与函数，默认为私有的，对其他模块不可见创建模块创建：创建.wxs，编写WXS脚本module对象：每个wxs模块均有一个内置的module对象export属性： 通过该属性，可以对外共享本模块的私有变量与函数暴露：通过 module.exports 将该模块内部需要暴露的私有变量与函数暴露出去12345678910// /pages/comm.wxsvar foo = &quot;&apos;hello world&apos; from comm.wxs&quot;;var bar = function(d) &#123; return d;&#125;module.exports = &#123; foo: foo, bar: bar&#125;;12345&lt;!-- page/index/index.wxml --&gt;&lt;wxs src=&quot;./../tools.wxs&quot; module=&quot;tools&quot; /&gt;&lt;view&gt; &#123;&#123;tools.msg&#125;&#125; &lt;/view&gt;&lt;view&gt; &#123;&#123;tools.bar(tools.FOO)&#125;&#125; &lt;/view&gt;引用模板—require函数在.wxs模块中引用其他 wxs 文件模块，可以使用 require 函数。注意点只能引用 .wxs 文件模块，且必须使用相对路径wxs 模块均为单例，wxs 模块在第一次被引用时，会自动初始化为单例对象。多个页面，多个地方，多次引用，使用的都是同一个 wxs模块对象如果一个 wxs 模块在定义之后，一直没有被引用，则该模块不会被解析与运行提示： require 暂时不支持绝对路径1234567891011// /pages/tools.wxsvar foo = &quot;&apos;hello world&apos; from tools.wxs&quot;;var bar = function (d) &#123; return d;&#125;module.exports = &#123; FOO: foo, bar: bar,&#125;;module.exports.msg = &quot;some msg&quot;;1234567// /pages/logic.wxsvar tools = require(&quot;./tools.wxs&quot;);console.log(tools.FOO);console.log(tools.bar(&quot;logic.wxs&quot;));console.log(tools.msg);123&lt;!-- /page/index/index.wxml --&gt;&lt;wxs src=&quot;./../logic.wxs&quot; module=&quot;logic&quot; /&gt;第三节 自定义组件组件模板和样式说明：类似于页面，自定义组件拥有自己的 wxml 模版和 wxss 样式。组件模板语法：组件模版的写法与页面模板相同使用：组件模版与组件数据结合后生成的节点树，将被插入到组件的引用位置上组件wxml的slot说明：在组件的wxml模板中可以包含 slot 节点，用于承载组件引用时提供的子节点使用多个slot：默认情况下只能使用一个slot，需要使用多slot时，可以在组件js中声明启用。启用后，可以在这个组件的wxml中使用多个slot，以不同的 name 来区分123456789101112131415161718192021222324Component(&#123; options: &#123; multipleSlots: true // 在组件定义时的选项中启用多slot支持 &#125;, properties: &#123; /* ... */ &#125;, methods: &#123; /* ... */ &#125;&#125;)&lt;!-- 组件模板 --&gt;&lt;view class=&quot;wrapper&quot;&gt; &lt;slot name=&quot;before&quot;&gt;&lt;/slot&gt; &lt;view&gt;这里是组件的内部细节&lt;/view&gt; &lt;slot name=&quot;after&quot;&gt;&lt;/slot&gt;&lt;/view&gt;&lt;!-- 引用组件的页面模版 --&gt;&lt;view&gt; &lt;component-tag-name&gt; &lt;!-- 这部分内容将被放置在组件 &lt;slot name=&quot;before&quot;&gt; 的位置上 --&gt; &lt;view slot=&quot;before&quot;&gt;这里是插入到组件slot name=&quot;before&quot;中的内容&lt;/view&gt; &lt;!-- 这部分内容将被放置在组件 &lt;slot name=&quot;after&quot;&gt; 的位置上 --&gt; &lt;view slot=&quot;after&quot;&gt;这里是插入到组件slot name=&quot;after&quot;中的内容&lt;/view&gt; &lt;/component-tag-name&gt;&lt;/view&gt;组件样式说明：组件对应 wxss 文件的样式，只对组件wxml内的节点生效建议：一律使用单个class选择器来设置样式Component构造器组件事件behaviors组件间的关系第六章 路由跳转与页面间的通信第一节 路由跳转在小程序中所有页面的路由全部由框架进行管理【参考】官方文档—框架—逻辑层—路由；详细讲解了页面栈、路由的触发方式以及页面生命周期函数、Tab 切换对应的生命周期等五种路由跳转方式navigateTo, redirectTo 只能打开非 tabBar 页面。switchTab 只能打开 tabBar 页面,，但不能传参。reLaunch 可以打开任意页面。页面底部的 tabBar 由页面决定，即只要是定义为 tabBar 的页面，底部都有 tabBar。调用页面路由带的参数可以在目标页面的onLoad中获取第二节 页面通信在微信小程序的开发过程之中，需要从A页面跳转到B页面，并且把A页面的数据传递到B页面使用跨页传值方法一：全局变量定义位置：在小程序定义全局变量文件—app.js中定义，例如用户登录之后，需要在所有页面中使用用户登录状态等使用方法：getApp()方法，任意页面可以直接加载全局变量，可以直接获取到App({})这个全局实例对象123//page/index/indexvar app=getApp();//取得全局App(&#123;..&#125;)实例var userInfo=app.globalData.userInfo;//取得全局变量需要的值方法二：navigator标签多个参数用&amp;连接字符串与变量的拼接序列化与反序列化1234567891011121314151617181920212223242526// index.wxml，将参数传递到detail页面&lt;navigator url=&quot;../detail/detail?id=2&amp;name=lily&amp;age=20&quot;&gt;&lt;/navigator&gt;// detail.js，detail页面的onLoad方法接收传入的参数onLoad: function(options)&#123; this.setData(&#123; id:options.id, name:options.name, age:options.age &#125;)&#125;// index.js，复杂数据类型，要先用 JSON.stringify() 转成字符串传递let arr = [ &#123;name:&apos;lily&apos;, age:18&#125;, &#123;name:&apos;john&apos;, age:20&#125;] ;wx.navigateTo(&#123; url:&quot;../detail/detail?message=&quot;+JSON.stringify(detail), success:function(res)&#123;&#125;&#125;)//序列化---将JSON对象转化为JSON字符 var last=JSON.stringify(obj);//反序列化---由JSON字符串转换为JSON对象 let obj = JSON.parse(data);方法三：本地缓存（wx.setStorage/wx.getStorage）页内传值设置id的方法标识跳转后传递后的参数id=&quot;&quot;设置 data-xxx 的方法来标识要传递的值data-index=&quot;&quot;form表单和input输入框123456789101112131415161718//.wxml&lt;form bindsubmit=&quot;formSubmit&quot;&gt; &lt;input name=&quot;name&quot; placeholder=&quot;姓名&quot; /&gt; &lt;input name=&quot;sex&quot; placeholder=&quot;性别&quot; /&gt; &lt;input name=&quot;age&quot; placeholder=&quot;年龄&quot; type=&quot;number&quot; /&gt;&lt;/form&gt;//.jsformSubmit:function(ev)&#123; var name = ev.detail.value.name; var sex = ev.detail.value.sex; var age = ev.detail.value.age;&#125;&lt;input bindconfirm=&quot;confirm&quot;/&gt;confirm:function(ev)&#123; var val = ev.detail.value&#125;第七章 常用API第一节 网络请求wx.request123456789wx.request(&#123; url: '', success:(res)=&gt;&#123; console.log(res); this.setData(&#123; &#125;) &#125;&#125;)第二节 数据缓存设置wx.setStorage（wx.setStorageSync）将数据异步(同步)存储在本地缓存中指定的 key 中，会覆盖掉原来该 key 对应的内容1234wx.setStorage(&#123; key:\"key\", data:\"value\"&#125;)获取wx.getStorage（wx.getStorageSync）从本地缓存中异步(同步)获取指定 key 对应的内容123456wx.getStorage(&#123; key: 'key', success: function(res) &#123; console.log(res.data) &#125; &#125;)移除wx.removeStorage（removeStorageSync）从本地缓存中异步(同步)移除指定 key123456wx.removeStorage(&#123; key: 'key', success: function(res) &#123; console.log(res.data) &#125; &#125;)清除wx.clearStorage() （wx.clearStorageSync）异步(同步)清理本地数据缓存。1wx.clearStorage()说明同一个微信用户，同一个小程序 storage 上限为 10MBlocalStorage 以用户维度隔离，同一台设备上，A 用户无法读取到 B 用户的数据注意： localStorage 是持久存储的，但是我们不建议将关键信息全部存在 localStorage，以防用户换设备的情况第三节 地理位置获取123456789101112wx.getLocation(&#123; type: 'gcj02', //返回可以用于wx.openLocation的经纬度 success: function (res) &#123; var latitude = res.latitude var longitude = res.longitude wx.openLocation(&#123; latitude: latitude, longitude: longitude, scale: 28 &#125;) &#125; &#125;)"},{"title":"","date":"2018-05-11T08:14:14.491Z","updated":"2018-05-11T08:14:14.491Z","comments":true,"path":"edu/js/jquery-1.10.2.min.js","permalink":"http://www.JiShuXuePai.com/edu/js/jquery-1.10.2.min.js","excerpt":"","text":"/*! jQuery v1.10.2 | (c) 2005, 2013 jQuery Foundation, Inc. | jquery.org/license //@ sourceMappingURL=jquery-1.10.2.min.map */ (function(e,t){var n,r,i=typeof t,o=e.location,a=e.document,s=a.documentElement,l=e.jQuery,u=e.$,c={},p=[],f=\"1.10.2\",d=p.concat,h=p.push,g=p.slice,m=p.indexOf,y=c.toString,v=c.hasOwnProperty,b=f.trim,x=function(e,t){return new x.fn.init(e,t,r)},w=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,T=/\\S+/g,C=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,N=/^(?:\\s*()[^>]*|#([\\w-]*))$/,k=/^(?:|)$/,E=/^[\\],:{}\\s]*$/,S=/(?:^|:|,)(?:\\s*\\[)+/g,A=/\\\\(?:[\"\\\\\\/bfnrt]|u[\\da-fA-F]{4})/g,j=/\"[^\"\\\\\\r\\n]*\"|true|false|null|-?(?:\\d+\\.|)\\d+(?:[eE][+-]?\\d+|)/g,D=/^-ms-/,L=/-([\\da-z])/gi,H=function(e,t){return t.toUpperCase()},q=function(e){(a.addEventListener||\"load\"===e.type||\"complete\"===a.readyState)&&(_(),x.ready())},_=function(){a.addEventListener?(a.removeEventListener(\"DOMContentLoaded\",q,!1),e.removeEventListener(\"load\",q,!1)):(a.detachEvent(\"onreadystatechange\",q),e.detachEvent(\"onload\",q))};x.fn=x.prototype={jquery:f,constructor:x,init:function(e,n,r){var i,o;if(!e)return this;if(\"string\"==typeof e){if(i=\"\"===e.charAt(e.length-1)&&e.length>=3?[null,e,null]:N.exec(e),!i||!i[1]&&n)return!n||n.jquery?(n||r).find(e):this.constructor(n).find(e);if(i[1]){if(n=n instanceof x?n[0]:n,x.merge(this,x.parseHTML(i[1],n&&n.nodeType?n.ownerDocument||n:a,!0)),k.test(i[1])&&x.isPlainObject(n))for(i in n)x.isFunction(this[i])?this[i](n[i]):this.attr(i,n[i]);return this}if(o=a.getElementById(i[2]),o&&o.parentNode){if(o.id!==i[2])return r.find(e);this.length=1,this[0]=o}return this.context=a,this.selector=e,this}return e.nodeType?(this.context=this[0]=e,this.length=1,this):x.isFunction(e)?r.ready(e):(e.selector!==t&&(this.selector=e.selector,this.context=e.context),x.makeArray(e,this))},selector:\"\",length:0,toArray:function(){return g.call(this)},get:function(e){return null==e?this.toArray():0>e?this[this.length+e]:this[e]},pushStack:function(e){var t=x.merge(this.constructor(),e);return t.prevObject=this,t.context=this.context,t},each:function(e,t){return x.each(this,e,t)},ready:function(e){return x.ready.promise().done(e),this},slice:function(){return this.pushStack(g.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,n=+e+(0>e?t:0);return this.pushStack(n>=0&&t>n?[this[n]]:[])},map:function(e){return this.pushStack(x.map(this,function(t,n){return e.call(t,n,t)}))},end:function(){return this.prevObject||this.constructor(null)},push:h,sort:[].sort,splice:[].splice},x.fn.init.prototype=x.fn,x.extend=x.fn.extend=function(){var e,n,r,i,o,a,s=arguments[0]||{},l=1,u=arguments.length,c=!1;for(\"boolean\"==typeof s&&(c=s,s=arguments[1]||{},l=2),\"object\"==typeof s||x.isFunction(s)||(s={}),u===l&&(s=this,--l);u>l;l++)if(null!=(o=arguments[l]))for(i in o)e=s[i],r=o[i],s!==r&&(c&&r&&(x.isPlainObject(r)||(n=x.isArray(r)))?(n?(n=!1,a=e&&x.isArray(e)?e:[]):a=e&&x.isPlainObject(e)?e:{},s[i]=x.extend(c,a,r)):r!==t&&(s[i]=r));return s},x.extend({expando:\"jQuery\"+(f+Math.random()).replace(/\\D/g,\"\"),noConflict:function(t){return e.$===x&&(e.$=u),t&&e.jQuery===x&&(e.jQuery=l),x},isReady:!1,readyWait:1,holdReady:function(e){e?x.readyWait++:x.ready(!0)},ready:function(e){if(e===!0?!--x.readyWait:!x.isReady){if(!a.body)return setTimeout(x.ready);x.isReady=!0,e!==!0&&--x.readyWait>0||(n.resolveWith(a,[x]),x.fn.trigger&&x(a).trigger(\"ready\").off(\"ready\"))}},isFunction:function(e){return\"function\"===x.type(e)},isArray:Array.isArray||function(e){return\"array\"===x.type(e)},isWindow:function(e){return null!=e&&e==e.window},isNumeric:function(e){return!isNaN(parseFloat(e))&&isFinite(e)},type:function(e){return null==e?e+\"\":\"object\"==typeof e||\"function\"==typeof e?c[y.call(e)]||\"object\":typeof e},isPlainObject:function(e){var n;if(!e||\"object\"!==x.type(e)||e.nodeType||x.isWindow(e))return!1;try{if(e.constructor&&!v.call(e,\"constructor\")&&!v.call(e.constructor.prototype,\"isPrototypeOf\"))return!1}catch(r){return!1}if(x.support.ownLast)for(n in e)return v.call(e,n);for(n in e);return n===t||v.call(e,n)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},error:function(e){throw Error(e)},parseHTML:function(e,t,n){if(!e||\"string\"!=typeof e)return null;\"boolean\"==typeof t&&(n=t,t=!1),t=t||a;var r=k.exec(e),i=!n&&[];return r?[t.createElement(r[1])]:(r=x.buildFragment([e],t,i),i&&x(i).remove(),x.merge([],r.childNodes))},parseJSON:function(n){return e.JSON&&e.JSON.parse?e.JSON.parse(n):null===n?n:\"string\"==typeof n&&(n=x.trim(n),n&&E.test(n.replace(A,\"@\").replace(j,\"]\").replace(S,\"\")))?Function(\"return \"+n)():(x.error(\"Invalid JSON: \"+n),t)},parseXML:function(n){var r,i;if(!n||\"string\"!=typeof n)return null;try{e.DOMParser?(i=new DOMParser,r=i.parseFromString(n,\"text/xml\")):(r=new ActiveXObject(\"Microsoft.XMLDOM\"),r.async=\"false\",r.loadXML(n))}catch(o){r=t}return r&&r.documentElement&&!r.getElementsByTagName(\"parsererror\").length||x.error(\"Invalid XML: \"+n),r},noop:function(){},globalEval:function(t){t&&x.trim(t)&&(e.execScript||function(t){e.eval.call(e,t)})(t)},camelCase:function(e){return e.replace(D,\"ms-\").replace(L,H)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,t,n){var r,i=0,o=e.length,a=M(e);if(n){if(a){for(;o>i;i++)if(r=t.apply(e[i],n),r===!1)break}else for(i in e)if(r=t.apply(e[i],n),r===!1)break}else if(a){for(;o>i;i++)if(r=t.call(e[i],i,e[i]),r===!1)break}else for(i in e)if(r=t.call(e[i],i,e[i]),r===!1)break;return e},trim:b&&!b.call(\"\\ufeff\\u00a0\")?function(e){return null==e?\"\":b.call(e)}:function(e){return null==e?\"\":(e+\"\").replace(C,\"\")},makeArray:function(e,t){var n=t||[];return null!=e&&(M(Object(e))?x.merge(n,\"string\"==typeof e?[e]:e):h.call(n,e)),n},inArray:function(e,t,n){var r;if(t){if(m)return m.call(t,e,n);for(r=t.length,n=n?0>n?Math.max(0,r+n):n:0;r>n;n++)if(n in t&&t[n]===e)return n}return-1},merge:function(e,n){var r=n.length,i=e.length,o=0;if(\"number\"==typeof r)for(;r>o;o++)e[i++]=n[o];else while(n[o]!==t)e[i++]=n[o++];return e.length=i,e},grep:function(e,t,n){var r,i=[],o=0,a=e.length;for(n=!!n;a>o;o++)r=!!t(e[o],o),n!==r&&i.push(e[o]);return i},map:function(e,t,n){var r,i=0,o=e.length,a=M(e),s=[];if(a)for(;o>i;i++)r=t(e[i],i,n),null!=r&&(s[s.length]=r);else for(i in e)r=t(e[i],i,n),null!=r&&(s[s.length]=r);return d.apply([],s)},guid:1,proxy:function(e,n){var r,i,o;return\"string\"==typeof n&&(o=e[n],n=e,e=o),x.isFunction(e)?(r=g.call(arguments,2),i=function(){return e.apply(n||this,r.concat(g.call(arguments)))},i.guid=e.guid=e.guid||x.guid++,i):t},access:function(e,n,r,i,o,a,s){var l=0,u=e.length,c=null==r;if(\"object\"===x.type(r)){o=!0;for(l in r)x.access(e,n,l,r[l],!0,a,s)}else if(i!==t&&(o=!0,x.isFunction(i)||(s=!0),c&&(s?(n.call(e,i),n=null):(c=n,n=function(e,t,n){return c.call(x(e),n)})),n))for(;u>l;l++)n(e[l],r,s?i:i.call(e[l],l,n(e[l],r)));return o?e:c?n.call(e):u?n(e[0],r):a},now:function(){return(new Date).getTime()},swap:function(e,t,n,r){var i,o,a={};for(o in t)a[o]=e.style[o],e.style[o]=t[o];i=n.apply(e,r||[]);for(o in t)e.style[o]=a[o];return i}}),x.ready.promise=function(t){if(!n)if(n=x.Deferred(),\"complete\"===a.readyState)setTimeout(x.ready);else if(a.addEventListener)a.addEventListener(\"DOMContentLoaded\",q,!1),e.addEventListener(\"load\",q,!1);else{a.attachEvent(\"onreadystatechange\",q),e.attachEvent(\"onload\",q);var r=!1;try{r=null==e.frameElement&&a.documentElement}catch(i){}r&&r.doScroll&&function o(){if(!x.isReady){try{r.doScroll(\"left\")}catch(e){return setTimeout(o,50)}_(),x.ready()}}()}return n.promise(t)},x.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"),function(e,t){c[\"[object \"+t+\"]\"]=t.toLowerCase()});function M(e){var t=e.length,n=x.type(e);return x.isWindow(e)?!1:1===e.nodeType&&t?!0:\"array\"===n||\"function\"!==n&&(0===t||\"number\"==typeof t&&t>0&&t-1 in e)}r=x(a),function(e,t){var n,r,i,o,a,s,l,u,c,p,f,d,h,g,m,y,v,b=\"sizzle\"+-new Date,w=e.document,T=0,C=0,N=st(),k=st(),E=st(),S=!1,A=function(e,t){return e===t?(S=!0,0):0},j=typeof t,D=1"},{"title":"","date":"2018-05-11T08:14:14.493Z","updated":"2018-05-11T08:14:14.493Z","comments":true,"path":"edu/js/jquery-3.1.0.min.js","permalink":"http://www.JiShuXuePai.com/edu/js/jquery-3.1.0.min.js","excerpt":"","text":"/*! jQuery v3.1.0 | (c) jQuery Foundation | jquery.org/license */ !function(a,b){\"use strict\";\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error(\"jQuery requires a window with a document\");return b(a)}:b(a)}(\"undefined\"!=typeof window?window:this,function(a,b){\"use strict\";var c=[],d=a.document,e=Object.getPrototypeOf,f=c.slice,g=c.concat,h=c.push,i=c.indexOf,j={},k=j.toString,l=j.hasOwnProperty,m=l.toString,n=m.call(Object),o={};function p(a,b){b=b||d;var c=b.createElement(\"script\");c.text=a,b.head.appendChild(c).parentNode.removeChild(c)}var q=\"3.1.0\",r=function(a,b){return new r.fn.init(a,b)},s=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,t=/^-ms-/,u=/-([a-z])/g,v=function(a,b){return b.toUpperCase()};r.fn=r.prototype={jquery:q,constructor:r,length:0,toArray:function(){return f.call(this)},get:function(a){return null!=a?a=0&&c0&&b-1 in a)}var x=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u=\"sizzle\"+1*new Date,v=a.document,w=0,x=0,y=ha(),z=ha(),A=ha(),B=function(a,b){return a===b&&(l=!0),0},C={}.hasOwnProperty,D=[],E=D.pop,F=D.push,G=D.push,H=D.slice,I=function(a,b){for(var c=0,d=a.length;c+~]|\"+K+\")\"+K+\"*\"),S=new RegExp(\"=\"+K+\"*([^\\\\]'\\\"]*?)\"+K+\"*\\\\]\",\"g\"),T=new RegExp(N),U=new RegExp(\"^\"+L+\"$\"),V={ID:new RegExp(\"^#(\"+L+\")\"),CLASS:new RegExp(\"^\\\\.(\"+L+\")\"),TAG:new RegExp(\"^(\"+L+\"|[*])\"),ATTR:new RegExp(\"^\"+M),PSEUDO:new RegExp(\"^\"+N),CHILD:new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+K+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+K+\"*(?:([+-]|)\"+K+\"*(\\\\d+)|))\"+K+\"*\\\\)|)\",\"i\"),bool:new RegExp(\"^(?:\"+J+\")$\",\"i\"),needsContext:new RegExp(\"^\"+K+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+K+\"*((?:-\\\\d)?\\\\d*)\"+K+\"*\\\\)|)(?=[^-]|$)\",\"i\")},W=/^(?:input|select|textarea|button)$/i,X=/^h\\d$/i,Y=/^[^{]+\\{\\s*\\[native \\w/,Z=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,$=/[+~]/,_=new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\"+K+\"?|(\"+K+\")|.)\",\"ig\"),aa=function(a,b,c){var d=\"0x\"+b-65536;return d!==d||c?b:d>10|55296,1023&d|56320)},ba=/([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\x80-\\uFFFF\\w-]/g,ca=function(a,b){return b?\"\\0\"===a?\"\\ufffd\":a.slice(0,-1)+\"\\\\\"+a.charCodeAt(a.length-1).toString(16)+\" \":\"\\\\\"+a},da=function(){m()},ea=ta(function(a){return a.disabled===!0},{dir:\"parentNode\",next:\"legend\"});try{G.apply(D=H.call(v.childNodes),v.childNodes),D[v.childNodes.length].nodeType}catch(fa){G={apply:D.length?function(a,b){F.apply(a,H.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function ga(a,b,d,e){var f,h,j,k,l,o,r,s=b&&b.ownerDocument,w=b?b.nodeType:9;if(d=d||[],\"string\"!=typeof a||!a||1!==w&&9!==w&&11!==w)return d;if(!e&&((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,p)){if(11!==w&&(l=Z.exec(a)))if(f=l[1]){if(9===w){if(!(j=b.getElementById(f)))return d;if(j.id===f)return d.push(j),d}else if(s&&(j=s.getElementById(f))&&t(b,j)&&j.id===f)return d.push(j),d}else{if(l[2])return G.apply(d,b.getElementsByTagName(a)),d;if((f=l[3])&&c.getElementsByClassName&&b.getElementsByClassName)return G.apply(d,b.getElementsByClassName(f)),d}if(c.qsa&&!A[a+\" \"]&&(!q||!q.test(a))){if(1!==w)s=b,r=a;else if(\"object\"!==b.nodeName.toLowerCase()){(k=b.getAttribute(\"id\"))?k=k.replace(ba,ca):b.setAttribute(\"id\",k=u),o=g(a),h=o.length;while(h--)o[h]=\"#\"+k+\" \"+sa(o[h]);r=o.join(\",\"),s=$.test(a)&&qa(b.parentNode)||b}if(r)try{return G.apply(d,s.querySelectorAll(r)),d}catch(x){}finally{k===u&&b.removeAttribute(\"id\")}}}return i(a.replace(P,\"$1\"),b,d,e)}function ha(){var a=[];function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}return b}function ia(a){return a[u]=!0,a}function ja(a){var b=n.createElement(\"fieldset\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function ka(a,b){var c=a.split(\"|\"),e=c.length;while(e--)d.attrHandle[c[e]]=b}function la(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&a.sourceIndex-b.sourceIndex;if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function ma(a){return function(b){var c=b.nodeName.toLowerCase();return\"input\"===c&&b.type===a}}function na(a){return function(b){var c=b.nodeName.toLowerCase();return(\"input\"===c||\"button\"===c)&&b.type===a}}function oa(a){return function(b){return\"label\"in b&&b.disabled===a||\"form\"in b&&b.disabled===a||\"form\"in b&&b.disabled===!1&&(b.isDisabled===a||b.isDisabled!==!a&&(\"label\"in b||!ea(b))!==a)}}function pa(a){return ia(function(b){return b=+b,ia(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function qa(a){return a&&\"undefined\"!=typeof a.getElementsByTagName&&a}c=ga.support={},f=ga.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return!!b&&\"HTML\"!==b.nodeName},m=ga.setDocument=function(a){var b,e,g=a?a.ownerDocument||a:v;return g!==n&&9===g.nodeType&&g.documentElement?(n=g,o=n.documentElement,p=!f(n),v!==n&&(e=n.defaultView)&&e.top!==e&&(e.addEventListener?e.addEventListener(\"unload\",da,!1):e.attachEvent&&e.attachEvent(\"onunload\",da)),c.attributes=ja(function(a){return a.className=\"i\",!a.getAttribute(\"className\")}),c.getElementsByTagName=ja(function(a){return a.appendChild(n.createComment(\"\")),!a.getElementsByTagName(\"*\").length}),c.getElementsByClassName=Y.test(n.getElementsByClassName),c.getById=ja(function(a){return o.appendChild(a).id=u,!n.getElementsByName||!n.getElementsByName(u).length}),c.getById?(d.find.ID=function(a,b){if(\"undefined\"!=typeof b.getElementById&&p){var c=b.getElementById(a);return c?[c]:[]}},d.filter.ID=function(a){var b=a.replace(_,aa);return function(a){return a.getAttribute(\"id\")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(_,aa);return function(a){var c=\"undefined\"!=typeof a.getAttributeNode&&a.getAttributeNode(\"id\");return c&&c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return\"undefined\"!=typeof b.getElementsByTagName?b.getElementsByTagName(a):c.qsa?b.querySelectorAll(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if(\"*\"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){if(\"undefined\"!=typeof b.getElementsByClassName&&p)return b.getElementsByClassName(a)},r=[],q=[],(c.qsa=Y.test(n.querySelectorAll))&&(ja(function(a){o.appendChild(a).innerHTML=\"\",a.querySelectorAll(\"[msallowcapture^='']\").length&&q.push(\"[*^$]=\"+K+\"*(?:''|\\\"\\\")\"),a.querySelectorAll(\"[selected]\").length||q.push(\"\\\\[\"+K+\"*(?:value|\"+J+\")\"),a.querySelectorAll(\"[id~=\"+u+\"-]\").length||q.push(\"~=\"),a.querySelectorAll(\":checked\").length||q.push(\":checked\"),a.querySelectorAll(\"a#\"+u+\"+*\").length||q.push(\".#.+[+~]\")}),ja(function(a){a.innerHTML=\"\";var b=n.createElement(\"input\");b.setAttribute(\"type\",\"hidden\"),a.appendChild(b).setAttribute(\"name\",\"D\"),a.querySelectorAll(\"[name=d]\").length&&q.push(\"name\"+K+\"*[*^$|!~]?=\"),2!==a.querySelectorAll(\":enabled\").length&&q.push(\":enabled\",\":disabled\"),o.appendChild(a).disabled=!0,2!==a.querySelectorAll(\":disabled\").length&&q.push(\":enabled\",\":disabled\"),a.querySelectorAll(\"*,:x\"),q.push(\",.*:\")})),(c.matchesSelector=Y.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ja(function(a){c.disconnectedMatch=s.call(a,\"*\"),s.call(a,\"[s!='']:x\"),r.push(\"!=\",N)}),q=q.length&&new RegExp(q.join(\"|\")),r=r.length&&new RegExp(r.join(\"|\")),b=Y.test(o.compareDocumentPosition),t=b||Y.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===n||a.ownerDocument===v&&t(v,a)?-1:b===n||b.ownerDocument===v&&t(v,b)?1:k?I(k,a)-I(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,e=a.parentNode,f=b.parentNode,g=[a],h=[b];if(!e||!f)return a===n?-1:b===n?1:e?-1:f?1:k?I(k,a)-I(k,b):0;if(e===f)return la(a,b);c=a;while(c=c.parentNode)g.unshift(c);c=b;while(c=c.parentNode)h.unshift(c);while(g[d]===h[d])d++;return d?la(g[d],h[d]):g[d]===v?-1:h[d]===v?1:0},n):n},ga.matches=function(a,b){return ga(a,null,null,b)},ga.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(S,\"='$1']\"),c.matchesSelector&&p&&!A[b+\" \"]&&(!r||!r.test(b))&&(!q||!q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return ga(b,n,null,[a]).length>0},ga.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},ga.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&C.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},ga.escape=function(a){return(a+\"\").replace(ba,ca)},ga.error=function(a){throw new Error(\"Syntax error, unrecognized expression: \"+a)},ga.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=ga.getText=function(a){var b,c=\"\",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if(\"string\"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=ga.selectors={cacheLength:50,createPseudo:ia,match:V,attrHandle:{},find:{},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(_,aa),a[3]=(a[3]||a[4]||a[5]||\"\").replace(_,aa),\"~=\"===a[2]&&(a[3]=\" \"+a[3]+\" \"),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),\"nth\"===a[1].slice(0,3)?(a[3]||ga.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*(\"even\"===a[3]||\"odd\"===a[3])),a[5]=+(a[7]+a[8]||\"odd\"===a[3])):a[3]&&ga.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return V.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||\"\":c&&T.test(c)&&(b=g(c,!0))&&(b=c.indexOf(\")\",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(_,aa).toLowerCase();return\"*\"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+\" \"];return b||(b=new RegExp(\"(^|\"+K+\")\"+a+\"(\"+K+\"|$)\"))&&y(a,function(a){return b.test(\"string\"==typeof a.className&&a.className||\"undefined\"!=typeof a.getAttribute&&a.getAttribute(\"class\")||\"\")})},ATTR:function(a,b,c){return function(d){var e=ga.attr(d,a);return null==e?\"!=\"===b:!b||(e+=\"\",\"=\"===b?e===c:\"!=\"===b?e!==c:\"^=\"===b?c&&0===e.indexOf(c):\"*=\"===b?c&&e.indexOf(c)>-1:\"$=\"===b?c&&e.slice(-c.length)===c:\"~=\"===b?(\" \"+e.replace(O,\" \")+\" \").indexOf(c)>-1:\"|=\"===b&&(e===c||e.slice(0,c.length+1)===c+\"-\"))}},CHILD:function(a,b,c,d,e){var f=\"nth\"!==a.slice(0,3),g=\"last\"!==a.slice(-4),h=\"of-type\"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?\"nextSibling\":\"previousSibling\",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h,t=!1;if(q){if(f){while(p){m=b;while(m=m[p])if(h?m.nodeName.toLowerCase()===r:1===m.nodeType)return!1;o=p=\"only\"===a&&!o&&\"nextSibling\"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){m=q,l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),j=k[a]||[],n=j[0]===w&&j[1],t=n&&j[2],m=n&&q.childNodes[n];while(m=++n&&m&&m[p]||(t=n=0)||o.pop())if(1===m.nodeType&&++t&&m===b){k[a]=[w,n,t];break}}else if(s&&(m=b,l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),j=k[a]||[],n=j[0]===w&&j[1],t=n),t===!1)while(m=++n&&m&&m[p]||(t=n=0)||o.pop())if((h?m.nodeName.toLowerCase()===r:1===m.nodeType)&&++t&&(s&&(l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),k[a]=[w,t]),m===b))break;return t-=e,t===d||t%d===0&&t/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||ga.error(\"unsupported pseudo: \"+a);return e[u]?e(b):e.length>1?(c=[a,a,\"\",b],d.setFilters.hasOwnProperty(a.toLowerCase())?ia(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=I(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:ia(function(a){var b=[],c=[],d=h(a.replace(P,\"$1\"));return d[u]?ia(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),b[0]=null,!c.pop()}}),has:ia(function(a){return function(b){return ga(a,b).length>0}}),contains:ia(function(a){return a=a.replace(_,aa),function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:ia(function(a){return U.test(a||\"\")||ga.error(\"unsupported lang: \"+a),a=a.replace(_,aa).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute(\"xml:lang\")||b.getAttribute(\"lang\"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+\"-\");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:oa(!1),disabled:oa(!0),checked:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&!!a.checked||\"option\"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType=0;)a.push(d);return a}),gt:pa(function(a,b,c){for(var d=c-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];i1&&sa(a.slice(0,i-1).concat({value:\" \"===a[i-2].type?\"*\":\"\"})).replace(P,\"$1\"),c,i0)while(s--)t[s]||u[s]||(u[s]=E.call(i));u=wa(u)}G.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&ga.uniqueSort(i)}return k&&(w=y,j=v),t};return c?ia(f):f}return h=ga.compile=function(a,b){var c,d=[],e=[],f=A[a+\" \"];if(!f){b||(b=g(a)),c=b.length;while(c--)f=ya(b[c]),f[u]?d.push(f):e.push(f);f=A(a,za(e,d)),f.selector=a}return f},i=ga.select=function(a,b,e,f){var i,j,k,l,m,n=\"function\"==typeof a&&a,o=!f&&g(a=n.selector||a);if(e=e||[],1===o.length){if(j=o[0]=o[0].slice(0),j.length>2&&\"ID\"===(k=j[0]).type&&c.getById&&9===b.nodeType&&p&&d.relative[j[1].type]){if(b=(d.find.ID(k.matches[0].replace(_,aa),b)||[])[0],!b)return e;n&&(b=b.parentNode),a=a.slice(j.shift().value.length)}i=V.needsContext.test(a)?0:j.length;while(i--){if(k=j[i],d.relative[l=k.type])break;if((m=d.find[l])&&(f=m(k.matches[0].replace(_,aa),$.test(j[0].type)&&qa(b.parentNode)||b))){if(j.splice(i,1),a=f.length&&sa(j),!a)return G.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,!b||$.test(a)&&qa(b.parentNode)||b),e},c.sortStable=u.split(\"\").sort(B).join(\"\")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ja(function(a){return 1&a.compareDocumentPosition(n.createElement(\"fieldset\"))}),ja(function(a){return a.innerHTML=\"\",\"#\"===a.firstChild.getAttribute(\"href\")})||ka(\"type|href|height|width\",function(a,b,c){if(!c)return a.getAttribute(b,\"type\"===b.toLowerCase()?1:2)}),c.attributes&&ja(function(a){return a.innerHTML=\"\",a.firstChild.setAttribute(\"value\",\"\"),\"\"===a.firstChild.getAttribute(\"value\")})||ka(\"value\",function(a,b,c){if(!c&&\"input\"===a.nodeName.toLowerCase())return a.defaultValue}),ja(function(a){return null==a.getAttribute(\"disabled\")})||ka(J,function(a,b,c){var d;if(!c)return a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),ga}(a);r.find=x,r.expr=x.selectors,r.expr[\":\"]=r.expr.pseudos,r.uniqueSort=r.unique=x.uniqueSort,r.text=x.getText,r.isXMLDoc=x.isXML,r.contains=x.contains,r.escapeSelector=x.escape;var y=function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&r(a).is(c))break;d.push(a)}return d},z=function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c},A=r.expr.match.needsContext,B=/^:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:|)$/i,C=/^.[^:#\\[\\.,]*$/;function D(a,b,c){if(r.isFunction(b))return r.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return r.grep(a,function(a){return a===b!==c});if(\"string\"==typeof b){if(C.test(b))return r.filter(b,a,c);b=r.filter(b,a)}return r.grep(a,function(a){return i.call(b,a)>-1!==c&&1===a.nodeType})}r.filter=function(a,b,c){var d=b[0];return c&&(a=\":not(\"+a+\")\"),1===b.length&&1===d.nodeType?r.find.matchesSelector(d,a)?[d]:[]:r.find.matches(a,r.grep(b,function(a){return 1===a.nodeType}))},r.fn.extend({find:function(a){var b,c,d=this.length,e=this;if(\"string\"!=typeof a)return this.pushStack(r(a).filter(function(){for(b=0;b]*|#([\\w-]+))$/,G=r.fn.init=function(a,b,c){var e,f;if(!a)return this;if(c=c||E,\"string\"==typeof a){if(e=\"\"===a[a.length-1]&&a.length>=3?[null,a,null]:F.exec(a),!e||!e[1]&&b)return!b||b.jquery?(b||c).find(a):this.constructor(b).find(a);if(e[1]){if(b=b instanceof r?b[0]:b,r.merge(this,r.parseHTML(e[1],b&&b.nodeType?b.ownerDocument||b:d,!0)),B.test(e[1])&&r.isPlainObject(b))for(e in b)r.isFunction(this[e])?this[e](b[e]):this.attr(e,b[e]);return this}return f=d.getElementById(e[2]),f&&(this[0]=f,this.length=1),this}return a.nodeType?(this[0]=a,this.length=1,this):r.isFunction(a)?void 0!==c.ready?c.ready(a):a(r):r.makeArray(a,this)};G.prototype=r.fn,E=r(d);var H=/^(?:parents|prev(?:Until|All))/,I={children:!0,contents:!0,next:!0,prev:!0};r.fn.extend({has:function(a){var b=r(a,this),c=b.length;return this.filter(function(){for(var a=0;a1?r.uniqueSort(f):f)},index:function(a){return a?\"string\"==typeof a?i.call(r(a),this[0]):i.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(r.uniqueSort(r.merge(this.get(),r(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function J(a,b){while((a=a[b])&&1!==a.nodeType);return a}r.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return y(a,\"parentNode\")},parentsUntil:function(a,b,c){return y(a,\"parentNode\",c)},next:function(a){return J(a,\"nextSibling\")},prev:function(a){return J(a,\"previousSibling\")},nextAll:function(a){return y(a,\"nextSibling\")},prevAll:function(a){return y(a,\"previousSibling\")},nextUntil:function(a,b,c){return y(a,\"nextSibling\",c)},prevUntil:function(a,b,c){return y(a,\"previousSibling\",c)},siblings:function(a){return z((a.parentNode||{}).firstChild,a)},children:function(a){return z(a.firstChild)},contents:function(a){return a.contentDocument||r.merge([],a.childNodes)}},function(a,b){r.fn[a]=function(c,d){var e=r.map(this,b,c);return\"Until\"!==a.slice(-5)&&(d=c),d&&\"string\"==typeof d&&(e=r.filter(d,e)),this.length>1&&(I[a]||r.uniqueSort(e),H.test(a)&&e.reverse()),this.pushStack(e)}});var K=/\\S+/g;function L(a){var b={};return r.each(a.match(K)||[],function(a,c){b[c]=!0}),b}r.Callbacks=function(a){a=\"string\"==typeof a?L(a):r.extend({},a);var b,c,d,e,f=[],g=[],h=-1,i=function(){for(e=a.once,d=b=!0;g.length;h=-1){c=g.shift();while(++h-1)f.splice(c,1),c-1:f.length>0},empty:function(){return f&&(f=[]),this},disable:function(){return e=g=[],f=c=\"\",this},disabled:function(){return!f},lock:function(){return e=g=[],c||b||(f=c=\"\"),this},locked:function(){return!!e},fireWith:function(a,c){return e||(c=c||[],c=[a,c.slice?c.slice():c],g.push(c),b||i()),this},fire:function(){return j.fireWith(this,arguments),this},fired:function(){return!!d}};return j};function M(a){return a}function N(a){throw a}function O(a,b,c){var d;try{a&&r.isFunction(d=a.promise)?d.call(a).done(b).fail(c):a&&r.isFunction(d=a.then)?d.call(a,b,c):b.call(void 0,a)}catch(a){c.call(void 0,a)}}r.extend({Deferred:function(b){var c=[[\"notify\",\"progress\",r.Callbacks(\"memory\"),r.Callbacks(\"memory\"),2],[\"resolve\",\"done\",r.Callbacks(\"once memory\"),r.Callbacks(\"once memory\"),0,\"resolved\"],[\"reject\",\"fail\",r.Callbacks(\"once memory\"),r.Callbacks(\"once memory\"),1,\"rejected\"]],d=\"pending\",e={state:function(){return d},always:function(){return f.done(arguments).fail(arguments),this},\"catch\":function(a){return e.then(null,a)},pipe:function(){var a=arguments;return r.Deferred(function(b){r.each(c,function(c,d){var e=r.isFunction(a[d[4]])&&a[d[4]];f[d[1]](function(){var a=e&&e.apply(this,arguments);a&&r.isFunction(a.promise)?a.promise().progress(b.notify).done(b.resolve).fail(b.reject):b[d[0]+\"With\"](this,e?[a]:arguments)})}),a=null}).promise()},then:function(b,d,e){var f=0;function g(b,c,d,e){return function(){var h=this,i=arguments,j=function(){var a,j;if(!(b=f&&(d!==N&&(h=void 0,i=[a]),c.rejectWith(h,i))}};b?k():(r.Deferred.getStackHook&&(k.stackTrace=r.Deferred.getStackHook()),a.setTimeout(k))}}return r.Deferred(function(a){c[0][3].add(g(0,a,r.isFunction(e)?e:M,a.notifyWith)),c[1][3].add(g(0,a,r.isFunction(b)?b:M)),c[2][3].add(g(0,a,r.isFunction(d)?d:N))}).promise()},promise:function(a){return null!=a?r.extend(a,e):e}},f={};return r.each(c,function(a,b){var g=b[2],h=b[5];e[b[1]]=g.add,h&&g.add(function(){d=h},c[3-a][2].disable,c[0][2].lock),g.add(b[3].fire),f[b[0]]=function(){return f[b[0]+\"With\"](this===f?void 0:this,arguments),this},f[b[0]+\"With\"]=g.fireWith}),e.promise(f),b&&b.call(f,f),f},when:function(a){var b=arguments.length,c=b,d=Array(c),e=f.call(arguments),g=r.Deferred(),h=function(a){return function(c){d[a]=this,e[a]=arguments.length>1?f.call(arguments):c,--b||g.resolveWith(d,e)}};if(b0||Q.resolveWith(d,[r]))}}),r.ready.then=Q.then;function R(){d.removeEventListener(\"DOMContentLoaded\",R),a.removeEventListener(\"load\",R),r.ready()}\"complete\"===d.readyState||\"loading\"!==d.readyState&&!d.documentElement.doScroll?a.setTimeout(r.ready):(d.addEventListener(\"DOMContentLoaded\",R),a.addEventListener(\"load\",R));var S=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\"object\"===r.type(c)){e=!0;for(h in c)S(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0, r.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(r(a),c)})),b))for(;h1,null,!0)},removeData:function(a){return this.each(function(){W.remove(this,a)})}}),r.extend({queue:function(a,b,c){var d;if(a)return b=(b||\"fx\")+\"queue\",d=V.get(a,b),c&&(!d||r.isArray(c)?d=V.access(a,b,r.makeArray(c)):d.push(c)),d||[]},dequeue:function(a,b){b=b||\"fx\";var c=r.queue(a,b),d=c.length,e=c.shift(),f=r._queueHooks(a,b),g=function(){r.dequeue(a,b)};\"inprogress\"===e&&(e=c.shift(),d--),e&&(\"fx\"===b&&c.unshift(\"inprogress\"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+\"queueHooks\";return V.get(a,c)||V.access(a,c,{empty:r.Callbacks(\"once memory\").add(function(){V.remove(a,[b+\"queue\",c])})})}}),r.fn.extend({queue:function(a,b){var c=2;return\"string\"!=typeof a&&(b=a,a=\"fx\",c--),arguments.length\\x20\\t\\r\\n\\f]+)/i,ja=/^$|\\/(?:java|ecma)script/i,ka={option:[1,\"\",\"\"],thead:[1,\"\",\"\"],col:[2,\"\",\"\"],tr:[2,\"\",\"\"],td:[3,\"\",\"\"],_default:[0,\"\",\"\"]};ka.optgroup=ka.option,ka.tbody=ka.tfoot=ka.colgroup=ka.caption=ka.thead,ka.th=ka.td;function la(a,b){var c=\"undefined\"!=typeof a.getElementsByTagName?a.getElementsByTagName(b||\"*\"):\"undefined\"!=typeof a.querySelectorAll?a.querySelectorAll(b||\"*\"):[];return void 0===b||b&&r.nodeName(a,b)?r.merge([a],c):c}function ma(a,b){for(var c=0,d=a.length;c-1)e&&e.push(f);else if(j=r.contains(f.ownerDocument,f),g=la(l.appendChild(f),\"script\"),j&&ma(g),c){k=0;while(f=g[k++])ja.test(f.type||\"\")&&c.push(f)}return l}!function(){var a=d.createDocumentFragment(),b=a.appendChild(d.createElement(\"div\")),c=d.createElement(\"input\");c.setAttribute(\"type\",\"radio\"),c.setAttribute(\"checked\",\"checked\"),c.setAttribute(\"name\",\"t\"),b.appendChild(c),o.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML=\"x\",o.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var pa=d.documentElement,qa=/^key/,ra=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,sa=/^([^.]*)(?:\\.(.+)|)/;function ta(){return!0}function ua(){return!1}function va(){try{return d.activeElement}catch(a){}}function wa(a,b,c,d,e,f){var g,h;if(\"object\"==typeof b){\"string\"!=typeof c&&(d=d||c,c=void 0);for(h in b)wa(a,h,c,d,b[h],f);return a}if(null==d&&null==e?(e=c,d=c=void 0):null==e&&(\"string\"==typeof c?(e=d,d=void 0):(e=d,d=c,c=void 0)),e===!1)e=ua;else if(!e)return a;return 1===f&&(g=e,e=function(a){return r().off(a),g.apply(this,arguments)},e.guid=g.guid||(g.guid=r.guid++)),a.each(function(){r.event.add(this,b,e,d,c)})}r.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q=V.get(a);if(q){c.handler&&(f=c,c=f.handler,e=f.selector),e&&r.find.matchesSelector(pa,e),c.guid||(c.guid=r.guid++),(i=q.events)||(i=q.events={}),(g=q.handle)||(g=q.handle=function(b){return\"undefined\"!=typeof r&&r.event.triggered!==b.type?r.event.dispatch.apply(a,arguments):void 0}),b=(b||\"\").match(K)||[\"\"],j=b.length;while(j--)h=sa.exec(b[j])||[],n=p=h[1],o=(h[2]||\"\").split(\".\").sort(),n&&(l=r.event.special[n]||{},n=(e?l.delegateType:l.bindType)||n,l=r.event.special[n]||{},k=r.extend({type:n,origType:p,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&r.expr.match.needsContext.test(e),namespace:o.join(\".\")},f),(m=i[n])||(m=i[n]=[],m.delegateCount=0,l.setup&&l.setup.call(a,d,o,g)!==!1||a.addEventListener&&a.addEventListener(n,g)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),r.event.global[n]=!0)}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q=V.hasData(a)&&V.get(a);if(q&&(i=q.events)){b=(b||\"\").match(K)||[\"\"],j=b.length;while(j--)if(h=sa.exec(b[j])||[],n=p=h[1],o=(h[2]||\"\").split(\".\").sort(),n){l=r.event.special[n]||{},n=(d?l.delegateType:l.bindType)||n,m=i[n]||[],h=h[2]&&new RegExp(\"(^|\\\\.)\"+o.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),g=f=m.length;while(f--)k=m[f],!e&&p!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&(\"**\"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k));g&&!m.length&&(l.teardown&&l.teardown.call(a,o,q.handle)!==!1||r.removeEvent(a,n,q.handle),delete i[n])}else for(n in i)r.event.remove(a,n+b[j],c,d,!0);r.isEmptyObject(i)&&V.remove(a,\"handle events\")}},dispatch:function(a){var b=r.event.fix(a),c,d,e,f,g,h,i=new Array(arguments.length),j=(V.get(this,\"events\")||{})[b.type]||[],k=r.event.special[b.type]||{};for(i[0]=b,c=1;c-1:r.find(e,this,null,[i]).length),d[e]&&d.push(f);d.length&&g.push({elem:i,handlers:d})}return h\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,ya=/"},{"title":"","date":"2018-05-11T08:14:18.285Z","updated":"2018-05-11T08:14:18.285Z","comments":true,"path":"tech/php/notes.html","permalink":"http://www.JiShuXuePai.com/tech/php/notes.html","excerpt":"","text":"第一章 网站介绍本章主要了解网络服务器架构与布局第一节 认识软件结构1. C/S 软件(Client / Server)通过客户端和服务器进行通信的软件优势：功能完善，效果很炫劣势：必须下载，经常升级2. B/S软件(Browser / Server)通过浏览器和服务器进行通信的软件优势：不用下载，不用更新，打开网页，直接使用劣势：功能受限（受浏览器环境限制）3.软件运行机制客户端给服务器发请求，服务器处理客户请求返回结果第二节 动态网站1. 概念误区：不是指网站当中包含动态图片、滚动图等动态效果正解：采用数据库技术开发的网站，网页上的内容都是通过数据库提取出来动态更新的2. 使用技术前端：html+css+javascript后端：php、asp、java数据库：MySQL、SQLServer、ORACLE、DB23. 运行原理get请求 ：从服务器上获取数据post请求：向服务器传送数据第三节 http协议HTTP（超文本传输协议）是一个基于请求与响应模式的、无状态的、应用层的协议，常基于TCP的连接方式，HTTP1.1版本中给出一种持续连接的机制，绝大多数的Web开发，都是构建在HTTP协议之上的Web应用。​HTTP URL：统一资源定位符，用于向服务器发送查询信息，第四节 动态网站开发所需构件1.web前端开发HTMLCSSjavascript浏览器2. Web后端开发（服务器端）web服务器：Apache、IIS、Tomcat…数据库：MySQL、MariaDB、Oracle、SQL Server…服务器端编程语言：PHP、ASP、JSP…第五节 php语言简介PHP（原名Personal Home Page的缩写，已经正式更名为 “PHP: Hypertext Preprocessor”，中文名：“超文本预处理器”）是一种通用开源脚本语言。语法吸收了C语言、Java和Perl的特点，利于学习，使用广泛，主要适用于Web开发领域。PHP 独特的语法混合了C、Java、Perl以及PHP自创的语法。用PHP做出的动态页面与其他的编程语言相比，PHP是将程序嵌入到HTML文档中，执行效率很高。1.php的诞生在1994年，他设计了PHP的第一个版本PHP1.0，并于1995年将其通过社区发布。在1996年，Rasmus Lerdorf又设计了PHP2，在1998年，由于Zeev Suraski和Andi Gutmans当时正在做毕业设计，需要一个用于开发Web程序的语言，他们也考虑了asp和jsp，但由于ASP只能运行在Windows平台，而JSP又过于复杂，因此，他们最后选择了PHP，但他们发现，PHP的功能当时还十分有限，因此，他们决定为PHP重新编写底层的解析程序，这就是PHP的第一个被广泛使用的版本—-PHP3.0。PHP 是最好的语言 ^_^某女:你能让这个论坛的人都吵起来,我今晚就跟你走.某软件工程师:PHP是最好的语言!某论坛炸锅了,各种吵架…某女:服了你了,我们走吧 你想干啥都行.某软件工程师:今天不行,我一定要说服他们,PHP必须是最好的语言某女：…….php和最好的语言几乎没有关系。一般用来讽刺一些没见过世面，把自己归属于某一种编程语言的语言教徒。事实上每一门语言都有其设计的灵魂，有它的取舍。很难说什么是最好的。比起做个脑残粉总是鼓吹自己擅长的语言，不如多学几门语言，开阔视野。PHP可能不是世界上最好的语言，但他一定是最适合新手学习编程的入门语言，也是进入Web开发领域的绝佳语言。2. php的优点简单易学既能面向过程，又能面向对象，安装后各种扩展集一身，包括但不限于mysql、json、mbstr等，方便至极。html和PHP混写，执行效率很高，最新版本都内置了小型webserver（连apache都不用）。日臻完善语言创建者积极上进优化。各大php论坛非常活跃，语言bug全世界的程序员和你一起修复。框架成熟框架层出不穷，国外Ci、laravel、kohana、zf，国内thinkphp功能完善，敏捷开发就靠它！！使用广泛最重要的是大小公司都用，全球前100万的站点中，有70%左右的站点用PHP开发，找工作不愁啊！！！！3. php的缺点标准库的函数名、参数顺序实在是难以预测例如：字符串操作系列函数，strpos、strcspn里两个词素没有任何分隔符，到了str_replace、str_repeat却又冒出了下划线协调性和可靠性例如：变量名是大小写敏感的，函数名和类名却是大小写不敏感的奇异的写法例如：数组末尾添加一个元素, \\$arr[] = 1PHP的异常捕获系统非常异常很难说清楚到底哪些情况会抛出异常哪些并不会第六节 php的开发环境WAMP和LAMP基于php的继承开发环境，速度快，成本低，易上手，易维护，稳定，应用广泛，其中：WAMP：Window操作系统 + Apache服务器 + MySQL数据库 + PHP服务器端脚本语言LAMP：Linux操作系统 + Apache服务器 + MySQL数据库 + PHP服务器端脚本语言第二章 环境配置第一节 安装简介众所周知，PHP是一门服务器端的脚本语言，要想使用这门语言，需要搭配相应的环境，方可使用1. 搭建首先，需要在网站上下载相应的软件到本地电脑。推荐网址：_http://www.wampserver.com/【**注意选择符合你电脑的版本**】然后，打开安装 【请勿安装到C盘】最后，查看是否安装成功，右下角查看‘W’的图标是否为绿色2. 两项服务，一个模块环境安装成功之后，共有两项服务，一个模块是需要我们作为重点了解的Apache 服务MySQL 服务PHP 模块3. 配置文件配置文件是每一项服务的核心，配置文件缺失或修改错误，将导致服务无法正常运行Apache服务配置文件：D:\\wamp\\bin\\apache\\apache2.4.23\\conf\\httpd.confMySQL服务配置文件：D:\\wamp\\bin\\mysql\\mysql5.7.14\\my.iniPHP模块配置文件：D:\\wamp\\bin\\apache\\apache2.4.23\\bin\\php.ini注意配置文件修改后，必须重启服务4. www目录在wamp目录下，是网站的根目录，开发的所有文件，都要放在www目录中，通过浏览器输入localhost访问本地服务器5. localhost本地服务器，安装了wamp软件的你的电脑，既是客户机，又是服务器，通过浏览器访问的是你本地的服务器，故名称为 localhost第三章 PHP基础第一节 第一个PHP文件1. 文件命名文件后缀名为 .php文件名中不可包含中文、空格、特殊符号建议使用有意义的英文单词命名2. 编码格式(UTF-8)3. 语言标记123456789101112131415161718192021//标准风格&lt;?php .......?&gt;//短风格&lt;? .......?&gt;//不常见格式---------------------------------------------------------------//长风格&lt;script language='php'&gt; .....&lt;script&gt; //Asp风格&lt;% ......%&gt;注意php的结束标签，在一些编码规范里面，纯php脚本文件里是必须忽略的。为什么呢？因为php只能运行在php标签里面的脚本，在脚本之外的所有字符，包括你看不见的空格或者回车，制表符号，都是作为输出内容会response到客户端的。这样就有可能会产生意想不到的事情。为了避免这种错误，在编码规范里面经常会规定：库文件、或者一些class文件等只有纯php代码的文件是不能加结尾的?&gt;结束符的。4. 注释符与结束符12345//单行注释/*多行注释*///结束符使用英文分号 “;”$name=\"hxsd\";5. 常用命令和系统函数echoecho输出 : 只能输出字符串、数字、布尔（true:1 false:不输出）类型的数据1234567891011//echo 输出&lt;?php echo \"&lt;h1&gt;hxsd&lt;/h1&gt;&lt;br&gt;\";?&gt; //短标签输出----------------------------------------------------------------------&lt;?php $name=\"hxsd\";//定义变量?&gt;&lt;h1&gt;&lt;?= $name ?&gt;&lt;/h1&gt; //html代码中输出var_dump()var_dump() 打印变量的相关信息。此函数显示关于一个或多个表达式的结构信息，包括表达式的类型与值。数组将递归展开值，通过缩进显示其结构12$a = array(1, 2, array(\"a\", \"b\", \"c\"));var_dump($a);注意：var_dump中的变量必须是存在的，如果变量存在但值是空，则返回false没有变量时，则返回NULL该函数有输出的功能，因此不必加其它的输出函数require与includerequire常用于引入重要文件，若引入失败会直接影响到当前整个脚本，引入失败报Error错误include常用于引入普通文件，若引入失败不会对当前脚本有较大的影响，引入失败报Warning错误require_once避免重复引入，其他规则同上include_once避免重复引入，其他规则同上header发送原生 HTTP 头，header() 必须在任何实际输出之前调用。第三节 变量与常量1. 变量声明变量：$命名规则：字母数字下划线、首字母不能为数字、严格区分大小写、且不能使用关键字！推荐驼峰命名法1234$name = \"赵四儿\";//string$sex = \"男\";$age = 40;//integer$backGroundColor = \"red\";变量销毁：unset(变量名)，被销毁的变量在内存中被释放引用变量1234//变量引用：用不同的名字访问同一个变量内容$guangong=\"hero\"; //关公是英雄$guan2ye=&amp;$guangong;//关公别名关二爷var_dump($guangong===$guan2ye);//true 是同一个人2. 常量定义常量,使用define关键字，常量命名要全部大写，常量的数据类型不能是 资源、对象12345//定义常量define(\"SCHOOL\",\"火星时代\");//判断常量var_dump( defined(\"SCHOOL\") ); //true3. 变量与常量的差异差异变量常量定义$声明define()函数定义命名大小写敏感必须大写（行业通行）赋值可以重新赋值不能再赋值数据类型8种数据类型只能是标量销毁unset() 销毁不能销毁判断方法isset() 判断是否定义defined() 判断是否定义作用域局部作用域全局作用域第四节 数据类型1. 八种数据类型四种标量类型布尔型（boolean）整 型（Integer）范围：2^32或2^64（超出自动转换为浮点型）浮点型（float）范围：双精度字符串（string）两种复合类型数组型（array）对象型（object）两种特殊类型资源型（resource）空 型（null）123456//定义超出整型存储范围的变量，两者均为浮点型$number1 = -2147483648;$number2 = 2147483648;//打印变量var_dump($number1);2. 不同进制PHP中不同进制数表现形式，需要在数值前加上以下符号：12345//测试不同进制数$number1 = 0b10; //0b开头 二进制 结果:2$number2 = 0123; //0开头 八进制 结果:83$number3 = 0x123; //0X开头 十六进制 结果:291echo $number;7.对象型具有一定功能和特征的单个事物，从编程角度来说，对象是属性和方法的集合8. 资源型变量可以是一个文件夹、一个文件、从数据库中得到的结果集等，这些就是资源，操作这个变量，相当于操作这些资源。9. NULL型null也是数据，通常表示一种状态，例如变量没有任何信息，就用null表示，类似于JS中的undefined何时得到NULL数据直接将一个变量赋值为NULL将一个变量销毁后再次使用该变量直接使用一个不存在的变量第五节 类型转换1. 自动类型转换在特殊运算时，会有自动类型转换的情况自动转换为： false自动转换为： true自动转换为： int自动转换为： string整型： 0非0整数true : 1true : “1”浮点： 0.0或0.00非0浮点数false : 0false : “ “字符串： “ ” 或 “0”非空字符串NULL : 0NULL: “ “数组：空数组非空数组NULL对象未知变量（或被销毁变量）2. 强制类型转换改变原变量类型使用settype()函数可以将一个指定变量强制转换为另一种指定类型不改变原变量类型格式：新变量 = (指定变量类型) 原变量;123456789101112//强制类型转换：不改变原变量类型//定义一个存储变量$old = 1;$new; //用于接收转换之后的变量//开始转换$new = (Boolean) $old; //true$new = (Integer) $old; //1$new = (Float) $old; //float 1$new = (String) $old; //\"1\"$new = (Array) $old; //Array$new = (Object) $sum; //Object3. 常用变量检测函数函数说明gettype()判断变量类型：返回 boolean、integer、double（ float 返回 “double”）、string、array、object、resource、NULL、unknown typeisset()检测变量是否存在empty判断一个变量是否为空其他判断变量类型的系列函数is_array()、is_bool()、is_float()、is_integer()、is_null()、is_numeric()、is_object()、is_resource()、 is_string() 和 is_scalar()是否为标量4.常用数学运算函数函数说明abs()绝对值intval()直接取整，舍弃小数，保留整数round()四舍五入取整 round(-1.54) 结果：-2 (float)ceil()向上取整（有小数就加1）负数： ceil(-1.54) 结果：-1 (float)floor()向下取整 （舍弃小数）与intval()区别：floor(-1.54) 结果:-2(float) intval(-1.54) 结果：-1(int)rand(mix , max)随机数pi()πsqrt()开平方第六节 字符串三种定义方式差异单引号双引号定界符不支持解析变量支持解析变量支持解析变量(不支持函数)不能插入单引号不能插入双引号可以插入双引号和单引号只能转移反斜线和它本身支持解析转义字符支持解析转义字符12345678910//单引号 与 双引号$age=24;$school ='北京火星时代教育，'.\"建校&#123;$age&#125;年，是中国高端教育品牌\"; //定界符$str2 = &lt;&lt;&lt;STR 北京火星时代教育， 学设计来火星， 学前端来火星。STR; //注意，结束标记一定要顶格写,并且，标记后不能再有空格等字符常用字符串函数函数功能strtolower()转换为小写strtoupper()转换为大写htmlspecialchars()格式化字串中的html标签strip_tags()函数剥去 HTML、XML 以及 PHP 的标签strlen()字节长度 uft8编码 西文：1字节 汉字：3字节mb_strlen()字符个数substr(字符串，开始，长度)字符串截取函数strstr(字符串，匹配字符串)查找字符串的首次出现strpos()寻找一个字符串最先出现的位置str_replace()字符串替换函数ltrim() 、 trim() 、 rtrim()去除左侧 、 两侧 、 右侧多余字符(默认删除空格)explode( 符号 , 字符串 )字符串 → 数组implode( 符号 , 数组 )数组 → 字符串第七节 数组1. 数组类型关联式数组：下标为有意义的字符串索引式数组：下标为默认从0开始的数值2. 定义数组直接赋值方式定义1234567891011121314151617$a[] = 10; $a[] = 20; $a[] = 30;$a['name'] = '张三';$a['sex'] = '男';$a['age'] = 28;var_dump($a);//打印结果/** * 0 =&gt; int 10 * 1 =&gt; int 20 * 2 =&gt; int 30 * 'name' =&gt; string '张三' (length=9) * 'sex' =&gt; string '男' (length=3) */使用array()函数12$b = array(10,20,30);$b = array('name'=&gt;'张三','sex'=&gt;'男','age'=&gt;28);快捷赋值12$c = [10,20,30];$c = ['name'=&gt;'张三'，'sex'=&gt;'男','age'=&gt;28];二维数组与多维数组1234567891011121314151617181920//二维数组$group = array( 'one'=&gt;array('程蝶衣','段小楼','菊仙','关师傅','那坤','袁四爷'), 'two'=&gt;array('小四儿','张公公','小豆子','小石头','小癞子'),);//定义一个三维数组$class = array( 'class01'=&gt;array( 'one'=&gt;array('程蝶衣','段小楼','菊仙','关师傅','那坤','袁四爷'), 'two'=&gt;array('小四儿','张公公','小豆子','小石头','小癞子'), ), 'class02'=&gt;array( 'one'=&gt;array('福贵父亲','福贵','家珍','凤霞','春生'), 'two'=&gt;array('龙二','龙三','龙四','龙五','龙龙'), ););//获取福贵echo $class['class02']['one'][1]; //福贵数组的遍历12345678910111213//for遍历索引数组------------------------------------------------------------------------$arr=[11,22,33,44，55];for($i=0; $i&lt;count($arr); $i++)&#123; var_dump($arr[$i]);&#125;;//foreach------------------------------------------------------------------------------$f_arr=[\"name\"=&gt;\"zhangsan\",\"age\"=&gt;18,\"sex\"=&gt;\"m\"];foreach ($f_arr as $key=&gt;$value) &#123; echo $key.\":\".$value.\"&lt;br&gt;\";&#125;;//list---------------------------------------------------------------------------------list($a,$b,$c,$d,$e) = [\"张三\",\"李四\",\"王五\",\"小明\",\"小红\"];echo $a,$b,$c,$d,$e;3. 数组常用函数函数功能array_values()数组中所有的值放入一个新的索引数组，并返回array_keys()数组中所有的键放入一个新的索引数组，并返回array_reverse(数组)颠倒数组顺序in_array()检查数组中是否存在某个值is_array()判断是否是数组count()计算数组中的单元数目或对象中的属性个数array_unshift(数组)在数组开头插入一个或多个元素array_push(数组)在数组结尾插入一个或多个元素array_unique(数组)移除数组中重复的值array_pop(数组)删除数组最后一个元素array_shift(数组)删除数组开头的元素sort()排序 ( 升序 )rsort()排序（降序）array_merge()合并一个或多个数组4. 数组转JSON函数说明json_encode( 数组 )JSON 格式编码 （参数必须是utf-8编码，否则会得到空字符或者null）json_decode( 字符串，参数 )对 JSON 格式的字符串进行解码参数：true : 返回 数组 false : 返回 对象第四章 运算符第一节 常用运算符1. 算术运算符+、-、*、/、%、2. 赋值运算符=、+=、-=、*=、/=、%=、.=3. 比较运算符> 、&gt;=、&lt;、&lt;=、!=、!==、==、===4. 逻辑运算符&amp;&amp;、 ||、 not、and、or5. 字符串运算符点 .6. 其他运算符三元运算符 ==？ ：错误抑制符(详见第七章)提升优先级符号第五章 流程控制第一节 分支结构1. 单一分支结构1234567//判断你是否长得帅$face = '帅';//开始判断if($face=='帅')&#123; echo '你真是帅呆了，酷毙了~~';&#125;2. 双向分支结构123456//开始判断if(true)&#123; echo \"ok\";&#125;else&#123; echo \"no\";&#125;3. 多向分支结构一123456789101112131415//学生成绩管理系统$score = 100;//判断学生成绩在那个分数段if($score&gt;=90 &amp;&amp; $score&lt;=100)&#123; echo \"优+\";&#125;else if($score&gt;=80 &amp;&amp; $score&lt;=89)&#123; echo \"优\";&#125;else if($score&gt;=70 &amp;&amp; $score&lt;=79)&#123; echo \"良\";&#125;else if($score&gt;=60 &amp;&amp; $score&lt;=69)&#123; echo \"中\";&#125;else($score&gt;=0 &amp;&amp; $score&lt;=59)&#123; echo \"差\";&#125;4. 多向分支结构二12345678910111213$action = 'save';//分支switch($action)&#123; case 'save': echo \"输入数据！\"; break; case 'del': echo \"删除数据！\"; break; default: echo \"请输入正确数据\";&#125;第二节 循环结构1. while循环12345//语法格式While(条件表达式)&#123; //若条件成立，则执行这里的循环体 //改变初值的条件;&#125;2. do……while循环12345//语法格式Do&#123; //循环体 //改变初值的条件;&#125;while(条件表达式);3. for循环1234//语法格式for( 条件一 ; 条件二 ; 条件三 )&#123; //循环体&#125;4. 特殊的流程控制语句语句说明break在switch分支当中和循环当中使用，代表结束当前分支或循环continue在循环当中使用，代表跳过当前层循环，若指定数字，则跳过指定层循环第六章 函数第一节 函数的分类1. 系统函数系统中可直接使用的函数，php提供了丰富的系统函数，这些函数涵盖了软件开发的大部分功能，具体的使用方法，请查看php开发手册。杂项函数是 PHP 核心的组成部分。无需安装即可使用这些函数php杂项函数描述constant()返回一个常量的值define()定义一个常量defined()判断常量是否存在die()输出一条消息，并退出当前脚本exit()同 die()eval()把字符串按照 PHP 代码来计算sleep()延迟代码执行若干秒2. 自定义函数自定义函数命名口诀：字母数字下划线，首字母不能为数字，不会区分大小写，且不能使用关键字，不能重复来定义第三节 函数的参数1. 形参形式上的参数在函数定义时声明2. 实参实际上的参数在函数使用时声明实参和形参数量要一一对应实参和形参类型需一致形参的默认值若某个形参的值总是固定的某一个值，可以使用默认值指定具有默认值的形参，放到参数列表后面3.参数默认值可以在定义函数的时候，为参数赋值，作为默认值使用1234function fun3($a=111,$b=222)&#123; return $a+$b;&#125;var_dump( fun3() );注意：调用函数时，定义的参数必须传值，除非有默认值，否则会报错！！第四节 函数的返回值函数当中若遇到return，则会将return后方的内容返回到函数调用处进行保存return后面的语句将不再执行（echo写在return前面）若函数没有任何返回，则默认返回NULL类型第五节 变量的作用域1. 局部变量在函数内部定义，只作用于函数内部12345678//默认情况下，函数参数通过值传递（因而即使在函数内部改变参数的值，它并不会改变函数外部的值）$a=1;//外部变量function test($arg)&#123; $arg+=100;&#125;test($a);//只将外部变量的值传进去var_dump($a) ;// 1 外部变量$a的值并没有改变2. 全局变量在函数外部定义，作用于当前整个脚本，在函数内部使用需要使用global关键字声明123456789101112define(\"NAME\",\"hxsd\");//常量$a=10;//全局变量$b=20;//全局变量function test(&amp;$arg)&#123;//定义引用 global $a; //用global引入全局变量，在函数内部使用 echo $a; echo $arg;//用变量引用方式，传入全局变量 echo NAME; //可以直接访问常量&#125;test($b);3. 静态变量在函数内部定义，作用于函数内部，使用static关键字声明123456789function test()&#123; static $a=1; //静态变量 $a++; echo $a;&#125;test(); //2test(); //3test(); //4//echo $a; //报错 静态变量只作用于函数内部，外部无法读取第七节 超全局变量1. 超全局变量在全部作用域中始终可用的内置变量超全局变量说明$_GET通过 URL 参数传递 ( get请求 ) 给当前脚本的变量的数组$_POST通过 ‘post’ 方式给当前脚本的变量的数组$_COOKIE保存 Cookies信息的数组$_SESSION保存SESSION信息的数组$_FILES通过 HTTP POST 方式上传到当前脚本的项目的数组$_ENV包含服务器端环境变量（版本，目录，用户名等等）的数组$_SERVER服务器和执行环境信息$_REQUEST默认包含了 \\$_GET，\\$_POST 和 \\$_COOKIE 的数组$GLOBALS以上变量的集合2. get 和postHTTP 请求分为三个部分：状态行、请求头、消息主体。类似于下面这样：12345&lt;method&gt; &lt;request-URL&gt; &lt;version&gt;&lt;headers&gt;&lt;entity-body&gt;区别getpost发生方式url地址（request-URL）消息主体(entity-body)长度限制HTTP 协议 未规定 GET 和POST的长度限制不同浏览器和WEB服务器，限制的最大长度不一样：IE 和 Chrome浏览器 限制 2kOpera 限制4kFirefox 限制 8k如果超出，部分服务器直接截断，有些服务器报414错误无速度快慢安全不安全安全第八节 其他应用1. 变量函数123456789101112131415161718192021//定义测试函数function test()&#123; echo '火星时代web前端！';&#125;//将函数的名称以字符串形式存储到指定变量$ceshi = 'test';//此时该变量可以作为函数来使用，使用规则和函数一致$ceshi();//传参调用----------------------------------------------------------------------function play()&#123; echo \"play\";&#125; function run($fn)&#123; $fn();&#125;;//将函数名作为字符串传入run(\"play\");2. 回调函数123456789101112131415161718192021222324252627//定义主函数function test($guize)&#123; //循环5个数出来 for($i=1;$i&lt;=5;$i++)&#123; //判断 if($guize($i))&#123; continue; &#125; echo $i.'&lt;br/&gt;'; &#125;&#125;//定义规则函数function guize($num)&#123; if($num==3)&#123; return true; &#125;&#125;//将规则函数名称通过字符串形式传递到主函数形参处test('guize');//结果12453. 递归123456789101112//回文数递归函数function huiwen($num)&#123; echo $num; //判断 if($num&gt;1)&#123; huiwen($num-1); &#125; echo $num;&#125;//调用函数huiwen(3); //结果:3 2 1 1 2 3第七章 错误日志处理第一节 3种错误类型1. 语法错误语法错误最常见，并且最容易修复。这类错误会阻止脚本执行。通常发生在程序开发时，可以通过错误报告进行修复，再重新运行。12$name=\"hxsd\" //NOTICE错误,结尾没有分号\";\"$age=18;2. 运行时错误只有程序运行到某行，或在某些特定的情形下运行才会发生错误。这种错误一般不会阻止PHP脚本的运行，但是会阻止脚本做希望它所做的任何事情。12345678$a=20;echo $b; //WARNIG错误function abc()&#123; global $a; echo $a;&#125;abc();3. 逻辑错误这种错误实际上是最麻烦的，不但不会阻止PHP脚本的执行，也不会显示出错误消息123456//在if语句中判断两个变量的值是否相等$a=10;$b=20;if($a=$b)&#123; //如果错把比较运行符号“＝＝”写成赋值运行符号“＝”就是一种逻辑错误，很难会被发现 echo \"ok\";&#125;第二节 3种错误级别错误类型说明E_NOTICE注意： 这些都是比较小而且不严重的错误，比如去访问一个未被定义的变量。通常，这类的错误是不提示给用户的，但有时这些错误会影响到运行的结果。E_WARNING警告： 这就是稍微严重一些的错误了，比如想要包含include一个不存在的文件。这样的错误信息会提示给用户，但不会导致程序终止运行。Fatal error致命错误： 这些就是严重的错误，比如你想要初始化一个根本不存在的类的对象，或调用一个不存在的函数，这些错误会导致程序停止运行，PHP也会把这些错误展现给用户。第三节 屏蔽PHP错误提示1. 在配置文件修改php.ini配置文件设置项说明error_reporting = E_ALL &amp; ~E_NOTICE显示所有的错误和提示 忽略notice错误display_errors = OffOff : 关闭错误提示 On：显示错误提示2. 在当前脚本12345678910111213//在php脚本顶部，error_reporting(常量)，见附录：php报错级别error_reporting(E_NOTICE); //只显示NOTICE错误error_reporting(E_WARNING); //只显示WARNING错误 //-------------------------------------------------------------------------------------------/** @ 是可以屏蔽函数执行过程中遇到问题而产生的一些错误、警告信息(不显示出错信息)。* 这样除了用户界面友好一些外，更重要的是安全性，因为屏蔽了出错文件的路径等信息。*///在有可能出错的函数前加@, 然后or die(\"\")@$a=$b; //赋值一个不存在的变量，会报NOTICE错误@mysqli_connect(...) or die(\"数据库连接错误\")；第四节 错误日志php错误日志用来存储一些错误信息的1. 所在位置wamp -&gt; logs -&gt; php_error.log2.常用配置修改php.ini配置文件设置项说明log_errors=On开启错误日志记录error_log=’G:/wamp/logs/php_error.log’指定错误日志存储位置第八章 正则表达式正则表达式(regular expression)描述了一种字符串匹配的模式，正则表达式的主要作用：可以用来检查一个串是否含有某种子串将匹配的子串做替换或者从某个串中提取符合某个条件的子串等第一节 基本概念1. 构成他是一个特殊的公式，由原子、元字符、模式修正符组成；它也是一个字符串！只不过是一个特殊的字符串2.作用实现对字符串的匹配、分割、查找、替换等操作3. 实际应用指定网页指定信息抓取表单规则限制4.主要知识点分类定界符原子元字符模式修正符使用技巧第三节 分类1.PCRE规则与函数PCRE（Perl Compatible Regular Expressions ）是一个Perl（一种功能丰富的计算机程序语言）兼容的正则表达式库，是以preg开头的一套函数：函数功能preg_grep (正则 , 数组)返回一个数组，包括了数组中与正则相匹配的单元preg_split( 正则 , 字符串)用正则分割字符串，返回一个数组preg_replace(正则 , 替换 , 被替换字符串)替换，返回替换后字符串preg_match(正则 , 字符串 , 结果数组)匹配 结果数组: 第一个匹配到的结果 返回:1preg_match_all(正则 , 字符串 , 结果数组)匹配所有 返回：结果数组: 全部匹配到的结果 匹配个数2. 用单引号定义正则123456789101112//双引号中的$title会被解析为变量，所以要加\\转义符，或者用单引号$str=\"\\$title\";//用双引号定义正则，$title会被当做变量被解析，引发错误$reg=\"/\\$title/\";preg_match($reg,$str,$res); var_dump($res);//结果为空//因此,用单引号定义正则，更安全$reg='/\\$title/';preg_match($reg,$str,$res);var_dump($res);//结果正常第四节 元字符正则模式当中的元字符，通常都具有特殊的含义元字符说明a-z英文小写字母A-Z英文大写字母0-9数字\\r \\n \\t非打印字符\\d数字，相当于0-9\\D\\d 取反\\w字母 数字 下划线\\W\\w 取反\\s空白字符\\S非空白字符[ ]任意匹配[ ]中单个字符.匹配任意字符（换行符除外）{n}匹配n次{n,}匹配至少n次{n,m}至少n次，最多m次*匹配0个或多个，相当于{0,}+匹配1个或多个，相当于{1,}?匹配0个或1个，相当于{0,1}^1、匹配正则开头 2、放在[^ ]，内容取反$匹配正则结尾\\匹配\\两侧任选其一( )1. 分组 2.子存储第五节 模式修正符对一套正则模式进行调整的符号i 不区分大小写s 忽略换行符U 拒绝贪婪匹配第六节 子模式与后向引用1. 子模式子模式(子表达式 或 子匹配)，在正则表达式中，可以使用“(”和“)”将模式中的子字符串括起来，以形成一个子模式。12345678910111213141516171819202122//定义正则模式$str = \"abcde7a23fgA2BCDEFG1a2345a\";$reg = '/\\da(2)(3)/';$n=preg_match_all($reg,$str,$res);var_dump($n,$res);//将小括号()内的值，单独作为数组保存起来/*array (size=3) 0 =&gt; array (size=1) 0 =&gt; string '7a23' (length=4) 1 =&gt; string '1a23' (length=4) 1 =&gt; array (size=1) 0 =&gt; string '2' (length=1) 1 =&gt; string '2' (length=1) 2 =&gt; array (size=1) 0 =&gt; string '3' (length=1) 1 =&gt; string '3' (length=1)*/2. 后向引用正则表达式一个最重要的特性就是将匹配成功的模式的某部分进行存储供以后使用这一能力。对一个正则表达式模式或部分模式两边添加圆括号()可以把这部分表达式存储到一个临时缓冲区中。所捕获的每个子匹配都按照在正则表达式模式中从左至右所遇到的内容按顺序存储。存储子匹配的缓冲区编号从1开始，连续编号至最大99个子表达式。每个缓冲区都可以使用’\\n’(或用’$n’)访问，其中n为1至99的阿拉伯数字，用来按顺序标识特定缓冲区(子表达式)。1234567$string = \"abc1111 abc222222 abc33333 abc666bc\";$reg = '/a(bc)(\\d&#123;3&#125;)\\2/'; // \\2就是向后子引用,引用的是第二个(\\d&#123;3&#125;) $new_str = preg_replace($reg, \"$2\", $string); //$2，引用第二个子匹配 //结果: abc1111 222 abc33333 abc666bc第九章 日期时间第一节 时间戳（timestamp）在著名的unix系统中，使用了一种简洁高效的时间表示方法，即：将1970年1月1日0时0分0秒作为“unix纪元”的原点，从1970年1月1日开始经过的秒数存储为一个32位整数，这个整数随着时间的变化不断增加，又被称为时间戳（timestamp）。第二节 常用函数函数说明date_default_timezone_get()获取时区date_default_timezone_set()设置时区 中国时区：“PRC” 英国（格林尼治）：“UTC”time()返回时间戳（timestamp）mktime(时 , 分 , 秒 , 月 , 日 , 年)创建一个指定时间戳date( 格式 , [时间戳] )格式化时间戳函数( 无时间戳参数,返回当前时间 )strtotime(‘yesterday’)将任何英文文本的日期时间描述解析为 Unix 时间戳checkdate(月 , 日 , 年)验证日期是否合法, 例: checkdate(2,31,2018) 结果: false第三节 data()主要参数年参数说明返回值例子Y4 位数字完整表示的年份1999 或 2003y2 位数字表示的年份99 或 03L是否为闰年闰年: 1，否则: 0月参数说明返回值例子n月份，数字表示（无前导零）1 到 12m月份，数字表示（有前导零）01 到 12M月份，三个字母缩写Jan 到 DecF月份，完整的文本格式January 到 Decembert月份总天数28 到 31日参数说明返回值例子d月份中的第几天，有前导零的 2 位数字01 到 31j月份中的第几天，没有前导零1 到 31z年份中的第几天0 到 365星期参数说明返回值例子l (小写L)完整文本格式星期Sunday 到 SaturdayD文本表示星期，3 个字母Mon 到 Sunw数字表示星期0（星期天）到 6（星期六）W一年中的第几周42（当年的第 42 周）时间参数说明返回值例子a小写的上午和下午值am 或 pmA大写的上午和下午值AM 或 PMg小时，12 小时格式，无前导零1 到 12G小时，24 小时格式，无前导零0 到 23h小时，12 小时格式，有前导零01 到 12H小时，24 小时格式，有前导零00 到 23i有前导零的分钟数00 到 59s秒数，有前导零00 到 59完整的日期时间参数说明返回值例子cISO 8601格式的日期2004-02-12T15:19:21+00:00rRFC 822 格式的日期Thu, 21 Dec 2000 16:01:07 +0200第十章 文件处理系统第一节 文件类型与路径1. 文件类型定义：一般指存储在外部介质上具有名字（文件名）的一组相关数据集合windows当中常见文件类型file：文件dir：目录unknown：未知文件2. 路径相对路径$path = ‘./wamp/www/index.php’;绝对路径$path = ‘D:/wamp/www/index.php’;文件路径相关函数| 函数 | 说明 || —————— | —————————————- || basename() | 获取路径中的文件名部分 || dirname() | 获取路径中的目录部分 || pathinfo($path，参数) | 获取路径中的大部分信息，返回数组，可通过参数指定元素：PATHINFO_DIRNAME，PATHINFO_BASENAME 和 PATHINFO_EXTENSION 或 PATHINFO_FILENAME。 |第二节 目录操作1. 目录操作函数函数说明mkdir(完整路径目录)创建一个目录rmdir(完整路径目录)删除一个目录opendir(完整路径目录)打开目录readdir(资源)读取目录closedir(资源)关闭目录,释放内存is_dir(完整路径目录)判断是否为一个有效目录scandir(完整路径目录)扫描目录，返回文件数组特例： count（数组）==2 是空目录2. 遍历目录1234567891011//定义目录$path = \"您指定的目录\";//打开目录$res = opendir($path);//遍历目录$file = readdir($res);//关闭目录closedir($res);第三节 文件操作1. 文件属性函数函数说明filesize(完整路径文件名)取得一个文件的大小(字节)filectime(完整路径文件名)获取文件的创建时间(create)filemtime(完整路径文件名)获取文件的修改时间(modify)fileatime(完整路径文件名)获取文件的访问时间(access)stat(完整路径文件名)返回一个数组，包含文件的统计信息2. 文件操作函数函数说明fopen(完整路径文件名 , 参数)打开文件(参数见下表)fread(资源 , 长度)读取文件(指定长度)fwrite(资源 , 内容)写入的内容fclose(资源)关闭文件(资源)，释放内存file_get_contents(完整路径文件名)将整个文件读入一个字符串（相当于 fopen freade fclose组合动作）file_put_contents(完整路径文件名)将一个字符串写入文件（相当于 fopen fwrite fclose组合动作）readfile()将内容读入缓冲区copy(源文件 , 目标文件)拷贝文件(如果目标文件已存在，将会被覆盖)unlink(完整路径文件名)删除文件fopen()参数：参数说明r只读方式打开，将指针指向文件头w写入方式打开，指针指向文件头(覆盖写)，文件不存在则创建a追加写方式打开，指针指向文件尾，文件不存在则创建x创建写方式打开，指针指向文件头，文件不存在则创建，存在则报错E_WARNINGrewind()指针回到文件头12345678910111213141516//步骤//定义文件路径$path = '文件路径';//打开文件(指定模式)$res = fopen($path,打开方式);//读取fread($res,要读取的长度);//写入fwrite($res,要写入的内容);//关闭文件fclose($res);3. 中文名称使用iconv()函数，进行字符串编码转换：12345//window中文版操作系统的编码是GBK，所以，需要将文件名进行转码，才能在正常显示$file = iconv(\"UTF-8\",\"GBk\",$file); //UTF-8 → GBK 用于保存文件$file = iconv(\"GBk\",\"UTF-8\",$file); //UTF-8 → GBK 用于读取文件4. 文件判断用函数函数说明is_file(完整路径文件名)判断是否为一个有效文件is_readable(完整路径文件名)判断是否可读is_writable(完整路径文件名)判断是否可写is_executable(完整路径文件名)判断是否可执行file_exists(完整路径文件名)判断一个文件或目录是否存在file_type(完整路径文件名)获取指定文件的类型5.文件/目录重命名函数说明rename(源 , 目标)相同文件夹为“改名”，不同文件夹为“移动”移动文件，如果目标文件已存在，将会被覆盖移动目录，如果目标目录已存在，将会报错，返回false第十一章 文件上传和下载第一节 上传设置1. 客户端设置123456789/*form表单的method提交方法：post方式form表单头位置需要添加：enctype=\"multipart/form-data\"input表单type属性：file*/&lt;from active=\"upload.php\" method=\"post\" enctype = \"multipart/form-data\"&gt; &lt;input type=\"file\" name=\"fname\"&gt; &lt;input type=\"submit\" value=\"提交\"&gt;&lt;/from&gt;2. 服务端设置在php.ini中进行设置：配置项功能file_uploads = On是否允许上传文件upload_tmp_dir =”G:/wamp/tmp”临时存储上传文件的目录upload_max_filesize = 2M上传单个文件的大小max_file_uploads = 20上传文件的最大数量post_max_size = 8M表单所允许上传文件总和的大小max_execution_time = 120表单上传的超时的时间设置(默认120秒)3. $_FILES数组$_FILES超全局数组中，包含着从客户端提交文件的全部信息：12345678array (size=1) 'fname' =&gt; //上传文件表单项的name array (size=5) 'name' =&gt; string 'home.html' (length=21) //上传文件的名称 'type' =&gt; string 'text/html' (length=9) //文件类型(常见文件都可以上传) 'tmp_name' =&gt; string 'C:\\wamp\\tmp\\php57A2.tmp' (length=23) //上传文件的临时文件名 'error' =&gt; int 0 //上传文件遇到的错误号 'size' =&gt; int 28131 //上传文件的大小error编号说明0上传过程中没有发生任何错误1上传的文件超过了 php.ini 中 upload_max_filesize选项限制的值2超出了HTML表单隐藏域属性的MAX＿FILE＿SIZE元素所指定的最大值（浏览器兼容）3文件只有部分上传4没有上传任何文件5上传文件大小为0(已废弃)6找不到临时文件夹7文件写入失败文件上传必备的函数函数说明move_uploaded_file(临时文件名 , 新文件名)移动已经上传的文件到指定位置is_uploaded_file(临时文件名)判断你上传的文件是否是通过HTTP post方式提交的4.上传步骤12345678910111213141516171819202122232425var_dump($_FILES); $file=$_FILES[\"fname\"]; //获取$_FILES文件 临时文件$tmp_file=$file[\"tmp_name\"]; //获取后缀名$ext=pathinfo($file[\"name\"],PATHINFO_EXTENSION);//后缀名 //创建新文件名$new_file=\"file\".rand(1,334354).\".\".$ext; //保存路径$path=\"./files\"; //格式路径$path=rtrim($path,'/').\"/\"; //拼接上传目录$new_file=$path.$new_file; //临时文件转换成正式文件move_uploaded_file($tmp_file,$new_file);第二节 下载设置浏览器对于可识别的文件格式(html、txt、png、jpg等)，默认是直接打开的，对于无法识别的文件，才作为附件来下载。为了可以让可识别的文件也直接可以下载，需要进行如下设置：1234567891011121314// 1. 读取文件$fliename='01.jpg';//2. 文件的描述信息,指定为attachment(附件)(必须)header(\"Content-Disposition:attachment;filename=&#123;$fliename&#125;\"); //3. 指定被下载文件的类型(非必须)header(\"Content-Type:image/jpeg\"); //4. 指定被下载文件大小（非必须）header(\"Content-Length:\".filesize($fliename)); //5. 将内容输出，以便下载readfile($fliename);第十二章 GD库PHP中的绘图工具作用：绘制饼图、柱形图、折线图、验证码、水印、缩放版本：GD2版本支持：GIF、JPEG、PNG、WBMP等格式第一节 开启GD库phpinfo()首先查看配置信息中是否有GD库相关模块，直接搜索GD即可php -&gt; php7.0.1 -&gt; ext 目录下查看是否拥有php_gd2.dll文件最后打开php.ini配置文件，搜索 php_gd2.dll ，定位到extension = php_gd2.dll位置，将前面的分号去掉；若没有该配置项，则需要手动添加。第二节 绘画步骤123456789101112131415161718192021222324//示例//1.创建画布$img = imagecreatetruecolor(200,200);//2.准备颜料$red = imagecolorallocate($img,255,0,0);$green = imagecolorallocate($img,0,255,0);$blue = imagecolorallocate($img,0,0,255);$bg = imagecolorallocate($img,200,200,200);//3.绘画...imagefill($img,0,0,$bg); //填充背景imageellipse($img, 200, 200, 100, 100, $blue); //画空心圆imagesetpixel();//绘制像素点imagestring($img, 7, 100, 100, \"This Is hxsd\", $red);//水平绘制字符串//绘画其他..............//4.输出图像header('Content-Type:image/jpeg'); //设置响应类型imagejpeg($img); //将图像输出到网页//4.释放资源imagedestroy($img);第三节 常用函数GD库图片函数的参数很多，具体使用方法,参照php手册函数说明imagecreate()创建一个256色画布imagecreatetruecolor()创建一个真彩画布imagecreatefromgif(完整路径文件名)将一张gif图像放入画布imagecreatefrompng(完整路径文件名)将一张png图像放入画布imagecreatefromjpeg(完整路径文件名)将一张jpeg图像放入画布imagecreatefromstring()从字符串中的图像流新建一图像imagecolorallocate()定义颜色imagefill()填充背景imagesetpixel()绘制像素点imageline()绘制线条imagerectangle()矩形框imagefilledrectangle()实心矩形框imagepolygon()绘制多边形imagefilledpolygon()绘制实心多边形imageellipse()绘制椭圆imagefilledellipse()绘制实心椭圆imagearc()绘制圆弧imagefilledarc()绘制实心圆弧imagettftext()绘制文本需引入字库(支持中文字库，输出中文)getimagesize()获取图像的宽、高、大小、类型等相关信息成功返回：数组 失败返回：falseimagesx(资源)取得图像宽度imagesy(资源)取得图像高度imagecopy()用于拷贝图像或图像的一部分成功返回：true ，失败返回：falseimagecopyresized()用于拷贝部分图像并调整大小imagegif()输出gif格式图像imagejpeg()输出jpeg格式图像imagepng()输出png格式图像imagedestroy()释放资源第十三章 会话控制会话控制是一种跟踪用户的通信方式例如：当一个用户在请求一个页面后，再次请求这个页面，网站是无法知道这个用户刚才是否曾经来访问过。由此我们就会觉得奇怪，平时我们在电商网站购物时，只要我们在这个站点内，不论我们怎么跳转页面，网站总会记得我是谁，这是怎么做到的呢？这就是运用了HTTP会话控制。在网站中跟踪一个变量，通过对变量的跟踪，使多个请求事物之间建立联系，根据授权和用户身份显示不同的内容、不同页面。1. cookiecookie是在服务器端创建，并写回到客户端浏览器浏览器接到指令则在本地临时文件夹中创建了一个cookie文件，其中保存了你的cookie内容cookie内容的存储是键/值对的方式，键和值都只能是字符串。函数功能setcookie( key , value , 过期时间 )设置会话 cookie 参数1234567891011//定义cookie//setcookie(键, 值, 失效时间(秒))//如果不设置失效时间，即关闭浏览器就会消失setcookie('name','zhangsan',time()+1000); setcookie('age',18,time()+1000);setcookie('sex','m',time()+1000);//删除cookiesetcookie('name', '');setcookie('age', null);setcookie('sex', time()-1);2. session函数说明session_start()开启sessionsession_destroy()销毁服务器端session文件session与cookie相似，只是原来将信息存在客户端，现在保存到服务端客户端第一次访问时将信息存到web服务器，同时分配给用户一个固定长度的字符串（sessionID），保存在客户端以后用户再访问该网站的其他页面，就带着这个sessionID去服务端里核对用户信息，以此跟踪用户。12345678910111213141516171819//开启session 要保证在它之前，没有向浏览器输出过任何内容,通常放在代码第一行session_start();//往session中存储信息$_SESSION['name'] = '张三';$_SESSION['sex'] = '男';$_SESSION['age'] = 18;//获取session信息var_dump($_SESSION);//销毁session中的信息unset($_SESSION);//销毁session文件session_destroy();//销毁客户端cookie信息setcookie('PHPSESSID','',time()-1,'/');cookie与session的区别区别cookiesession存放位置客户端服务器安全性不够安全安全资源占用存放在客户端，不占服务器资源占服务器资源生命周期固定时长每次访问，重新计算时长文件大小4k不限制建议将登陆信息等重要信息存放为session，其他信息如果需要保留，可以放在cookie中session垃圾回收(GC)机制GC : Garbage Collection垃圾回收器，GC有专门的机制负责清理垃圾数据，防止内存泄漏。以下是针对session的垃圾回收机制。在php.ini文件中，有以下三个设置，这三个配置组合构建服务端session的垃圾回收机制,默认值为：session.gc_probability = 1session.gc_divisor = 100session.gc_maxlifetime = 1440probability：概率 divisor：除数 maxlifetime ：最大生命周期，服务端定期有一定的概率调用gc函数来对session进行清理，清理的概率为： gc_probability/gc_divisor ，例如:session.gc_probability = 1session.gc_divisor = 100表示每一个新会话初始化时，有1/100的概率会启动垃圾回收程序清理的标准为session.gc_maxlifetime定义的时间由于PHP的工作机制，它并没有一个后台线程，来定时地扫描session信息并判断其是否失效。它的解决之道是，当一个有效请求发生时( 每次session_start() 时 )，PHP会根据gc_probability/gc_divisor的概率，来决定是否调用一个GC。session.gc_maxlifetime只是作为时间节点，如果生存时间已经超过gc_maxlifetime，就把该session删除。第十四章 面向对象的编程第一节 类/对象世间万物皆对象，你自己本身也是一个对象；面向对象的核心就是，让对象帮我们实现功能对象：具有一定功能和特征的单个事物，就是对象类：具有相同功能和特征的对象的抽象，就是类类与对象的关系：对象是类的实例化，类是对象的抽象化1. 修饰符访问修饰符（3p）修饰对象说明public属性 方法公有: 类的内部、外部都可以范围protected属性 方法受保护: 类内部和子类可以访问，外部不能访问private属性 方法私有: 类内部可以访问，外部不能访问额外修饰符修饰对象说明static属性 方法静态: 可以不new实例，直接通过 “类::方法/属性” 的方式调用。静态方法不能调用非静态属性( 非静态属性需要实例化后，存放在对象里 )final类 方法最终: 修饰的类不能被继承，修饰的方法不能被重写abstract类抽象: 定义抽象类2. 定义类与对象实例化123456789101112//使用class关键字定义一个类 类名的首字母要求大写class School&#123; //成员属性 //成员方法&#125;//使用new运算符，实例化一个类的对象$hxsd = new School();//使用instanceof 判断$hxsd是否是School的实例$bool=$hxsd instanceof School;var_dump($bool);3. 类的属性和方法成员属性必须使用“3P”修饰符进行修饰可以没有初始值初始值不能为资源型和对象型初始值不能为变量或函数调用成员属性不能重复定义成员方法必须使用“3P”修饰符进行修饰可以没有形参、程序体与返回值类常量在类中始终保持不变的值定义为常量，类中方法不可更改它的值访问类的常量必须使用双冒号 :: 可以使用类名或类的实例来访问因为是常量，所以名称不能使用表示变量的符号 $123456789101112131415161718192021222324252627282930313233343536373839404142//使用class关键字定义一个类 类名的首字母要求大写 class School&#123; //成员属性----------------------- public $students=100; //公共 学生人数 初始：100人 public $staff=20; //公共 员工 初始：20人 protected $name; // 受保护的 学校名称 未命名 private $tech=100; //私有 技术资料 初始：100份 //类常量------------------------- const LANGUAGE=\"中文\"; //成员方法------------------------ //构造方法 function __construct($shool_name)&#123; $this-&gt;students=1500; $this-&gt;name=$shool_name; &#125; //自定义方法 public function introduce()&#123; echo \"学校简介：本校名称是\".$this-&gt;name.\",本校有\".$this-&gt;students.\"名学生，本校有教师\".$this-&gt;staff.\"人，本校使用\".self::LANGUAGE.\"教学。&lt;br&gt;\"; &#125;&#125;//--------------------------------------------------------------------------------//使用new运算符，实例化一个类的对象$hxsd = new School(\"火星时代\",\"1500\");$hxsd-&gt;introduce(); //修改对象属性$hxsd-&gt;students=2000;$hxsd-&gt;staff=50; //$hxsd-&gt;name=\"金星时代\"; //受保护的属性不能访问$hxsd-&gt;introduce();//类常量可以直接访问var_dump(School::LANGUAGE);var_dump($hxsd::LANGUAGE);//使用instanceof() 判断$hxsd是否是School的实例$bool=$hxsd instanceof School;var_dump($bool);注意类中只能包含成员属性、成员方法、类常量类中成员属性和成员方法的位置可以互换，建议成员属性在前，成员方法在后4. 魔术方法PHP中把以两个下划线__开头的函数(方法)称为魔术方法(Magic methods)，这些函数不需要显示的调用，而是由某种特定的条件触发。魔术方法功能__construct()类的构造函数，当一个类被实例化的时候自动调用__destruct()类的析构函数，脚本执行结束的时候、销毁对象的时候、重新定义对象的时候__get()读取不可访问或不存在属性时被调用__set()当给不可访问或不存在属性赋值时被调用__isset()当对不可访问属性调用isset()或empty()时调用__unset()当对不可访问属性调用unset()时被调用__sleep()当使用serialize时被调用（不需要保存大对象的所有数据时很有用)__wakeup()当使用unserialize时被调用，可用于做些对象的初始化操作__toString()当一个类被转换成字符串时被调用__clone()进行对象clone时被调用，用来调整对象的克隆行为__invoke()当以函数方式调用对象时被调用__set_state()调用var_export()导出类时，此静态方法会被调用__call()调用非public或不存在的方法时被调用__callStatic()调用不可访问或不存在的静态方法时被调用__debugInfo()打印所需调试信息5. 指针指针指向说明$this实例化对象只能应用于成员方法中可以调用本类 或从 父类中继承来的属性和方法不能引用静态成员属性和类常量self类本身可以访问 本类 或 父类 中的静态属性和静态方法parent父类访问 父类 中的静态属性和方法6. static（静态）静态属性/方法，可以不实例化对象而直接访问（类 :: 属性 或 类 :: 方法() ）静态属性和方法默认为公有（public）。静态属性不能通过一个类的实例化对象来访问静态方法依然可以通过一个类的实例化对象来访问静态方法使用 slef :: 方法 slef:: 属性 方式访问其他属性和方法(这些属性和方法也必须是静态的)静态属性只能是标量类型，不能使用表达式、另一个变量、函数返回值 或 指向一个对象静态方法调用一个非静态方法会导致一个 E_STRICT 级别的错误。7. 单例模式单例模式确保某个类只有一个实例，PHP一个主要应用场合就是应用程序与数据库打交道的场景，在一个应用中会存在大量的数据库操作，针对数据库句柄连接数据库的行为，使用单例模式可以避免大量的new操作。因为每一次new操作都会消耗系统和内存的资源。第二节 封装为了最大限度的保护类内部信息的细节而准备，使用3P修饰符和gusic魔术方法来实现类的封装3P修饰符gusic魔术方法public__get(属性名)protected__unset(属性名)private__set(属性名，属性值)__isset(属性名)__call(方法名和参数列表信息)第三节 继承（extends）自己没有，别人有，可以拿来，就是继承1234//使用extends关键字 定义继承类//B 继承 Aclass B extends A&#123;...&#125;1. 3p修饰符的访问限制修饰符类外子类本类public√√√protected×√√private××√2. 重写（重载）子类包含与父类重名的方法，则子类的方法重写（覆盖）父类方法子类中重写的方法，访问权限一定要高于或等于父类方法的访问权限 : public &gt; protected &gt; private静态方法不能修改访问权限（必须还是static）3. 单继承12345678910//php不支持多继承class A&#123;...&#125;class B&#123;...&#125;class C&#123;...&#125;class D extends A,B,C&#123;....&#125; //不能同时继承多个类//若想继承多个类，可以采用如下方法：class B extends A&#123;...&#125; //B继承Aclass C extends B&#123;...&#125; //C继承B，同时继承了Aclass D extends C&#123;...&#125; //D继承C，同时继承了B和A第四节 多态按字面的意思就是“多种状态”。在面向对象语言中，多态就是把子类对象赋值给父类引用，然后调用父类的方法，去执行子类覆盖父类的那个方法。12345678910111213141516171819202122232425262728293031class Man&#123; public function work()&#123; echo \"这个方法需要在子类具体实现\"; &#125; public function doWork($shenfen_obj)&#123;//通过传入不同“身份”的对象，实现不同形态 $shenfen_obj-&gt;work(); &#125;&#125; //定义油漆工类 继承 Man类class Painter extends Man&#123; public function work()&#123; echo \"油漆工正在刷漆！\"; &#125;&#125; //定义教师类 继承 Man类class Teacher extends Man&#123; public function work()&#123; echo \"老师正在上课！\"; &#125;&#125; //实例化一个人$man=new Man();//现在是油漆工$man-&gt;doWork(new Painter());//转换了身份，现在是老师啦$man-&gt;doWork(new Teacher());第五节 __autoload()__autoload()方法并不是一个魔术方法，但是这个方法非常有用，当实例化或继承一个不存在的类，会自动调用__autoload()，同时将该类的类名作为参数12345678910111213// ./lib/School.class.php 文件class School&#123; ...&#125;//当前页面需要调用class Afunction __autoload($arg)&#123; var_dump($arg);// $arg:SChool类名 //引入./lib/School.class.php require './lib/'.$arg.'.class.php';&#125;//实例化对象$hxsd=new School();第六节 抽象类和接口1. 抽象类（abstract）抽象类和抽象方法。定义为抽象的类不能被实例化。任何一个类，如果它里面至少有一个方法是被声明为抽象的，那么这个类就必须被声明为抽象的。被定义为抽象的方法只是声明了其调用方式（参数），不能定义其具体的功能实现。继承一个抽象类的时候，子类必须定义父类中的所有抽象方法；这些方法的访问权限一定要高于或等于父类方法的访问权限 : public &gt; protected &gt; private。此外，方法的调用方式必须匹配，即类型和所需参数数量必须一致。1234567891011121314151617181920212223242526272829303132//定义抽象类abstract class Dev_teamA &#123; public $lesson_A=\"python\"; public $lesson_B=\"BigData\"; //实现study_python方法 public function study_python()&#123; echo \"搞定\".$this-&gt;lesson_A.\"课程\"; &#125; //未实现的方法 使用abstract定义为抽象方法 abstract function study_BigDate();&#125; //子类必须定义父类中的所有抽象方法class Dev_teamB extends Dev_teamA&#123; //子类可以重新父类方法 public function study_python()&#123; echo \"重新搞了一下\".$this-&gt;lesson_A.\"课程\"; &#125; ////子类必须定义父类中的所有抽象方法 public function study_BigDate()&#123; echo \"搞定\".$this-&gt;lesson_B.\"课程\"; &#125;&#125; //实例化对象$dev=new Dev_teamB(); //调用方法$dev-&gt;study_python();$dev-&gt;study_BigDate();2. 接口（interface）如果一个抽象类里面的所有方法都是抽象方法，且没有声明变量，而且接口里面所有的成员都是public权限的，那么这种特殊的抽象类就叫接口（interface）。使用接口可以指定某个类必须实现哪些方法，但不需要定义这些方法的具体内容。接口是通过interface 关键字来定义的，就像定义一个标准的类一样，但其中定义所有的方法都是空的。接口中定义的所有方法都必须是public的。接口中可以定义常量，不可以定义成员属性。接口常量和类常量的使用完全相同，但是不能被子类或子接口所覆盖要实现一个接口，使用 implements 操作符。类中必须实现接口中定义的所有方法，否则会报一个致命错误。类可以实现多个接口，用逗号来分隔多个接口的名称。接口也可以继承（extends）。123456789101112131415161718192021222324252627282930313233343536373839//定义Ai课程interface interface Ai&#123; const LESSON_A=\"python\"; const LESSON_B=\"BigData\"; function study_python(); //研发python课程 function study_BigDate(); //研发BigDate课程 &#125; //dev_teamA类使用implements关键字，来实现Ai接口 //dev_teamA只实现了Ai接口的study_python方法，没有实现study_BigDate //因此，dev_teamA类还是个抽象类，必须用abstract修饰 abstract class dev_teamA implements Ai&#123; //实现study_python方法 public function study_python()&#123; echo \"搞定\".self::lesson_A.\"课程\"; &#125; //未实现的方法 继续使用abstract定义为抽象方法 abstract function study_BigDate(); &#125; //dev_teamB类extends了dev_teamA类，继续进行课程研发 class dev_teamB extends dev_teamA&#123; public function study_python()&#123; echo \"重新搞了一下\".self::lesson_A.\"课程\"; &#125; public function study_BigDate()&#123; echo \"搞定\".self::lesson_B.\"课程\"; &#125; &#125; //--------------------------------------------------------------- //实例化对象 $dev=new dev_teamB(); //调用方法 $dev-&gt;study_python(); $dev-&gt;study_BigDate();3. 抽象类与接口的差别抽象类是对根源的抽象，比如，男人，女人这两个类，可以为这两个类设计一个更高级的抽象类—人。接口是对动作的抽象，比如，定义一个吃饭接口，开车接口，踢球接口等等一个类只能继承一个抽象类（因为，你不可能同时是“人”类 又是“猫”类），但是一个类可以同时实现多个接口。附录：PHP 的报错级别值常量描述1E_ERROR致命的运行时错误。 错误无法恢复过来。脚本的执行被暂停2E_WARNING非致命的运行时错误。 脚本的执行不会停止4E_PARSE编译时分析错误。解析应该只由分析器生成的错误8E_NOTICE可能发现了一个错误16E_CORE_ERROR在PHP启动时的致命错误32E_CORE_WARNING在PHP启动时的非致命错误64E_COMPILE_ERROR致命的编译时错误128E_COMPILE_WARNING非致命编译时警告256E_USER_ERROR用户生成的致命错误512E_USER_WARNING用户生成的非致命警告1024E_USER_NOTICE用户生成的通知2048E_STRICT协同性或兼容性错误4096E_RECOVERABLE_ERROR可捕获的致命错误8191E_ALL所有的错误和警告### $_SERVER参数参数说明$_SERVER[‘REMOTE_PORT’]端口$_SERVER[‘REMOTE_ADDR’]浏览当前页面的用户的 IP 地址$_SERVER[‘SERVER_NAME’]服务器主机的名称$_SERVER[‘SERVER_ADMIN’]管理员信息$_SERVER[‘SERVER_PORT’]服务器所使用的端口$_SERVER[‘SERVER_SIGNATURE’]包含服务器版本和虚拟主机名的字符串$_SERVER[‘argv’]传递给该脚本的参数$_SERVER[‘argc’]传递给程序的命令行参数的个数$_SERVER[‘GATEWAY_INTERFACE’]CGI 规范的版本$_SERVER[‘SERVER_SOFTWARE’]服务器标识的字串$_SERVER[‘SERVER_PROTOCOL’]请求页面时通信协议的名称和版本 例如：”HTTP/1.0”。$_SERVER[‘REQUEST_METHOD’]访问页面时的请求方法 例如：”GET”, “POST”$_SERVER[‘QUERY_STRING’]查询(query)的字符串$_SERVER[‘DOCUMENT_ROOT’]当前运行脚本所在的文档根目录$_SERVER[‘HTTP_ACCEPT’]当前请求的 Accept: 头部的内容$_SERVER[‘HTTP_ACCEPT_CHARSET’]当前请求的 Accept-Charset: 头部的内容$_SERVER[‘HTTP_ACCEPT_ENCODING’]当前请求的 Accept-Encoding: 头部的内容$_SERVER[‘HTTP_CONNECTION’]当前请求的 Connection: 头部的内容。例如：“Keep-Alive”$_SERVER[‘HTTP_HOST’]当前请求的 Host: 头部的内容$_SERVER[‘HTTP_REFERER’]链接到当前页面的前一页面的 URL 地址$_SERVER[‘HTTP_USER_AGENT’]当前请求的 User_Agent: 头部的内容$_SERVER[‘HTTPS’]如果通过https访问,则被设为一个非空的值(on)，否则返回off$_SERVER[‘SCRIPT_FILENAME’]当前执行脚本的绝对路径名$_SERVER[‘SCRIPT_NAME’]包含当前脚本的路径。这在页面需指向自己时非常有用$_SERVER[‘PHP_SELF’]正在执行脚本的文件名$_SERVER[‘PHP_AUTH_USER’]当 PHP 运行在 Apache 模块方式下，并且正在使用 HTTP 认证功能，这个变量便是用户输入的用户名。$_SERVER[‘PHP_AUTH_PW’]当 PHP 运行在 Apache 模块方式下，并且正在使用 HTTP 认证功能，这个变量便是用户输入的密码$_SERVER[‘AUTH_TYPE’]当 PHP 运行在 Apache 模块方式下，并且正在使用 HTTP 认证功能，这个变量便是认证的类型$_SERVER[‘PATH_TRANSLATED’]当前脚本所在文件系统（不是文档根目录）的基本路径"},{"title":"","date":"2018-05-11T08:14:14.313Z","updated":"2018-05-11T08:14:14.313Z","comments":true,"path":"assets/images/nav/iconfont.css","permalink":"http://www.JiShuXuePai.com/assets/images/nav/iconfont.css","excerpt":"","text":"@font-face{font-family:iconfont;src:url(iconfont.eot?t=1491529839522);src:url(iconfont.eot?t=1491529839522#iefix) format('embedded-opentype'),url(iconfont.woff?t=1491529839522) format('woff'),url(iconfont.ttf?t=1491529839522) format('truetype'),url(iconfont.svg?t=1491529839522#iconfont) format('svg')}.iconfont{font-family:iconfont!important;font-size:16px;font-style:normal;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.icon-application:before{content:\"\\e60b\"}.icon-iconfontcolor54:before{content:\"\\e6aa\"}.icon-nodejs:before{content:\"\\e6ba\"}.icon-zuzhi:before{content:\"\\e619\"}.icon-sheji:before{content:\"\\e60c\"}.icon-ziti:before{content:\"\\e623\"}.icon-shequ:before{content:\"\\e6a0\"}.icon-importedlayerscopy3:before{content:\"\\e656\"}.icon-shu-copy:before{content:\"\\e600\"}.icon-gongju:before{content:\"\\e605\"}.icon-daohang:before{content:\"\\e65b\"}.icon-debug:before{content:\"\\e67b\"}.icon-youxi:before{content:\"\\e66f\"}.icon-usersecret:before{content:\"\\e865\"}.icon-tool:before{content:\"\\e601\"}.icon-ui-copy:before{content:\"\\e602\"}.icon-weibiaoti-1-03:before{content:\"\\e604\"}.icon-leimu:before{content:\"\\e683\"}.icon-lecloud_daimagoujian:before{content:\"\\e684\"}.icon-editor:before{content:\"\\e642\"}.icon-liuyan:before{content:\"\\e638\"}.icon-conference:before{content:\"\\e603\"}.icon-jiantou:before{content:\"\\e6a9\"}"},{"title":"","date":"2018-05-11T08:14:14.314Z","updated":"2018-05-11T08:14:14.314Z","comments":true,"path":"assets/images/nav/index.css","permalink":"http://www.JiShuXuePai.com/assets/images/nav/index.css","excerpt":"","text":"body,html,li,p,ul{margin:0;padding:0}li{list-style:none}html{height:100%}body{font-size:12px;color:#4d4d4d;min-height:100vh;-webkit-overflow-scrolling:touch;font-family:PingFangSC-Regular,Helvetica Neue,Microsoft Yahei,微软雅黑}body.is-scroll{pointer-events:none}a{text-decoration:none}.container,.main,body{background:#f3f6f8}.content{-webkit-box-flex:1}@media (min-width:481px){.container .left-bar{width:248px;z-index:100;height:100vh;display:flex;background:#30333c;box-sizing:border-box;flex-direction:column;color:#6b7386}.container .left-bar .nav{flex:1;overflow:hidden;-webkit-overflow-scrolling:touch;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1}.container .left-bar .nav .category-nav,.container .left-bar .nav .item{position:relative}.container .left-bar .nav .item .hairlines{position:absolute;height:24px;right:0;top:11px}.container .left-bar .nav .item:hover .hairlines{background:#494f5e}.container .left-bar .nav .item.active .hairlines{background:#3a85ff}.container .left-bar .nav .item.msg-board{position:fixed;z-index:100;bottom:1px;width:200px;background:#30333c}.container .left-bar .nav .item.msg-board .arrow{position:absolute;right:0;top:0;cursor:pointer}.container .left-bar .nav .nav-item{max-height:100vh;overflow-y:scroll}.container .left-bar .nav .nav-item::-webkit-scrollbar{width:4px}.container .left-bar .nav .nav-item::-webkit-scrollbar-thumb{background-color:#494f5e;border-radius:0}.container .left-bar .nav .nav-item::-webkit-scrollbar-track{border-radius:0}.container .left-bar .nav li,.container .left-bar .nav ul{box-sizing:border-box;min-height:100%}.container .left-bar .nav ul{overflow:hidden}.container .left-bar .nav li.active,.container .left-bar .nav li:hover{cursor:pointer}.container .left-bar .nav li.active a,.container .left-bar .nav li.active i,.container .left-bar .nav li:hover a,.container .left-bar .nav li:hover i{color:#fff}.container .left-bar .nav .menu-list-shadow.is-top{background:linear-gradient(rgba(0,0,0,.1),transparent);height:1rem;top:0;-webkit-transform-origin:center top;transform-origin:center top}.container .left-bar .nav .menu-list-shadow.is-bottom{background:linear-gradient(transparent,rgba(0,0,0,.1));bottom:0;height:1rem;opacity:1;-webkit-transform:scaleY(1);transform:scaleY(1);-webkit-transform-origin:center bottom;transform-origin:center bottom}.container .left-bar .nav .menu-list-shadow{display:block;left:0;opacity:0;pointer-events:none;position:absolute;right:0}.main #mainContent{max-width:1200px;margin:0 auto}.main .fe .item:hover{transform:translateY(-6px);-webkit-transform:translateY(-6px);-moz-transform:translateY(-6px);box-shadow:0 26px 40px -24px rgba(0,36,100,.3);-webkit-box-shadow:0 26px 40px -24px rgba(0,36,100,.3);-moz-box-shadow:0 26px 40px -24px rgba(0,36,100,.3);transition:all .3s ease}}.recommend{height:160px;background:#fff;color:#333;font-size:16px;line-height:22px;padding:4px 36px;bottom:30px}.recommend div,.recommend p{margin-top:8px}.recommend img{height:24px;margin-top:-4px;padding-left:2px;vertical-align:middle;width:24px;max-height:100%;max-width:100%}.recommend .recommend-icon{display:inline}.recommend .recommend-icon a{margin-left:6px;font-size:13px;color:#5491ff;background:#e7f4ff;padding:2px 8px;border-radius:4px}.recommend .recommend-icon a:hover{background:#3a85ff;color:#fff}.container .left-bar{position:fixed;padding:0 24px;z-index:10000}.container .left-bar .title{color:#fff;font-size:18px;height:50px;line-height:50px}.container .left-bar .title p{text-align:center}.container .left-bar .nav .item{height:48px;line-height:46px;border-top:2px solid hsla(0,0%,100%,.04);border-bottom:2px solid hsla(0,0%,100%,.04)}.container .left-bar .nav .item i{color:#6b7386;padding-right:4px}.container .left-bar .nav .item a{display:inline-block;width:100%;color:#fff}.container .left-bar .nav li{height:32px;line-height:32px;padding-left:20px}.container .left-bar .nav li i{padding-right:15px;font-size:12px;color:#6b7386}.container .left-bar .nav li i.icon-goujian{padding-right:10px;margin-left:0}.container .left-bar .nav li a{text-decoration:none;font-size:12px;display:inline-block;width:100%;color:#6b7386}.container .main{display:-webkit-box;display:flex;position:relative;-webkit-box-orient:vertical;flex-direction:column;-webkit-box-pack:center;justify-content:center;margin-left:248px}.container .main #bookShareItem .item .logo img{border-radius:0}.container .main #wechatSubscriptionItem .item .title{text-align:center;margin-bottom:0;margin-left:0}.container .main #wechatSubscriptionItem .item .logo{overflow:auto;float:none;width:auto;height:auto;border-radius:0;text-align:center;padding:0}.container .main #wechatSubscriptionItem .item .logo img{width:127px;height:127px;border-radius:0}.container .main #wechatSubscriptionItem .item .desc{height:20px;margin-top:0;margin-bottom:18px;text-align:center}.container .main #wechatSubscriptionItem .item .desc p{text-overflow:ellipsis;overflow:hidden;white-space:nowrap;width:96%}.container .main .fe{overflow:hidden;background:#fff;margin:20px 30px;padding-bottom:20px}.container .main .fe .sub-category>div{padding:12px 0 0 2.1%;font-size:18px}.container .main .fe .sub-category>div i{font-size:18px}.container .main .fe:last-child{margin-bottom:35px}.container .main .fe .item{border-radius:6px;background:#fff;padding:10px;width:20%;min-width:200px;margin:22px 0 0 2.1%;float:left;overflow:hidden;border:1px solid #e4ecf3;box-shadow:1px 2px 3px #f2f6f8}.container .main .fe .item .title{font-size:14px;font-weight:700;margin:10px;margin-left:50px;color:#3273dc;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;padding:0 .1rem}.container .main .fe .item .desc{color:gray;font-size:12px;padding-top:10px;height:35px;overflow:hidden;text-overflow:ellipsis;display:-webkit-box;-webkit-line-clamp:2;-webkit-box-orient:vertical}.container .main .fe .logo{height:40px;position:relative;font-size:14px;font-weight:700;color:#3273dc;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;padding:0 .1rem}.container .main .fe .logo a{display:inline-block;width:100%}.container .main .fe .logo a:active,.container .main .fe .logo a:focus,.container .main .fe .logo a:hover,.container .main .fe .logo a:visited{background:inherit}.container .main .fe .logo img{width:40px;height:40px;border-radius:50%;vertical-align:middle}.container .footer{width:100%;bottom:0;line-height:45px;background:#fff;box-shadow:0 0 1rem rgba(0,0,0,.2)}.container .footer .recommend,.container .footer p{display:none}.container .footer .copyright{margin-left:30px;color:#949494;font-size:12px}.container .footer .copyright a{text-decoration:none;color:#3a85ff}@media (max-width:480px){.container .left-bar{-webkit-transform:translateZ(0);position:fixed;z-index:1000;width:100%;top:0;padding:0}.container .left-bar .title{display:none}.container .left-bar .category-nav{width:100%;overflow:hidden;height:40px;position:relative}.container .left-bar .nav{padding-top:0}.container .left-bar .nav .item{display:none}.container .left-bar .nav ul{position:absolute;background:#fff;overflow-x:scroll;width:100%;-webkit-overflow-scrolling:touch;white-space:nowrap;top:0;bottom:-30px;left:0;right:0;transform:translateZ(0);-webkit-transform:translateZ(0);box-shadow:0 0 2rem rgba(0,0,0,.2)}.container .left-bar .nav ul::-webkit-scrollbar{display:none}.container .left-bar .nav ul li{display:inline-block;padding:0 .1rem}.container .left-bar .nav ul>*{transform:translateZ(0)}.container .left-bar .nav li{height:.7rem;line-height:.7rem}.container .left-bar .nav li i{display:none}.container .left-bar .nav li a{text-decoration:none;font-size:14px;display:inline-block;height:26px;line-height:26px;padding:2px;color:#555e6b}.container .left-bar .nav li.active{background:#3a85ff}.container .left-bar .nav li.active a{color:#fff}.container .left-bar .recommend{display:none}.container .main{-webkit-transform:translateZ(0);transform:translateZ(0);margin:0;padding-top:40px}.container .main .fe{margin:16px 3% 0;overflow:hidden}.container .main .fe .sub-category>div{padding-left:3%}.container .main .fe .item{width:39.5%;float:left;min-width:100px;margin-left:3%;margin-top:12px}.container .main .fe .item .title{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;padding:0 .1rem;margin:.2rem auto}.container .main .fe .item .desc{margin-bottom:10px;margin-top:5px;margin-left:5px;height:.58rem;font-size:12px;line-height:16px}.container .main .fe:last-child{margin-bottom:16px}.container .footer{height:1.2rem;position:relative;margin-left:0;bottom:0;font-size:14px}.container .footer p{text-align:center;display:block;height:30px;margin-top:10px;font-size:16px;line-height:22px}.container .footer a{color:#1982d1}.container .footer .recommend{height:1.8rem;display:block}.container .footer .copyright{background:#fff;margin-left:auto;color:#949494;font-size:12px}.container .footer .copyright>div{text-align:center}}@media (min-width:380px) and (max-width:480px){.container .main .fe .item .desc{height:.52rem}}@media (min-width:481px){.container .main .fe .item{width:80%}}@media (min-width:768px){.container .main .fe .item{width:43%}}@media (min-width:1040px){.container .main .fe .item{width:28%}}@media (min-width:1200px){.container .main .fe .item{width:20%}}"},{"title":"","date":"2018-05-11T08:14:14.775Z","updated":"2018-05-11T08:14:14.775Z","comments":true,"path":"tech/animate/css/relative.css","permalink":"http://www.JiShuXuePai.com/tech/animate/css/relative.css","excerpt":"","text":"*{margin:0;padding:0}body{background:#eaeaea;font:14px \"open sans\",\"Helvetica Neue\",\"Microsoft Yahei\",Helvetica,Arial,sans-serif!important;font-weight:300}.sm_banner{background-color:#38b7ea;color:#fff;font:14px \"open sans\",\"Helvetica Neue\",\"Microsoft Yahei\",Helvetica,Arial,sans-serif}.txt-center{text-align:center}.blue{background:#38b7ea;color:#fff}.main_left{background:#fff;padding-top:30px}.main_left>.linklist dl{padding:30px 20px;padding-right:100px;text-align:center;background-color:#eaeaea;border-radius:8px;background-image:url(../images/book.png);background-size:120px;background-position:right -5px top 5px;background-repeat:no-repeat}.main_left>.linklist dl>dt{font-size:22px;font-weight:400}.main_left>.linklist dl>dd{font-size:16px;line-height:30px}.main_left>.downlist dl{padding:20px;padding-left:150px;border-top:1px #ccc solid;background-image:url(../images/book.png);background-size:120px;background-repeat:no-repeat;background-position:10px 15px}.main_left>.downlist dt{padding-bottom:10px}.main_left .left{float:left;font-size:15px}.main_left .right{float:right;font-size:15px;border:1px #ccc solid;padding:5px 15px;border-radius:3px;cursor:pointer}.main_left .down_btn{padding-top:15px}.main_right{background:#f0f0f0}.main_right .item{border:1px #ddd solid;font-size:13px}.main_right .container>.row{padding-top:40px}.main_right .item>dt{text-align:center;height:130px;background-color:#fff;padding-top:15px}.main_right .item>dt>img{height:100px}.main_right .item>dd>p{font-size:18px;height:48px;line-height:48px;text-align:center;margin-bottom:0}.main_right .item>dd{margin-bottom:0}.main_right .item input{border:none;color:#fff;width:100px;height:30px;display:block;border-radius:20px;font-size:14px;line-height:30px;text-align:center;margin:10px auto 10px;background:#38b7ea;cursor:pointer}.main_right .item input:hover{background:#49c8fb;transition:all .5s}.main_right .mybtn{height:50px;text-align:center}.main_right .text1,.main_right .text2{margin:0}.main_right .text1{text-align:center}.main_right .text1>div{padding:8px 0;border-top:1px solid #ccc}.main_right .text1 .center{border-left:1px solid #ccc;border-right:1px solid #ccc}.main_right .text2{text-align:center}.main_right .text2 .border_right{border-right:1px solid #ccc}.main_right .text2>div{border-top:1px solid #ccc;padding:15px 0;border-bottom:none;line-height:1em}"},{"title":"","date":"2018-05-11T08:14:14.774Z","updated":"2018-05-11T08:14:14.774Z","comments":true,"path":"tech/animate/css/animate.min.css","permalink":"http://www.JiShuXuePai.com/tech/animate/css/animate.min.css","excerpt":"","text":"@charset \"UTF-8\";/*! Animate.css - http://daneden.me/animate Licensed under the MIT license - http://opensource.org/licenses/MIT Copyright (c) 2014 Daniel Eden */.animated{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both}.animated.infinite{-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite}.animated.hinge{-webkit-animation-duration:2s;animation-duration:2s}@-webkit-keyframes bounce{0%,100%,20%,53%,80%{-webkit-transition-timing-function:cubic-bezier(0.215,.61,.355,1);transition-timing-function:cubic-bezier(0.215,.61,.355,1);-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}40%,43%{-webkit-transition-timing-function:cubic-bezier(0.755,.050,.855,.060);transition-timing-function:cubic-bezier(0.755,.050,.855,.060);-webkit-transform:translate3d(0,-30px,0);transform:translate3d(0,-30px,0)}70%{-webkit-transition-timing-function:cubic-bezier(0.755,.050,.855,.060);transition-timing-function:cubic-bezier(0.755,.050,.855,.060);-webkit-transform:translate3d(0,-15px,0);transform:translate3d(0,-15px,0)}90%{-webkit-transform:translate3d(0,-4px,0);transform:translate3d(0,-4px,0)}}@keyframes bounce{0%,100%,20%,53%,80%{-webkit-transition-timing-function:cubic-bezier(0.215,.61,.355,1);transition-timing-function:cubic-bezier(0.215,.61,.355,1);-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}40%,43%{-webkit-transition-timing-function:cubic-bezier(0.755,.050,.855,.060);transition-timing-function:cubic-bezier(0.755,.050,.855,.060);-webkit-transform:translate3d(0,-30px,0);transform:translate3d(0,-30px,0)}70%{-webkit-transition-timing-function:cubic-bezier(0.755,.050,.855,.060);transition-timing-function:cubic-bezier(0.755,.050,.855,.060);-webkit-transform:translate3d(0,-15px,0);transform:translate3d(0,-15px,0)}90%{-webkit-transform:translate3d(0,-4px,0);transform:translate3d(0,-4px,0)}}.bounce{-webkit-animation-name:bounce;animation-name:bounce;-webkit-transform-origin:center bottom;-ms-transform-origin:center bottom;transform-origin:center bottom}@-webkit-keyframes flash{0%,100%,50%{opacity:1}25%,75%{opacity:0}}@keyframes flash{0%,100%,50%{opacity:1}25%,75%{opacity:0}}.flash{-webkit-animation-name:flash;animation-name:flash}@-webkit-keyframes pulse{0%{-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}50%{-webkit-transform:scale3d(1.05,1.05,1.05);transform:scale3d(1.05,1.05,1.05)}100%{-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}}@keyframes pulse{0%{-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}50%{-webkit-transform:scale3d(1.05,1.05,1.05);transform:scale3d(1.05,1.05,1.05)}100%{-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}}.pulse{-webkit-animation-name:pulse;animation-name:pulse}@-webkit-keyframes rubberBand{0%{-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}30%{-webkit-transform:scale3d(1.25,.75,1);transform:scale3d(1.25,.75,1)}40%{-webkit-transform:scale3d(0.75,1.25,1);transform:scale3d(0.75,1.25,1)}50%{-webkit-transform:scale3d(1.15,.85,1);transform:scale3d(1.15,.85,1)}65%{-webkit-transform:scale3d(.95,1.05,1);transform:scale3d(.95,1.05,1)}75%{-webkit-transform:scale3d(1.05,.95,1);transform:scale3d(1.05,.95,1)}100%{-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}}@keyframes rubberBand{0%{-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}30%{-webkit-transform:scale3d(1.25,.75,1);transform:scale3d(1.25,.75,1)}40%{-webkit-transform:scale3d(0.75,1.25,1);transform:scale3d(0.75,1.25,1)}50%{-webkit-transform:scale3d(1.15,.85,1);transform:scale3d(1.15,.85,1)}65%{-webkit-transform:scale3d(.95,1.05,1);transform:scale3d(.95,1.05,1)}75%{-webkit-transform:scale3d(1.05,.95,1);transform:scale3d(1.05,.95,1)}100%{-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}}.rubberBand{-webkit-animation-name:rubberBand;animation-name:rubberBand}@-webkit-keyframes shake{0%,100%{-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}10%,30%,50%,70%,90%{-webkit-transform:translate3d(-10px,0,0);transform:translate3d(-10px,0,0)}20%,40%,60%,80%{-webkit-transform:translate3d(10px,0,0);transform:translate3d(10px,0,0)}}@keyframes shake{0%,100%{-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}10%,30%,50%,70%,90%{-webkit-transform:translate3d(-10px,0,0);transform:translate3d(-10px,0,0)}20%,40%,60%,80%{-webkit-transform:translate3d(10px,0,0);transform:translate3d(10px,0,0)}}.shake{-webkit-animation-name:shake;animation-name:shake}@-webkit-keyframes swing{20%{-webkit-transform:rotate3d(0,0,1,15deg);transform:rotate3d(0,0,1,15deg)}40%{-webkit-transform:rotate3d(0,0,1,-10deg);transform:rotate3d(0,0,1,-10deg)}60%{-webkit-transform:rotate3d(0,0,1,5deg);transform:rotate3d(0,0,1,5deg)}80%{-webkit-transform:rotate3d(0,0,1,-5deg);transform:rotate3d(0,0,1,-5deg)}100%{-webkit-transform:rotate3d(0,0,1,0deg);transform:rotate3d(0,0,1,0deg)}}@keyframes swing{20%{-webkit-transform:rotate3d(0,0,1,15deg);transform:rotate3d(0,0,1,15deg)}40%{-webkit-transform:rotate3d(0,0,1,-10deg);transform:rotate3d(0,0,1,-10deg)}60%{-webkit-transform:rotate3d(0,0,1,5deg);transform:rotate3d(0,0,1,5deg)}80%{-webkit-transform:rotate3d(0,0,1,-5deg);transform:rotate3d(0,0,1,-5deg)}100%{-webkit-transform:rotate3d(0,0,1,0deg);transform:rotate3d(0,0,1,0deg)}}.swing{-webkit-transform-origin:top center;-ms-transform-origin:top center;transform-origin:top center;-webkit-animation-name:swing;animation-name:swing}@-webkit-keyframes tada{0%{-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}10%,20%{-webkit-transform:scale3d(.9,.9,.9) rotate3d(0,0,1,-3deg);transform:scale3d(.9,.9,.9) rotate3d(0,0,1,-3deg)}30%,50%,70%,90%{-webkit-transform:scale3d(1.1,1.1,1.1) rotate3d(0,0,1,3deg);transform:scale3d(1.1,1.1,1.1) rotate3d(0,0,1,3deg)}40%,60%,80%{-webkit-transform:scale3d(1.1,1.1,1.1) rotate3d(0,0,1,-3deg);transform:scale3d(1.1,1.1,1.1) rotate3d(0,0,1,-3deg)}100%{-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}}@keyframes tada{0%{-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}10%,20%{-webkit-transform:scale3d(.9,.9,.9) rotate3d(0,0,1,-3deg);transform:scale3d(.9,.9,.9) rotate3d(0,0,1,-3deg)}30%,50%,70%,90%{-webkit-transform:scale3d(1.1,1.1,1.1) rotate3d(0,0,1,3deg);transform:scale3d(1.1,1.1,1.1) rotate3d(0,0,1,3deg)}40%,60%,80%{-webkit-transform:scale3d(1.1,1.1,1.1) rotate3d(0,0,1,-3deg);transform:scale3d(1.1,1.1,1.1) rotate3d(0,0,1,-3deg)}100%{-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}}.tada{-webkit-animation-name:tada;animation-name:tada}@-webkit-keyframes wobble{0%{-webkit-transform:none;transform:none}15%{-webkit-transform:translate3d(-25%,0,0) rotate3d(0,0,1,-5deg);transform:translate3d(-25%,0,0) rotate3d(0,0,1,-5deg)}30%{-webkit-transform:translate3d(20%,0,0) rotate3d(0,0,1,3deg);transform:translate3d(20%,0,0) rotate3d(0,0,1,3deg)}45%{-webkit-transform:translate3d(-15%,0,0) rotate3d(0,0,1,-3deg);transform:translate3d(-15%,0,0) rotate3d(0,0,1,-3deg)}60%{-webkit-transform:translate3d(10%,0,0) rotate3d(0,0,1,2deg);transform:translate3d(10%,0,0) rotate3d(0,0,1,2deg)}75%{-webkit-transform:translate3d(-5%,0,0) rotate3d(0,0,1,-1deg);transform:translate3d(-5%,0,0) rotate3d(0,0,1,-1deg)}100%{-webkit-transform:none;transform:none}}@keyframes wobble{0%{-webkit-transform:none;transform:none}15%{-webkit-transform:translate3d(-25%,0,0) rotate3d(0,0,1,-5deg);transform:translate3d(-25%,0,0) rotate3d(0,0,1,-5deg)}30%{-webkit-transform:translate3d(20%,0,0) rotate3d(0,0,1,3deg);transform:translate3d(20%,0,0) rotate3d(0,0,1,3deg)}45%{-webkit-transform:translate3d(-15%,0,0) rotate3d(0,0,1,-3deg);transform:translate3d(-15%,0,0) rotate3d(0,0,1,-3deg)}60%{-webkit-transform:translate3d(10%,0,0) rotate3d(0,0,1,2deg);transform:translate3d(10%,0,0) rotate3d(0,0,1,2deg)}75%{-webkit-transform:translate3d(-5%,0,0) rotate3d(0,0,1,-1deg);transform:translate3d(-5%,0,0) rotate3d(0,0,1,-1deg)}100%{-webkit-transform:none;transform:none}}.wobble{-webkit-animation-name:wobble;animation-name:wobble}@-webkit-keyframes bounceIn{0%,100%,20%,40%,60%,80%{-webkit-transition-timing-function:cubic-bezier(0.215,.61,.355,1);transition-timing-function:cubic-bezier(0.215,.61,.355,1)}0%{opacity:0;-webkit-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}20%{-webkit-transform:scale3d(1.1,1.1,1.1);transform:scale3d(1.1,1.1,1.1)}40%{-webkit-transform:scale3d(.9,.9,.9);transform:scale3d(.9,.9,.9)}60%{opacity:1;-webkit-transform:scale3d(1.03,1.03,1.03);transform:scale3d(1.03,1.03,1.03)}80%{-webkit-transform:scale3d(.97,.97,.97);transform:scale3d(.97,.97,.97)}100%{opacity:1;-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}}@keyframes bounceIn{0%,100%,20%,40%,60%,80%{-webkit-transition-timing-function:cubic-bezier(0.215,.61,.355,1);transition-timing-function:cubic-bezier(0.215,.61,.355,1)}0%{opacity:0;-webkit-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}20%{-webkit-transform:scale3d(1.1,1.1,1.1);transform:scale3d(1.1,1.1,1.1)}40%{-webkit-transform:scale3d(.9,.9,.9);transform:scale3d(.9,.9,.9)}60%{opacity:1;-webkit-transform:scale3d(1.03,1.03,1.03);transform:scale3d(1.03,1.03,1.03)}80%{-webkit-transform:scale3d(.97,.97,.97);transform:scale3d(.97,.97,.97)}100%{opacity:1;-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}}.bounceIn{-webkit-animation-name:bounceIn;animation-name:bounceIn;-webkit-animation-duration:.75s;animation-duration:.75s}@-webkit-keyframes bounceInDown{0%,100%,60%,75%,90%{-webkit-transition-timing-function:cubic-bezier(0.215,.61,.355,1);transition-timing-function:cubic-bezier(0.215,.61,.355,1)}0%{opacity:0;-webkit-transform:translate3d(0,-3000px,0);transform:translate3d(0,-3000px,0)}60%{opacity:1;-webkit-transform:translate3d(0,25px,0);transform:translate3d(0,25px,0)}75%{-webkit-transform:translate3d(0,-10px,0);transform:translate3d(0,-10px,0)}90%{-webkit-transform:translate3d(0,5px,0);transform:translate3d(0,5px,0)}100%{-webkit-transform:none;transform:none}}@keyframes bounceInDown{0%,100%,60%,75%,90%{-webkit-transition-timing-function:cubic-bezier(0.215,.61,.355,1);transition-timing-function:cubic-bezier(0.215,.61,.355,1)}0%{opacity:0;-webkit-transform:translate3d(0,-3000px,0);transform:translate3d(0,-3000px,0)}60%{opacity:1;-webkit-transform:translate3d(0,25px,0);transform:translate3d(0,25px,0)}75%{-webkit-transform:translate3d(0,-10px,0);transform:translate3d(0,-10px,0)}90%{-webkit-transform:translate3d(0,5px,0);transform:translate3d(0,5px,0)}100%{-webkit-transform:none;transform:none}}.bounceInDown{-webkit-animation-name:bounceInDown;animation-name:bounceInDown}@-webkit-keyframes bounceInLeft{0%,100%,60%,75%,90%{-webkit-transition-timing-function:cubic-bezier(0.215,.61,.355,1);transition-timing-function:cubic-bezier(0.215,.61,.355,1)}0%{opacity:0;-webkit-transform:translate3d(-3000px,0,0);transform:translate3d(-3000px,0,0)}60%{opacity:1;-webkit-transform:translate3d(25px,0,0);transform:translate3d(25px,0,0)}75%{-webkit-transform:translate3d(-10px,0,0);transform:translate3d(-10px,0,0)}90%{-webkit-transform:translate3d(5px,0,0);transform:translate3d(5px,0,0)}100%{-webkit-transform:none;transform:none}}@keyframes bounceInLeft{0%,100%,60%,75%,90%{-webkit-transition-timing-function:cubic-bezier(0.215,.61,.355,1);transition-timing-function:cubic-bezier(0.215,.61,.355,1)}0%{opacity:0;-webkit-transform:translate3d(-3000px,0,0);transform:translate3d(-3000px,0,0)}60%{opacity:1;-webkit-transform:translate3d(25px,0,0);transform:translate3d(25px,0,0)}75%{-webkit-transform:translate3d(-10px,0,0);transform:translate3d(-10px,0,0)}90%{-webkit-transform:translate3d(5px,0,0);transform:translate3d(5px,0,0)}100%{-webkit-transform:none;transform:none}}.bounceInLeft{-webkit-animation-name:bounceInLeft;animation-name:bounceInLeft}@-webkit-keyframes bounceInRight{0%,100%,60%,75%,90%{-webkit-transition-timing-function:cubic-bezier(0.215,.61,.355,1);transition-timing-function:cubic-bezier(0.215,.61,.355,1)}0%{opacity:0;-webkit-transform:translate3d(3000px,0,0);transform:translate3d(3000px,0,0)}60%{opacity:1;-webkit-transform:translate3d(-25px,0,0);transform:translate3d(-25px,0,0)}75%{-webkit-transform:translate3d(10px,0,0);transform:translate3d(10px,0,0)}90%{-webkit-transform:translate3d(-5px,0,0);transform:translate3d(-5px,0,0)}100%{-webkit-transform:none;transform:none}}@keyframes bounceInRight{0%,100%,60%,75%,90%{-webkit-transition-timing-function:cubic-bezier(0.215,.61,.355,1);transition-timing-function:cubic-bezier(0.215,.61,.355,1)}0%{opacity:0;-webkit-transform:translate3d(3000px,0,0);transform:translate3d(3000px,0,0)}60%{opacity:1;-webkit-transform:translate3d(-25px,0,0);transform:translate3d(-25px,0,0)}75%{-webkit-transform:translate3d(10px,0,0);transform:translate3d(10px,0,0)}90%{-webkit-transform:translate3d(-5px,0,0);transform:translate3d(-5px,0,0)}100%{-webkit-transform:none;transform:none}}.bounceInRight{-webkit-animation-name:bounceInRight;animation-name:bounceInRight}@-webkit-keyframes bounceInUp{0%,100%,60%,75%,90%{-webkit-transition-timing-function:cubic-bezier(0.215,.61,.355,1);transition-timing-function:cubic-bezier(0.215,.61,.355,1)}0%{opacity:0;-webkit-transform:translate3d(0,3000px,0);transform:translate3d(0,3000px,0)}60%{opacity:1;-webkit-transform:translate3d(0,-20px,0);transform:translate3d(0,-20px,0)}75%{-webkit-transform:translate3d(0,10px,0);transform:translate3d(0,10px,0)}90%{-webkit-transform:translate3d(0,-5px,0);transform:translate3d(0,-5px,0)}100%{-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}}@keyframes bounceInUp{0%,100%,60%,75%,90%{-webkit-transition-timing-function:cubic-bezier(0.215,.61,.355,1);transition-timing-function:cubic-bezier(0.215,.61,.355,1)}0%{opacity:0;-webkit-transform:translate3d(0,3000px,0);transform:translate3d(0,3000px,0)}60%{opacity:1;-webkit-transform:translate3d(0,-20px,0);transform:translate3d(0,-20px,0)}75%{-webkit-transform:translate3d(0,10px,0);transform:translate3d(0,10px,0)}90%{-webkit-transform:translate3d(0,-5px,0);transform:translate3d(0,-5px,0)}100%{-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}}.bounceInUp{-webkit-animation-name:bounceInUp;animation-name:bounceInUp}@-webkit-keyframes bounceOut{20%{-webkit-transform:scale3d(.9,.9,.9);transform:scale3d(.9,.9,.9)}50%,55%{opacity:1;-webkit-transform:scale3d(1.1,1.1,1.1);transform:scale3d(1.1,1.1,1.1)}100%{opacity:0;-webkit-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}}@keyframes bounceOut{20%{-webkit-transform:scale3d(.9,.9,.9);transform:scale3d(.9,.9,.9)}50%,55%{opacity:1;-webkit-transform:scale3d(1.1,1.1,1.1);transform:scale3d(1.1,1.1,1.1)}100%{opacity:0;-webkit-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}}.bounceOut{-webkit-animation-name:bounceOut;animation-name:bounceOut;-webkit-animation-duration:.75s;animation-duration:.75s}@-webkit-keyframes bounceOutDown{20%{-webkit-transform:translate3d(0,10px,0);transform:translate3d(0,10px,0)}40%,45%{opacity:1;-webkit-transform:translate3d(0,-20px,0);transform:translate3d(0,-20px,0)}100%{opacity:0;-webkit-transform:translate3d(0,2000px,0);transform:translate3d(0,2000px,0)}}@keyframes bounceOutDown{20%{-webkit-transform:translate3d(0,10px,0);transform:translate3d(0,10px,0)}40%,45%{opacity:1;-webkit-transform:translate3d(0,-20px,0);transform:translate3d(0,-20px,0)}100%{opacity:0;-webkit-transform:translate3d(0,2000px,0);transform:translate3d(0,2000px,0)}}.bounceOutDown{-webkit-animation-name:bounceOutDown;animation-name:bounceOutDown}@-webkit-keyframes bounceOutLeft{20%{opacity:1;-webkit-transform:translate3d(20px,0,0);transform:translate3d(20px,0,0)}100%{opacity:0;-webkit-transform:translate3d(-2000px,0,0);transform:translate3d(-2000px,0,0)}}@keyframes bounceOutLeft{20%{opacity:1;-webkit-transform:translate3d(20px,0,0);transform:translate3d(20px,0,0)}100%{opacity:0;-webkit-transform:translate3d(-2000px,0,0);transform:translate3d(-2000px,0,0)}}.bounceOutLeft{-webkit-animation-name:bounceOutLeft;animation-name:bounceOutLeft}@-webkit-keyframes bounceOutRight{20%{opacity:1;-webkit-transform:translate3d(-20px,0,0);transform:translate3d(-20px,0,0)}100%{opacity:0;-webkit-transform:translate3d(2000px,0,0);transform:translate3d(2000px,0,0)}}@keyframes bounceOutRight{20%{opacity:1;-webkit-transform:translate3d(-20px,0,0);transform:translate3d(-20px,0,0)}100%{opacity:0;-webkit-transform:translate3d(2000px,0,0);transform:translate3d(2000px,0,0)}}.bounceOutRight{-webkit-animation-name:bounceOutRight;animation-name:bounceOutRight}@-webkit-keyframes bounceOutUp{20%{-webkit-transform:translate3d(0,-10px,0);transform:translate3d(0,-10px,0)}40%,45%{opacity:1;-webkit-transform:translate3d(0,20px,0);transform:translate3d(0,20px,0)}100%{opacity:0;-webkit-transform:translate3d(0,-2000px,0);transform:translate3d(0,-2000px,0)}}@keyframes bounceOutUp{20%{-webkit-transform:translate3d(0,-10px,0);transform:translate3d(0,-10px,0)}40%,45%{opacity:1;-webkit-transform:translate3d(0,20px,0);transform:translate3d(0,20px,0)}100%{opacity:0;-webkit-transform:translate3d(0,-2000px,0);transform:translate3d(0,-2000px,0)}}.bounceOutUp{-webkit-animation-name:bounceOutUp;animation-name:bounceOutUp}@-webkit-keyframes fadeIn{0%{opacity:0}100%{opacity:1}}@keyframes fadeIn{0%{opacity:0}100%{opacity:1}}.fadeIn{-webkit-animation-name:fadeIn;animation-name:fadeIn}@-webkit-keyframes fadeInDown{0%{opacity:0;-webkit-transform:translate3d(0,-100%,0);transform:translate3d(0,-100%,0)}100%{opacity:1;-webkit-transform:none;transform:none}}@keyframes fadeInDown{0%{opacity:0;-webkit-transform:translate3d(0,-100%,0);transform:translate3d(0,-100%,0)}100%{opacity:1;-webkit-transform:none;transform:none}}.fadeInDown{-webkit-animation-name:fadeInDown;animation-name:fadeInDown}@-webkit-keyframes fadeInDownBig{0%{opacity:0;-webkit-transform:translate3d(0,-2000px,0);transform:translate3d(0,-2000px,0)}100%{opacity:1;-webkit-transform:none;transform:none}}@keyframes fadeInDownBig{0%{opacity:0;-webkit-transform:translate3d(0,-2000px,0);transform:translate3d(0,-2000px,0)}100%{opacity:1;-webkit-transform:none;transform:none}}.fadeInDownBig{-webkit-animation-name:fadeInDownBig;animation-name:fadeInDownBig}@-webkit-keyframes fadeInLeft{0%{opacity:0;-webkit-transform:translate3d(-100%,0,0);transform:translate3d(-100%,0,0)}100%{opacity:1;-webkit-transform:none;transform:none}}@keyframes fadeInLeft{0%{opacity:0;-webkit-transform:translate3d(-100%,0,0);transform:translate3d(-100%,0,0)}100%{opacity:1;-webkit-transform:none;transform:none}}.fadeInLeft{-webkit-animation-name:fadeInLeft;animation-name:fadeInLeft}@-webkit-keyframes fadeInLeftBig{0%{opacity:0;-webkit-transform:translate3d(-2000px,0,0);transform:translate3d(-2000px,0,0)}100%{opacity:1;-webkit-transform:none;transform:none}}@keyframes fadeInLeftBig{0%{opacity:0;-webkit-transform:translate3d(-2000px,0,0);transform:translate3d(-2000px,0,0)}100%{opacity:1;-webkit-transform:none;transform:none}}.fadeInLeftBig{-webkit-animation-name:fadeInLeftBig;animation-name:fadeInLeftBig}@-webkit-keyframes fadeInRight{0%{opacity:0;-webkit-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0)}100%{opacity:1;-webkit-transform:none;transform:none}}@keyframes fadeInRight{0%{opacity:0;-webkit-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0)}100%{opacity:1;-webkit-transform:none;transform:none}}.fadeInRight{-webkit-animation-name:fadeInRight;animation-name:fadeInRight}@-webkit-keyframes fadeInRightBig{0%{opacity:0;-webkit-transform:translate3d(2000px,0,0);transform:translate3d(2000px,0,0)}100%{opacity:1;-webkit-transform:none;transform:none}}@keyframes fadeInRightBig{0%{opacity:0;-webkit-transform:translate3d(2000px,0,0);transform:translate3d(2000px,0,0)}100%{opacity:1;-webkit-transform:none;transform:none}}.fadeInRightBig{-webkit-animation-name:fadeInRightBig;animation-name:fadeInRightBig}@-webkit-keyframes fadeInUp{0%{opacity:0;-webkit-transform:translate3d(0,100%,0);transform:translate3d(0,100%,0)}100%{opacity:1;-webkit-transform:none;transform:none}}@keyframes fadeInUp{0%{opacity:0;-webkit-transform:translate3d(0,100%,0);transform:translate3d(0,100%,0)}100%{opacity:1;-webkit-transform:none;transform:none}}.fadeInUp{-webkit-animation-name:fadeInUp;animation-name:fadeInUp}@-webkit-keyframes fadeInUpBig{0%{opacity:0;-webkit-transform:translate3d(0,2000px,0);transform:translate3d(0,2000px,0)}100%{opacity:1;-webkit-transform:none;transform:none}}@keyframes fadeInUpBig{0%{opacity:0;-webkit-transform:translate3d(0,2000px,0);transform:translate3d(0,2000px,0)}100%{opacity:1;-webkit-transform:none;transform:none}}.fadeInUpBig{-webkit-animation-name:fadeInUpBig;animation-name:fadeInUpBig}@-webkit-keyframes fadeOut{0%{opacity:1}100%{opacity:0}}@keyframes fadeOut{0%{opacity:1}100%{opacity:0}}.fadeOut{-webkit-animation-name:fadeOut;animation-name:fadeOut}@-webkit-keyframes fadeOutDown{0%{opacity:1}100%{opacity:0;-webkit-transform:translate3d(0,100%,0);transform:translate3d(0,100%,0)}}@keyframes fadeOutDown{0%{opacity:1}100%{opacity:0;-webkit-transform:translate3d(0,100%,0);transform:translate3d(0,100%,0)}}.fadeOutDown{-webkit-animation-name:fadeOutDown;animation-name:fadeOutDown}@-webkit-keyframes fadeOutDownBig{0%{opacity:1}100%{opacity:0;-webkit-transform:translate3d(0,2000px,0);transform:translate3d(0,2000px,0)}}@keyframes fadeOutDownBig{0%{opacity:1}100%{opacity:0;-webkit-transform:translate3d(0,2000px,0);transform:translate3d(0,2000px,0)}}.fadeOutDownBig{-webkit-animation-name:fadeOutDownBig;animation-name:fadeOutDownBig}@-webkit-keyframes fadeOutLeft{0%{opacity:1}100%{opacity:0;-webkit-transform:translate3d(-100%,0,0);transform:translate3d(-100%,0,0)}}@keyframes fadeOutLeft{0%{opacity:1}100%{opacity:0;-webkit-transform:translate3d(-100%,0,0);transform:translate3d(-100%,0,0)}}.fadeOutLeft{-webkit-animation-name:fadeOutLeft;animation-name:fadeOutLeft}@-webkit-keyframes fadeOutLeftBig{0%{opacity:1}100%{opacity:0;-webkit-transform:translate3d(-2000px,0,0);transform:translate3d(-2000px,0,0)}}@keyframes fadeOutLeftBig{0%{opacity:1}100%{opacity:0;-webkit-transform:translate3d(-2000px,0,0);transform:translate3d(-2000px,0,0)}}.fadeOutLeftBig{-webkit-animation-name:fadeOutLeftBig;animation-name:fadeOutLeftBig}@-webkit-keyframes fadeOutRight{0%{opacity:1}100%{opacity:0;-webkit-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0)}}@keyframes fadeOutRight{0%{opacity:1}100%{opacity:0;-webkit-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0)}}.fadeOutRight{-webkit-animation-name:fadeOutRight;animation-name:fadeOutRight}@-webkit-keyframes fadeOutRightBig{0%{opacity:1}100%{opacity:0;-webkit-transform:translate3d(2000px,0,0);transform:translate3d(2000px,0,0)}}@keyframes fadeOutRightBig{0%{opacity:1}100%{opacity:0;-webkit-transform:translate3d(2000px,0,0);transform:translate3d(2000px,0,0)}}.fadeOutRightBig{-webkit-animation-name:fadeOutRightBig;animation-name:fadeOutRightBig}@-webkit-keyframes fadeOutUp{0%{opacity:1}100%{opacity:0;-webkit-transform:translate3d(0,-100%,0);transform:translate3d(0,-100%,0)}}@keyframes fadeOutUp{0%{opacity:1}100%{opacity:0;-webkit-transform:translate3d(0,-100%,0);transform:translate3d(0,-100%,0)}}.fadeOutUp{-webkit-animation-name:fadeOutUp;animation-name:fadeOutUp}@-webkit-keyframes fadeOutUpBig{0%{opacity:1}100%{opacity:0;-webkit-transform:translate3d(0,-2000px,0);transform:translate3d(0,-2000px,0)}}@keyframes fadeOutUpBig{0%{opacity:1}100%{opacity:0;-webkit-transform:translate3d(0,-2000px,0);transform:translate3d(0,-2000px,0)}}.fadeOutUpBig{-webkit-animation-name:fadeOutUpBig;animation-name:fadeOutUpBig}@-webkit-keyframes flip{0%{-webkit-transform:perspective(400px) rotate3d(0,1,0,-360deg);transform:perspective(400px) rotate3d(0,1,0,-360deg);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}40%{-webkit-transform:perspective(400px) translate3d(0,0,150px) rotate3d(0,1,0,-190deg);transform:perspective(400px) translate3d(0,0,150px) rotate3d(0,1,0,-190deg);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}50%{-webkit-transform:perspective(400px) translate3d(0,0,150px) rotate3d(0,1,0,-170deg);transform:perspective(400px) translate3d(0,0,150px) rotate3d(0,1,0,-170deg);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}80%{-webkit-transform:perspective(400px) scale3d(.95,.95,.95);transform:perspective(400px) scale3d(.95,.95,.95);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}100%{-webkit-transform:perspective(400px);transform:perspective(400px);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}}@keyframes flip{0%{-webkit-transform:perspective(400px) rotate3d(0,1,0,-360deg);transform:perspective(400px) rotate3d(0,1,0,-360deg);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}40%{-webkit-transform:perspective(400px) translate3d(0,0,150px) rotate3d(0,1,0,-190deg);transform:perspective(400px) translate3d(0,0,150px) rotate3d(0,1,0,-190deg);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}50%{-webkit-transform:perspective(400px) translate3d(0,0,150px) rotate3d(0,1,0,-170deg);transform:perspective(400px) translate3d(0,0,150px) rotate3d(0,1,0,-170deg);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}80%{-webkit-transform:perspective(400px) scale3d(.95,.95,.95);transform:perspective(400px) scale3d(.95,.95,.95);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}100%{-webkit-transform:perspective(400px);transform:perspective(400px);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}}.animated.flip{-webkit-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flip;animation-name:flip}@-webkit-keyframes flipInX{0%{-webkit-transform:perspective(400px) rotate3d(1,0,0,90deg);transform:perspective(400px) rotate3d(1,0,0,90deg);-webkit-transition-timing-function:ease-in;transition-timing-function:ease-in;opacity:0}40%{-webkit-transform:perspective(400px) rotate3d(1,0,0,-20deg);transform:perspective(400px) rotate3d(1,0,0,-20deg);-webkit-transition-timing-function:ease-in;transition-timing-function:ease-in}60%{-webkit-transform:perspective(400px) rotate3d(1,0,0,10deg);transform:perspective(400px) rotate3d(1,0,0,10deg);opacity:1}80%{-webkit-transform:perspective(400px) rotate3d(1,0,0,-5deg);transform:perspective(400px) rotate3d(1,0,0,-5deg)}100%{-webkit-transform:perspective(400px);transform:perspective(400px)}}@keyframes flipInX{0%{-webkit-transform:perspective(400px) rotate3d(1,0,0,90deg);transform:perspective(400px) rotate3d(1,0,0,90deg);-webkit-transition-timing-function:ease-in;transition-timing-function:ease-in;opacity:0}40%{-webkit-transform:perspective(400px) rotate3d(1,0,0,-20deg);transform:perspective(400px) rotate3d(1,0,0,-20deg);-webkit-transition-timing-function:ease-in;transition-timing-function:ease-in}60%{-webkit-transform:perspective(400px) rotate3d(1,0,0,10deg);transform:perspective(400px) rotate3d(1,0,0,10deg);opacity:1}80%{-webkit-transform:perspective(400px) rotate3d(1,0,0,-5deg);transform:perspective(400px) rotate3d(1,0,0,-5deg)}100%{-webkit-transform:perspective(400px);transform:perspective(400px)}}.flipInX{-webkit-backface-visibility:visible!important;backface-visibility:visible!important;-webkit-animation-name:flipInX;animation-name:flipInX}@-webkit-keyframes flipInY{0%{-webkit-transform:perspective(400px) rotate3d(0,1,0,90deg);transform:perspective(400px) rotate3d(0,1,0,90deg);-webkit-transition-timing-function:ease-in;transition-timing-function:ease-in;opacity:0}40%{-webkit-transform:perspective(400px) rotate3d(0,1,0,-20deg);transform:perspective(400px) rotate3d(0,1,0,-20deg);-webkit-transition-timing-function:ease-in;transition-timing-function:ease-in}60%{-webkit-transform:perspective(400px) rotate3d(0,1,0,10deg);transform:perspective(400px) rotate3d(0,1,0,10deg);opacity:1}80%{-webkit-transform:perspective(400px) rotate3d(0,1,0,-5deg);transform:perspective(400px) rotate3d(0,1,0,-5deg)}100%{-webkit-transform:perspective(400px);transform:perspective(400px)}}@keyframes flipInY{0%{-webkit-transform:perspective(400px) rotate3d(0,1,0,90deg);transform:perspective(400px) rotate3d(0,1,0,90deg);-webkit-transition-timing-function:ease-in;transition-timing-function:ease-in;opacity:0}40%{-webkit-transform:perspective(400px) rotate3d(0,1,0,-20deg);transform:perspective(400px) rotate3d(0,1,0,-20deg);-webkit-transition-timing-function:ease-in;transition-timing-function:ease-in}60%{-webkit-transform:perspective(400px) rotate3d(0,1,0,10deg);transform:perspective(400px) rotate3d(0,1,0,10deg);opacity:1}80%{-webkit-transform:perspective(400px) rotate3d(0,1,0,-5deg);transform:perspective(400px) rotate3d(0,1,0,-5deg)}100%{-webkit-transform:perspective(400px);transform:perspective(400px)}}.flipInY{-webkit-backface-visibility:visible!important;backface-visibility:visible!important;-webkit-animation-name:flipInY;animation-name:flipInY}@-webkit-keyframes flipOutX{0%{-webkit-transform:perspective(400px);transform:perspective(400px)}30%{-webkit-transform:perspective(400px) rotate3d(1,0,0,-20deg);transform:perspective(400px) rotate3d(1,0,0,-20deg);opacity:1}100%{-webkit-transform:perspective(400px) rotate3d(1,0,0,90deg);transform:perspective(400px) rotate3d(1,0,0,90deg);opacity:0}}@keyframes flipOutX{0%{-webkit-transform:perspective(400px);transform:perspective(400px)}30%{-webkit-transform:perspective(400px) rotate3d(1,0,0,-20deg);transform:perspective(400px) rotate3d(1,0,0,-20deg);opacity:1}100%{-webkit-transform:perspective(400px) rotate3d(1,0,0,90deg);transform:perspective(400px) rotate3d(1,0,0,90deg);opacity:0}}.flipOutX{-webkit-animation-name:flipOutX;animation-name:flipOutX;-webkit-animation-duration:.75s;animation-duration:.75s;-webkit-backface-visibility:visible!important;backface-visibility:visible!important}@-webkit-keyframes flipOutY{0%{-webkit-transform:perspective(400px);transform:perspective(400px)}30%{-webkit-transform:perspective(400px) rotate3d(0,1,0,-15deg);transform:perspective(400px) rotate3d(0,1,0,-15deg);opacity:1}100%{-webkit-transform:perspective(400px) rotate3d(0,1,0,90deg);transform:perspective(400px) rotate3d(0,1,0,90deg);opacity:0}}@keyframes flipOutY{0%{-webkit-transform:perspective(400px);transform:perspective(400px)}30%{-webkit-transform:perspective(400px) rotate3d(0,1,0,-15deg);transform:perspective(400px) rotate3d(0,1,0,-15deg);opacity:1}100%{-webkit-transform:perspective(400px) rotate3d(0,1,0,90deg);transform:perspective(400px) rotate3d(0,1,0,90deg);opacity:0}}.flipOutY{-webkit-backface-visibility:visible!important;backface-visibility:visible!important;-webkit-animation-name:flipOutY;animation-name:flipOutY;-webkit-animation-duration:.75s;animation-duration:.75s}@-webkit-keyframes lightSpeedIn{0%{-webkit-transform:translate3d(100%,0,0) skewX(-30deg);transform:translate3d(100%,0,0) skewX(-30deg);opacity:0}60%{-webkit-transform:skewX(20deg);transform:skewX(20deg);opacity:1}80%{-webkit-transform:skewX(-5deg);transform:skewX(-5deg);opacity:1}100%{-webkit-transform:none;transform:none;opacity:1}}@keyframes lightSpeedIn{0%{-webkit-transform:translate3d(100%,0,0) skewX(-30deg);transform:translate3d(100%,0,0) skewX(-30deg);opacity:0}60%{-webkit-transform:skewX(20deg);transform:skewX(20deg);opacity:1}80%{-webkit-transform:skewX(-5deg);transform:skewX(-5deg);opacity:1}100%{-webkit-transform:none;transform:none;opacity:1}}.lightSpeedIn{-webkit-animation-name:lightSpeedIn;animation-name:lightSpeedIn;-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}@-webkit-keyframes lightSpeedOut{0%{opacity:1}100%{-webkit-transform:translate3d(100%,0,0) skewX(30deg);transform:translate3d(100%,0,0) skewX(30deg);opacity:0}}@keyframes lightSpeedOut{0%{opacity:1}100%{-webkit-transform:translate3d(100%,0,0) skewX(30deg);transform:translate3d(100%,0,0) skewX(30deg);opacity:0}}.lightSpeedOut{-webkit-animation-name:lightSpeedOut;animation-name:lightSpeedOut;-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}@-webkit-keyframes rotateIn{0%{-webkit-transform-origin:center;transform-origin:center;-webkit-transform:rotate3d(0,0,1,-200deg);transform:rotate3d(0,0,1,-200deg);opacity:0}100%{-webkit-transform-origin:center;transform-origin:center;-webkit-transform:none;transform:none;opacity:1}}@keyframes rotateIn{0%{-webkit-transform-origin:center;transform-origin:center;-webkit-transform:rotate3d(0,0,1,-200deg);transform:rotate3d(0,0,1,-200deg);opacity:0}100%{-webkit-transform-origin:center;transform-origin:center;-webkit-transform:none;transform:none;opacity:1}}.rotateIn{-webkit-animation-name:rotateIn;animation-name:rotateIn}@-webkit-keyframes rotateInDownLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate3d(0,0,1,-45deg);transform:rotate3d(0,0,1,-45deg);opacity:0}100%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:none;transform:none;opacity:1}}@keyframes rotateInDownLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate3d(0,0,1,-45deg);transform:rotate3d(0,0,1,-45deg);opacity:0}100%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:none;transform:none;opacity:1}}.rotateInDownLeft{-webkit-animation-name:rotateInDownLeft;animation-name:rotateInDownLeft}@-webkit-keyframes rotateInDownRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate3d(0,0,1,45deg);transform:rotate3d(0,0,1,45deg);opacity:0}100%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:none;transform:none;opacity:1}}@keyframes rotateInDownRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate3d(0,0,1,45deg);transform:rotate3d(0,0,1,45deg);opacity:0}100%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:none;transform:none;opacity:1}}.rotateInDownRight{-webkit-animation-name:rotateInDownRight;animation-name:rotateInDownRight}@-webkit-keyframes rotateInUpLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate3d(0,0,1,45deg);transform:rotate3d(0,0,1,45deg);opacity:0}100%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:none;transform:none;opacity:1}}@keyframes rotateInUpLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate3d(0,0,1,45deg);transform:rotate3d(0,0,1,45deg);opacity:0}100%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:none;transform:none;opacity:1}}.rotateInUpLeft{-webkit-animation-name:rotateInUpLeft;animation-name:rotateInUpLeft}@-webkit-keyframes rotateInUpRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate3d(0,0,1,-90deg);transform:rotate3d(0,0,1,-90deg);opacity:0}100%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:none;transform:none;opacity:1}}@keyframes rotateInUpRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate3d(0,0,1,-90deg);transform:rotate3d(0,0,1,-90deg);opacity:0}100%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:none;transform:none;opacity:1}}.rotateInUpRight{-webkit-animation-name:rotateInUpRight;animation-name:rotateInUpRight}@-webkit-keyframes rotateOut{0%{-webkit-transform-origin:center;transform-origin:center;opacity:1}100%{-webkit-transform-origin:center;transform-origin:center;-webkit-transform:rotate3d(0,0,1,200deg);transform:rotate3d(0,0,1,200deg);opacity:0}}@keyframes rotateOut{0%{-webkit-transform-origin:center;transform-origin:center;opacity:1}100%{-webkit-transform-origin:center;transform-origin:center;-webkit-transform:rotate3d(0,0,1,200deg);transform:rotate3d(0,0,1,200deg);opacity:0}}.rotateOut{-webkit-animation-name:rotateOut;animation-name:rotateOut}@-webkit-keyframes rotateOutDownLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;opacity:1}100%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate3d(0,0,1,45deg);transform:rotate3d(0,0,1,45deg);opacity:0}}@keyframes rotateOutDownLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;opacity:1}100%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate3d(0,0,1,45deg);transform:rotate3d(0,0,1,45deg);opacity:0}}.rotateOutDownLeft{-webkit-animation-name:rotateOutDownLeft;animation-name:rotateOutDownLeft}@-webkit-keyframes rotateOutDownRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;opacity:1}100%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate3d(0,0,1,-45deg);transform:rotate3d(0,0,1,-45deg);opacity:0}}@keyframes rotateOutDownRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;opacity:1}100%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate3d(0,0,1,-45deg);transform:rotate3d(0,0,1,-45deg);opacity:0}}.rotateOutDownRight{-webkit-animation-name:rotateOutDownRight;animation-name:rotateOutDownRight}@-webkit-keyframes rotateOutUpLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;opacity:1}100%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate3d(0,0,1,-45deg);transform:rotate3d(0,0,1,-45deg);opacity:0}}@keyframes rotateOutUpLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;opacity:1}100%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate3d(0,0,1,-45deg);transform:rotate3d(0,0,1,-45deg);opacity:0}}.rotateOutUpLeft{-webkit-animation-name:rotateOutUpLeft;animation-name:rotateOutUpLeft}@-webkit-keyframes rotateOutUpRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;opacity:1}100%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate3d(0,0,1,90deg);transform:rotate3d(0,0,1,90deg);opacity:0}}@keyframes rotateOutUpRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;opacity:1}100%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate3d(0,0,1,90deg);transform:rotate3d(0,0,1,90deg);opacity:0}}.rotateOutUpRight{-webkit-animation-name:rotateOutUpRight;animation-name:rotateOutUpRight}@-webkit-keyframes hinge{0%{-webkit-transform-origin:top left;transform-origin:top left;-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out}20%,60%{-webkit-transform:rotate3d(0,0,1,80deg);transform:rotate3d(0,0,1,80deg);-webkit-transform-origin:top left;transform-origin:top left;-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out}40%,80%{-webkit-transform:rotate3d(0,0,1,60deg);transform:rotate3d(0,0,1,60deg);-webkit-transform-origin:top left;transform-origin:top left;-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;opacity:1}100%{-webkit-transform:translate3d(0,700px,0);transform:translate3d(0,700px,0);opacity:0}}@keyframes hinge{0%{-webkit-transform-origin:top left;transform-origin:top left;-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out}20%,60%{-webkit-transform:rotate3d(0,0,1,80deg);transform:rotate3d(0,0,1,80deg);-webkit-transform-origin:top left;transform-origin:top left;-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out}40%,80%{-webkit-transform:rotate3d(0,0,1,60deg);transform:rotate3d(0,0,1,60deg);-webkit-transform-origin:top left;transform-origin:top left;-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;opacity:1}100%{-webkit-transform:translate3d(0,700px,0);transform:translate3d(0,700px,0);opacity:0}}.hinge{-webkit-animation-name:hinge;animation-name:hinge}@-webkit-keyframes rollIn{0%{opacity:0;-webkit-transform:translate3d(-100%,0,0) rotate3d(0,0,1,-120deg);transform:translate3d(-100%,0,0) rotate3d(0,0,1,-120deg)}100%{opacity:1;-webkit-transform:none;transform:none}}@keyframes rollIn{0%{opacity:0;-webkit-transform:translate3d(-100%,0,0) rotate3d(0,0,1,-120deg);transform:translate3d(-100%,0,0) rotate3d(0,0,1,-120deg)}100%{opacity:1;-webkit-transform:none;transform:none}}.rollIn{-webkit-animation-name:rollIn;animation-name:rollIn}@-webkit-keyframes rollOut{0%{opacity:1}100%{opacity:0;-webkit-transform:translate3d(100%,0,0) rotate3d(0,0,1,120deg);transform:translate3d(100%,0,0) rotate3d(0,0,1,120deg)}}@keyframes rollOut{0%{opacity:1}100%{opacity:0;-webkit-transform:translate3d(100%,0,0) rotate3d(0,0,1,120deg);transform:translate3d(100%,0,0) rotate3d(0,0,1,120deg)}}.rollOut{-webkit-animation-name:rollOut;animation-name:rollOut}@-webkit-keyframes zoomIn{0%{opacity:0;-webkit-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}50%{opacity:1}}@keyframes zoomIn{0%{opacity:0;-webkit-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}50%{opacity:1}}.zoomIn{-webkit-animation-name:zoomIn;animation-name:zoomIn}@-webkit-keyframes zoomInDown{0%{opacity:0;-webkit-transform:scale3d(.1,.1,.1) translate3d(0,-1000px,0);transform:scale3d(.1,.1,.1) translate3d(0,-1000px,0);-webkit-animation-timing-function:cubic-bezier(0.55,.055,.675,.19);animation-timing-function:cubic-bezier(0.55,.055,.675,.19)}60%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(0,60px,0);transform:scale3d(.475,.475,.475) translate3d(0,60px,0);-webkit-animation-timing-function:cubic-bezier(0.175,.885,.32,1);animation-timing-function:cubic-bezier(0.175,.885,.32,1)}}@keyframes zoomInDown{0%{opacity:0;-webkit-transform:scale3d(.1,.1,.1) translate3d(0,-1000px,0);transform:scale3d(.1,.1,.1) translate3d(0,-1000px,0);-webkit-animation-timing-function:cubic-bezier(0.55,.055,.675,.19);animation-timing-function:cubic-bezier(0.55,.055,.675,.19)}60%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(0,60px,0);transform:scale3d(.475,.475,.475) translate3d(0,60px,0);-webkit-animation-timing-function:cubic-bezier(0.175,.885,.32,1);animation-timing-function:cubic-bezier(0.175,.885,.32,1)}}.zoomInDown{-webkit-animation-name:zoomInDown;animation-name:zoomInDown}@-webkit-keyframes zoomInLeft{0%{opacity:0;-webkit-transform:scale3d(.1,.1,.1) translate3d(-1000px,0,0);transform:scale3d(.1,.1,.1) translate3d(-1000px,0,0);-webkit-animation-timing-function:cubic-bezier(0.55,.055,.675,.19);animation-timing-function:cubic-bezier(0.55,.055,.675,.19)}60%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(10px,0,0);transform:scale3d(.475,.475,.475) translate3d(10px,0,0);-webkit-animation-timing-function:cubic-bezier(0.175,.885,.32,1);animation-timing-function:cubic-bezier(0.175,.885,.32,1)}}@keyframes zoomInLeft{0%{opacity:0;-webkit-transform:scale3d(.1,.1,.1) translate3d(-1000px,0,0);transform:scale3d(.1,.1,.1) translate3d(-1000px,0,0);-webkit-animation-timing-function:cubic-bezier(0.55,.055,.675,.19);animation-timing-function:cubic-bezier(0.55,.055,.675,.19)}60%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(10px,0,0);transform:scale3d(.475,.475,.475) translate3d(10px,0,0);-webkit-animation-timing-function:cubic-bezier(0.175,.885,.32,1);animation-timing-function:cubic-bezier(0.175,.885,.32,1)}}.zoomInLeft{-webkit-animation-name:zoomInLeft;animation-name:zoomInLeft}@-webkit-keyframes zoomInRight{0%{opacity:0;-webkit-transform:scale3d(.1,.1,.1) translate3d(1000px,0,0);transform:scale3d(.1,.1,.1) translate3d(1000px,0,0);-webkit-animation-timing-function:cubic-bezier(0.55,.055,.675,.19);animation-timing-function:cubic-bezier(0.55,.055,.675,.19)}60%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(-10px,0,0);transform:scale3d(.475,.475,.475) translate3d(-10px,0,0);-webkit-animation-timing-function:cubic-bezier(0.175,.885,.32,1);animation-timing-function:cubic-bezier(0.175,.885,.32,1)}}@keyframes zoomInRight{0%{opacity:0;-webkit-transform:scale3d(.1,.1,.1) translate3d(1000px,0,0);transform:scale3d(.1,.1,.1) translate3d(1000px,0,0);-webkit-animation-timing-function:cubic-bezier(0.55,.055,.675,.19);animation-timing-function:cubic-bezier(0.55,.055,.675,.19)}60%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(-10px,0,0);transform:scale3d(.475,.475,.475) translate3d(-10px,0,0);-webkit-animation-timing-function:cubic-bezier(0.175,.885,.32,1);animation-timing-function:cubic-bezier(0.175,.885,.32,1)}}.zoomInRight{-webkit-animation-name:zoomInRight;animation-name:zoomInRight}@-webkit-keyframes zoomInUp{0%{opacity:0;-webkit-transform:scale3d(.1,.1,.1) translate3d(0,1000px,0);transform:scale3d(.1,.1,.1) translate3d(0,1000px,0);-webkit-animation-timing-function:cubic-bezier(0.55,.055,.675,.19);animation-timing-function:cubic-bezier(0.55,.055,.675,.19)}60%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(0,-60px,0);transform:scale3d(.475,.475,.475) translate3d(0,-60px,0);-webkit-animation-timing-function:cubic-bezier(0.175,.885,.32,1);animation-timing-function:cubic-bezier(0.175,.885,.32,1)}}@keyframes zoomInUp{0%{opacity:0;-webkit-transform:scale3d(.1,.1,.1) translate3d(0,1000px,0);transform:scale3d(.1,.1,.1) translate3d(0,1000px,0);-webkit-animation-timing-function:cubic-bezier(0.55,.055,.675,.19);animation-timing-function:cubic-bezier(0.55,.055,.675,.19)}60%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(0,-60px,0);transform:scale3d(.475,.475,.475) translate3d(0,-60px,0);-webkit-animation-timing-function:cubic-bezier(0.175,.885,.32,1);animation-timing-function:cubic-bezier(0.175,.885,.32,1)}}.zoomInUp{-webkit-animation-name:zoomInUp;animation-name:zoomInUp}@-webkit-keyframes zoomOut{0%{opacity:1}50%{opacity:0;-webkit-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}100%{opacity:0}}@keyframes zoomOut{0%{opacity:1}50%{opacity:0;-webkit-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}100%{opacity:0}}.zoomOut{-webkit-animation-name:zoomOut;animation-name:zoomOut}@-webkit-keyframes zoomOutDown{40%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(0,-60px,0);transform:scale3d(.475,.475,.475) translate3d(0,-60px,0);-webkit-animation-timing-function:cubic-bezier(0.55,.055,.675,.19);animation-timing-function:cubic-bezier(0.55,.055,.675,.19)}100%{opacity:0;-webkit-transform:scale3d(.1,.1,.1) translate3d(0,2000px,0);transform:scale3d(.1,.1,.1) translate3d(0,2000px,0);-webkit-transform-origin:center bottom;transform-origin:center bottom;-webkit-animation-timing-function:cubic-bezier(0.175,.885,.32,1);animation-timing-function:cubic-bezier(0.175,.885,.32,1)}}@keyframes zoomOutDown{40%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(0,-60px,0);transform:scale3d(.475,.475,.475) translate3d(0,-60px,0);-webkit-animation-timing-function:cubic-bezier(0.55,.055,.675,.19);animation-timing-function:cubic-bezier(0.55,.055,.675,.19)}100%{opacity:0;-webkit-transform:scale3d(.1,.1,.1) translate3d(0,2000px,0);transform:scale3d(.1,.1,.1) translate3d(0,2000px,0);-webkit-transform-origin:center bottom;transform-origin:center bottom;-webkit-animation-timing-function:cubic-bezier(0.175,.885,.32,1);animation-timing-function:cubic-bezier(0.175,.885,.32,1)}}.zoomOutDown{-webkit-animation-name:zoomOutDown;animation-name:zoomOutDown}@-webkit-keyframes zoomOutLeft{40%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(42px,0,0);transform:scale3d(.475,.475,.475) translate3d(42px,0,0)}100%{opacity:0;-webkit-transform:scale(.1) translate3d(-2000px,0,0);transform:scale(.1) translate3d(-2000px,0,0);-webkit-transform-origin:left center;transform-origin:left center}}@keyframes zoomOutLeft{40%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(42px,0,0);transform:scale3d(.475,.475,.475) translate3d(42px,0,0)}100%{opacity:0;-webkit-transform:scale(.1) translate3d(-2000px,0,0);transform:scale(.1) translate3d(-2000px,0,0);-webkit-transform-origin:left center;transform-origin:left center}}.zoomOutLeft{-webkit-animation-name:zoomOutLeft;animation-name:zoomOutLeft}@-webkit-keyframes zoomOutRight{40%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(-42px,0,0);transform:scale3d(.475,.475,.475) translate3d(-42px,0,0)}100%{opacity:0;-webkit-transform:scale(.1) translate3d(2000px,0,0);transform:scale(.1) translate3d(2000px,0,0);-webkit-transform-origin:right center;transform-origin:right center}}@keyframes zoomOutRight{40%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(-42px,0,0);transform:scale3d(.475,.475,.475) translate3d(-42px,0,0)}100%{opacity:0;-webkit-transform:scale(.1) translate3d(2000px,0,0);transform:scale(.1) translate3d(2000px,0,0);-webkit-transform-origin:right center;transform-origin:right center}}.zoomOutRight{-webkit-animation-name:zoomOutRight;animation-name:zoomOutRight}@-webkit-keyframes zoomOutUp{40%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(0,60px,0);transform:scale3d(.475,.475,.475) translate3d(0,60px,0);-webkit-animation-timing-function:cubic-bezier(0.55,.055,.675,.19);animation-timing-function:cubic-bezier(0.55,.055,.675,.19)}100%{opacity:0;-webkit-transform:scale3d(.1,.1,.1) translate3d(0,-2000px,0);transform:scale3d(.1,.1,.1) translate3d(0,-2000px,0);-webkit-transform-origin:center bottom;transform-origin:center bottom;-webkit-animation-timing-function:cubic-bezier(0.175,.885,.32,1);animation-timing-function:cubic-bezier(0.175,.885,.32,1)}}@keyframes zoomOutUp{40%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(0,60px,0);transform:scale3d(.475,.475,.475) translate3d(0,60px,0);-webkit-animation-timing-function:cubic-bezier(0.55,.055,.675,.19);animation-timing-function:cubic-bezier(0.55,.055,.675,.19)}100%{opacity:0;-webkit-transform:scale3d(.1,.1,.1) translate3d(0,-2000px,0);transform:scale3d(.1,.1,.1) translate3d(0,-2000px,0);-webkit-transform-origin:center bottom;transform-origin:center bottom;-webkit-animation-timing-function:cubic-bezier(0.175,.885,.32,1);animation-timing-function:cubic-bezier(0.175,.885,.32,1)}}.zoomOutUp{-webkit-animation-name:zoomOutUp;animation-name:zoomOutUp}@-webkit-keyframes slideInDown{0%{-webkit-transform:translateY(-100%);transform:translateY(-100%);visibility:visible}100%{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes slideInDown{0%{-webkit-transform:translateY(-100%);transform:translateY(-100%);visibility:visible}100%{-webkit-transform:translateY(0);transform:translateY(0)}}.slideInDown{-webkit-animation-name:slideInDown;animation-name:slideInDown}@-webkit-keyframes slideInLeft{0%{-webkit-transform:translateX(-100%);transform:translateX(-100%);visibility:visible}100%{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes slideInLeft{0%{-webkit-transform:translateX(-100%);transform:translateX(-100%);visibility:visible}100%{-webkit-transform:translateX(0);transform:translateX(0)}}.slideInLeft{-webkit-animation-name:slideInLeft;animation-name:slideInLeft}@-webkit-keyframes slideInRight{0%{-webkit-transform:translateX(100%);transform:translateX(100%);visibility:visible}100%{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes slideInRight{0%{-webkit-transform:translateX(100%);transform:translateX(100%);visibility:visible}100%{-webkit-transform:translateX(0);transform:translateX(0)}}.slideInRight{-webkit-animation-name:slideInRight;animation-name:slideInRight}@-webkit-keyframes slideInUp{0%{-webkit-transform:translateY(100%);transform:translateY(100%);visibility:visible}100%{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes slideInUp{0%{-webkit-transform:translateY(100%);transform:translateY(100%);visibility:visible}100%{-webkit-transform:translateY(0);transform:translateY(0)}}.slideInUp{-webkit-animation-name:slideInUp;animation-name:slideInUp}@-webkit-keyframes slideOutDown{0%{-webkit-transform:translateY(0);transform:translateY(0)}100%{visibility:hidden;-webkit-transform:translateY(100%);transform:translateY(100%)}}@keyframes slideOutDown{0%{-webkit-transform:translateY(0);transform:translateY(0)}100%{visibility:hidden;-webkit-transform:translateY(100%);transform:translateY(100%)}}.slideOutDown{-webkit-animation-name:slideOutDown;animation-name:slideOutDown}@-webkit-keyframes slideOutLeft{0%{-webkit-transform:translateX(0);transform:translateX(0)}100%{visibility:hidden;-webkit-transform:translateX(-100%);transform:translateX(-100%)}}@keyframes slideOutLeft{0%{-webkit-transform:translateX(0);transform:translateX(0)}100%{visibility:hidden;-webkit-transform:translateX(-100%);transform:translateX(-100%)}}.slideOutLeft{-webkit-animation-name:slideOutLeft;animation-name:slideOutLeft}@-webkit-keyframes slideOutRight{0%{-webkit-transform:translateX(0);transform:translateX(0)}100%{visibility:hidden;-webkit-transform:translateX(100%);transform:translateX(100%)}}@keyframes slideOutRight{0%{-webkit-transform:translateX(0);transform:translateX(0)}100%{visibility:hidden;-webkit-transform:translateX(100%);transform:translateX(100%)}}.slideOutRight{-webkit-animation-name:slideOutRight;animation-name:slideOutRight}@-webkit-keyframes slideOutUp{0%{-webkit-transform:translateY(0);transform:translateY(0)}100%{visibility:hidden;-webkit-transform:translateY(-100%);transform:translateY(-100%)}}@keyframes slideOutUp{0%{-webkit-transform:translateY(0);transform:translateY(0)}100%{visibility:hidden;-webkit-transform:translateY(-100%);transform:translateY(-100%)}}.slideOutUp{-webkit-animation-name:slideOutUp;animation-name:slideOutUp}"},{"title":"","date":"2018-05-11T08:14:14.790Z","updated":"2018-05-11T08:14:14.790Z","comments":true,"path":"tech/animate/js/jquery-3.1.0.min.js","permalink":"http://www.JiShuXuePai.com/tech/animate/js/jquery-3.1.0.min.js","excerpt":"","text":"/*! jQuery v3.1.0 | (c) jQuery Foundation | jquery.org/license */ !function(a,b){\"use strict\";\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error(\"jQuery requires a window with a document\");return b(a)}:b(a)}(\"undefined\"!=typeof window?window:this,function(a,b){\"use strict\";var c=[],d=a.document,e=Object.getPrototypeOf,f=c.slice,g=c.concat,h=c.push,i=c.indexOf,j={},k=j.toString,l=j.hasOwnProperty,m=l.toString,n=m.call(Object),o={};function p(a,b){b=b||d;var c=b.createElement(\"script\");c.text=a,b.head.appendChild(c).parentNode.removeChild(c)}var q=\"3.1.0\",r=function(a,b){return new r.fn.init(a,b)},s=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,t=/^-ms-/,u=/-([a-z])/g,v=function(a,b){return b.toUpperCase()};r.fn=r.prototype={jquery:q,constructor:r,length:0,toArray:function(){return f.call(this)},get:function(a){return null!=a?a=0&&c0&&b-1 in a)}var x=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u=\"sizzle\"+1*new Date,v=a.document,w=0,x=0,y=ha(),z=ha(),A=ha(),B=function(a,b){return a===b&&(l=!0),0},C={}.hasOwnProperty,D=[],E=D.pop,F=D.push,G=D.push,H=D.slice,I=function(a,b){for(var c=0,d=a.length;c+~]|\"+K+\")\"+K+\"*\"),S=new RegExp(\"=\"+K+\"*([^\\\\]'\\\"]*?)\"+K+\"*\\\\]\",\"g\"),T=new RegExp(N),U=new RegExp(\"^\"+L+\"$\"),V={ID:new RegExp(\"^#(\"+L+\")\"),CLASS:new RegExp(\"^\\\\.(\"+L+\")\"),TAG:new RegExp(\"^(\"+L+\"|[*])\"),ATTR:new RegExp(\"^\"+M),PSEUDO:new RegExp(\"^\"+N),CHILD:new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+K+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+K+\"*(?:([+-]|)\"+K+\"*(\\\\d+)|))\"+K+\"*\\\\)|)\",\"i\"),bool:new RegExp(\"^(?:\"+J+\")$\",\"i\"),needsContext:new RegExp(\"^\"+K+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+K+\"*((?:-\\\\d)?\\\\d*)\"+K+\"*\\\\)|)(?=[^-]|$)\",\"i\")},W=/^(?:input|select|textarea|button)$/i,X=/^h\\d$/i,Y=/^[^{]+\\{\\s*\\[native \\w/,Z=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,$=/[+~]/,_=new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\"+K+\"?|(\"+K+\")|.)\",\"ig\"),aa=function(a,b,c){var d=\"0x\"+b-65536;return d!==d||c?b:d>10|55296,1023&d|56320)},ba=/([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\x80-\\uFFFF\\w-]/g,ca=function(a,b){return b?\"\\0\"===a?\"\\ufffd\":a.slice(0,-1)+\"\\\\\"+a.charCodeAt(a.length-1).toString(16)+\" \":\"\\\\\"+a},da=function(){m()},ea=ta(function(a){return a.disabled===!0},{dir:\"parentNode\",next:\"legend\"});try{G.apply(D=H.call(v.childNodes),v.childNodes),D[v.childNodes.length].nodeType}catch(fa){G={apply:D.length?function(a,b){F.apply(a,H.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function ga(a,b,d,e){var f,h,j,k,l,o,r,s=b&&b.ownerDocument,w=b?b.nodeType:9;if(d=d||[],\"string\"!=typeof a||!a||1!==w&&9!==w&&11!==w)return d;if(!e&&((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,p)){if(11!==w&&(l=Z.exec(a)))if(f=l[1]){if(9===w){if(!(j=b.getElementById(f)))return d;if(j.id===f)return d.push(j),d}else if(s&&(j=s.getElementById(f))&&t(b,j)&&j.id===f)return d.push(j),d}else{if(l[2])return G.apply(d,b.getElementsByTagName(a)),d;if((f=l[3])&&c.getElementsByClassName&&b.getElementsByClassName)return G.apply(d,b.getElementsByClassName(f)),d}if(c.qsa&&!A[a+\" \"]&&(!q||!q.test(a))){if(1!==w)s=b,r=a;else if(\"object\"!==b.nodeName.toLowerCase()){(k=b.getAttribute(\"id\"))?k=k.replace(ba,ca):b.setAttribute(\"id\",k=u),o=g(a),h=o.length;while(h--)o[h]=\"#\"+k+\" \"+sa(o[h]);r=o.join(\",\"),s=$.test(a)&&qa(b.parentNode)||b}if(r)try{return G.apply(d,s.querySelectorAll(r)),d}catch(x){}finally{k===u&&b.removeAttribute(\"id\")}}}return i(a.replace(P,\"$1\"),b,d,e)}function ha(){var a=[];function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}return b}function ia(a){return a[u]=!0,a}function ja(a){var b=n.createElement(\"fieldset\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function ka(a,b){var c=a.split(\"|\"),e=c.length;while(e--)d.attrHandle[c[e]]=b}function la(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&a.sourceIndex-b.sourceIndex;if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function ma(a){return function(b){var c=b.nodeName.toLowerCase();return\"input\"===c&&b.type===a}}function na(a){return function(b){var c=b.nodeName.toLowerCase();return(\"input\"===c||\"button\"===c)&&b.type===a}}function oa(a){return function(b){return\"label\"in b&&b.disabled===a||\"form\"in b&&b.disabled===a||\"form\"in b&&b.disabled===!1&&(b.isDisabled===a||b.isDisabled!==!a&&(\"label\"in b||!ea(b))!==a)}}function pa(a){return ia(function(b){return b=+b,ia(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function qa(a){return a&&\"undefined\"!=typeof a.getElementsByTagName&&a}c=ga.support={},f=ga.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return!!b&&\"HTML\"!==b.nodeName},m=ga.setDocument=function(a){var b,e,g=a?a.ownerDocument||a:v;return g!==n&&9===g.nodeType&&g.documentElement?(n=g,o=n.documentElement,p=!f(n),v!==n&&(e=n.defaultView)&&e.top!==e&&(e.addEventListener?e.addEventListener(\"unload\",da,!1):e.attachEvent&&e.attachEvent(\"onunload\",da)),c.attributes=ja(function(a){return a.className=\"i\",!a.getAttribute(\"className\")}),c.getElementsByTagName=ja(function(a){return a.appendChild(n.createComment(\"\")),!a.getElementsByTagName(\"*\").length}),c.getElementsByClassName=Y.test(n.getElementsByClassName),c.getById=ja(function(a){return o.appendChild(a).id=u,!n.getElementsByName||!n.getElementsByName(u).length}),c.getById?(d.find.ID=function(a,b){if(\"undefined\"!=typeof b.getElementById&&p){var c=b.getElementById(a);return c?[c]:[]}},d.filter.ID=function(a){var b=a.replace(_,aa);return function(a){return a.getAttribute(\"id\")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(_,aa);return function(a){var c=\"undefined\"!=typeof a.getAttributeNode&&a.getAttributeNode(\"id\");return c&&c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return\"undefined\"!=typeof b.getElementsByTagName?b.getElementsByTagName(a):c.qsa?b.querySelectorAll(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if(\"*\"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){if(\"undefined\"!=typeof b.getElementsByClassName&&p)return b.getElementsByClassName(a)},r=[],q=[],(c.qsa=Y.test(n.querySelectorAll))&&(ja(function(a){o.appendChild(a).innerHTML=\"\",a.querySelectorAll(\"[msallowcapture^='']\").length&&q.push(\"[*^$]=\"+K+\"*(?:''|\\\"\\\")\"),a.querySelectorAll(\"[selected]\").length||q.push(\"\\\\[\"+K+\"*(?:value|\"+J+\")\"),a.querySelectorAll(\"[id~=\"+u+\"-]\").length||q.push(\"~=\"),a.querySelectorAll(\":checked\").length||q.push(\":checked\"),a.querySelectorAll(\"a#\"+u+\"+*\").length||q.push(\".#.+[+~]\")}),ja(function(a){a.innerHTML=\"\";var b=n.createElement(\"input\");b.setAttribute(\"type\",\"hidden\"),a.appendChild(b).setAttribute(\"name\",\"D\"),a.querySelectorAll(\"[name=d]\").length&&q.push(\"name\"+K+\"*[*^$|!~]?=\"),2!==a.querySelectorAll(\":enabled\").length&&q.push(\":enabled\",\":disabled\"),o.appendChild(a).disabled=!0,2!==a.querySelectorAll(\":disabled\").length&&q.push(\":enabled\",\":disabled\"),a.querySelectorAll(\"*,:x\"),q.push(\",.*:\")})),(c.matchesSelector=Y.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ja(function(a){c.disconnectedMatch=s.call(a,\"*\"),s.call(a,\"[s!='']:x\"),r.push(\"!=\",N)}),q=q.length&&new RegExp(q.join(\"|\")),r=r.length&&new RegExp(r.join(\"|\")),b=Y.test(o.compareDocumentPosition),t=b||Y.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===n||a.ownerDocument===v&&t(v,a)?-1:b===n||b.ownerDocument===v&&t(v,b)?1:k?I(k,a)-I(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,e=a.parentNode,f=b.parentNode,g=[a],h=[b];if(!e||!f)return a===n?-1:b===n?1:e?-1:f?1:k?I(k,a)-I(k,b):0;if(e===f)return la(a,b);c=a;while(c=c.parentNode)g.unshift(c);c=b;while(c=c.parentNode)h.unshift(c);while(g[d]===h[d])d++;return d?la(g[d],h[d]):g[d]===v?-1:h[d]===v?1:0},n):n},ga.matches=function(a,b){return ga(a,null,null,b)},ga.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(S,\"='$1']\"),c.matchesSelector&&p&&!A[b+\" \"]&&(!r||!r.test(b))&&(!q||!q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return ga(b,n,null,[a]).length>0},ga.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},ga.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&C.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},ga.escape=function(a){return(a+\"\").replace(ba,ca)},ga.error=function(a){throw new Error(\"Syntax error, unrecognized expression: \"+a)},ga.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=ga.getText=function(a){var b,c=\"\",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if(\"string\"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=ga.selectors={cacheLength:50,createPseudo:ia,match:V,attrHandle:{},find:{},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(_,aa),a[3]=(a[3]||a[4]||a[5]||\"\").replace(_,aa),\"~=\"===a[2]&&(a[3]=\" \"+a[3]+\" \"),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),\"nth\"===a[1].slice(0,3)?(a[3]||ga.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*(\"even\"===a[3]||\"odd\"===a[3])),a[5]=+(a[7]+a[8]||\"odd\"===a[3])):a[3]&&ga.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return V.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||\"\":c&&T.test(c)&&(b=g(c,!0))&&(b=c.indexOf(\")\",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(_,aa).toLowerCase();return\"*\"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+\" \"];return b||(b=new RegExp(\"(^|\"+K+\")\"+a+\"(\"+K+\"|$)\"))&&y(a,function(a){return b.test(\"string\"==typeof a.className&&a.className||\"undefined\"!=typeof a.getAttribute&&a.getAttribute(\"class\")||\"\")})},ATTR:function(a,b,c){return function(d){var e=ga.attr(d,a);return null==e?\"!=\"===b:!b||(e+=\"\",\"=\"===b?e===c:\"!=\"===b?e!==c:\"^=\"===b?c&&0===e.indexOf(c):\"*=\"===b?c&&e.indexOf(c)>-1:\"$=\"===b?c&&e.slice(-c.length)===c:\"~=\"===b?(\" \"+e.replace(O,\" \")+\" \").indexOf(c)>-1:\"|=\"===b&&(e===c||e.slice(0,c.length+1)===c+\"-\"))}},CHILD:function(a,b,c,d,e){var f=\"nth\"!==a.slice(0,3),g=\"last\"!==a.slice(-4),h=\"of-type\"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?\"nextSibling\":\"previousSibling\",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h,t=!1;if(q){if(f){while(p){m=b;while(m=m[p])if(h?m.nodeName.toLowerCase()===r:1===m.nodeType)return!1;o=p=\"only\"===a&&!o&&\"nextSibling\"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){m=q,l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),j=k[a]||[],n=j[0]===w&&j[1],t=n&&j[2],m=n&&q.childNodes[n];while(m=++n&&m&&m[p]||(t=n=0)||o.pop())if(1===m.nodeType&&++t&&m===b){k[a]=[w,n,t];break}}else if(s&&(m=b,l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),j=k[a]||[],n=j[0]===w&&j[1],t=n),t===!1)while(m=++n&&m&&m[p]||(t=n=0)||o.pop())if((h?m.nodeName.toLowerCase()===r:1===m.nodeType)&&++t&&(s&&(l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),k[a]=[w,t]),m===b))break;return t-=e,t===d||t%d===0&&t/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||ga.error(\"unsupported pseudo: \"+a);return e[u]?e(b):e.length>1?(c=[a,a,\"\",b],d.setFilters.hasOwnProperty(a.toLowerCase())?ia(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=I(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:ia(function(a){var b=[],c=[],d=h(a.replace(P,\"$1\"));return d[u]?ia(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),b[0]=null,!c.pop()}}),has:ia(function(a){return function(b){return ga(a,b).length>0}}),contains:ia(function(a){return a=a.replace(_,aa),function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:ia(function(a){return U.test(a||\"\")||ga.error(\"unsupported lang: \"+a),a=a.replace(_,aa).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute(\"xml:lang\")||b.getAttribute(\"lang\"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+\"-\");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:oa(!1),disabled:oa(!0),checked:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&!!a.checked||\"option\"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType=0;)a.push(d);return a}),gt:pa(function(a,b,c){for(var d=c-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];i1&&sa(a.slice(0,i-1).concat({value:\" \"===a[i-2].type?\"*\":\"\"})).replace(P,\"$1\"),c,i0)while(s--)t[s]||u[s]||(u[s]=E.call(i));u=wa(u)}G.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&ga.uniqueSort(i)}return k&&(w=y,j=v),t};return c?ia(f):f}return h=ga.compile=function(a,b){var c,d=[],e=[],f=A[a+\" \"];if(!f){b||(b=g(a)),c=b.length;while(c--)f=ya(b[c]),f[u]?d.push(f):e.push(f);f=A(a,za(e,d)),f.selector=a}return f},i=ga.select=function(a,b,e,f){var i,j,k,l,m,n=\"function\"==typeof a&&a,o=!f&&g(a=n.selector||a);if(e=e||[],1===o.length){if(j=o[0]=o[0].slice(0),j.length>2&&\"ID\"===(k=j[0]).type&&c.getById&&9===b.nodeType&&p&&d.relative[j[1].type]){if(b=(d.find.ID(k.matches[0].replace(_,aa),b)||[])[0],!b)return e;n&&(b=b.parentNode),a=a.slice(j.shift().value.length)}i=V.needsContext.test(a)?0:j.length;while(i--){if(k=j[i],d.relative[l=k.type])break;if((m=d.find[l])&&(f=m(k.matches[0].replace(_,aa),$.test(j[0].type)&&qa(b.parentNode)||b))){if(j.splice(i,1),a=f.length&&sa(j),!a)return G.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,!b||$.test(a)&&qa(b.parentNode)||b),e},c.sortStable=u.split(\"\").sort(B).join(\"\")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ja(function(a){return 1&a.compareDocumentPosition(n.createElement(\"fieldset\"))}),ja(function(a){return a.innerHTML=\"\",\"#\"===a.firstChild.getAttribute(\"href\")})||ka(\"type|href|height|width\",function(a,b,c){if(!c)return a.getAttribute(b,\"type\"===b.toLowerCase()?1:2)}),c.attributes&&ja(function(a){return a.innerHTML=\"\",a.firstChild.setAttribute(\"value\",\"\"),\"\"===a.firstChild.getAttribute(\"value\")})||ka(\"value\",function(a,b,c){if(!c&&\"input\"===a.nodeName.toLowerCase())return a.defaultValue}),ja(function(a){return null==a.getAttribute(\"disabled\")})||ka(J,function(a,b,c){var d;if(!c)return a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),ga}(a);r.find=x,r.expr=x.selectors,r.expr[\":\"]=r.expr.pseudos,r.uniqueSort=r.unique=x.uniqueSort,r.text=x.getText,r.isXMLDoc=x.isXML,r.contains=x.contains,r.escapeSelector=x.escape;var y=function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&r(a).is(c))break;d.push(a)}return d},z=function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c},A=r.expr.match.needsContext,B=/^:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:|)$/i,C=/^.[^:#\\[\\.,]*$/;function D(a,b,c){if(r.isFunction(b))return r.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return r.grep(a,function(a){return a===b!==c});if(\"string\"==typeof b){if(C.test(b))return r.filter(b,a,c);b=r.filter(b,a)}return r.grep(a,function(a){return i.call(b,a)>-1!==c&&1===a.nodeType})}r.filter=function(a,b,c){var d=b[0];return c&&(a=\":not(\"+a+\")\"),1===b.length&&1===d.nodeType?r.find.matchesSelector(d,a)?[d]:[]:r.find.matches(a,r.grep(b,function(a){return 1===a.nodeType}))},r.fn.extend({find:function(a){var b,c,d=this.length,e=this;if(\"string\"!=typeof a)return this.pushStack(r(a).filter(function(){for(b=0;b]*|#([\\w-]+))$/,G=r.fn.init=function(a,b,c){var e,f;if(!a)return this;if(c=c||E,\"string\"==typeof a){if(e=\"\"===a[a.length-1]&&a.length>=3?[null,a,null]:F.exec(a),!e||!e[1]&&b)return!b||b.jquery?(b||c).find(a):this.constructor(b).find(a);if(e[1]){if(b=b instanceof r?b[0]:b,r.merge(this,r.parseHTML(e[1],b&&b.nodeType?b.ownerDocument||b:d,!0)),B.test(e[1])&&r.isPlainObject(b))for(e in b)r.isFunction(this[e])?this[e](b[e]):this.attr(e,b[e]);return this}return f=d.getElementById(e[2]),f&&(this[0]=f,this.length=1),this}return a.nodeType?(this[0]=a,this.length=1,this):r.isFunction(a)?void 0!==c.ready?c.ready(a):a(r):r.makeArray(a,this)};G.prototype=r.fn,E=r(d);var H=/^(?:parents|prev(?:Until|All))/,I={children:!0,contents:!0,next:!0,prev:!0};r.fn.extend({has:function(a){var b=r(a,this),c=b.length;return this.filter(function(){for(var a=0;a1?r.uniqueSort(f):f)},index:function(a){return a?\"string\"==typeof a?i.call(r(a),this[0]):i.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(r.uniqueSort(r.merge(this.get(),r(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function J(a,b){while((a=a[b])&&1!==a.nodeType);return a}r.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return y(a,\"parentNode\")},parentsUntil:function(a,b,c){return y(a,\"parentNode\",c)},next:function(a){return J(a,\"nextSibling\")},prev:function(a){return J(a,\"previousSibling\")},nextAll:function(a){return y(a,\"nextSibling\")},prevAll:function(a){return y(a,\"previousSibling\")},nextUntil:function(a,b,c){return y(a,\"nextSibling\",c)},prevUntil:function(a,b,c){return y(a,\"previousSibling\",c)},siblings:function(a){return z((a.parentNode||{}).firstChild,a)},children:function(a){return z(a.firstChild)},contents:function(a){return a.contentDocument||r.merge([],a.childNodes)}},function(a,b){r.fn[a]=function(c,d){var e=r.map(this,b,c);return\"Until\"!==a.slice(-5)&&(d=c),d&&\"string\"==typeof d&&(e=r.filter(d,e)),this.length>1&&(I[a]||r.uniqueSort(e),H.test(a)&&e.reverse()),this.pushStack(e)}});var K=/\\S+/g;function L(a){var b={};return r.each(a.match(K)||[],function(a,c){b[c]=!0}),b}r.Callbacks=function(a){a=\"string\"==typeof a?L(a):r.extend({},a);var b,c,d,e,f=[],g=[],h=-1,i=function(){for(e=a.once,d=b=!0;g.length;h=-1){c=g.shift();while(++h-1)f.splice(c,1),c-1:f.length>0},empty:function(){return f&&(f=[]),this},disable:function(){return e=g=[],f=c=\"\",this},disabled:function(){return!f},lock:function(){return e=g=[],c||b||(f=c=\"\"),this},locked:function(){return!!e},fireWith:function(a,c){return e||(c=c||[],c=[a,c.slice?c.slice():c],g.push(c),b||i()),this},fire:function(){return j.fireWith(this,arguments),this},fired:function(){return!!d}};return j};function M(a){return a}function N(a){throw a}function O(a,b,c){var d;try{a&&r.isFunction(d=a.promise)?d.call(a).done(b).fail(c):a&&r.isFunction(d=a.then)?d.call(a,b,c):b.call(void 0,a)}catch(a){c.call(void 0,a)}}r.extend({Deferred:function(b){var c=[[\"notify\",\"progress\",r.Callbacks(\"memory\"),r.Callbacks(\"memory\"),2],[\"resolve\",\"done\",r.Callbacks(\"once memory\"),r.Callbacks(\"once memory\"),0,\"resolved\"],[\"reject\",\"fail\",r.Callbacks(\"once memory\"),r.Callbacks(\"once memory\"),1,\"rejected\"]],d=\"pending\",e={state:function(){return d},always:function(){return f.done(arguments).fail(arguments),this},\"catch\":function(a){return e.then(null,a)},pipe:function(){var a=arguments;return r.Deferred(function(b){r.each(c,function(c,d){var e=r.isFunction(a[d[4]])&&a[d[4]];f[d[1]](function(){var a=e&&e.apply(this,arguments);a&&r.isFunction(a.promise)?a.promise().progress(b.notify).done(b.resolve).fail(b.reject):b[d[0]+\"With\"](this,e?[a]:arguments)})}),a=null}).promise()},then:function(b,d,e){var f=0;function g(b,c,d,e){return function(){var h=this,i=arguments,j=function(){var a,j;if(!(b=f&&(d!==N&&(h=void 0,i=[a]),c.rejectWith(h,i))}};b?k():(r.Deferred.getStackHook&&(k.stackTrace=r.Deferred.getStackHook()),a.setTimeout(k))}}return r.Deferred(function(a){c[0][3].add(g(0,a,r.isFunction(e)?e:M,a.notifyWith)),c[1][3].add(g(0,a,r.isFunction(b)?b:M)),c[2][3].add(g(0,a,r.isFunction(d)?d:N))}).promise()},promise:function(a){return null!=a?r.extend(a,e):e}},f={};return r.each(c,function(a,b){var g=b[2],h=b[5];e[b[1]]=g.add,h&&g.add(function(){d=h},c[3-a][2].disable,c[0][2].lock),g.add(b[3].fire),f[b[0]]=function(){return f[b[0]+\"With\"](this===f?void 0:this,arguments),this},f[b[0]+\"With\"]=g.fireWith}),e.promise(f),b&&b.call(f,f),f},when:function(a){var b=arguments.length,c=b,d=Array(c),e=f.call(arguments),g=r.Deferred(),h=function(a){return function(c){d[a]=this,e[a]=arguments.length>1?f.call(arguments):c,--b||g.resolveWith(d,e)}};if(b0||Q.resolveWith(d,[r]))}}),r.ready.then=Q.then;function R(){d.removeEventListener(\"DOMContentLoaded\",R),a.removeEventListener(\"load\",R),r.ready()}\"complete\"===d.readyState||\"loading\"!==d.readyState&&!d.documentElement.doScroll?a.setTimeout(r.ready):(d.addEventListener(\"DOMContentLoaded\",R),a.addEventListener(\"load\",R));var S=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\"object\"===r.type(c)){e=!0;for(h in c)S(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0, r.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(r(a),c)})),b))for(;h1,null,!0)},removeData:function(a){return this.each(function(){W.remove(this,a)})}}),r.extend({queue:function(a,b,c){var d;if(a)return b=(b||\"fx\")+\"queue\",d=V.get(a,b),c&&(!d||r.isArray(c)?d=V.access(a,b,r.makeArray(c)):d.push(c)),d||[]},dequeue:function(a,b){b=b||\"fx\";var c=r.queue(a,b),d=c.length,e=c.shift(),f=r._queueHooks(a,b),g=function(){r.dequeue(a,b)};\"inprogress\"===e&&(e=c.shift(),d--),e&&(\"fx\"===b&&c.unshift(\"inprogress\"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+\"queueHooks\";return V.get(a,c)||V.access(a,c,{empty:r.Callbacks(\"once memory\").add(function(){V.remove(a,[b+\"queue\",c])})})}}),r.fn.extend({queue:function(a,b){var c=2;return\"string\"!=typeof a&&(b=a,a=\"fx\",c--),arguments.length\\x20\\t\\r\\n\\f]+)/i,ja=/^$|\\/(?:java|ecma)script/i,ka={option:[1,\"\",\"\"],thead:[1,\"\",\"\"],col:[2,\"\",\"\"],tr:[2,\"\",\"\"],td:[3,\"\",\"\"],_default:[0,\"\",\"\"]};ka.optgroup=ka.option,ka.tbody=ka.tfoot=ka.colgroup=ka.caption=ka.thead,ka.th=ka.td;function la(a,b){var c=\"undefined\"!=typeof a.getElementsByTagName?a.getElementsByTagName(b||\"*\"):\"undefined\"!=typeof a.querySelectorAll?a.querySelectorAll(b||\"*\"):[];return void 0===b||b&&r.nodeName(a,b)?r.merge([a],c):c}function ma(a,b){for(var c=0,d=a.length;c-1)e&&e.push(f);else if(j=r.contains(f.ownerDocument,f),g=la(l.appendChild(f),\"script\"),j&&ma(g),c){k=0;while(f=g[k++])ja.test(f.type||\"\")&&c.push(f)}return l}!function(){var a=d.createDocumentFragment(),b=a.appendChild(d.createElement(\"div\")),c=d.createElement(\"input\");c.setAttribute(\"type\",\"radio\"),c.setAttribute(\"checked\",\"checked\"),c.setAttribute(\"name\",\"t\"),b.appendChild(c),o.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML=\"x\",o.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var pa=d.documentElement,qa=/^key/,ra=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,sa=/^([^.]*)(?:\\.(.+)|)/;function ta(){return!0}function ua(){return!1}function va(){try{return d.activeElement}catch(a){}}function wa(a,b,c,d,e,f){var g,h;if(\"object\"==typeof b){\"string\"!=typeof c&&(d=d||c,c=void 0);for(h in b)wa(a,h,c,d,b[h],f);return a}if(null==d&&null==e?(e=c,d=c=void 0):null==e&&(\"string\"==typeof c?(e=d,d=void 0):(e=d,d=c,c=void 0)),e===!1)e=ua;else if(!e)return a;return 1===f&&(g=e,e=function(a){return r().off(a),g.apply(this,arguments)},e.guid=g.guid||(g.guid=r.guid++)),a.each(function(){r.event.add(this,b,e,d,c)})}r.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q=V.get(a);if(q){c.handler&&(f=c,c=f.handler,e=f.selector),e&&r.find.matchesSelector(pa,e),c.guid||(c.guid=r.guid++),(i=q.events)||(i=q.events={}),(g=q.handle)||(g=q.handle=function(b){return\"undefined\"!=typeof r&&r.event.triggered!==b.type?r.event.dispatch.apply(a,arguments):void 0}),b=(b||\"\").match(K)||[\"\"],j=b.length;while(j--)h=sa.exec(b[j])||[],n=p=h[1],o=(h[2]||\"\").split(\".\").sort(),n&&(l=r.event.special[n]||{},n=(e?l.delegateType:l.bindType)||n,l=r.event.special[n]||{},k=r.extend({type:n,origType:p,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&r.expr.match.needsContext.test(e),namespace:o.join(\".\")},f),(m=i[n])||(m=i[n]=[],m.delegateCount=0,l.setup&&l.setup.call(a,d,o,g)!==!1||a.addEventListener&&a.addEventListener(n,g)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),r.event.global[n]=!0)}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q=V.hasData(a)&&V.get(a);if(q&&(i=q.events)){b=(b||\"\").match(K)||[\"\"],j=b.length;while(j--)if(h=sa.exec(b[j])||[],n=p=h[1],o=(h[2]||\"\").split(\".\").sort(),n){l=r.event.special[n]||{},n=(d?l.delegateType:l.bindType)||n,m=i[n]||[],h=h[2]&&new RegExp(\"(^|\\\\.)\"+o.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),g=f=m.length;while(f--)k=m[f],!e&&p!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&(\"**\"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k));g&&!m.length&&(l.teardown&&l.teardown.call(a,o,q.handle)!==!1||r.removeEvent(a,n,q.handle),delete i[n])}else for(n in i)r.event.remove(a,n+b[j],c,d,!0);r.isEmptyObject(i)&&V.remove(a,\"handle events\")}},dispatch:function(a){var b=r.event.fix(a),c,d,e,f,g,h,i=new Array(arguments.length),j=(V.get(this,\"events\")||{})[b.type]||[],k=r.event.special[b.type]||{};for(i[0]=b,c=1;c-1:r.find(e,this,null,[i]).length),d[e]&&d.push(f);d.length&&g.push({elem:i,handlers:d})}return h\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,ya=/"},{"title":"","date":"2018-05-11T08:14:14.775Z","updated":"2018-05-11T08:14:14.775Z","comments":true,"path":"tech/animate/css/bootstrap.css","permalink":"http://www.JiShuXuePai.com/tech/animate/css/bootstrap.css","excerpt":"","text":"/*! * Bootstrap v4.0.0-alpha.6 (https://getbootstrap.com) * Copyright 2011-2017 The Bootstrap Authors * Copyright 2011-2017 Twitter, Inc. * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE) */@media print{*,::after,::before{text-shadow:none!important;box-shadow:none!important}a,a:visited{text-decoration:underline}abbr[title]::after{content:\" (\" attr(title) \")\"}pre{white-space:pre-wrap!important}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}.navbar{display:none}.badge{border:1px solid #000}.table{border-collapse:collapse!important}.table td,.table th{background-color:#fff!important}.table-bordered td,.table-bordered th{border:1px solid #ddd!important}}html{box-sizing:border-box;font-family:sans-serif;line-height:1.15;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;-ms-overflow-style:scrollbar;-webkit-tap-highlight-color:transparent}*,::after,::before{box-sizing:inherit}@-ms-viewport{width:device-width}article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}body{margin:0;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif;font-size:1rem;font-weight:400;line-height:1.5;color:#212529;background-color:#fff}[tabindex=\"-1\"]:focus{outline:0!important}hr{box-sizing:content-box;height:0;overflow:visible}h1,h2,h3,h4,h5,h6{margin-top:0;margin-bottom:.5rem}p{margin-top:0;margin-bottom:1rem}abbr[data-original-title],abbr[title]{text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted;cursor:help;border-bottom:0}address{margin-bottom:1rem;font-style:normal;line-height:inherit}dl,ol,ul{margin-top:0;margin-bottom:1rem}ol ol,ol ul,ul ol,ul ul{margin-bottom:0}dt{font-weight:700}dd{margin-bottom:.5rem;margin-left:0}blockquote{margin:0 0 1rem}dfn{font-style:italic}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{position:relative;font-size:75%;line-height:0;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}a{color:#007bff;text-decoration:none;background-color:transparent;-webkit-text-decoration-skip:objects}a:hover{color:#0056b3;text-decoration:underline}a:not([href]):not([tabindex]){color:inherit;text-decoration:none}a:not([href]):not([tabindex]):focus,a:not([href]):not([tabindex]):hover{color:inherit;text-decoration:none}a:not([href]):not([tabindex]):focus{outline:0}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}pre{margin-top:0;margin-bottom:1rem;overflow:auto}figure{margin:0 0 1rem}img{vertical-align:middle;border-style:none}svg:not(:root){overflow:hidden}[role=button],a,area,button,input,label,select,summary,textarea{-ms-touch-action:manipulation;touch-action:manipulation}table{border-collapse:collapse}caption{padding-top:.75rem;padding-bottom:.75rem;color:#868e96;text-align:left;caption-side:bottom}th{text-align:left}label{display:inline-block;margin-bottom:.5rem}button:focus{outline:1px dotted;outline:5px auto -webkit-focus-ring-color}button,input,optgroup,select,textarea{margin:0;font-family:inherit;font-size:inherit;line-height:inherit}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{padding:0;border-style:none}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=date],input[type=datetime-local],input[type=month],input[type=time]{-webkit-appearance:listbox}textarea{overflow:auto;resize:vertical}fieldset{min-width:0;padding:0;margin:0;border:0}legend{display:block;width:100%;max-width:100%;padding:0;margin-bottom:.5rem;font-size:1.5rem;line-height:inherit;color:inherit;white-space:normal}progress{vertical-align:baseline}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{outline-offset:-2px;-webkit-appearance:none}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{font:inherit;-webkit-appearance:button}output{display:inline-block}summary{display:list-item}template{display:none}[hidden]{display:none!important}.h1,.h2,.h3,.h4,.h5,.h6,h1,h2,h3,h4,h5,h6{margin-bottom:.5rem;font-family:inherit;font-weight:500;line-height:1.1;color:inherit}.h1,h1{font-size:2.5rem}.h2,h2{font-size:2rem}.h3,h3{font-size:1.75rem}.h4,h4{font-size:1.5rem}.h5,h5{font-size:1.25rem}.h6,h6{font-size:1rem}.lead{font-size:1.25rem;font-weight:300}.display-1{font-size:6rem;font-weight:300;line-height:1.1}.display-2{font-size:5.5rem;font-weight:300;line-height:1.1}.display-3{font-size:4.5rem;font-weight:300;line-height:1.1}.display-4{font-size:3.5rem;font-weight:300;line-height:1.1}hr{margin-top:1rem;margin-bottom:1rem;border:0;border-top:1px solid rgba(0,0,0,.1)}.small,small{font-size:80%;font-weight:400}.mark,mark{padding:.2em;background-color:#fcf8e3}.list-unstyled{padding-left:0;list-style:none}.list-inline{padding-left:0;list-style:none}.list-inline-item{display:inline-block}.list-inline-item:not(:last-child){margin-right:5px}.initialism{font-size:90%;text-transform:uppercase}.blockquote{margin-bottom:1rem;font-size:1.25rem}.blockquote-footer{display:block;font-size:80%;color:#868e96}.blockquote-footer::before{content:\"\\2014 \\00A0\"}.img-fluid{max-width:100%;height:auto}.img-thumbnail{padding:.25rem;background-color:#fff;border:1px solid #ddd;border-radius:.25rem;transition:all .2s ease-in-out;max-width:100%;height:auto}.figure{display:inline-block}.figure-img{margin-bottom:.5rem;line-height:1}.figure-caption{font-size:90%;color:#868e96}code,kbd,pre,samp{font-family:Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace}code{padding:.2rem .4rem;font-size:90%;color:#bd4147;background-color:#f8f9fa;border-radius:.25rem}a>code{padding:0;color:inherit;background-color:inherit}kbd{padding:.2rem .4rem;font-size:90%;color:#fff;background-color:#212529;border-radius:.2rem}kbd kbd{padding:0;font-size:100%;font-weight:700}pre{display:block;margin-top:0;margin-bottom:1rem;font-size:90%;color:#212529}pre code{padding:0;font-size:inherit;color:inherit;background-color:transparent;border-radius:0}.pre-scrollable{max-height:340px;overflow-y:scroll}.container{margin-right:auto;margin-left:auto;padding-right:15px;padding-left:15px;width:100%}@media (min-width:576px){.container{max-width:540px}}@media (min-width:768px){.container{max-width:720px}}@media (min-width:992px){.container{max-width:960px}}@media (min-width:1200px){.container{max-width:1140px}}.container-fluid{width:100%;margin-right:auto;margin-left:auto;padding-right:15px;padding-left:15px;width:100%}.row{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-right:-15px;margin-left:-15px}.no-gutters{margin-right:0;margin-left:0}.no-gutters>.col,.no-gutters>[class*=col-]{padding-right:0;padding-left:0}.col,.col-1,.col-10,.col-11,.col-12,.col-2,.col-3,.col-4,.col-5,.col-6,.col-7,.col-8,.col-9,.col-auto,.col-lg,.col-lg-1,.col-lg-10,.col-lg-11,.col-lg-12,.col-lg-2,.col-lg-3,.col-lg-4,.col-lg-5,.col-lg-6,.col-lg-7,.col-lg-8,.col-lg-9,.col-lg-auto,.col-md,.col-md-1,.col-md-10,.col-md-11,.col-md-12,.col-md-2,.col-md-3,.col-md-4,.col-md-5,.col-md-6,.col-md-7,.col-md-8,.col-md-9,.col-md-auto,.col-sm,.col-sm-1,.col-sm-10,.col-sm-11,.col-sm-12,.col-sm-2,.col-sm-3,.col-sm-4,.col-sm-5,.col-sm-6,.col-sm-7,.col-sm-8,.col-sm-9,.col-sm-auto,.col-xl,.col-xl-1,.col-xl-10,.col-xl-11,.col-xl-12,.col-xl-2,.col-xl-3,.col-xl-4,.col-xl-5,.col-xl-6,.col-xl-7,.col-xl-8,.col-xl-9,.col-xl-auto{position:relative;width:100%;min-height:1px;padding-right:15px;padding-left:15px}.col{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.col-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:none}.col-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-1{-ms-flex-order:1;order:1}.order-2{-ms-flex-order:2;order:2}.order-3{-ms-flex-order:3;order:3}.order-4{-ms-flex-order:4;order:4}.order-5{-ms-flex-order:5;order:5}.order-6{-ms-flex-order:6;order:6}.order-7{-ms-flex-order:7;order:7}.order-8{-ms-flex-order:8;order:8}.order-9{-ms-flex-order:9;order:9}.order-10{-ms-flex-order:10;order:10}.order-11{-ms-flex-order:11;order:11}.order-12{-ms-flex-order:12;order:12}@media (min-width:576px){.col-sm{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.col-sm-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:none}.col-sm-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-sm-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-sm-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-sm-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-sm-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-sm-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-sm-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-sm-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-sm-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-sm-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-sm-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-sm-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-sm-1{-ms-flex-order:1;order:1}.order-sm-2{-ms-flex-order:2;order:2}.order-sm-3{-ms-flex-order:3;order:3}.order-sm-4{-ms-flex-order:4;order:4}.order-sm-5{-ms-flex-order:5;order:5}.order-sm-6{-ms-flex-order:6;order:6}.order-sm-7{-ms-flex-order:7;order:7}.order-sm-8{-ms-flex-order:8;order:8}.order-sm-9{-ms-flex-order:9;order:9}.order-sm-10{-ms-flex-order:10;order:10}.order-sm-11{-ms-flex-order:11;order:11}.order-sm-12{-ms-flex-order:12;order:12}}@media (min-width:768px){.col-md{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.col-md-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:none}.col-md-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-md-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-md-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-md-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-md-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-md-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-md-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-md-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-md-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-md-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-md-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-md-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-md-1{-ms-flex-order:1;order:1}.order-md-2{-ms-flex-order:2;order:2}.order-md-3{-ms-flex-order:3;order:3}.order-md-4{-ms-flex-order:4;order:4}.order-md-5{-ms-flex-order:5;order:5}.order-md-6{-ms-flex-order:6;order:6}.order-md-7{-ms-flex-order:7;order:7}.order-md-8{-ms-flex-order:8;order:8}.order-md-9{-ms-flex-order:9;order:9}.order-md-10{-ms-flex-order:10;order:10}.order-md-11{-ms-flex-order:11;order:11}.order-md-12{-ms-flex-order:12;order:12}}@media (min-width:992px){.col-lg{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.col-lg-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:none}.col-lg-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-lg-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-lg-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-lg-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-lg-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-lg-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-lg-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-lg-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-lg-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-lg-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-lg-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-lg-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-lg-1{-ms-flex-order:1;order:1}.order-lg-2{-ms-flex-order:2;order:2}.order-lg-3{-ms-flex-order:3;order:3}.order-lg-4{-ms-flex-order:4;order:4}.order-lg-5{-ms-flex-order:5;order:5}.order-lg-6{-ms-flex-order:6;order:6}.order-lg-7{-ms-flex-order:7;order:7}.order-lg-8{-ms-flex-order:8;order:8}.order-lg-9{-ms-flex-order:9;order:9}.order-lg-10{-ms-flex-order:10;order:10}.order-lg-11{-ms-flex-order:11;order:11}.order-lg-12{-ms-flex-order:12;order:12}}@media (min-width:1200px){.col-xl{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.col-xl-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:none}.col-xl-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-xl-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-xl-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-xl-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-xl-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-xl-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-xl-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-xl-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-xl-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-xl-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-xl-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-xl-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-xl-1{-ms-flex-order:1;order:1}.order-xl-2{-ms-flex-order:2;order:2}.order-xl-3{-ms-flex-order:3;order:3}.order-xl-4{-ms-flex-order:4;order:4}.order-xl-5{-ms-flex-order:5;order:5}.order-xl-6{-ms-flex-order:6;order:6}.order-xl-7{-ms-flex-order:7;order:7}.order-xl-8{-ms-flex-order:8;order:8}.order-xl-9{-ms-flex-order:9;order:9}.order-xl-10{-ms-flex-order:10;order:10}.order-xl-11{-ms-flex-order:11;order:11}.order-xl-12{-ms-flex-order:12;order:12}}.table{width:100%;max-width:100%;margin-bottom:1rem;background-color:transparent}.table td,.table th{padding:.75rem;vertical-align:top;border-top:1px solid #e9ecef}.table thead th{vertical-align:bottom;border-bottom:2px solid #e9ecef}.table tbody+tbody{border-top:2px solid #e9ecef}.table .table{background-color:#fff}.table-sm td,.table-sm th{padding:.3rem}.table-bordered{border:1px solid #e9ecef}.table-bordered td,.table-bordered th{border:1px solid #e9ecef}.table-bordered thead td,.table-bordered thead th{border-bottom-width:2px}.table-striped tbody tr:nth-of-type(odd){background-color:rgba(0,0,0,.05)}.table-hover tbody tr:hover{background-color:rgba(0,0,0,.075)}.table-primary,.table-primary>td,.table-primary>th{background-color:#b8daff}.table-hover .table-primary:hover{background-color:#9fcdff}.table-hover .table-primary:hover>td,.table-hover .table-primary:hover>th{background-color:#9fcdff}.table-secondary,.table-secondary>td,.table-secondary>th{background-color:#dddfe2}.table-hover .table-secondary:hover{background-color:#cfd2d6}.table-hover .table-secondary:hover>td,.table-hover .table-secondary:hover>th{background-color:#cfd2d6}.table-success,.table-success>td,.table-success>th{background-color:#c3e6cb}.table-hover .table-success:hover{background-color:#b1dfbb}.table-hover .table-success:hover>td,.table-hover .table-success:hover>th{background-color:#b1dfbb}.table-info,.table-info>td,.table-info>th{background-color:#bee5eb}.table-hover .table-info:hover{background-color:#abdde5}.table-hover .table-info:hover>td,.table-hover .table-info:hover>th{background-color:#abdde5}.table-warning,.table-warning>td,.table-warning>th{background-color:#ffeeba}.table-hover .table-warning:hover{background-color:#ffe8a1}.table-hover .table-warning:hover>td,.table-hover .table-warning:hover>th{background-color:#ffe8a1}.table-danger,.table-danger>td,.table-danger>th{background-color:#f5c6cb}.table-hover .table-danger:hover{background-color:#f1b0b7}.table-hover .table-danger:hover>td,.table-hover .table-danger:hover>th{background-color:#f1b0b7}.table-light,.table-light>td,.table-light>th{background-color:#fdfdfe}.table-hover .table-light:hover{background-color:#ececf6}.table-hover .table-light:hover>td,.table-hover .table-light:hover>th{background-color:#ececf6}.table-dark,.table-dark>td,.table-dark>th{background-color:#c6c8ca}.table-hover .table-dark:hover{background-color:#b9bbbe}.table-hover .table-dark:hover>td,.table-hover .table-dark:hover>th{background-color:#b9bbbe}.table-active,.table-active>td,.table-active>th{background-color:rgba(0,0,0,.075)}.table-hover .table-active:hover{background-color:rgba(0,0,0,.075)}.table-hover .table-active:hover>td,.table-hover .table-active:hover>th{background-color:rgba(0,0,0,.075)}.thead-inverse th{color:#fff;background-color:#212529}.thead-default th{color:#495057;background-color:#e9ecef}.table-inverse{color:#fff;background-color:#212529}.table-inverse td,.table-inverse th,.table-inverse thead th{border-color:#32383e}.table-inverse.table-bordered{border:0}.table-inverse.table-striped tbody tr:nth-of-type(odd){background-color:rgba(255,255,255,.05)}.table-inverse.table-hover tbody tr:hover{background-color:rgba(255,255,255,.075)}@media (max-width:991px){.table-responsive{display:block;width:100%;overflow-x:auto;-ms-overflow-style:-ms-autohiding-scrollbar}.table-responsive.table-bordered{border:0}}.form-control{display:block;width:100%;padding:.5rem .75rem;font-size:1rem;line-height:1.25;color:#495057;background-color:#fff;background-image:none;background-clip:padding-box;border:1px solid rgba(0,0,0,.15);border-radius:.25rem;transition:border-color ease-in-out .15s,box-shadow ease-in-out .15s}.form-control::-ms-expand{background-color:transparent;border:0}.form-control:focus{color:#495057;background-color:#fff;border-color:#80bdff;outline:0}.form-control::-webkit-input-placeholder{color:#868e96;opacity:1}.form-control:-ms-input-placeholder{color:#868e96;opacity:1}.form-control::placeholder{color:#868e96;opacity:1}.form-control:disabled,.form-control[readonly]{background-color:#e9ecef;opacity:1}select.form-control:not([size]):not([multiple]){height:calc(2.25rem + 2px)}select.form-control:focus::-ms-value{color:#495057;background-color:#fff}.form-control-file,.form-control-range{display:block}.col-form-label{padding-top:calc(.5rem - 1px * 2);padding-bottom:calc(.5rem - 1px * 2);margin-bottom:0}.col-form-label-lg{padding-top:calc(.5rem - 1px * 2);padding-bottom:calc(.5rem - 1px * 2);font-size:1.25rem}.col-form-label-sm{padding-top:calc(.25rem - 1px * 2);padding-bottom:calc(.25rem - 1px * 2);font-size:.875rem}.col-form-legend{padding-top:.5rem;padding-bottom:.5rem;margin-bottom:0;font-size:1rem}.form-control-plaintext{padding-top:.5rem;padding-bottom:.5rem;margin-bottom:0;line-height:1.25;border:solid transparent;border-width:1px 0}.form-control-plaintext.form-control-lg,.form-control-plaintext.form-control-sm,.input-group-lg>.form-control-plaintext.form-control,.input-group-lg>.form-control-plaintext.input-group-addon,.input-group-lg>.input-group-btn>.form-control-plaintext.btn,.input-group-sm>.form-control-plaintext.form-control,.input-group-sm>.form-control-plaintext.input-group-addon,.input-group-sm>.input-group-btn>.form-control-plaintext.btn{padding-right:0;padding-left:0}.form-control-sm,.input-group-sm>.form-control,.input-group-sm>.input-group-addon,.input-group-sm>.input-group-btn>.btn{padding:.25rem .5rem;font-size:.875rem;line-height:1.5;border-radius:.2rem}.input-group-sm>.input-group-btn>select.btn:not([size]):not([multiple]),.input-group-sm>select.form-control:not([size]):not([multiple]),.input-group-sm>select.input-group-addon:not([size]):not([multiple]),select.form-control-sm:not([size]):not([multiple]){height:calc(1.8125rem + 2px)}.form-control-lg,.input-group-lg>.form-control,.input-group-lg>.input-group-addon,.input-group-lg>.input-group-btn>.btn{padding:.5rem 1rem;font-size:1.25rem;line-height:1.5;border-radius:.3rem}.input-group-lg>.input-group-btn>select.btn:not([size]):not([multiple]),.input-group-lg>select.form-control:not([size]):not([multiple]),.input-group-lg>select.input-group-addon:not([size]):not([multiple]),select.form-control-lg:not([size]):not([multiple]){height:calc(2.3125rem + 2px)}.form-group{margin-bottom:1rem}.form-text{display:block;margin-top:.25rem}.form-row{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-right:-5px;margin-left:-5px}.form-row>.col,.form-row>[class*=col-]{padding-right:5px;padding-left:5px}.form-check{position:relative;display:block;margin-bottom:.5rem}.form-check.disabled .form-check-label{color:#868e96}.form-check-label{padding-left:1.25rem;margin-bottom:0}.form-check-input{position:absolute;margin-top:.25rem;margin-left:-1.25rem}.form-check-input:only-child{position:static}.form-check-inline{display:inline-block}.form-check-inline .form-check-label{vertical-align:middle}.form-check-inline+.form-check-inline{margin-left:.75rem}.invalid-feedback{display:none;margin-top:.25rem;font-size:.875rem;color:#dc3545}.invalid-tooltip{position:absolute;top:100%;z-index:5;display:none;width:250px;padding:.5rem;margin-top:.1rem;font-size:.875rem;line-height:1;color:#fff;background-color:rgba(220,53,69,.8);border-radius:.2rem}.custom-select.is-valid,.form-control.is-valid,.was-validated .custom-select:valid,.was-validated .form-control:valid{border-color:#28a745}.custom-select.is-valid:focus,.form-control.is-valid:focus,.was-validated .custom-select:valid:focus,.was-validated .form-control:valid:focus{box-shadow:0 0 0 .2rem rgba(40,167,69,.25)}.custom-select.is-valid~.invalid-feedback,.custom-select.is-valid~.invalid-tooltip,.form-control.is-valid~.invalid-feedback,.form-control.is-valid~.invalid-tooltip,.was-validated .custom-select:valid~.invalid-feedback,.was-validated .custom-select:valid~.invalid-tooltip,.was-validated .form-control:valid~.invalid-feedback,.was-validated .form-control:valid~.invalid-tooltip{display:block}.form-check-input.is-valid+.form-check-label,.was-validated .form-check-input:valid+.form-check-label{color:#28a745}.custom-control-input.is-valid~.custom-control-indicator,.was-validated .custom-control-input:valid~.custom-control-indicator{background-color:rgba(40,167,69,.25)}.custom-control-input.is-valid~.custom-control-description,.was-validated .custom-control-input:valid~.custom-control-description{color:#28a745}.custom-file-input.is-valid~.custom-file-control,.was-validated .custom-file-input:valid~.custom-file-control{border-color:#28a745}.custom-file-input.is-valid~.custom-file-control::before,.was-validated .custom-file-input:valid~.custom-file-control::before{border-color:inherit}.custom-file-input.is-valid:focus,.was-validated .custom-file-input:valid:focus{box-shadow:0 0 0 .2rem rgba(40,167,69,.25)}.custom-select.is-invalid,.form-control.is-invalid,.was-validated .custom-select:invalid,.was-validated .form-control:invalid{border-color:#dc3545}.custom-select.is-invalid:focus,.form-control.is-invalid:focus,.was-validated .custom-select:invalid:focus,.was-validated .form-control:invalid:focus{box-shadow:0 0 0 .2rem rgba(220,53,69,.25)}.custom-select.is-invalid~.invalid-feedback,.custom-select.is-invalid~.invalid-tooltip,.form-control.is-invalid~.invalid-feedback,.form-control.is-invalid~.invalid-tooltip,.was-validated .custom-select:invalid~.invalid-feedback,.was-validated .custom-select:invalid~.invalid-tooltip,.was-validated .form-control:invalid~.invalid-feedback,.was-validated .form-control:invalid~.invalid-tooltip{display:block}.form-check-input.is-invalid+.form-check-label,.was-validated .form-check-input:invalid+.form-check-label{color:#dc3545}.custom-control-input.is-invalid~.custom-control-indicator,.was-validated .custom-control-input:invalid~.custom-control-indicator{background-color:rgba(220,53,69,.25)}.custom-control-input.is-invalid~.custom-control-description,.was-validated .custom-control-input:invalid~.custom-control-description{color:#dc3545}.custom-file-input.is-invalid~.custom-file-control,.was-validated .custom-file-input:invalid~.custom-file-control{border-color:#dc3545}.custom-file-input.is-invalid~.custom-file-control::before,.was-validated .custom-file-input:invalid~.custom-file-control::before{border-color:inherit}.custom-file-input.is-invalid:focus,.was-validated .custom-file-input:invalid:focus{box-shadow:0 0 0 .2rem rgba(220,53,69,.25)}.form-inline{display:-ms-flexbox;display:flex;-ms-flex-flow:row wrap;flex-flow:row wrap;-ms-flex-align:center;align-items:center}.form-inline .form-check{width:100%}@media (min-width:576px){.form-inline label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;margin-bottom:0}.form-inline .form-group{display:-ms-flexbox;display:flex;-ms-flex:0 0 auto;flex:0 0 auto;-ms-flex-flow:row wrap;flex-flow:row wrap;-ms-flex-align:center;align-items:center;margin-bottom:0}.form-inline .form-control{display:inline-block;width:auto;vertical-align:middle}.form-inline .form-control-plaintext{display:inline-block}.form-inline .input-group{width:auto}.form-inline .form-control-label{margin-bottom:0;vertical-align:middle}.form-inline .form-check{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:auto;margin-top:0;margin-bottom:0}.form-inline .form-check-label{padding-left:0}.form-inline .form-check-input{position:relative;margin-top:0;margin-right:.25rem;margin-left:0}.form-inline .custom-control{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;padding-left:0}.form-inline .custom-control-indicator{position:static;display:inline-block;margin-right:.25rem;vertical-align:text-bottom}.form-inline .has-feedback .form-control-feedback{top:0}}.btn{display:inline-block;font-weight:400;text-align:center;white-space:nowrap;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border:1px solid transparent;padding:.5rem .75rem;font-size:1rem;line-height:1.25;border-radius:.25rem;transition:all .15s ease-in-out}.btn:focus,.btn:hover{text-decoration:none}.btn.focus,.btn:focus{outline:0;box-shadow:0 0 0 3px rgba(0,123,255,.25)}.btn.disabled,.btn:disabled{opacity:.65}.btn.active,.btn:active{background-image:none}a.btn.disabled,fieldset[disabled] a.btn{pointer-events:none}.btn-primary{color:#fff;background-color:#007bff;border-color:#007bff}.btn-primary:hover{color:#fff;background-color:#0069d9;border-color:#0062cc}.btn-primary.focus,.btn-primary:focus{box-shadow:0 0 0 3px rgba(0,123,255,.5)}.btn-primary.disabled,.btn-primary:disabled{background-color:#007bff;border-color:#007bff}.btn-primary.active,.btn-primary:active,.show>.btn-primary.dropdown-toggle{background-color:#0069d9;background-image:none;border-color:#0062cc}.btn-secondary{color:#fff;background-color:#868e96;border-color:#868e96}.btn-secondary:hover{color:#fff;background-color:#727b84;border-color:#6c757d}.btn-secondary.focus,.btn-secondary:focus{box-shadow:0 0 0 3px rgba(134,142,150,.5)}.btn-secondary.disabled,.btn-secondary:disabled{background-color:#868e96;border-color:#868e96}.btn-secondary.active,.btn-secondary:active,.show>.btn-secondary.dropdown-toggle{background-color:#727b84;background-image:none;border-color:#6c757d}.btn-success{color:#fff;background-color:#28a745;border-color:#28a745}.btn-success:hover{color:#fff;background-color:#218838;border-color:#1e7e34}.btn-success.focus,.btn-success:focus{box-shadow:0 0 0 3px rgba(40,167,69,.5)}.btn-success.disabled,.btn-success:disabled{background-color:#28a745;border-color:#28a745}.btn-success.active,.btn-success:active,.show>.btn-success.dropdown-toggle{background-color:#218838;background-image:none;border-color:#1e7e34}.btn-info{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-info:hover{color:#fff;background-color:#138496;border-color:#117a8b}.btn-info.focus,.btn-info:focus{box-shadow:0 0 0 3px rgba(23,162,184,.5)}.btn-info.disabled,.btn-info:disabled{background-color:#17a2b8;border-color:#17a2b8}.btn-info.active,.btn-info:active,.show>.btn-info.dropdown-toggle{background-color:#138496;background-image:none;border-color:#117a8b}.btn-warning{color:#111;background-color:#ffc107;border-color:#ffc107}.btn-warning:hover{color:#111;background-color:#e0a800;border-color:#d39e00}.btn-warning.focus,.btn-warning:focus{box-shadow:0 0 0 3px rgba(255,193,7,.5)}.btn-warning.disabled,.btn-warning:disabled{background-color:#ffc107;border-color:#ffc107}.btn-warning.active,.btn-warning:active,.show>.btn-warning.dropdown-toggle{background-color:#e0a800;background-image:none;border-color:#d39e00}.btn-danger{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-danger:hover{color:#fff;background-color:#c82333;border-color:#bd2130}.btn-danger.focus,.btn-danger:focus{box-shadow:0 0 0 3px rgba(220,53,69,.5)}.btn-danger.disabled,.btn-danger:disabled{background-color:#dc3545;border-color:#dc3545}.btn-danger.active,.btn-danger:active,.show>.btn-danger.dropdown-toggle{background-color:#c82333;background-image:none;border-color:#bd2130}.btn-light{color:#111;background-color:#f8f9fa;border-color:#f8f9fa}.btn-light:hover{color:#111;background-color:#e2e6ea;border-color:#dae0e5}.btn-light.focus,.btn-light:focus{box-shadow:0 0 0 3px rgba(248,249,250,.5)}.btn-light.disabled,.btn-light:disabled{background-color:#f8f9fa;border-color:#f8f9fa}.btn-light.active,.btn-light:active,.show>.btn-light.dropdown-toggle{background-color:#e2e6ea;background-image:none;border-color:#dae0e5}.btn-dark{color:#fff;background-color:#343a40;border-color:#343a40}.btn-dark:hover{color:#fff;background-color:#23272b;border-color:#1d2124}.btn-dark.focus,.btn-dark:focus{box-shadow:0 0 0 3px rgba(52,58,64,.5)}.btn-dark.disabled,.btn-dark:disabled{background-color:#343a40;border-color:#343a40}.btn-dark.active,.btn-dark:active,.show>.btn-dark.dropdown-toggle{background-color:#23272b;background-image:none;border-color:#1d2124}.btn-outline-primary{color:#007bff;background-color:transparent;background-image:none;border-color:#007bff}.btn-outline-primary:hover{color:#fff;background-color:#007bff;border-color:#007bff}.btn-outline-primary.focus,.btn-outline-primary:focus{box-shadow:0 0 0 3px rgba(0,123,255,.5)}.btn-outline-primary.disabled,.btn-outline-primary:disabled{color:#007bff;background-color:transparent}.btn-outline-primary.active,.btn-outline-primary:active,.show>.btn-outline-primary.dropdown-toggle{color:#fff;background-color:#007bff;border-color:#007bff}.btn-outline-secondary{color:#868e96;background-color:transparent;background-image:none;border-color:#868e96}.btn-outline-secondary:hover{color:#fff;background-color:#868e96;border-color:#868e96}.btn-outline-secondary.focus,.btn-outline-secondary:focus{box-shadow:0 0 0 3px rgba(134,142,150,.5)}.btn-outline-secondary.disabled,.btn-outline-secondary:disabled{color:#868e96;background-color:transparent}.btn-outline-secondary.active,.btn-outline-secondary:active,.show>.btn-outline-secondary.dropdown-toggle{color:#fff;background-color:#868e96;border-color:#868e96}.btn-outline-success{color:#28a745;background-color:transparent;background-image:none;border-color:#28a745}.btn-outline-success:hover{color:#fff;background-color:#28a745;border-color:#28a745}.btn-outline-success.focus,.btn-outline-success:focus{box-shadow:0 0 0 3px rgba(40,167,69,.5)}.btn-outline-success.disabled,.btn-outline-success:disabled{color:#28a745;background-color:transparent}.btn-outline-success.active,.btn-outline-success:active,.show>.btn-outline-success.dropdown-toggle{color:#fff;background-color:#28a745;border-color:#28a745}.btn-outline-info{color:#17a2b8;background-color:transparent;background-image:none;border-color:#17a2b8}.btn-outline-info:hover{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-outline-info.focus,.btn-outline-info:focus{box-shadow:0 0 0 3px rgba(23,162,184,.5)}.btn-outline-info.disabled,.btn-outline-info:disabled{color:#17a2b8;background-color:transparent}.btn-outline-info.active,.btn-outline-info:active,.show>.btn-outline-info.dropdown-toggle{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-outline-warning{color:#ffc107;background-color:transparent;background-image:none;border-color:#ffc107}.btn-outline-warning:hover{color:#fff;background-color:#ffc107;border-color:#ffc107}.btn-outline-warning.focus,.btn-outline-warning:focus{box-shadow:0 0 0 3px rgba(255,193,7,.5)}.btn-outline-warning.disabled,.btn-outline-warning:disabled{color:#ffc107;background-color:transparent}.btn-outline-warning.active,.btn-outline-warning:active,.show>.btn-outline-warning.dropdown-toggle{color:#fff;background-color:#ffc107;border-color:#ffc107}.btn-outline-danger{color:#dc3545;background-color:transparent;background-image:none;border-color:#dc3545}.btn-outline-danger:hover{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-outline-danger.focus,.btn-outline-danger:focus{box-shadow:0 0 0 3px rgba(220,53,69,.5)}.btn-outline-danger.disabled,.btn-outline-danger:disabled{color:#dc3545;background-color:transparent}.btn-outline-danger.active,.btn-outline-danger:active,.show>.btn-outline-danger.dropdown-toggle{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-outline-light{color:#f8f9fa;background-color:transparent;background-image:none;border-color:#f8f9fa}.btn-outline-light:hover{color:#fff;background-color:#f8f9fa;border-color:#f8f9fa}.btn-outline-light.focus,.btn-outline-light:focus{box-shadow:0 0 0 3px rgba(248,249,250,.5)}.btn-outline-light.disabled,.btn-outline-light:disabled{color:#f8f9fa;background-color:transparent}.btn-outline-light.active,.btn-outline-light:active,.show>.btn-outline-light.dropdown-toggle{color:#fff;background-color:#f8f9fa;border-color:#f8f9fa}.btn-outline-dark{color:#343a40;background-color:transparent;background-image:none;border-color:#343a40}.btn-outline-dark:hover{color:#fff;background-color:#343a40;border-color:#343a40}.btn-outline-dark.focus,.btn-outline-dark:focus{box-shadow:0 0 0 3px rgba(52,58,64,.5)}.btn-outline-dark.disabled,.btn-outline-dark:disabled{color:#343a40;background-color:transparent}.btn-outline-dark.active,.btn-outline-dark:active,.show>.btn-outline-dark.dropdown-toggle{color:#fff;background-color:#343a40;border-color:#343a40}.btn-link{font-weight:400;color:#007bff;border-radius:0}.btn-link,.btn-link.active,.btn-link:active,.btn-link:disabled{background-color:transparent}.btn-link,.btn-link:active,.btn-link:focus{border-color:transparent;box-shadow:none}.btn-link:hover{border-color:transparent}.btn-link:focus,.btn-link:hover{color:#0056b3;text-decoration:underline;background-color:transparent}.btn-link:disabled{color:#868e96}.btn-link:disabled:focus,.btn-link:disabled:hover{text-decoration:none}.btn-group-lg>.btn,.btn-lg{padding:.5rem 1rem;font-size:1.25rem;line-height:1.5;border-radius:.3rem}.btn-group-sm>.btn,.btn-sm{padding:.25rem .5rem;font-size:.875rem;line-height:1.5;border-radius:.2rem}.btn-block{display:block;width:100%}.btn-block+.btn-block{margin-top:.5rem}input[type=button].btn-block,input[type=reset].btn-block,input[type=submit].btn-block{width:100%}.fade{opacity:0;transition:opacity .15s linear}.fade.show{opacity:1}.collapse{display:none}.collapse.show{display:block}tr.collapse.show{display:table-row}tbody.collapse.show{display:table-row-group}.collapsing{position:relative;height:0;overflow:hidden;transition:height .35s ease}.dropdown,.dropup{position:relative}.dropdown-toggle::after{display:inline-block;width:0;height:0;margin-left:.255em;vertical-align:.255em;content:\"\";border-top:.3em solid;border-right:.3em solid transparent;border-left:.3em solid transparent}.dropdown-toggle:empty::after{margin-left:0}.dropup .dropdown-menu{margin-top:0;margin-bottom:.125rem}.dropup .dropdown-toggle::after{border-top:0;border-bottom:.3em solid}.dropdown-menu{position:absolute;top:100%;left:0;z-index:1000;display:none;float:left;min-width:10rem;padding:.5rem 0;margin:.125rem 0 0;font-size:1rem;color:#212529;text-align:left;list-style:none;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.15);border-radius:.25rem}.dropdown-divider{height:0;margin:.5rem 0;overflow:hidden;border-top:1px solid #e9ecef}.dropdown-item{display:block;width:100%;padding:.25rem 1.5rem;clear:both;font-weight:400;color:#212529;text-align:inherit;white-space:nowrap;background:0 0;border:0}.dropdown-item:focus,.dropdown-item:hover{color:#16181b;text-decoration:none;background-color:#f8f9fa}.dropdown-item.active,.dropdown-item:active{color:#fff;text-decoration:none;background-color:#007bff}.dropdown-item.disabled,.dropdown-item:disabled{color:#868e96;background-color:transparent}.show>a{outline:0}.dropdown-menu.show{display:block}.dropdown-header{display:block;padding:.5rem 1.5rem;margin-bottom:0;font-size:.875rem;color:#868e96;white-space:nowrap}.btn-group,.btn-group-vertical{position:relative;display:-ms-inline-flexbox;display:inline-flex;vertical-align:middle}.btn-group-vertical>.btn,.btn-group>.btn{position:relative;-ms-flex:0 1 auto;flex:0 1 auto;margin-bottom:0}.btn-group-vertical>.btn:hover,.btn-group>.btn:hover{z-index:2}.btn-group-vertical>.btn.active,.btn-group-vertical>.btn:active,.btn-group-vertical>.btn:focus,.btn-group>.btn.active,.btn-group>.btn:active,.btn-group>.btn:focus{z-index:2}.btn-group .btn+.btn,.btn-group .btn+.btn-group,.btn-group .btn-group+.btn,.btn-group .btn-group+.btn-group,.btn-group-vertical .btn+.btn,.btn-group-vertical .btn+.btn-group,.btn-group-vertical .btn-group+.btn,.btn-group-vertical .btn-group+.btn-group{margin-left:-1px}.btn-toolbar{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:start;justify-content:flex-start}.btn-toolbar .input-group{width:auto}.btn-group>.btn:not(:first-child):not(:last-child):not(.dropdown-toggle){border-radius:0}.btn-group>.btn:first-child{margin-left:0}.btn-group>.btn:first-child:not(:last-child):not(.dropdown-toggle){border-top-right-radius:0;border-bottom-right-radius:0}.btn-group>.btn:last-child:not(:first-child),.btn-group>.dropdown-toggle:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.btn-group>.btn-group{float:left}.btn-group>.btn-group:not(:first-child):not(:last-child)>.btn{border-radius:0}.btn-group>.btn-group:first-child:not(:last-child)>.btn:last-child,.btn-group>.btn-group:first-child:not(:last-child)>.dropdown-toggle{border-top-right-radius:0;border-bottom-right-radius:0}.btn-group>.btn-group:last-child:not(:first-child)>.btn:first-child{border-top-left-radius:0;border-bottom-left-radius:0}.btn+.dropdown-toggle-split{padding-right:.5625rem;padding-left:.5625rem}.btn+.dropdown-toggle-split::after{margin-left:0}.btn-group-sm>.btn+.dropdown-toggle-split,.btn-sm+.dropdown-toggle-split{padding-right:.375rem;padding-left:.375rem}.btn-group-lg>.btn+.dropdown-toggle-split,.btn-lg+.dropdown-toggle-split{padding-right:.75rem;padding-left:.75rem}.btn-group-vertical{display:-ms-inline-flexbox;display:inline-flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:start;align-items:flex-start;-ms-flex-pack:center;justify-content:center}.btn-group-vertical .btn,.btn-group-vertical .btn-group{width:100%}.btn-group-vertical>.btn+.btn,.btn-group-vertical>.btn+.btn-group,.btn-group-vertical>.btn-group+.btn,.btn-group-vertical>.btn-group+.btn-group{margin-top:-1px;margin-left:0}.btn-group-vertical>.btn:not(:first-child):not(:last-child){border-radius:0}.btn-group-vertical>.btn:first-child:not(:last-child){border-bottom-right-radius:0;border-bottom-left-radius:0}.btn-group-vertical>.btn:last-child:not(:first-child){border-top-left-radius:0;border-top-right-radius:0}.btn-group-vertical>.btn-group:not(:first-child):not(:last-child)>.btn{border-radius:0}.btn-group-vertical>.btn-group:first-child:not(:last-child)>.btn:last-child,.btn-group-vertical>.btn-group:first-child:not(:last-child)>.dropdown-toggle{border-bottom-right-radius:0;border-bottom-left-radius:0}.btn-group-vertical>.btn-group:last-child:not(:first-child)>.btn:first-child{border-top-left-radius:0;border-top-right-radius:0}[data-toggle=buttons]>.btn input[type=checkbox],[data-toggle=buttons]>.btn input[type=radio],[data-toggle=buttons]>.btn-group>.btn input[type=checkbox],[data-toggle=buttons]>.btn-group>.btn input[type=radio]{position:absolute;clip:rect(0,0,0,0);pointer-events:none}.input-group{position:relative;display:-ms-flexbox;display:flex;width:100%}.input-group .form-control{position:relative;z-index:2;-ms-flex:1 1 auto;flex:1 1 auto;width:1%;margin-bottom:0}.input-group .form-control:active,.input-group .form-control:focus,.input-group .form-control:hover{z-index:3}.input-group .form-control,.input-group-addon,.input-group-btn{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.input-group .form-control:not(:first-child):not(:last-child),.input-group-addon:not(:first-child):not(:last-child),.input-group-btn:not(:first-child):not(:last-child){border-radius:0}.input-group-addon,.input-group-btn{white-space:nowrap;vertical-align:middle}.input-group-addon{padding:.5rem .75rem;margin-bottom:0;font-size:1rem;font-weight:400;line-height:1.25;color:#495057;text-align:center;background-color:#e9ecef;border:1px solid rgba(0,0,0,.15);border-radius:.25rem}.input-group-addon.form-control-sm,.input-group-sm>.input-group-addon,.input-group-sm>.input-group-btn>.input-group-addon.btn{padding:.25rem .5rem;font-size:.875rem;border-radius:.2rem}.input-group-addon.form-control-lg,.input-group-lg>.input-group-addon,.input-group-lg>.input-group-btn>.input-group-addon.btn{padding:.5rem 1rem;font-size:1.25rem;border-radius:.3rem}.input-group-addon input[type=checkbox],.input-group-addon input[type=radio]{margin-top:0}.input-group .form-control:not(:last-child),.input-group-addon:not(:last-child),.input-group-btn:not(:first-child)>.btn-group:not(:last-child)>.btn,.input-group-btn:not(:first-child)>.btn:not(:last-child):not(.dropdown-toggle),.input-group-btn:not(:last-child)>.btn,.input-group-btn:not(:last-child)>.btn-group>.btn,.input-group-btn:not(:last-child)>.dropdown-toggle{border-top-right-radius:0;border-bottom-right-radius:0}.input-group-addon:not(:last-child){border-right:0}.input-group .form-control:not(:first-child),.input-group-addon:not(:first-child),.input-group-btn:not(:first-child)>.btn,.input-group-btn:not(:first-child)>.btn-group>.btn,.input-group-btn:not(:first-child)>.dropdown-toggle,.input-group-btn:not(:last-child)>.btn-group:not(:first-child)>.btn,.input-group-btn:not(:last-child)>.btn:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.form-control+.input-group-addon:not(:first-child){border-left:0}.input-group-btn{position:relative;font-size:0;white-space:nowrap}.input-group-btn>.btn{position:relative}.input-group-btn>.btn+.btn{margin-left:-1px}.input-group-btn>.btn:active,.input-group-btn>.btn:focus,.input-group-btn>.btn:hover{z-index:3}.input-group-btn:not(:last-child)>.btn,.input-group-btn:not(:last-child)>.btn-group{margin-right:-1px}.input-group-btn:not(:first-child)>.btn,.input-group-btn:not(:first-child)>.btn-group{z-index:2;margin-left:-1px}.input-group-btn:not(:first-child)>.btn-group:active,.input-group-btn:not(:first-child)>.btn-group:focus,.input-group-btn:not(:first-child)>.btn-group:hover,.input-group-btn:not(:first-child)>.btn:active,.input-group-btn:not(:first-child)>.btn:focus,.input-group-btn:not(:first-child)>.btn:hover{z-index:3}.custom-control{position:relative;display:-ms-inline-flexbox;display:inline-flex;min-height:1.5rem;padding-left:1.5rem;margin-right:1rem}.custom-control-input{position:absolute;z-index:-1;opacity:0}.custom-control-input:checked~.custom-control-indicator{color:#fff;background-color:#007bff}.custom-control-input:focus~.custom-control-indicator{box-shadow:0 0 0 1px #fff,0 0 0 3px #007bff}.custom-control-input:active~.custom-control-indicator{color:#fff;background-color:#b3d7ff}.custom-control-input:disabled~.custom-control-indicator{background-color:#e9ecef}.custom-control-input:disabled~.custom-control-description{color:#868e96}.custom-control-indicator{position:absolute;top:.25rem;left:0;display:block;width:1rem;height:1rem;pointer-events:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-color:#ddd;background-repeat:no-repeat;background-position:center center;background-size:50% 50%}.custom-checkbox .custom-control-indicator{border-radius:.25rem}.custom-checkbox .custom-control-input:checked~.custom-control-indicator{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E\")}.custom-checkbox .custom-control-input:indeterminate~.custom-control-indicator{background-color:#007bff;background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 4'%3E%3Cpath stroke='%23fff' d='M0 2h4'/%3E%3C/svg%3E\")}.custom-radio .custom-control-indicator{border-radius:50%}.custom-radio .custom-control-input:checked~.custom-control-indicator{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%23fff'/%3E%3C/svg%3E\")}.custom-controls-stacked{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.custom-controls-stacked .custom-control{margin-bottom:.25rem}.custom-controls-stacked .custom-control+.custom-control{margin-left:0}.custom-select{display:inline-block;max-width:100%;height:calc(2.25rem + 2px);padding:.375rem 1.75rem .375rem .75rem;line-height:1.25;color:#495057;vertical-align:middle;background:#fff url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3E%3Cpath fill='%23333' d='M2 0L0 2h4zm0 5L0 3h4z'/%3E%3C/svg%3E\") no-repeat right .75rem center;background-size:8px 10px;border:1px solid rgba(0,0,0,.15);border-radius:.25rem;-webkit-appearance:none;-moz-appearance:none;appearance:none}.custom-select:focus{border-color:#80bdff;outline:0}.custom-select:focus::-ms-value{color:#495057;background-color:#fff}.custom-select:disabled{color:#868e96;background-color:#e9ecef}.custom-select::-ms-expand{opacity:0}.custom-select-sm{height:calc(1.8125rem + 2px);padding-top:.375rem;padding-bottom:.375rem;font-size:75%}.custom-file{position:relative;display:inline-block;max-width:100%;height:2.5rem;margin-bottom:0}.custom-file-input{min-width:14rem;max-width:100%;height:2.5rem;margin:0;opacity:0}.custom-file-control{position:absolute;top:0;right:0;left:0;z-index:5;height:2.5rem;padding:.5rem 1rem;line-height:1.5;color:#495057;pointer-events:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-color:#fff;border:1px solid rgba(0,0,0,.15);border-radius:.25rem}.custom-file-control:lang(en):empty::after{content:\"Choose file...\"}.custom-file-control::before{position:absolute;top:-1px;right:-1px;bottom:-1px;z-index:6;display:block;height:2.5rem;padding:.5rem 1rem;line-height:1.5;color:#495057;background-color:#e9ecef;border:1px solid rgba(0,0,0,.15);border-radius:0 .25rem .25rem 0}.custom-file-control:lang(en)::before{content:\"Browse\"}.nav{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;padding-left:0;margin-bottom:0;list-style:none}.nav-link{display:block;padding:.5rem 1rem}.nav-link:focus,.nav-link:hover{text-decoration:none}.nav-link.disabled{color:#868e96}.nav-tabs{border-bottom:1px solid #ddd}.nav-tabs .nav-item{margin-bottom:-1px}.nav-tabs .nav-link{border:1px solid transparent;border-top-left-radius:.25rem;border-top-right-radius:.25rem}.nav-tabs .nav-link:focus,.nav-tabs .nav-link:hover{border-color:#e9ecef #e9ecef #ddd}.nav-tabs .nav-link.disabled{color:#868e96;background-color:transparent;border-color:transparent}.nav-tabs .nav-item.show .nav-link,.nav-tabs .nav-link.active{color:#495057;background-color:#fff;border-color:#ddd #ddd #fff}.nav-tabs .dropdown-menu{margin-top:-1px;border-top-left-radius:0;border-top-right-radius:0}.nav-pills .nav-link{border-radius:.25rem}.nav-pills .nav-link.active,.show>.nav-pills .nav-link{color:#fff;background-color:#007bff}.nav-fill .nav-item{-ms-flex:1 1 auto;flex:1 1 auto;text-align:center}.nav-justified .nav-item{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;text-align:center}.tab-content>.tab-pane{display:none}.tab-content>.active{display:block}.navbar{position:relative;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between;padding:.5rem 1rem}.navbar>.container,.navbar>.container-fluid{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}.navbar-brand{display:inline-block;padding-top:.3125rem;padding-bottom:.3125rem;margin-right:1rem;font-size:1.25rem;line-height:inherit;white-space:nowrap}.navbar-brand:focus,.navbar-brand:hover{text-decoration:none}.navbar-nav{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;padding-left:0;margin-bottom:0;list-style:none}.navbar-nav .nav-link{padding-right:0;padding-left:0}.navbar-nav .dropdown-menu{position:static;float:none}.navbar-text{display:inline-block;padding-top:.5rem;padding-bottom:.5rem}.navbar-collapse{-ms-flex-preferred-size:100%;flex-basis:100%;-ms-flex-align:center;align-items:center}.navbar-toggler{padding:.25rem .75rem;font-size:1.25rem;line-height:1;background:0 0;border:1px solid transparent;border-radius:.25rem}.navbar-toggler:focus,.navbar-toggler:hover{text-decoration:none}.navbar-toggler-icon{display:inline-block;width:1.5em;height:1.5em;vertical-align:middle;content:\"\";background:no-repeat center center;background-size:100% 100%}@media (max-width:575px){.navbar-expand-sm>.container,.navbar-expand-sm>.container-fluid{padding-right:0;padding-left:0}}@media (min-width:576px){.navbar-expand-sm{-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-sm .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-sm .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-sm .navbar-nav .dropdown-menu-right{right:0;left:auto}.navbar-expand-sm .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.navbar-expand-sm>.container,.navbar-expand-sm>.container-fluid{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-sm .navbar-collapse{display:-ms-flexbox!important;display:flex!important}.navbar-expand-sm .navbar-toggler{display:none}}@media (max-width:767px){.navbar-expand-md>.container,.navbar-expand-md>.container-fluid{padding-right:0;padding-left:0}}@media (min-width:768px){.navbar-expand-md{-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-md .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-md .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-md .navbar-nav .dropdown-menu-right{right:0;left:auto}.navbar-expand-md .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.navbar-expand-md>.container,.navbar-expand-md>.container-fluid{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-md .navbar-collapse{display:-ms-flexbox!important;display:flex!important}.navbar-expand-md .navbar-toggler{display:none}}@media (max-width:991px){.navbar-expand-lg>.container,.navbar-expand-lg>.container-fluid{padding-right:0;padding-left:0}}@media (min-width:992px){.navbar-expand-lg{-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-lg .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-lg .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-lg .navbar-nav .dropdown-menu-right{right:0;left:auto}.navbar-expand-lg .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.navbar-expand-lg>.container,.navbar-expand-lg>.container-fluid{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-lg .navbar-collapse{display:-ms-flexbox!important;display:flex!important}.navbar-expand-lg .navbar-toggler{display:none}}@media (max-width:1199px){.navbar-expand-xl>.container,.navbar-expand-xl>.container-fluid{padding-right:0;padding-left:0}}@media (min-width:1200px){.navbar-expand-xl{-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-xl .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-xl .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-xl .navbar-nav .dropdown-menu-right{right:0;left:auto}.navbar-expand-xl .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.navbar-expand-xl>.container,.navbar-expand-xl>.container-fluid{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-xl .navbar-collapse{display:-ms-flexbox!important;display:flex!important}.navbar-expand-xl .navbar-toggler{display:none}}.navbar-expand{-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand>.container,.navbar-expand>.container-fluid{padding-right:0;padding-left:0}.navbar-expand .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand .navbar-nav .dropdown-menu{position:absolute}.navbar-expand .navbar-nav .dropdown-menu-right{right:0;left:auto}.navbar-expand .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.navbar-expand>.container,.navbar-expand>.container-fluid{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand .navbar-collapse{display:-ms-flexbox!important;display:flex!important}.navbar-expand .navbar-toggler{display:none}.navbar-light .navbar-brand{color:rgba(0,0,0,.9)}.navbar-light .navbar-brand:focus,.navbar-light .navbar-brand:hover{color:rgba(0,0,0,.9)}.navbar-light .navbar-nav .nav-link{color:rgba(0,0,0,.5)}.navbar-light .navbar-nav .nav-link:focus,.navbar-light .navbar-nav .nav-link:hover{color:rgba(0,0,0,.7)}.navbar-light .navbar-nav .nav-link.disabled{color:rgba(0,0,0,.3)}.navbar-light .navbar-nav .active>.nav-link,.navbar-light .navbar-nav .nav-link.active,.navbar-light .navbar-nav .nav-link.show,.navbar-light .navbar-nav .show>.nav-link{color:rgba(0,0,0,.9)}.navbar-light .navbar-toggler{color:rgba(0,0,0,.5);border-color:rgba(0,0,0,.1)}.navbar-light .navbar-toggler-icon{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke='rgba(0, 0, 0, 0.5)' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3E%3C/svg%3E\")}.navbar-light .navbar-text{color:rgba(0,0,0,.5)}.navbar-dark .navbar-brand{color:#fff}.navbar-dark .navbar-brand:focus,.navbar-dark .navbar-brand:hover{color:#fff}.navbar-dark .navbar-nav .nav-link{color:rgba(255,255,255,.5)}.navbar-dark .navbar-nav .nav-link:focus,.navbar-dark .navbar-nav .nav-link:hover{color:rgba(255,255,255,.75)}.navbar-dark .navbar-nav .nav-link.disabled{color:rgba(255,255,255,.25)}.navbar-dark .navbar-nav .active>.nav-link,.navbar-dark .navbar-nav .nav-link.active,.navbar-dark .navbar-nav .nav-link.show,.navbar-dark .navbar-nav .show>.nav-link{color:#fff}.navbar-dark .navbar-toggler{color:rgba(255,255,255,.5);border-color:rgba(255,255,255,.1)}.navbar-dark .navbar-toggler-icon{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke='rgba(255, 255, 255, 0.5)' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3E%3C/svg%3E\")}.navbar-dark .navbar-text{color:rgba(255,255,255,.5)}.card{position:relative;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;min-width:0;word-wrap:break-word;background-color:#fff;background-clip:border-box;border:1px solid rgba(0,0,0,.125);border-radius:.25rem}.card-body{-ms-flex:1 1 auto;flex:1 1 auto;padding:1.25rem}.card-title{margin-bottom:.75rem}.card-subtitle{margin-top:-.375rem;margin-bottom:0}.card-text:last-child{margin-bottom:0}.card-link:hover{text-decoration:none}.card-link+.card-link{margin-left:1.25rem}.card>.list-group:first-child .list-group-item:first-child{border-top-left-radius:.25rem;border-top-right-radius:.25rem}.card>.list-group:last-child .list-group-item:last-child{border-bottom-right-radius:.25rem;border-bottom-left-radius:.25rem}.card-header{padding:.75rem 1.25rem;margin-bottom:0;background-color:rgba(0,0,0,.03);border-bottom:1px solid rgba(0,0,0,.125)}.card-header:first-child{border-radius:calc(.25rem - 1px) calc(.25rem - 1px) 0 0}.card-footer{padding:.75rem 1.25rem;background-color:rgba(0,0,0,.03);border-top:1px solid rgba(0,0,0,.125)}.card-footer:last-child{border-radius:0 0 calc(.25rem - 1px) calc(.25rem - 1px)}.card-header-tabs{margin-right:-.625rem;margin-bottom:-.75rem;margin-left:-.625rem;border-bottom:0}.card-header-pills{margin-right:-.625rem;margin-left:-.625rem}.card-img-overlay{position:absolute;top:0;right:0;bottom:0;left:0;padding:1.25rem}.card-img{width:100%;border-radius:calc(.25rem - 1px)}.card-img-top{width:100%;border-top-left-radius:calc(.25rem - 1px);border-top-right-radius:calc(.25rem - 1px)}.card-img-bottom{width:100%;border-bottom-right-radius:calc(.25rem - 1px);border-bottom-left-radius:calc(.25rem - 1px)}@media (min-width:576px){.card-deck{display:-ms-flexbox;display:flex;-ms-flex-flow:row wrap;flex-flow:row wrap;margin-right:-15px;margin-left:-15px}.card-deck .card{display:-ms-flexbox;display:flex;-ms-flex:1 0 0%;flex:1 0 0%;-ms-flex-direction:column;flex-direction:column;margin-right:15px;margin-left:15px}}@media (min-width:576px){.card-group{display:-ms-flexbox;display:flex;-ms-flex-flow:row wrap;flex-flow:row wrap}.card-group .card{-ms-flex:1 0 0%;flex:1 0 0%}.card-group .card+.card{margin-left:0;border-left:0}.card-group .card:first-child{border-top-right-radius:0;border-bottom-right-radius:0}.card-group .card:first-child .card-img-top{border-top-right-radius:0}.card-group .card:first-child .card-img-bottom{border-bottom-right-radius:0}.card-group .card:last-child{border-top-left-radius:0;border-bottom-left-radius:0}.card-group .card:last-child .card-img-top{border-top-left-radius:0}.card-group .card:last-child .card-img-bottom{border-bottom-left-radius:0}.card-group .card:not(:first-child):not(:last-child){border-radius:0}.card-group .card:not(:first-child):not(:last-child) .card-img-bottom,.card-group .card:not(:first-child):not(:last-child) .card-img-top{border-radius:0}}.card-columns .card{margin-bottom:.75rem}@media (min-width:576px){.card-columns{-webkit-column-count:3;column-count:3;-webkit-column-gap:1.25rem;column-gap:1.25rem}.card-columns .card{display:inline-block;width:100%}}.breadcrumb{padding:.75rem 1rem;margin-bottom:1rem;list-style:none;background-color:#e9ecef;border-radius:.25rem}.breadcrumb::after{display:block;clear:both;content:\"\"}.breadcrumb-item{float:left}.breadcrumb-item+.breadcrumb-item::before{display:inline-block;padding-right:.5rem;padding-left:.5rem;color:#868e96;content:\"/\"}.breadcrumb-item+.breadcrumb-item:hover::before{text-decoration:underline}.breadcrumb-item+.breadcrumb-item:hover::before{text-decoration:none}.breadcrumb-item.active{color:#868e96}.pagination{display:-ms-flexbox;display:flex;padding-left:0;list-style:none;border-radius:.25rem}.page-item:first-child .page-link{margin-left:0;border-top-left-radius:.25rem;border-bottom-left-radius:.25rem}.page-item:last-child .page-link{border-top-right-radius:.25rem;border-bottom-right-radius:.25rem}.page-item.active .page-link{z-index:2;color:#fff;background-color:#007bff;border-color:#007bff}.page-item.disabled .page-link{color:#868e96;pointer-events:none;background-color:#fff;border-color:#ddd}.page-link{position:relative;display:block;padding:.5rem .75rem;margin-left:-1px;line-height:1.25;color:#007bff;background-color:#fff;border:1px solid #ddd}.page-link:focus,.page-link:hover{color:#0056b3;text-decoration:none;background-color:#e9ecef;border-color:#ddd}.pagination-lg .page-link{padding:.75rem 1.5rem;font-size:1.25rem;line-height:1.5}.pagination-lg .page-item:first-child .page-link{border-top-left-radius:.3rem;border-bottom-left-radius:.3rem}.pagination-lg .page-item:last-child .page-link{border-top-right-radius:.3rem;border-bottom-right-radius:.3rem}.pagination-sm .page-link{padding:.25rem .5rem;font-size:.875rem;line-height:1.5}.pagination-sm .page-item:first-child .page-link{border-top-left-radius:.2rem;border-bottom-left-radius:.2rem}.pagination-sm .page-item:last-child .page-link{border-top-right-radius:.2rem;border-bottom-right-radius:.2rem}.badge{display:inline-block;padding:.25em .4em;font-size:75%;font-weight:700;line-height:1;color:#fff;text-align:center;white-space:nowrap;vertical-align:baseline;border-radius:.25rem}.badge:empty{display:none}.btn .badge{position:relative;top:-1px}.badge-pill{padding-right:.6em;padding-left:.6em;border-radius:10rem}.badge-primary{color:#fff;background-color:#007bff}.badge-primary[href]:focus,.badge-primary[href]:hover{color:#fff;text-decoration:none;background-color:#0062cc}.badge-secondary{color:#fff;background-color:#868e96}.badge-secondary[href]:focus,.badge-secondary[href]:hover{color:#fff;text-decoration:none;background-color:#6c757d}.badge-success{color:#fff;background-color:#28a745}.badge-success[href]:focus,.badge-success[href]:hover{color:#fff;text-decoration:none;background-color:#1e7e34}.badge-info{color:#fff;background-color:#17a2b8}.badge-info[href]:focus,.badge-info[href]:hover{color:#fff;text-decoration:none;background-color:#117a8b}.badge-warning{color:#111;background-color:#ffc107}.badge-warning[href]:focus,.badge-warning[href]:hover{color:#111;text-decoration:none;background-color:#d39e00}.badge-danger{color:#fff;background-color:#dc3545}.badge-danger[href]:focus,.badge-danger[href]:hover{color:#fff;text-decoration:none;background-color:#bd2130}.badge-light{color:#111;background-color:#f8f9fa}.badge-light[href]:focus,.badge-light[href]:hover{color:#111;text-decoration:none;background-color:#dae0e5}.badge-dark{color:#fff;background-color:#343a40}.badge-dark[href]:focus,.badge-dark[href]:hover{color:#fff;text-decoration:none;background-color:#1d2124}.jumbotron{padding:2rem 1rem;margin-bottom:2rem;background-color:#e9ecef;border-radius:.3rem}@media (min-width:576px){.jumbotron{padding:4rem 2rem}}.jumbotron-fluid{padding-right:0;padding-left:0;border-radius:0}.alert{padding:.75rem 1.25rem;margin-bottom:1rem;border:1px solid transparent;border-radius:.25rem}.alert-heading{color:inherit}.alert-link{font-weight:700}.alert-dismissible .close{position:relative;top:-.75rem;right:-1.25rem;padding:.75rem 1.25rem;color:inherit}.alert-primary{color:#004085;background-color:#cce5ff;border-color:#b8daff}.alert-primary hr{border-top-color:#9fcdff}.alert-primary .alert-link{color:#002752}.alert-secondary{color:#464a4e;background-color:#e7e8ea;border-color:#dddfe2}.alert-secondary hr{border-top-color:#cfd2d6}.alert-secondary .alert-link{color:#2e3133}.alert-success{color:#155724;background-color:#d4edda;border-color:#c3e6cb}.alert-success hr{border-top-color:#b1dfbb}.alert-success .alert-link{color:#0b2e13}.alert-info{color:#0c5460;background-color:#d1ecf1;border-color:#bee5eb}.alert-info hr{border-top-color:#abdde5}.alert-info .alert-link{color:#062c33}.alert-warning{color:#856404;background-color:#fff3cd;border-color:#ffeeba}.alert-warning hr{border-top-color:#ffe8a1}.alert-warning .alert-link{color:#533f03}.alert-danger{color:#721c24;background-color:#f8d7da;border-color:#f5c6cb}.alert-danger hr{border-top-color:#f1b0b7}.alert-danger .alert-link{color:#491217}.alert-light{color:#818182;background-color:#fefefe;border-color:#fdfdfe}.alert-light hr{border-top-color:#ececf6}.alert-light .alert-link{color:#686868}.alert-dark{color:#1b1e21;background-color:#d6d8d9;border-color:#c6c8ca}.alert-dark hr{border-top-color:#b9bbbe}.alert-dark .alert-link{color:#040505}@-webkit-keyframes progress-bar-stripes{from{background-position:1rem 0}to{background-position:0 0}}@keyframes progress-bar-stripes{from{background-position:1rem 0}to{background-position:0 0}}.progress{display:-ms-flexbox;display:flex;overflow:hidden;font-size:.75rem;line-height:1rem;text-align:center;background-color:#e9ecef;border-radius:.25rem}.progress-bar{height:1rem;line-height:1rem;color:#fff;background-color:#007bff;transition:width .6s ease}.progress-bar-striped{background-image:linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-size:1rem 1rem}.progress-bar-animated{-webkit-animation:progress-bar-stripes 1s linear infinite;animation:progress-bar-stripes 1s linear infinite}.media{display:-ms-flexbox;display:flex;-ms-flex-align:start;align-items:flex-start}.media-body{-ms-flex:1;flex:1}.list-group{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;padding-left:0;margin-bottom:0}.list-group-item-action{width:100%;color:#495057;text-align:inherit}.list-group-item-action:focus,.list-group-item-action:hover{color:#495057;text-decoration:none;background-color:#f8f9fa}.list-group-item-action:active{color:#212529;background-color:#e9ecef}.list-group-item{position:relative;display:block;padding:.75rem 1.25rem;margin-bottom:-1px;background-color:#fff;border:1px solid rgba(0,0,0,.125)}.list-group-item:first-child{border-top-left-radius:.25rem;border-top-right-radius:.25rem}.list-group-item:last-child{margin-bottom:0;border-bottom-right-radius:.25rem;border-bottom-left-radius:.25rem}.list-group-item:focus,.list-group-item:hover{text-decoration:none}.list-group-item.disabled,.list-group-item:disabled{color:#868e96;background-color:#fff}.list-group-item.active{z-index:2;color:#fff;background-color:#007bff;border-color:#007bff}.list-group-flush .list-group-item{border-right:0;border-left:0;border-radius:0}.list-group-flush:first-child .list-group-item:first-child{border-top:0}.list-group-flush:last-child .list-group-item:last-child{border-bottom:0}.list-group-item-primary{color:#004085;background-color:#b8daff}a.list-group-item-primary,button.list-group-item-primary{color:#004085}a.list-group-item-primary:focus,a.list-group-item-primary:hover,button.list-group-item-primary:focus,button.list-group-item-primary:hover{color:#004085;background-color:#9fcdff}a.list-group-item-primary.active,button.list-group-item-primary.active{color:#fff;background-color:#004085;border-color:#004085}.list-group-item-secondary{color:#464a4e;background-color:#dddfe2}a.list-group-item-secondary,button.list-group-item-secondary{color:#464a4e}a.list-group-item-secondary:focus,a.list-group-item-secondary:hover,button.list-group-item-secondary:focus,button.list-group-item-secondary:hover{color:#464a4e;background-color:#cfd2d6}a.list-group-item-secondary.active,button.list-group-item-secondary.active{color:#fff;background-color:#464a4e;border-color:#464a4e}.list-group-item-success{color:#155724;background-color:#c3e6cb}a.list-group-item-success,button.list-group-item-success{color:#155724}a.list-group-item-success:focus,a.list-group-item-success:hover,button.list-group-item-success:focus,button.list-group-item-success:hover{color:#155724;background-color:#b1dfbb}a.list-group-item-success.active,button.list-group-item-success.active{color:#fff;background-color:#155724;border-color:#155724}.list-group-item-info{color:#0c5460;background-color:#bee5eb}a.list-group-item-info,button.list-group-item-info{color:#0c5460}a.list-group-item-info:focus,a.list-group-item-info:hover,button.list-group-item-info:focus,button.list-group-item-info:hover{color:#0c5460;background-color:#abdde5}a.list-group-item-info.active,button.list-group-item-info.active{color:#fff;background-color:#0c5460;border-color:#0c5460}.list-group-item-warning{color:#856404;background-color:#ffeeba}a.list-group-item-warning,button.list-group-item-warning{color:#856404}a.list-group-item-warning:focus,a.list-group-item-warning:hover,button.list-group-item-warning:focus,button.list-group-item-warning:hover{color:#856404;background-color:#ffe8a1}a.list-group-item-warning.active,button.list-group-item-warning.active{color:#fff;background-color:#856404;border-color:#856404}.list-group-item-danger{color:#721c24;background-color:#f5c6cb}a.list-group-item-danger,button.list-group-item-danger{color:#721c24}a.list-group-item-danger:focus,a.list-group-item-danger:hover,button.list-group-item-danger:focus,button.list-group-item-danger:hover{color:#721c24;background-color:#f1b0b7}a.list-group-item-danger.active,button.list-group-item-danger.active{color:#fff;background-color:#721c24;border-color:#721c24}.list-group-item-light{color:#818182;background-color:#fdfdfe}a.list-group-item-light,button.list-group-item-light{color:#818182}a.list-group-item-light:focus,a.list-group-item-light:hover,button.list-group-item-light:focus,button.list-group-item-light:hover{color:#818182;background-color:#ececf6}a.list-group-item-light.active,button.list-group-item-light.active{color:#fff;background-color:#818182;border-color:#818182}.list-group-item-dark{color:#1b1e21;background-color:#c6c8ca}a.list-group-item-dark,button.list-group-item-dark{color:#1b1e21}a.list-group-item-dark:focus,a.list-group-item-dark:hover,button.list-group-item-dark:focus,button.list-group-item-dark:hover{color:#1b1e21;background-color:#b9bbbe}a.list-group-item-dark.active,button.list-group-item-dark.active{color:#fff;background-color:#1b1e21;border-color:#1b1e21}.close{float:right;font-size:1.5rem;font-weight:700;line-height:1;color:#000;text-shadow:0 1px 0 #fff;opacity:.5}.close:focus,.close:hover{color:#000;text-decoration:none;opacity:.75}button.close{padding:0;background:0 0;border:0;-webkit-appearance:none}.modal-open{overflow:hidden}.modal{position:fixed;top:0;right:0;bottom:0;left:0;z-index:1050;display:none;overflow:hidden;outline:0}.modal.fade .modal-dialog{transition:-webkit-transform .3s ease-out;transition:transform .3s ease-out;transition:transform .3s ease-out,-webkit-transform .3s ease-out;-webkit-transform:translate(0,-25%);transform:translate(0,-25%)}.modal.show .modal-dialog{-webkit-transform:translate(0,0);transform:translate(0,0)}.modal-open .modal{overflow-x:hidden;overflow-y:auto}.modal-dialog{position:relative;width:auto;margin:10px}.modal-content{position:relative;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.2);border-radius:.3rem;outline:0}.modal-backdrop{position:fixed;top:0;right:0;bottom:0;left:0;z-index:1040;background-color:#000}.modal-backdrop.fade{opacity:0}.modal-backdrop.show{opacity:.5}.modal-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between;padding:15px;border-bottom:1px solid #e9ecef}.modal-title{margin-bottom:0;line-height:1.5}.modal-body{position:relative;-ms-flex:1 1 auto;flex:1 1 auto;padding:15px}.modal-footer{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:end;justify-content:flex-end;padding:15px;border-top:1px solid #e9ecef}.modal-footer>:not(:first-child){margin-left:.25rem}.modal-footer>:not(:last-child){margin-right:.25rem}.modal-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}@media (min-width:576px){.modal-dialog{max-width:500px;margin:30px auto}.modal-sm{max-width:300px}}@media (min-width:992px){.modal-lg{max-width:800px}}.tooltip{position:absolute;z-index:1070;display:block;margin:0;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif;font-style:normal;font-weight:400;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;white-space:normal;line-break:auto;font-size:.875rem;word-wrap:break-word;opacity:0}.tooltip.show{opacity:.9}.tooltip .arrow{position:absolute;display:block;width:5px;height:5px}.tooltip.bs-tooltip-auto[x-placement^=top],.tooltip.bs-tooltip-top{padding:5px 0}.tooltip.bs-tooltip-auto[x-placement^=top] .arrow,.tooltip.bs-tooltip-top .arrow{bottom:0}.tooltip.bs-tooltip-auto[x-placement^=top] .arrow::before,.tooltip.bs-tooltip-top .arrow::before{margin-left:-3px;content:\"\";border-width:5px 5px 0;border-top-color:#000}.tooltip.bs-tooltip-auto[x-placement^=right],.tooltip.bs-tooltip-right{padding:0 5px}.tooltip.bs-tooltip-auto[x-placement^=right] .arrow,.tooltip.bs-tooltip-right .arrow{left:0}.tooltip.bs-tooltip-auto[x-placement^=right] .arrow::before,.tooltip.bs-tooltip-right .arrow::before{margin-top:-3px;content:\"\";border-width:5px 5px 5px 0;border-right-color:#000}.tooltip.bs-tooltip-auto[x-placement^=bottom],.tooltip.bs-tooltip-bottom{padding:5px 0}.tooltip.bs-tooltip-auto[x-placement^=bottom] .arrow,.tooltip.bs-tooltip-bottom .arrow{top:0}.tooltip.bs-tooltip-auto[x-placement^=bottom] .arrow::before,.tooltip.bs-tooltip-bottom .arrow::before{margin-left:-3px;content:\"\";border-width:0 5px 5px;border-bottom-color:#000}.tooltip.bs-tooltip-auto[x-placement^=left],.tooltip.bs-tooltip-left{padding:0 5px}.tooltip.bs-tooltip-auto[x-placement^=left] .arrow,.tooltip.bs-tooltip-left .arrow{right:0}.tooltip.bs-tooltip-auto[x-placement^=left] .arrow::before,.tooltip.bs-tooltip-left .arrow::before{right:0;margin-top:-3px;content:\"\";border-width:5px 0 5px 5px;border-left-color:#000}.tooltip .arrow::before{position:absolute;border-color:transparent;border-style:solid}.tooltip-inner{max-width:200px;padding:3px 8px;color:#fff;text-align:center;background-color:#000;border-radius:.25rem}.popover{position:absolute;top:0;left:0;z-index:1060;display:block;max-width:276px;padding:1px;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif;font-style:normal;font-weight:400;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;white-space:normal;line-break:auto;font-size:.875rem;word-wrap:break-word;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.2);border-radius:.3rem}.popover .arrow{position:absolute;display:block;width:10px;height:5px}.popover .arrow::after,.popover .arrow::before{position:absolute;display:block;border-color:transparent;border-style:solid}.popover .arrow::before{content:\"\";border-width:11px}.popover .arrow::after{content:\"\";border-width:11px}.popover.bs-popover-auto[x-placement^=top],.popover.bs-popover-top{margin-bottom:10px}.popover.bs-popover-auto[x-placement^=top] .arrow,.popover.bs-popover-top .arrow{bottom:0}.popover.bs-popover-auto[x-placement^=top] .arrow::after,.popover.bs-popover-auto[x-placement^=top] .arrow::before,.popover.bs-popover-top .arrow::after,.popover.bs-popover-top .arrow::before{border-bottom-width:0}.popover.bs-popover-auto[x-placement^=top] .arrow::before,.popover.bs-popover-top .arrow::before{bottom:-11px;margin-left:-6px;border-top-color:rgba(0,0,0,.25)}.popover.bs-popover-auto[x-placement^=top] .arrow::after,.popover.bs-popover-top .arrow::after{bottom:-10px;margin-left:-6px;border-top-color:#fff}.popover.bs-popover-auto[x-placement^=right],.popover.bs-popover-right{margin-left:10px}.popover.bs-popover-auto[x-placement^=right] .arrow,.popover.bs-popover-right .arrow{left:0}.popover.bs-popover-auto[x-placement^=right] .arrow::after,.popover.bs-popover-auto[x-placement^=right] .arrow::before,.popover.bs-popover-right .arrow::after,.popover.bs-popover-right .arrow::before{margin-top:-8px;border-left-width:0}.popover.bs-popover-auto[x-placement^=right] .arrow::before,.popover.bs-popover-right .arrow::before{left:-11px;border-right-color:rgba(0,0,0,.25)}.popover.bs-popover-auto[x-placement^=right] .arrow::after,.popover.bs-popover-right .arrow::after{left:-10px;border-right-color:#fff}.popover.bs-popover-auto[x-placement^=bottom],.popover.bs-popover-bottom{margin-top:10px}.popover.bs-popover-auto[x-placement^=bottom] .arrow,.popover.bs-popover-bottom .arrow{top:0}.popover.bs-popover-auto[x-placement^=bottom] .arrow::after,.popover.bs-popover-auto[x-placement^=bottom] .arrow::before,.popover.bs-popover-bottom .arrow::after,.popover.bs-popover-bottom .arrow::before{margin-left:-7px;border-top-width:0}.popover.bs-popover-auto[x-placement^=bottom] .arrow::before,.popover.bs-popover-bottom .arrow::before{top:-11px;border-bottom-color:rgba(0,0,0,.25)}.popover.bs-popover-auto[x-placement^=bottom] .arrow::after,.popover.bs-popover-bottom .arrow::after{top:-10px;border-bottom-color:#fff}.popover.bs-popover-auto[x-placement^=bottom] .popover-header::before,.popover.bs-popover-bottom .popover-header::before{position:absolute;top:0;left:50%;display:block;width:20px;margin-left:-10px;content:\"\";border-bottom:1px solid #f7f7f7}.popover.bs-popover-auto[x-placement^=left],.popover.bs-popover-left{margin-right:10px}.popover.bs-popover-auto[x-placement^=left] .arrow,.popover.bs-popover-left .arrow{right:0}.popover.bs-popover-auto[x-placement^=left] .arrow::after,.popover.bs-popover-auto[x-placement^=left] .arrow::before,.popover.bs-popover-left .arrow::after,.popover.bs-popover-left .arrow::before{margin-top:-8px;border-right-width:0}.popover.bs-popover-auto[x-placement^=left] .arrow::before,.popover.bs-popover-left .arrow::before{right:-11px;border-left-color:rgba(0,0,0,.25)}.popover.bs-popover-auto[x-placement^=left] .arrow::after,.popover.bs-popover-left .arrow::after{right:-10px;border-left-color:#fff}.popover-header{padding:8px 14px;margin-bottom:0;font-size:1rem;color:inherit;background-color:#f7f7f7;border-bottom:1px solid #ebebeb;border-top-left-radius:calc(.3rem - 1px);border-top-right-radius:calc(.3rem - 1px)}.popover-header:empty{display:none}.popover-body{padding:9px 14px;color:#212529}.carousel{position:relative}.carousel-inner{position:relative;width:100%;overflow:hidden}.carousel-item{position:relative;display:none;-ms-flex-align:center;align-items:center;width:100%;transition:-webkit-transform .6s ease;transition:transform .6s ease;transition:transform .6s ease,-webkit-transform .6s ease;-webkit-backface-visibility:hidden;backface-visibility:hidden;-webkit-perspective:1000px;perspective:1000px}.carousel-item-next,.carousel-item-prev,.carousel-item.active{display:block}.carousel-item-next,.carousel-item-prev{position:absolute;top:0}.carousel-item-next.carousel-item-left,.carousel-item-prev.carousel-item-right{-webkit-transform:translateX(0);transform:translateX(0)}@supports ((-webkit-transform-style:preserve-3d) or (transform-style:preserve-3d)){.carousel-item-next.carousel-item-left,.carousel-item-prev.carousel-item-right{-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}}.active.carousel-item-right,.carousel-item-next{-webkit-transform:translateX(100%);transform:translateX(100%)}@supports ((-webkit-transform-style:preserve-3d) or (transform-style:preserve-3d)){.active.carousel-item-right,.carousel-item-next{-webkit-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0)}}.active.carousel-item-left,.carousel-item-prev{-webkit-transform:translateX(-100%);transform:translateX(-100%)}@supports ((-webkit-transform-style:preserve-3d) or (transform-style:preserve-3d)){.active.carousel-item-left,.carousel-item-prev{-webkit-transform:translate3d(-100%,0,0);transform:translate3d(-100%,0,0)}}.carousel-control-next,.carousel-control-prev{position:absolute;top:0;bottom:0;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:15%;color:#fff;text-align:center;opacity:.5}.carousel-control-next:focus,.carousel-control-next:hover,.carousel-control-prev:focus,.carousel-control-prev:hover{color:#fff;text-decoration:none;outline:0;opacity:.9}.carousel-control-prev{left:0}.carousel-control-next{right:0}.carousel-control-next-icon,.carousel-control-prev-icon{display:inline-block;width:20px;height:20px;background:transparent no-repeat center center;background-size:100% 100%}.carousel-control-prev-icon{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23fff' viewBox='0 0 8 8'%3E%3Cpath d='M4 0l-4 4 4 4 1.5-1.5-2.5-2.5 2.5-2.5-1.5-1.5z'/%3E%3C/svg%3E\")}.carousel-control-next-icon{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23fff' viewBox='0 0 8 8'%3E%3Cpath d='M1.5 0l-1.5 1.5 2.5 2.5-2.5 2.5 1.5 1.5 4-4-4-4z'/%3E%3C/svg%3E\")}.carousel-indicators{position:absolute;right:0;bottom:10px;left:0;z-index:15;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;padding-left:0;margin-right:15%;margin-left:15%;list-style:none}.carousel-indicators li{position:relative;-ms-flex:0 1 auto;flex:0 1 auto;width:30px;height:3px;margin-right:3px;margin-left:3px;text-indent:-999px;background-color:rgba(255,255,255,.5)}.carousel-indicators li::before{position:absolute;top:-10px;left:0;display:inline-block;width:100%;height:10px;content:\"\"}.carousel-indicators li::after{position:absolute;bottom:-10px;left:0;display:inline-block;width:100%;height:10px;content:\"\"}.carousel-indicators .active{background-color:#fff}.carousel-caption{position:absolute;right:15%;bottom:20px;left:15%;z-index:10;padding-top:20px;padding-bottom:20px;color:#fff;text-align:center}.align-baseline{vertical-align:baseline!important}.align-top{vertical-align:top!important}.align-middle{vertical-align:middle!important}.align-bottom{vertical-align:bottom!important}.align-text-bottom{vertical-align:text-bottom!important}.align-text-top{vertical-align:text-top!important}.bg-primary{background-color:#007bff!important}a.bg-primary:focus,a.bg-primary:hover{background-color:#0062cc!important}.bg-secondary{background-color:#868e96!important}a.bg-secondary:focus,a.bg-secondary:hover{background-color:#6c757d!important}.bg-success{background-color:#28a745!important}a.bg-success:focus,a.bg-success:hover{background-color:#1e7e34!important}.bg-info{background-color:#17a2b8!important}a.bg-info:focus,a.bg-info:hover{background-color:#117a8b!important}.bg-warning{background-color:#ffc107!important}a.bg-warning:focus,a.bg-warning:hover{background-color:#d39e00!important}.bg-danger{background-color:#dc3545!important}a.bg-danger:focus,a.bg-danger:hover{background-color:#bd2130!important}.bg-light{background-color:#f8f9fa!important}a.bg-light:focus,a.bg-light:hover{background-color:#dae0e5!important}.bg-dark{background-color:#343a40!important}a.bg-dark:focus,a.bg-dark:hover{background-color:#1d2124!important}.bg-transparent{background-color:transparent!important}.border{border:1px solid #e9ecef!important}.border-0{border:0!important}.border-top-0{border-top:0!important}.border-right-0{border-right:0!important}.border-bottom-0{border-bottom:0!important}.border-left-0{border-left:0!important}.border-primary{border-color:#007bff!important}.border-secondary{border-color:#868e96!important}.border-success{border-color:#28a745!important}.border-info{border-color:#17a2b8!important}.border-warning{border-color:#ffc107!important}.border-danger{border-color:#dc3545!important}.border-light{border-color:#f8f9fa!important}.border-dark{border-color:#343a40!important}.rounded{border-radius:.25rem!important}.rounded-top{border-top-left-radius:.25rem!important;border-top-right-radius:.25rem!important}.rounded-right{border-top-right-radius:.25rem!important;border-bottom-right-radius:.25rem!important}.rounded-bottom{border-bottom-right-radius:.25rem!important;border-bottom-left-radius:.25rem!important}.rounded-left{border-top-left-radius:.25rem!important;border-bottom-left-radius:.25rem!important}.rounded-circle{border-radius:50%}.rounded-0{border-radius:0}.clearfix::after{display:block;clear:both;content:\"\"}.d-none{display:none!important}.d-inline{display:inline!important}.d-inline-block{display:inline-block!important}.d-block{display:block!important}.d-table{display:table!important}.d-table-cell{display:table-cell!important}.d-flex{display:-ms-flexbox!important;display:flex!important}.d-inline-flex{display:-ms-inline-flexbox!important;display:inline-flex!important}@media (min-width:576px){.d-sm-none{display:none!important}.d-sm-inline{display:inline!important}.d-sm-inline-block{display:inline-block!important}.d-sm-block{display:block!important}.d-sm-table{display:table!important}.d-sm-table-cell{display:table-cell!important}.d-sm-flex{display:-ms-flexbox!important;display:flex!important}.d-sm-inline-flex{display:-ms-inline-flexbox!important;display:inline-flex!important}}@media (min-width:768px){.d-md-none{display:none!important}.d-md-inline{display:inline!important}.d-md-inline-block{display:inline-block!important}.d-md-block{display:block!important}.d-md-table{display:table!important}.d-md-table-cell{display:table-cell!important}.d-md-flex{display:-ms-flexbox!important;display:flex!important}.d-md-inline-flex{display:-ms-inline-flexbox!important;display:inline-flex!important}}@media (min-width:992px){.d-lg-none{display:none!important}.d-lg-inline{display:inline!important}.d-lg-inline-block{display:inline-block!important}.d-lg-block{display:block!important}.d-lg-table{display:table!important}.d-lg-table-cell{display:table-cell!important}.d-lg-flex{display:-ms-flexbox!important;display:flex!important}.d-lg-inline-flex{display:-ms-inline-flexbox!important;display:inline-flex!important}}@media (min-width:1200px){.d-xl-none{display:none!important}.d-xl-inline{display:inline!important}.d-xl-inline-block{display:inline-block!important}.d-xl-block{display:block!important}.d-xl-table{display:table!important}.d-xl-table-cell{display:table-cell!important}.d-xl-flex{display:-ms-flexbox!important;display:flex!important}.d-xl-inline-flex{display:-ms-inline-flexbox!important;display:inline-flex!important}}.d-print-block{display:none!important}@media print{.d-print-block{display:block!important}}.d-print-inline{display:none!important}@media print{.d-print-inline{display:inline!important}}.d-print-inline-block{display:none!important}@media print{.d-print-inline-block{display:inline-block!important}}@media print{.d-print-none{display:none!important}}.embed-responsive{position:relative;display:block;width:100%;padding:0;overflow:hidden}.embed-responsive::before{display:block;content:\"\"}.embed-responsive .embed-responsive-item,.embed-responsive embed,.embed-responsive iframe,.embed-responsive object,.embed-responsive video{position:absolute;top:0;bottom:0;left:0;width:100%;height:100%;border:0}.embed-responsive-21by9::before{padding-top:42.857143%}.embed-responsive-16by9::before{padding-top:56.25%}.embed-responsive-4by3::before{padding-top:75%}.embed-responsive-1by1::before{padding-top:100%}.flex-row{-ms-flex-direction:row!important;flex-direction:row!important}.flex-column{-ms-flex-direction:column!important;flex-direction:column!important}.flex-row-reverse{-ms-flex-direction:row-reverse!important;flex-direction:row-reverse!important}.flex-column-reverse{-ms-flex-direction:column-reverse!important;flex-direction:column-reverse!important}.flex-wrap{-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.flex-nowrap{-ms-flex-wrap:nowrap!important;flex-wrap:nowrap!important}.flex-wrap-reverse{-ms-flex-wrap:wrap-reverse!important;flex-wrap:wrap-reverse!important}.justify-content-start{-ms-flex-pack:start!important;justify-content:flex-start!important}.justify-content-end{-ms-flex-pack:end!important;justify-content:flex-end!important}.justify-content-center{-ms-flex-pack:center!important;justify-content:center!important}.justify-content-between{-ms-flex-pack:justify!important;justify-content:space-between!important}.justify-content-around{-ms-flex-pack:distribute!important;justify-content:space-around!important}.align-items-start{-ms-flex-align:start!important;align-items:flex-start!important}.align-items-end{-ms-flex-align:end!important;align-items:flex-end!important}.align-items-center{-ms-flex-align:center!important;align-items:center!important}.align-items-baseline{-ms-flex-align:baseline!important;align-items:baseline!important}.align-items-stretch{-ms-flex-align:stretch!important;align-items:stretch!important}.align-content-start{-ms-flex-line-pack:start!important;align-content:flex-start!important}.align-content-end{-ms-flex-line-pack:end!important;align-content:flex-end!important}.align-content-center{-ms-flex-line-pack:center!important;align-content:center!important}.align-content-between{-ms-flex-line-pack:justify!important;align-content:space-between!important}.align-content-around{-ms-flex-line-pack:distribute!important;align-content:space-around!important}.align-content-stretch{-ms-flex-line-pack:stretch!important;align-content:stretch!important}.align-self-auto{-ms-flex-item-align:auto!important;align-self:auto!important}.align-self-start{-ms-flex-item-align:start!important;align-self:flex-start!important}.align-self-end{-ms-flex-item-align:end!important;align-self:flex-end!important}.align-self-center{-ms-flex-item-align:center!important;align-self:center!important}.align-self-baseline{-ms-flex-item-align:baseline!important;align-self:baseline!important}.align-self-stretch{-ms-flex-item-align:stretch!important;align-self:stretch!important}@media (min-width:576px){.flex-sm-row{-ms-flex-direction:row!important;flex-direction:row!important}.flex-sm-column{-ms-flex-direction:column!important;flex-direction:column!important}.flex-sm-row-reverse{-ms-flex-direction:row-reverse!important;flex-direction:row-reverse!important}.flex-sm-column-reverse{-ms-flex-direction:column-reverse!important;flex-direction:column-reverse!important}.flex-sm-wrap{-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.flex-sm-nowrap{-ms-flex-wrap:nowrap!important;flex-wrap:nowrap!important}.flex-sm-wrap-reverse{-ms-flex-wrap:wrap-reverse!important;flex-wrap:wrap-reverse!important}.justify-content-sm-start{-ms-flex-pack:start!important;justify-content:flex-start!important}.justify-content-sm-end{-ms-flex-pack:end!important;justify-content:flex-end!important}.justify-content-sm-center{-ms-flex-pack:center!important;justify-content:center!important}.justify-content-sm-between{-ms-flex-pack:justify!important;justify-content:space-between!important}.justify-content-sm-around{-ms-flex-pack:distribute!important;justify-content:space-around!important}.align-items-sm-start{-ms-flex-align:start!important;align-items:flex-start!important}.align-items-sm-end{-ms-flex-align:end!important;align-items:flex-end!important}.align-items-sm-center{-ms-flex-align:center!important;align-items:center!important}.align-items-sm-baseline{-ms-flex-align:baseline!important;align-items:baseline!important}.align-items-sm-stretch{-ms-flex-align:stretch!important;align-items:stretch!important}.align-content-sm-start{-ms-flex-line-pack:start!important;align-content:flex-start!important}.align-content-sm-end{-ms-flex-line-pack:end!important;align-content:flex-end!important}.align-content-sm-center{-ms-flex-line-pack:center!important;align-content:center!important}.align-content-sm-between{-ms-flex-line-pack:justify!important;align-content:space-between!important}.align-content-sm-around{-ms-flex-line-pack:distribute!important;align-content:space-around!important}.align-content-sm-stretch{-ms-flex-line-pack:stretch!important;align-content:stretch!important}.align-self-sm-auto{-ms-flex-item-align:auto!important;align-self:auto!important}.align-self-sm-start{-ms-flex-item-align:start!important;align-self:flex-start!important}.align-self-sm-end{-ms-flex-item-align:end!important;align-self:flex-end!important}.align-self-sm-center{-ms-flex-item-align:center!important;align-self:center!important}.align-self-sm-baseline{-ms-flex-item-align:baseline!important;align-self:baseline!important}.align-self-sm-stretch{-ms-flex-item-align:stretch!important;align-self:stretch!important}}@media (min-width:768px){.flex-md-row{-ms-flex-direction:row!important;flex-direction:row!important}.flex-md-column{-ms-flex-direction:column!important;flex-direction:column!important}.flex-md-row-reverse{-ms-flex-direction:row-reverse!important;flex-direction:row-reverse!important}.flex-md-column-reverse{-ms-flex-direction:column-reverse!important;flex-direction:column-reverse!important}.flex-md-wrap{-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.flex-md-nowrap{-ms-flex-wrap:nowrap!important;flex-wrap:nowrap!important}.flex-md-wrap-reverse{-ms-flex-wrap:wrap-reverse!important;flex-wrap:wrap-reverse!important}.justify-content-md-start{-ms-flex-pack:start!important;justify-content:flex-start!important}.justify-content-md-end{-ms-flex-pack:end!important;justify-content:flex-end!important}.justify-content-md-center{-ms-flex-pack:center!important;justify-content:center!important}.justify-content-md-between{-ms-flex-pack:justify!important;justify-content:space-between!important}.justify-content-md-around{-ms-flex-pack:distribute!important;justify-content:space-around!important}.align-items-md-start{-ms-flex-align:start!important;align-items:flex-start!important}.align-items-md-end{-ms-flex-align:end!important;align-items:flex-end!important}.align-items-md-center{-ms-flex-align:center!important;align-items:center!important}.align-items-md-baseline{-ms-flex-align:baseline!important;align-items:baseline!important}.align-items-md-stretch{-ms-flex-align:stretch!important;align-items:stretch!important}.align-content-md-start{-ms-flex-line-pack:start!important;align-content:flex-start!important}.align-content-md-end{-ms-flex-line-pack:end!important;align-content:flex-end!important}.align-content-md-center{-ms-flex-line-pack:center!important;align-content:center!important}.align-content-md-between{-ms-flex-line-pack:justify!important;align-content:space-between!important}.align-content-md-around{-ms-flex-line-pack:distribute!important;align-content:space-around!important}.align-content-md-stretch{-ms-flex-line-pack:stretch!important;align-content:stretch!important}.align-self-md-auto{-ms-flex-item-align:auto!important;align-self:auto!important}.align-self-md-start{-ms-flex-item-align:start!important;align-self:flex-start!important}.align-self-md-end{-ms-flex-item-align:end!important;align-self:flex-end!important}.align-self-md-center{-ms-flex-item-align:center!important;align-self:center!important}.align-self-md-baseline{-ms-flex-item-align:baseline!important;align-self:baseline!important}.align-self-md-stretch{-ms-flex-item-align:stretch!important;align-self:stretch!important}}@media (min-width:992px){.flex-lg-row{-ms-flex-direction:row!important;flex-direction:row!important}.flex-lg-column{-ms-flex-direction:column!important;flex-direction:column!important}.flex-lg-row-reverse{-ms-flex-direction:row-reverse!important;flex-direction:row-reverse!important}.flex-lg-column-reverse{-ms-flex-direction:column-reverse!important;flex-direction:column-reverse!important}.flex-lg-wrap{-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.flex-lg-nowrap{-ms-flex-wrap:nowrap!important;flex-wrap:nowrap!important}.flex-lg-wrap-reverse{-ms-flex-wrap:wrap-reverse!important;flex-wrap:wrap-reverse!important}.justify-content-lg-start{-ms-flex-pack:start!important;justify-content:flex-start!important}.justify-content-lg-end{-ms-flex-pack:end!important;justify-content:flex-end!important}.justify-content-lg-center{-ms-flex-pack:center!important;justify-content:center!important}.justify-content-lg-between{-ms-flex-pack:justify!important;justify-content:space-between!important}.justify-content-lg-around{-ms-flex-pack:distribute!important;justify-content:space-around!important}.align-items-lg-start{-ms-flex-align:start!important;align-items:flex-start!important}.align-items-lg-end{-ms-flex-align:end!important;align-items:flex-end!important}.align-items-lg-center{-ms-flex-align:center!important;align-items:center!important}.align-items-lg-baseline{-ms-flex-align:baseline!important;align-items:baseline!important}.align-items-lg-stretch{-ms-flex-align:stretch!important;align-items:stretch!important}.align-content-lg-start{-ms-flex-line-pack:start!important;align-content:flex-start!important}.align-content-lg-end{-ms-flex-line-pack:end!important;align-content:flex-end!important}.align-content-lg-center{-ms-flex-line-pack:center!important;align-content:center!important}.align-content-lg-between{-ms-flex-line-pack:justify!important;align-content:space-between!important}.align-content-lg-around{-ms-flex-line-pack:distribute!important;align-content:space-around!important}.align-content-lg-stretch{-ms-flex-line-pack:stretch!important;align-content:stretch!important}.align-self-lg-auto{-ms-flex-item-align:auto!important;align-self:auto!important}.align-self-lg-start{-ms-flex-item-align:start!important;align-self:flex-start!important}.align-self-lg-end{-ms-flex-item-align:end!important;align-self:flex-end!important}.align-self-lg-center{-ms-flex-item-align:center!important;align-self:center!important}.align-self-lg-baseline{-ms-flex-item-align:baseline!important;align-self:baseline!important}.align-self-lg-stretch{-ms-flex-item-align:stretch!important;align-self:stretch!important}}@media (min-width:1200px){.flex-xl-row{-ms-flex-direction:row!important;flex-direction:row!important}.flex-xl-column{-ms-flex-direction:column!important;flex-direction:column!important}.flex-xl-row-reverse{-ms-flex-direction:row-reverse!important;flex-direction:row-reverse!important}.flex-xl-column-reverse{-ms-flex-direction:column-reverse!important;flex-direction:column-reverse!important}.flex-xl-wrap{-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.flex-xl-nowrap{-ms-flex-wrap:nowrap!important;flex-wrap:nowrap!important}.flex-xl-wrap-reverse{-ms-flex-wrap:wrap-reverse!important;flex-wrap:wrap-reverse!important}.justify-content-xl-start{-ms-flex-pack:start!important;justify-content:flex-start!important}.justify-content-xl-end{-ms-flex-pack:end!important;justify-content:flex-end!important}.justify-content-xl-center{-ms-flex-pack:center!important;justify-content:center!important}.justify-content-xl-between{-ms-flex-pack:justify!important;justify-content:space-between!important}.justify-content-xl-around{-ms-flex-pack:distribute!important;justify-content:space-around!important}.align-items-xl-start{-ms-flex-align:start!important;align-items:flex-start!important}.align-items-xl-end{-ms-flex-align:end!important;align-items:flex-end!important}.align-items-xl-center{-ms-flex-align:center!important;align-items:center!important}.align-items-xl-baseline{-ms-flex-align:baseline!important;align-items:baseline!important}.align-items-xl-stretch{-ms-flex-align:stretch!important;align-items:stretch!important}.align-content-xl-start{-ms-flex-line-pack:start!important;align-content:flex-start!important}.align-content-xl-end{-ms-flex-line-pack:end!important;align-content:flex-end!important}.align-content-xl-center{-ms-flex-line-pack:center!important;align-content:center!important}.align-content-xl-between{-ms-flex-line-pack:justify!important;align-content:space-between!important}.align-content-xl-around{-ms-flex-line-pack:distribute!important;align-content:space-around!important}.align-content-xl-stretch{-ms-flex-line-pack:stretch!important;align-content:stretch!important}.align-self-xl-auto{-ms-flex-item-align:auto!important;align-self:auto!important}.align-self-xl-start{-ms-flex-item-align:start!important;align-self:flex-start!important}.align-self-xl-end{-ms-flex-item-align:end!important;align-self:flex-end!important}.align-self-xl-center{-ms-flex-item-align:center!important;align-self:center!important}.align-self-xl-baseline{-ms-flex-item-align:baseline!important;align-self:baseline!important}.align-self-xl-stretch{-ms-flex-item-align:stretch!important;align-self:stretch!important}}.float-left{float:left!important}.float-right{float:right!important}.float-none{float:none!important}@media (min-width:576px){.float-sm-left{float:left!important}.float-sm-right{float:right!important}.float-sm-none{float:none!important}}@media (min-width:768px){.float-md-left{float:left!important}.float-md-right{float:right!important}.float-md-none{float:none!important}}@media (min-width:992px){.float-lg-left{float:left!important}.float-lg-right{float:right!important}.float-lg-none{float:none!important}}@media (min-width:1200px){.float-xl-left{float:left!important}.float-xl-right{float:right!important}.float-xl-none{float:none!important}}.fixed-top{position:fixed;top:0;right:0;left:0;z-index:1030}.fixed-bottom{position:fixed;right:0;bottom:0;left:0;z-index:1030}@supports ((position:-webkit-sticky) or (position:sticky)){.sticky-top{position:-webkit-sticky;position:sticky;top:0;z-index:1020}}.sr-only{position:absolute;width:1px;height:1px;padding:0;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;-webkit-clip-path:inset(50%);clip-path:inset(50%);border:0}.sr-only-focusable:active,.sr-only-focusable:focus{position:static;width:auto;height:auto;overflow:visible;clip:auto;white-space:normal;-webkit-clip-path:none;clip-path:none}.w-25{width:25%!important}.w-50{width:50%!important}.w-75{width:75%!important}.w-100{width:100%!important}.h-25{height:25%!important}.h-50{height:50%!important}.h-75{height:75%!important}.h-100{height:100%!important}.mw-100{max-width:100%!important}.mh-100{max-height:100%!important}.m-0{margin:0!important}.mt-0{margin-top:0!important}.mr-0{margin-right:0!important}.mb-0{margin-bottom:0!important}.ml-0{margin-left:0!important}.mx-0{margin-right:0!important;margin-left:0!important}.my-0{margin-top:0!important;margin-bottom:0!important}.m-1{margin:.25rem!important}.mt-1{margin-top:.25rem!important}.mr-1{margin-right:.25rem!important}.mb-1{margin-bottom:.25rem!important}.ml-1{margin-left:.25rem!important}.mx-1{margin-right:.25rem!important;margin-left:.25rem!important}.my-1{margin-top:.25rem!important;margin-bottom:.25rem!important}.m-2{margin:.5rem!important}.mt-2{margin-top:.5rem!important}.mr-2{margin-right:.5rem!important}.mb-2{margin-bottom:.5rem!important}.ml-2{margin-left:.5rem!important}.mx-2{margin-right:.5rem!important;margin-left:.5rem!important}.my-2{margin-top:.5rem!important;margin-bottom:.5rem!important}.m-3{margin:1rem!important}.mt-3{margin-top:1rem!important}.mr-3{margin-right:1rem!important}.mb-3{margin-bottom:1rem!important}.ml-3{margin-left:1rem!important}.mx-3{margin-right:1rem!important;margin-left:1rem!important}.my-3{margin-top:1rem!important;margin-bottom:1rem!important}.m-4{margin:1.5rem!important}.mt-4{margin-top:1.5rem!important}.mr-4{margin-right:1.5rem!important}.mb-4{margin-bottom:1.5rem!important}.ml-4{margin-left:1.5rem!important}.mx-4{margin-right:1.5rem!important;margin-left:1.5rem!important}.my-4{margin-top:1.5rem!important;margin-bottom:1.5rem!important}.m-5{margin:3rem!important}.mt-5{margin-top:3rem!important}.mr-5{margin-right:3rem!important}.mb-5{margin-bottom:3rem!important}.ml-5{margin-left:3rem!important}.mx-5{margin-right:3rem!important;margin-left:3rem!important}.my-5{margin-top:3rem!important;margin-bottom:3rem!important}.p-0{padding:0!important}.pt-0{padding-top:0!important}.pr-0{padding-right:0!important}.pb-0{padding-bottom:0!important}.pl-0{padding-left:0!important}.px-0{padding-right:0!important;padding-left:0!important}.py-0{padding-top:0!important;padding-bottom:0!important}.p-1{padding:.25rem!important}.pt-1{padding-top:.25rem!important}.pr-1{padding-right:.25rem!important}.pb-1{padding-bottom:.25rem!important}.pl-1{padding-left:.25rem!important}.px-1{padding-right:.25rem!important;padding-left:.25rem!important}.py-1{padding-top:.25rem!important;padding-bottom:.25rem!important}.p-2{padding:.5rem!important}.pt-2{padding-top:.5rem!important}.pr-2{padding-right:.5rem!important}.pb-2{padding-bottom:.5rem!important}.pl-2{padding-left:.5rem!important}.px-2{padding-right:.5rem!important;padding-left:.5rem!important}.py-2{padding-top:.5rem!important;padding-bottom:.5rem!important}.p-3{padding:1rem!important}.pt-3{padding-top:1rem!important}.pr-3{padding-right:1rem!important}.pb-3{padding-bottom:1rem!important}.pl-3{padding-left:1rem!important}.px-3{padding-right:1rem!important;padding-left:1rem!important}.py-3{padding-top:1rem!important;padding-bottom:1rem!important}.p-4{padding:1.5rem!important}.pt-4{padding-top:1.5rem!important}.pr-4{padding-right:1.5rem!important}.pb-4{padding-bottom:1.5rem!important}.pl-4{padding-left:1.5rem!important}.px-4{padding-right:1.5rem!important;padding-left:1.5rem!important}.py-4{padding-top:1.5rem!important;padding-bottom:1.5rem!important}.p-5{padding:3rem!important}.pt-5{padding-top:3rem!important}.pr-5{padding-right:3rem!important}.pb-5{padding-bottom:3rem!important}.pl-5{padding-left:3rem!important}.px-5{padding-right:3rem!important;padding-left:3rem!important}.py-5{padding-top:3rem!important;padding-bottom:3rem!important}.m-auto{margin:auto!important}.mt-auto{margin-top:auto!important}.mr-auto{margin-right:auto!important}.mb-auto{margin-bottom:auto!important}.ml-auto{margin-left:auto!important}.mx-auto{margin-right:auto!important;margin-left:auto!important}.my-auto{margin-top:auto!important;margin-bottom:auto!important}@media (min-width:576px){.m-sm-0{margin:0!important}.mt-sm-0{margin-top:0!important}.mr-sm-0{margin-right:0!important}.mb-sm-0{margin-bottom:0!important}.ml-sm-0{margin-left:0!important}.mx-sm-0{margin-right:0!important;margin-left:0!important}.my-sm-0{margin-top:0!important;margin-bottom:0!important}.m-sm-1{margin:.25rem!important}.mt-sm-1{margin-top:.25rem!important}.mr-sm-1{margin-right:.25rem!important}.mb-sm-1{margin-bottom:.25rem!important}.ml-sm-1{margin-left:.25rem!important}.mx-sm-1{margin-right:.25rem!important;margin-left:.25rem!important}.my-sm-1{margin-top:.25rem!important;margin-bottom:.25rem!important}.m-sm-2{margin:.5rem!important}.mt-sm-2{margin-top:.5rem!important}.mr-sm-2{margin-right:.5rem!important}.mb-sm-2{margin-bottom:.5rem!important}.ml-sm-2{margin-left:.5rem!important}.mx-sm-2{margin-right:.5rem!important;margin-left:.5rem!important}.my-sm-2{margin-top:.5rem!important;margin-bottom:.5rem!important}.m-sm-3{margin:1rem!important}.mt-sm-3{margin-top:1rem!important}.mr-sm-3{margin-right:1rem!important}.mb-sm-3{margin-bottom:1rem!important}.ml-sm-3{margin-left:1rem!important}.mx-sm-3{margin-right:1rem!important;margin-left:1rem!important}.my-sm-3{margin-top:1rem!important;margin-bottom:1rem!important}.m-sm-4{margin:1.5rem!important}.mt-sm-4{margin-top:1.5rem!important}.mr-sm-4{margin-right:1.5rem!important}.mb-sm-4{margin-bottom:1.5rem!important}.ml-sm-4{margin-left:1.5rem!important}.mx-sm-4{margin-right:1.5rem!important;margin-left:1.5rem!important}.my-sm-4{margin-top:1.5rem!important;margin-bottom:1.5rem!important}.m-sm-5{margin:3rem!important}.mt-sm-5{margin-top:3rem!important}.mr-sm-5{margin-right:3rem!important}.mb-sm-5{margin-bottom:3rem!important}.ml-sm-5{margin-left:3rem!important}.mx-sm-5{margin-right:3rem!important;margin-left:3rem!important}.my-sm-5{margin-top:3rem!important;margin-bottom:3rem!important}.p-sm-0{padding:0!important}.pt-sm-0{padding-top:0!important}.pr-sm-0{padding-right:0!important}.pb-sm-0{padding-bottom:0!important}.pl-sm-0{padding-left:0!important}.px-sm-0{padding-right:0!important;padding-left:0!important}.py-sm-0{padding-top:0!important;padding-bottom:0!important}.p-sm-1{padding:.25rem!important}.pt-sm-1{padding-top:.25rem!important}.pr-sm-1{padding-right:.25rem!important}.pb-sm-1{padding-bottom:.25rem!important}.pl-sm-1{padding-left:.25rem!important}.px-sm-1{padding-right:.25rem!important;padding-left:.25rem!important}.py-sm-1{padding-top:.25rem!important;padding-bottom:.25rem!important}.p-sm-2{padding:.5rem!important}.pt-sm-2{padding-top:.5rem!important}.pr-sm-2{padding-right:.5rem!important}.pb-sm-2{padding-bottom:.5rem!important}.pl-sm-2{padding-left:.5rem!important}.px-sm-2{padding-right:.5rem!important;padding-left:.5rem!important}.py-sm-2{padding-top:.5rem!important;padding-bottom:.5rem!important}.p-sm-3{padding:1rem!important}.pt-sm-3{padding-top:1rem!important}.pr-sm-3{padding-right:1rem!important}.pb-sm-3{padding-bottom:1rem!important}.pl-sm-3{padding-left:1rem!important}.px-sm-3{padding-right:1rem!important;padding-left:1rem!important}.py-sm-3{padding-top:1rem!important;padding-bottom:1rem!important}.p-sm-4{padding:1.5rem!important}.pt-sm-4{padding-top:1.5rem!important}.pr-sm-4{padding-right:1.5rem!important}.pb-sm-4{padding-bottom:1.5rem!important}.pl-sm-4{padding-left:1.5rem!important}.px-sm-4{padding-right:1.5rem!important;padding-left:1.5rem!important}.py-sm-4{padding-top:1.5rem!important;padding-bottom:1.5rem!important}.p-sm-5{padding:3rem!important}.pt-sm-5{padding-top:3rem!important}.pr-sm-5{padding-right:3rem!important}.pb-sm-5{padding-bottom:3rem!important}.pl-sm-5{padding-left:3rem!important}.px-sm-5{padding-right:3rem!important;padding-left:3rem!important}.py-sm-5{padding-top:3rem!important;padding-bottom:3rem!important}.m-sm-auto{margin:auto!important}.mt-sm-auto{margin-top:auto!important}.mr-sm-auto{margin-right:auto!important}.mb-sm-auto{margin-bottom:auto!important}.ml-sm-auto{margin-left:auto!important}.mx-sm-auto{margin-right:auto!important;margin-left:auto!important}.my-sm-auto{margin-top:auto!important;margin-bottom:auto!important}}@media (min-width:768px){.m-md-0{margin:0!important}.mt-md-0{margin-top:0!important}.mr-md-0{margin-right:0!important}.mb-md-0{margin-bottom:0!important}.ml-md-0{margin-left:0!important}.mx-md-0{margin-right:0!important;margin-left:0!important}.my-md-0{margin-top:0!important;margin-bottom:0!important}.m-md-1{margin:.25rem!important}.mt-md-1{margin-top:.25rem!important}.mr-md-1{margin-right:.25rem!important}.mb-md-1{margin-bottom:.25rem!important}.ml-md-1{margin-left:.25rem!important}.mx-md-1{margin-right:.25rem!important;margin-left:.25rem!important}.my-md-1{margin-top:.25rem!important;margin-bottom:.25rem!important}.m-md-2{margin:.5rem!important}.mt-md-2{margin-top:.5rem!important}.mr-md-2{margin-right:.5rem!important}.mb-md-2{margin-bottom:.5rem!important}.ml-md-2{margin-left:.5rem!important}.mx-md-2{margin-right:.5rem!important;margin-left:.5rem!important}.my-md-2{margin-top:.5rem!important;margin-bottom:.5rem!important}.m-md-3{margin:1rem!important}.mt-md-3{margin-top:1rem!important}.mr-md-3{margin-right:1rem!important}.mb-md-3{margin-bottom:1rem!important}.ml-md-3{margin-left:1rem!important}.mx-md-3{margin-right:1rem!important;margin-left:1rem!important}.my-md-3{margin-top:1rem!important;margin-bottom:1rem!important}.m-md-4{margin:1.5rem!important}.mt-md-4{margin-top:1.5rem!important}.mr-md-4{margin-right:1.5rem!important}.mb-md-4{margin-bottom:1.5rem!important}.ml-md-4{margin-left:1.5rem!important}.mx-md-4{margin-right:1.5rem!important;margin-left:1.5rem!important}.my-md-4{margin-top:1.5rem!important;margin-bottom:1.5rem!important}.m-md-5{margin:3rem!important}.mt-md-5{margin-top:3rem!important}.mr-md-5{margin-right:3rem!important}.mb-md-5{margin-bottom:3rem!important}.ml-md-5{margin-left:3rem!important}.mx-md-5{margin-right:3rem!important;margin-left:3rem!important}.my-md-5{margin-top:3rem!important;margin-bottom:3rem!important}.p-md-0{padding:0!important}.pt-md-0{padding-top:0!important}.pr-md-0{padding-right:0!important}.pb-md-0{padding-bottom:0!important}.pl-md-0{padding-left:0!important}.px-md-0{padding-right:0!important;padding-left:0!important}.py-md-0{padding-top:0!important;padding-bottom:0!important}.p-md-1{padding:.25rem!important}.pt-md-1{padding-top:.25rem!important}.pr-md-1{padding-right:.25rem!important}.pb-md-1{padding-bottom:.25rem!important}.pl-md-1{padding-left:.25rem!important}.px-md-1{padding-right:.25rem!important;padding-left:.25rem!important}.py-md-1{padding-top:.25rem!important;padding-bottom:.25rem!important}.p-md-2{padding:.5rem!important}.pt-md-2{padding-top:.5rem!important}.pr-md-2{padding-right:.5rem!important}.pb-md-2{padding-bottom:.5rem!important}.pl-md-2{padding-left:.5rem!important}.px-md-2{padding-right:.5rem!important;padding-left:.5rem!important}.py-md-2{padding-top:.5rem!important;padding-bottom:.5rem!important}.p-md-3{padding:1rem!important}.pt-md-3{padding-top:1rem!important}.pr-md-3{padding-right:1rem!important}.pb-md-3{padding-bottom:1rem!important}.pl-md-3{padding-left:1rem!important}.px-md-3{padding-right:1rem!important;padding-left:1rem!important}.py-md-3{padding-top:1rem!important;padding-bottom:1rem!important}.p-md-4{padding:1.5rem!important}.pt-md-4{padding-top:1.5rem!important}.pr-md-4{padding-right:1.5rem!important}.pb-md-4{padding-bottom:1.5rem!important}.pl-md-4{padding-left:1.5rem!important}.px-md-4{padding-right:1.5rem!important;padding-left:1.5rem!important}.py-md-4{padding-top:1.5rem!important;padding-bottom:1.5rem!important}.p-md-5{padding:3rem!important}.pt-md-5{padding-top:3rem!important}.pr-md-5{padding-right:3rem!important}.pb-md-5{padding-bottom:3rem!important}.pl-md-5{padding-left:3rem!important}.px-md-5{padding-right:3rem!important;padding-left:3rem!important}.py-md-5{padding-top:3rem!important;padding-bottom:3rem!important}.m-md-auto{margin:auto!important}.mt-md-auto{margin-top:auto!important}.mr-md-auto{margin-right:auto!important}.mb-md-auto{margin-bottom:auto!important}.ml-md-auto{margin-left:auto!important}.mx-md-auto{margin-right:auto!important;margin-left:auto!important}.my-md-auto{margin-top:auto!important;margin-bottom:auto!important}}@media (min-width:992px){.m-lg-0{margin:0!important}.mt-lg-0{margin-top:0!important}.mr-lg-0{margin-right:0!important}.mb-lg-0{margin-bottom:0!important}.ml-lg-0{margin-left:0!important}.mx-lg-0{margin-right:0!important;margin-left:0!important}.my-lg-0{margin-top:0!important;margin-bottom:0!important}.m-lg-1{margin:.25rem!important}.mt-lg-1{margin-top:.25rem!important}.mr-lg-1{margin-right:.25rem!important}.mb-lg-1{margin-bottom:.25rem!important}.ml-lg-1{margin-left:.25rem!important}.mx-lg-1{margin-right:.25rem!important;margin-left:.25rem!important}.my-lg-1{margin-top:.25rem!important;margin-bottom:.25rem!important}.m-lg-2{margin:.5rem!important}.mt-lg-2{margin-top:.5rem!important}.mr-lg-2{margin-right:.5rem!important}.mb-lg-2{margin-bottom:.5rem!important}.ml-lg-2{margin-left:.5rem!important}.mx-lg-2{margin-right:.5rem!important;margin-left:.5rem!important}.my-lg-2{margin-top:.5rem!important;margin-bottom:.5rem!important}.m-lg-3{margin:1rem!important}.mt-lg-3{margin-top:1rem!important}.mr-lg-3{margin-right:1rem!important}.mb-lg-3{margin-bottom:1rem!important}.ml-lg-3{margin-left:1rem!important}.mx-lg-3{margin-right:1rem!important;margin-left:1rem!important}.my-lg-3{margin-top:1rem!important;margin-bottom:1rem!important}.m-lg-4{margin:1.5rem!important}.mt-lg-4{margin-top:1.5rem!important}.mr-lg-4{margin-right:1.5rem!important}.mb-lg-4{margin-bottom:1.5rem!important}.ml-lg-4{margin-left:1.5rem!important}.mx-lg-4{margin-right:1.5rem!important;margin-left:1.5rem!important}.my-lg-4{margin-top:1.5rem!important;margin-bottom:1.5rem!important}.m-lg-5{margin:3rem!important}.mt-lg-5{margin-top:3rem!important}.mr-lg-5{margin-right:3rem!important}.mb-lg-5{margin-bottom:3rem!important}.ml-lg-5{margin-left:3rem!important}.mx-lg-5{margin-right:3rem!important;margin-left:3rem!important}.my-lg-5{margin-top:3rem!important;margin-bottom:3rem!important}.p-lg-0{padding:0!important}.pt-lg-0{padding-top:0!important}.pr-lg-0{padding-right:0!important}.pb-lg-0{padding-bottom:0!important}.pl-lg-0{padding-left:0!important}.px-lg-0{padding-right:0!important;padding-left:0!important}.py-lg-0{padding-top:0!important;padding-bottom:0!important}.p-lg-1{padding:.25rem!important}.pt-lg-1{padding-top:.25rem!important}.pr-lg-1{padding-right:.25rem!important}.pb-lg-1{padding-bottom:.25rem!important}.pl-lg-1{padding-left:.25rem!important}.px-lg-1{padding-right:.25rem!important;padding-left:.25rem!important}.py-lg-1{padding-top:.25rem!important;padding-bottom:.25rem!important}.p-lg-2{padding:.5rem!important}.pt-lg-2{padding-top:.5rem!important}.pr-lg-2{padding-right:.5rem!important}.pb-lg-2{padding-bottom:.5rem!important}.pl-lg-2{padding-left:.5rem!important}.px-lg-2{padding-right:.5rem!important;padding-left:.5rem!important}.py-lg-2{padding-top:.5rem!important;padding-bottom:.5rem!important}.p-lg-3{padding:1rem!important}.pt-lg-3{padding-top:1rem!important}.pr-lg-3{padding-right:1rem!important}.pb-lg-3{padding-bottom:1rem!important}.pl-lg-3{padding-left:1rem!important}.px-lg-3{padding-right:1rem!important;padding-left:1rem!important}.py-lg-3{padding-top:1rem!important;padding-bottom:1rem!important}.p-lg-4{padding:1.5rem!important}.pt-lg-4{padding-top:1.5rem!important}.pr-lg-4{padding-right:1.5rem!important}.pb-lg-4{padding-bottom:1.5rem!important}.pl-lg-4{padding-left:1.5rem!important}.px-lg-4{padding-right:1.5rem!important;padding-left:1.5rem!important}.py-lg-4{padding-top:1.5rem!important;padding-bottom:1.5rem!important}.p-lg-5{padding:3rem!important}.pt-lg-5{padding-top:3rem!important}.pr-lg-5{padding-right:3rem!important}.pb-lg-5{padding-bottom:3rem!important}.pl-lg-5{padding-left:3rem!important}.px-lg-5{padding-right:3rem!important;padding-left:3rem!important}.py-lg-5{padding-top:3rem!important;padding-bottom:3rem!important}.m-lg-auto{margin:auto!important}.mt-lg-auto{margin-top:auto!important}.mr-lg-auto{margin-right:auto!important}.mb-lg-auto{margin-bottom:auto!important}.ml-lg-auto{margin-left:auto!important}.mx-lg-auto{margin-right:auto!important;margin-left:auto!important}.my-lg-auto{margin-top:auto!important;margin-bottom:auto!important}}@media (min-width:1200px){.m-xl-0{margin:0!important}.mt-xl-0{margin-top:0!important}.mr-xl-0{margin-right:0!important}.mb-xl-0{margin-bottom:0!important}.ml-xl-0{margin-left:0!important}.mx-xl-0{margin-right:0!important;margin-left:0!important}.my-xl-0{margin-top:0!important;margin-bottom:0!important}.m-xl-1{margin:.25rem!important}.mt-xl-1{margin-top:.25rem!important}.mr-xl-1{margin-right:.25rem!important}.mb-xl-1{margin-bottom:.25rem!important}.ml-xl-1{margin-left:.25rem!important}.mx-xl-1{margin-right:.25rem!important;margin-left:.25rem!important}.my-xl-1{margin-top:.25rem!important;margin-bottom:.25rem!important}.m-xl-2{margin:.5rem!important}.mt-xl-2{margin-top:.5rem!important}.mr-xl-2{margin-right:.5rem!important}.mb-xl-2{margin-bottom:.5rem!important}.ml-xl-2{margin-left:.5rem!important}.mx-xl-2{margin-right:.5rem!important;margin-left:.5rem!important}.my-xl-2{margin-top:.5rem!important;margin-bottom:.5rem!important}.m-xl-3{margin:1rem!important}.mt-xl-3{margin-top:1rem!important}.mr-xl-3{margin-right:1rem!important}.mb-xl-3{margin-bottom:1rem!important}.ml-xl-3{margin-left:1rem!important}.mx-xl-3{margin-right:1rem!important;margin-left:1rem!important}.my-xl-3{margin-top:1rem!important;margin-bottom:1rem!important}.m-xl-4{margin:1.5rem!important}.mt-xl-4{margin-top:1.5rem!important}.mr-xl-4{margin-right:1.5rem!important}.mb-xl-4{margin-bottom:1.5rem!important}.ml-xl-4{margin-left:1.5rem!important}.mx-xl-4{margin-right:1.5rem!important;margin-left:1.5rem!important}.my-xl-4{margin-top:1.5rem!important;margin-bottom:1.5rem!important}.m-xl-5{margin:3rem!important}.mt-xl-5{margin-top:3rem!important}.mr-xl-5{margin-right:3rem!important}.mb-xl-5{margin-bottom:3rem!important}.ml-xl-5{margin-left:3rem!important}.mx-xl-5{margin-right:3rem!important;margin-left:3rem!important}.my-xl-5{margin-top:3rem!important;margin-bottom:3rem!important}.p-xl-0{padding:0!important}.pt-xl-0{padding-top:0!important}.pr-xl-0{padding-right:0!important}.pb-xl-0{padding-bottom:0!important}.pl-xl-0{padding-left:0!important}.px-xl-0{padding-right:0!important;padding-left:0!important}.py-xl-0{padding-top:0!important;padding-bottom:0!important}.p-xl-1{padding:.25rem!important}.pt-xl-1{padding-top:.25rem!important}.pr-xl-1{padding-right:.25rem!important}.pb-xl-1{padding-bottom:.25rem!important}.pl-xl-1{padding-left:.25rem!important}.px-xl-1{padding-right:.25rem!important;padding-left:.25rem!important}.py-xl-1{padding-top:.25rem!important;padding-bottom:.25rem!important}.p-xl-2{padding:.5rem!important}.pt-xl-2{padding-top:.5rem!important}.pr-xl-2{padding-right:.5rem!important}.pb-xl-2{padding-bottom:.5rem!important}.pl-xl-2{padding-left:.5rem!important}.px-xl-2{padding-right:.5rem!important;padding-left:.5rem!important}.py-xl-2{padding-top:.5rem!important;padding-bottom:.5rem!important}.p-xl-3{padding:1rem!important}.pt-xl-3{padding-top:1rem!important}.pr-xl-3{padding-right:1rem!important}.pb-xl-3{padding-bottom:1rem!important}.pl-xl-3{padding-left:1rem!important}.px-xl-3{padding-right:1rem!important;padding-left:1rem!important}.py-xl-3{padding-top:1rem!important;padding-bottom:1rem!important}.p-xl-4{padding:1.5rem!important}.pt-xl-4{padding-top:1.5rem!important}.pr-xl-4{padding-right:1.5rem!important}.pb-xl-4{padding-bottom:1.5rem!important}.pl-xl-4{padding-left:1.5rem!important}.px-xl-4{padding-right:1.5rem!important;padding-left:1.5rem!important}.py-xl-4{padding-top:1.5rem!important;padding-bottom:1.5rem!important}.p-xl-5{padding:3rem!important}.pt-xl-5{padding-top:3rem!important}.pr-xl-5{padding-right:3rem!important}.pb-xl-5{padding-bottom:3rem!important}.pl-xl-5{padding-left:3rem!important}.px-xl-5{padding-right:3rem!important;padding-left:3rem!important}.py-xl-5{padding-top:3rem!important;padding-bottom:3rem!important}.m-xl-auto{margin:auto!important}.mt-xl-auto{margin-top:auto!important}.mr-xl-auto{margin-right:auto!important}.mb-xl-auto{margin-bottom:auto!important}.ml-xl-auto{margin-left:auto!important}.mx-xl-auto{margin-right:auto!important;margin-left:auto!important}.my-xl-auto{margin-top:auto!important;margin-bottom:auto!important}}.text-justify{text-align:justify!important}.text-nowrap{white-space:nowrap!important}.text-truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.text-left{text-align:left!important}.text-right{text-align:right!important}.text-center{text-align:center!important}@media (min-width:576px){.text-sm-left{text-align:left!important}.text-sm-right{text-align:right!important}.text-sm-center{text-align:center!important}}@media (min-width:768px){.text-md-left{text-align:left!important}.text-md-right{text-align:right!important}.text-md-center{text-align:center!important}}@media (min-width:992px){.text-lg-left{text-align:left!important}.text-lg-right{text-align:right!important}.text-lg-center{text-align:center!important}}@media (min-width:1200px){.text-xl-left{text-align:left!important}.text-xl-right{text-align:right!important}.text-xl-center{text-align:center!important}}.text-lowercase{text-transform:lowercase!important}.text-uppercase{text-transform:uppercase!important}.text-capitalize{text-transform:capitalize!important}.font-weight-normal{font-weight:400}.font-weight-bold{font-weight:700}.font-italic{font-style:italic}.text-white{color:#fff!important}.text-primary{color:#007bff!important}a.text-primary:focus,a.text-primary:hover{color:#0062cc!important}.text-secondary{color:#868e96!important}a.text-secondary:focus,a.text-secondary:hover{color:#6c757d!important}.text-success{color:#28a745!important}a.text-success:focus,a.text-success:hover{color:#1e7e34!important}.text-info{color:#17a2b8!important}a.text-info:focus,a.text-info:hover{color:#117a8b!important}.text-warning{color:#ffc107!important}a.text-warning:focus,a.text-warning:hover{color:#d39e00!important}.text-danger{color:#dc3545!important}a.text-danger:focus,a.text-danger:hover{color:#bd2130!important}.text-light{color:#f8f9fa!important}a.text-light:focus,a.text-light:hover{color:#dae0e5!important}.text-dark{color:#343a40!important}a.text-dark:focus,a.text-dark:hover{color:#1d2124!important}.text-muted{color:#868e96!important}.text-hide{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;border:0}.visible{visibility:visible!important}.invisible{visibility:hidden!important}"}],"posts":[{"title":"定位布局的三种运用","slug":"定位布局的三种运用","date":"2018-05-11T08:14:14.240Z","updated":"2018-05-11T08:14:14.240Z","comments":true,"path":"blog/uncategorized/定位布局的三种运用/","link":"","permalink":"http://www.JiShuXuePai.com/blog/uncategorized/定位布局的三种运用/","excerpt":"","text":"定位布局的三种运用2017-11-27说到定位布局，自然而然会想起position，会想到position 的三种属性值：relative 、absolute 、fixed ;实际上还有另外一种属性：static ，咦？这是啥玩意，我咋没见过呢，其实这个定位属性呢，还是position 的默认值呢，就是不定位 ，O(∩_∩)O哈哈~不定位我还写你干啥，所以呢，我们平时是不用static的，我们就好好说说我们的常用的三种属性值relative 、absolute 、fixed 。relative：相对定位relative相对定位，那么相对于谁定位呢，就是相对于它本身啦，relative是一个很贪心的孩子，占着碗里的还看着锅里的，定位了，还不放弃自己原有的位子╭(╯^╰)╮；为什么它这么霸道呢，因为它自己原来的位置是它的定位基点，它要相对于它原来的位置进行定位。下面我们来看一下效果喽：12&lt;div class=\"box relative\"&gt;relative&lt;/div&gt;&lt;div class=\"box\"&gt;static&lt;/div&gt;1234567891011121314.box&#123; width: 200px; height: 200px; border: 2px dashed #000; background-color:rgba(255,0,0,0.5); line-height: 200px; text-align: center; font-size: 20px;&#125;.relative&#123; position: relative; left: 20px; top: 50px;&#125;效果如下：通过上图可以看出来，relative 真是太贪心了是不是？absolute：绝对定位相对于relative来说，咱们的absolute 就没有那么贪心啦，但是呢，比较淘气，可以脱离文档流快乐的玩耍。但是也不是没有任何约束的，绝对定位的定位方式是相对于它最近的定位元素来定位的（position: static是不算的！），如果没有定位的祖先元素，它就霸气的按照&lt;body&gt; 来定位啦，说的这么绕，听不懂肿么办？话不多说，上demo！12345&lt;!-- 无已定位的祖先元素 --&gt;&lt;div class=\"wrap\"&gt; &lt;div class=\"box absolute\"&gt;absolute&lt;/div&gt; &lt;div class=\"box\"&gt;static&lt;/div&gt;&lt;/div&gt;123456789101112131415161718192021/*无已定位的祖先元素*/.wrap&#123; width: 400px; height: 400px; border:2px solid #000; margin: 100px auto;&#125;.box&#123; width: 200px; height: 200px; border: 2px dashed #000; background-color:rgba(255,0,0,0.9); line-height: 200px; text-align: center; font-size: 20px;&#125;.absolute&#123; position: absolute; left: 20px; top: 50px;&#125;效果如下：我们明明让它向下向右定位的，它竟然跑偏了，好气呀！莫气，莫气，这是因为没有已定位的祖先元素约束它，没人管，它就浪开了，相对于&lt;body&gt; 进行绝对定位啦，那么接下来我们就管管它。1234&lt;div class=\"wrap\"&gt;&lt;!-- 定位的祖先元素 --&gt; &lt;div class=\"box absolute\"&gt;absolute&lt;/div&gt; &lt;div class=\"box\"&gt;static&lt;/div&gt;&lt;/div&gt;123456789101112131415161718192021.wrap&#123; position: relative;/*祖先元素的定位样式*/ width: 400px; height: 400px; border:2px solid #000; margin: 100px auto;&#125;.box&#123; width: 200px; height: 200px; border: 2px dashed #000; background-color:rgba(255,0,0,0.9); line-height: 200px; text-align: center; font-size: 20px;&#125;.absolute&#123; position: absolute; left: 20px; top: 50px;&#125;效果如下：这下有祖先管着它啦，不嘚瑟了吧！fixed ：固定定位说完了霸气的相对定位，讲罢了淘气的绝对定位，接下来我们要聊一聊高冷的固定定位，为什么说fixed 高冷呢，因为它是相对于浏览器窗口进行定位的，它的定位位置和文档、祖先元素都没有关系，页面怎么滚动，你爱咋咋地，它就认准了一个地方不再移动，任尔上下划鼠标，我就只在这儿飘，嘿嘿。12&lt;div class=\"box fixed\"&gt;fixed&lt;/div&gt;&lt;div class=\"box\"&gt;static&lt;/div&gt;1234567891011121314151617body&#123; height: 1000px;&#125;.box&#123; width: 200px; height: 200px; border: 2px dashed #000; background-color:rgba(255,0,0,0.5); line-height: 200px; text-align: center; font-size: 20px;&#125;.fixed&#123; position: fixed; left: 20px; top: 50px;&#125;效果如下：不管滚动条怎么滚动，高冷的fixed 定位的元素依旧固定在原来的位置，一动未动。z-index ：不得不说的堆叠顺序不管是relative 、absolute 或是fixed 它们都离开了它们原来的位置，显示在定位后的位置，这就导致了抢镜头的现象，会把其它老老实实待在原地的元素给遮挡掉。如果我们不想让某个元素未定位的元素被遮挡，应该怎么办呢，很简单：给被挡住的元素添加一个relative 相对定位，不需要加定位位置，然后再加一个z-index 属性就好啦！1234&#123; position:relative; z-index:2;/*此处z-index的值要比遮挡住它的定位元素的z-index的值要大才行*/&#125;z-index 属性的值越大，它对应的位置越靠上，越能实力抢镜！对于两个已定位的元素的堆叠顺序调整就更简单啦，只要改变z-index 的值就OK啦。","categories":[],"tags":[]},{"title":"五星文章收集","slug":"五星文章收集","date":"2018-05-11T08:14:14.232Z","updated":"2018-05-11T08:14:14.232Z","comments":true,"path":"blog/uncategorized/五星文章收集/","link":"","permalink":"http://www.JiShuXuePai.com/blog/uncategorized/五星文章收集/","excerpt":"","text":"推荐文章参考标题选择的题目不一定是当前所带的课程。参考题目会定期更新。HTML与CSS网站开发 html浮动的深入理解与应用定位布局的三种运用前端开发规范：命名规范、html 规范、css 规范、js 规范什么是CSS Hack?CSS3 图片滤镜 （Filters）JavaScript编程语言 js详解Javascript 函数声明和函数表达式的区别js keyup、keypress和keydown事件 详解js中的 attribute 和 propertyjs中this的指向问题js基于面向对象开发的应用js代码预解析、变量作用域Vue前端框架 vueVue项目在路由跳转时监听并记录滚动条位置Vue项目滚动到某位置时实现悬浮功能keep-alive在项目实战中的应用路由的生命周期及实战应用PHP php如何有效的记忆PHP内置函数php绝对路径与相对路径详解MySql数据库 mysqlPHP连接数据库新方法phpPDOLaravel laravel论掌握模板引擎开发的重要性Laravel为何能够享誉世界？手把手教你学习ThinkPHP框架的开发技巧Git团队协同开发 gitGit分支管理详细介绍sass sass使用less/sass搭建ui组件库","categories":[],"tags":[]},{"title":"博文模板","slug":"博文模板","date":"2018-05-11T08:14:14.232Z","updated":"2018-05-11T08:14:14.232Z","comments":true,"path":"blog/uncategorized/博文模板/","link":"","permalink":"http://www.JiShuXuePai.com/blog/uncategorized/博文模板/","excerpt":"","text":"文章参数说明在 Markdown 文本文件顶部加入以下代码123456---title: 标题author: 李康categories: - js---一级标题二级标题大段文字描述，可以使用引用。或者是谈一些感想时，可以使用引用。三级标题尽量言简意赅的用一句话讲解一个知识点。如果使用大段文字描述，可以使用引用。必要的关键词可以使用高亮。尽量使用图片和表格。同级标题间留一个空行有序列表项1有序列表项2有序列表项31234567891011121314151617181920212223242526272829// 代码要指定编程语言，方便语法高亮。// 代码顶头对齐。&lt;!doctype html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=\"utf-8\"&gt;&lt;title&gt;无标题文档&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;div id=\"slideA\" class=\"slide\"&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=\"javascript:;\"&gt;&lt;img src=\"images/01.jpg\" alt=\"广告一\" /&gt;&lt;/a&gt;&lt;/li&gt; &lt;li class=\"hide\"&gt;&lt;a href=\"javascript:;\"&gt;&lt;img src=\"images/02.jpg\" alt=\"广告二\" /&gt;&lt;/a&gt;&lt;/li&gt; &lt;li class=\"hide\"&gt;&lt;a href=\"javascript:;\"&gt;&lt;img src=\"images/03.jpg\" alt=\"广告三\" /&gt;&lt;/a&gt;&lt;/li&gt; &lt;li class=\"hide\"&gt;&lt;a href=\"javascript:;\"&gt;&lt;img src=\"images/04.jpg\" alt=\"广告四\" /&gt;&lt;/a&gt;&lt;/li&gt; &lt;li class=\"hide\"&gt;&lt;a href=\"javascript:;\"&gt;&lt;img src=\"images/05.jpg\" alt=\"广告五\" /&gt;&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;ol&gt; &lt;li class=\"ac\"&gt;1&lt;/li&gt; &lt;li&gt;2&lt;/li&gt; &lt;li&gt;3&lt;/li&gt; &lt;li&gt;4&lt;/li&gt; &lt;li&gt;5&lt;/li&gt; &lt;/ol&gt; &lt;a href=\"javascript:;\" class=\"prevBtn\"&gt;&amp;laquo;&lt;/a&gt; &lt;a href=\"javascript:;\" class=\"nextBtn\"&gt;&amp;raquo;&lt;/a&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;Markdown 语法","categories":[],"tags":[]},{"title":"vue-router多视图应用","slug":"vue-router-陈琴","date":"2018-05-11T08:14:14.231Z","updated":"2018-05-11T08:14:14.232Z","comments":true,"path":"blog/vue/vue-router-陈琴/","link":"","permalink":"http://www.JiShuXuePai.com/blog/vue/vue-router-陈琴/","excerpt":"","text":"vue-router多视图应用vue-router命名视图我们在创建一个页面布局，有 tabbar（底部导航） 和 main（主内容） 两个视图，或者比如我们在做豆瓣项目的时候，首页有tabbar（底部导航），但是文章详情页没有tabbar。这个时候命名视图就派上用场了。如何配置多视图在app.vue组件的template模板里面定义2个视图，如果 router-view 没有设置名字，那么默认为 default我们可以把主视图设置默认视图，tabbar视图给设置name属性例如：​​一个视图使用一个组件渲染，因此对于同个路由，多个视图就需要多个组件。打开路由配置文件router/index.js，修改new Router配置配置豆瓣首页路由，既有底部导航（tabbar视图），又有主内容区（default视图），我们就要在首页使用 components 配置2个组件//引入首页的组件和tabbar组件 import Home from &apos;../components/home&apos; import Tabbar from &apos;../components/Tabbar&apos; export default new Router({ routes: [ { path: &apos;/home&apos;, components: { default: Home, //配置格式 router-view视图的名称：路由到该视图的组件名称 tabbar: Tabbar } } ] }) 配置豆瓣详情页路由，详情页只有主内容区，我们就只需要把相应的组件配置到默认视图即可。//引入详情页组件 import Detail from &apos;../components/detail&apos; { path: &apos;/detail&apos;, component:Detail } 如果在app.vue里面使用了这种多视图的结构，配置路由的时候就可以按这种方式操作，当页面需要哪个视图的时候，就把相应的组件和视图配置起来。参考：https://router.vuejs.org/zh-cn/essentials/named-views.html","categories":[{"name":"vue","slug":"vue","permalink":"http://www.JiShuXuePai.com/categories/vue/"}],"tags":[]},{"title":"js闭包","slug":"js闭包详解-朱瑞云","date":"2018-05-11T08:14:14.231Z","updated":"2018-05-11T08:14:14.231Z","comments":true,"path":"blog/js/js闭包详解-朱瑞云/","link":"","permalink":"http://www.JiShuXuePai.com/blog/js/js闭包详解-朱瑞云/","excerpt":"","text":"js闭包详解什么是js闭包闭包就是能够读取其他函数内部变量的函数。在javascript中只有函数内部的子函数才能读取局部变量，因此可以把闭包简单理解成“定义在一个函数内部的函数”。通过一段代码来详细解释闭包：1234567891011121314151617function a()&#123; var i=0; function b()&#123; //b函数是a 函数的子函数 console.log(++i); &#125; return b; //返回b函数&#125;var c=a(); //变量C指向函数bc();//执行c(),相当于执行b函数，打印 i 的值，第一次为1代码特点：1.函数b嵌套在函数a内部2.函数a返回函数b上面的代码就是创建了一个闭包：变量c在函数a外面，引用了函数a内的函数b;总结：当父函数中的子函数被父函数外的变量引用的时候，就创建了一个闭包理解闭包前要先理解变量作用域。变量作用域分为全局变量和局部变量。在js中函数内部可以直接读取全局变量12345var name=999; //这里的name就是一个全局变量 function test()&#123; alert(name); //打印name变量 &#125; test(); //执行test函数，打印出 999函数外部无法读取函数内的变量12345function test()&#123; var name=999; //name是函数内定义的变量，在函数外面无法访问到 &#125; test(); //执行test函数 alert(name); // name is not defined注意：在函数内部声明变量的时候，一定要使用var关键字，不然它就是一个全局变量12345 function test()&#123; name=999; //这里的name是全局变量，在函数外可正常访问 &#125; test(); //执行test函数 alert(name); // 999如何从外部读取局部变量？123456789function test()&#123; //父函数 var name=999; //定义name变量 function test1()&#123; //子函数 alert(name); &#125; return test1; //返回子函数test1 &#125; var result=test(); //讲父函数test赋给result变量 result(); // 这句话等于执行子函数test1，打印出999上面案例中的test1函数就是闭包。在JavaScript中只有函数内部的子函数才能读取局部变量。闭包的用途1 .读取函数内部的局部变量2.让这些变量的值始终保持在内存中（下面案例来解释这句话是上面意思）1234567891011121314151617function test()&#123; //父函数 var a=999; numAdd=function() //numAdd前没有写var关键字，所以这个numAdd就是一个全局变量，它的值是个函数 &#123; a=a+1; &#125; function test1()&#123; //子函数 alert(a); &#125; return test1; //返回test1子函数 &#125; var result=test(); //将test函数赋给了result变量 result(); // 执行test1子函数，此时还没有执行numAdd函数，所以打印的值为999 numAdd(); //调用numAdd，全局变量的调用执行，此时值为1000 result(); // 执行test1子函数，因为上面已经执行了numAdd函数，所以打印的值为1000//result就是内部函数test1的闭包，test1函数是test的子函数，在test1函数中调用test函数的值并返回该函数，相当于a成了test1中的全局变量。导致test1一直在内存中使用闭包的注意点1）由于闭包会使得函数中的变量都被保存在内存中，内存消耗很大，所以不能滥用闭包，否则会造成网页的性能问题，在IE中可能导致内存泄露。解决方法是，在退出函数之前，将不使用的局部变量全部删除。2）闭包会在父函数外部，改变父函数内部变量的值。所以，如果你把父函数当作对象（object）使用，把闭包当作它的公用方法（Public Method），把内部变量当作它的私有属性（private value），这时一定要小心，不要随便改变父函数内部变量的值。思考题12345678910var name = \"The Window\"; //全局变量name var object = &#123; name : \"My Object\", //对象属性 getNameFunc : function()&#123; //对象中的方法 return function()&#123; //直接ruturn，就相当于返回这个方法，只是省略了方法名 return this.name; //this关键字，指向全局 &#125;; &#125; &#125;; alert(object.getNameFunc()()); //执行object对象中的方法，打印The Window1234567891011var name = \"The Window\";//全局变量name var object = &#123; name : \"My Object\", //对象属性 getNameFunc : function()&#123; //对象中的方法 var that = this;//用that代替this，this指向的是这个object对象 return function()&#123; //直接ruturn，就相当于返回这个方法，只是省略了方法名 return that.name; //返回object对象里的name属性 &#125;; &#125; &#125;; alert(object.getNameFunc()()); //执行object对象中的方法，打印My Object","categories":[{"name":"js","slug":"js","permalink":"http://www.JiShuXuePai.com/categories/js/"}],"tags":[]},{"title":"php中 cookie 和session 应用和区别","slug":"php cookie 和session 应用和区别","date":"2018-05-11T08:14:14.231Z","updated":"2018-05-11T08:14:14.231Z","comments":true,"path":"blog/php/php cookie 和session 应用和区别/","link":"","permalink":"http://www.JiShuXuePai.com/blog/php/php cookie 和session 应用和区别/","excerpt":"","text":"php中 cookie 和session 应用和区别什么是Cookie?cookie就是网站服务器把用户信息或相关网站信息直接存储用户本地电脑中。主要就是节省网站服务器资源之外也为了方便电脑用户，用户网站服务器识别电脑用户身份，大家可以理解为就是因为cookie这个东西，只要第一次成功登录过这个网站，下次还是因为cookie可以不需要登录就可以直接登录了，相当于一个用户通行证吧。PHP中Cookie的使用？1setcookie(\"name\",\"zhuruiyun\"); //设置cookie，括号中第一个参数为名字，第二个参数为值。key-value设置的Cookie如何使用1$_COOKIE['name']; //用一个超级全局变量$_COOKIE[cookie名]如何删除设置的Cookie？1.删除cookie 将值设为空即可1setcookie(\"name\",'');//设置值为空2.将过期时间调整到目前时间还少一秒，那么就等于过期了1setcookie(\"name\",\"zhuruiyun\",time()-1); //第三个参数为过期时间什么是Session?Session:在计算机中，尤其是在网络应用中，称为”会话控制”。Session 对象存储特定用户会话所需的属性及配置信息。这样，当用户在应用程序的 Web 页之间跳转时，存储在 Session 对象中的变量将不会丢失，而是在整个用户会话中一直存在下去。当用户请求来自应用程序的 Web 页时，如果该用户还没有会话，则 Web 服务器将自动创建一个 Session 对象。当会话过期或被放弃后，服务器将终止该会话。Session 对象最常见的一个用法就是存储用户的首选项PHP中Session的使用？12session_start(); //开始session会话处理,session只要用到这个，就必须开启session_start()$_SESSION['name']='zhuruiyun'; //创建session，直接采用全局超级变量赋值即可如何取出session值?1$_SESSION['name']如何删除Session？1unset($_SESSION['name']); //销毁某一个session值1session_destroy(); //清空所有session值cookie和session的区别1.存储位置​ session是存储在服务器端​ cookie是存储在客户端2.存储时间​ session一般存放1440秒，如果网页没有任何操作，会自动销毁，当然，可以通过php.ini修改保存时间，如果关闭浏览器，自动销毁​ cookie在浏览器关闭时就会删除，当然也可以创建一个过期时间3.适用位置​ session 一般用于后台管理登录，人少。安全性，一段时间不操作会自动过期​ cookie适用于会员登录，购物车，因为他不占用服务器资源，而会员，购物车特别多4.保存内容​ session中保存的是对象​ cookie中保存的是字符串。cookie的限制1限制在客户端，一个浏览器能创建的cookie数量最多为30个，并且每个不能超过4KB，每个web站点能设置的cookie不能超过20个cookie的特性1setcookie并不是及时生成，它会慢一拍；第一次刷新只是生成覆盖了原来的，获取的还是之前的，第二次刷新才能真正获取到","categories":[{"name":"php","slug":"php","permalink":"http://www.JiShuXuePai.com/categories/php/"}],"tags":[]},{"title":"php绝对路径与相对路径详解","slug":"php绝对路径与相对路径详解","date":"2018-05-11T08:14:14.231Z","updated":"2018-05-11T08:14:14.231Z","comments":true,"path":"blog/php/php绝对路径与相对路径详解/","link":"","permalink":"http://www.JiShuXuePai.com/blog/php/php绝对路径与相对路径详解/","excerpt":"","text":"php中不像其他语言那样“/”表示根目录，代之以$_SERVER[‘DOCUMENT_ROOT’]，其它则相同：../表示向上级目录。./表示当前目录。假如现在a/b/c/s.php要调用根目录下的 /bb/s2.txt，则：12$RootDir = $_SERVER['DOCUMENT_ROOT']; //获取当前运行脚本所在的文档根目录。该根目录是由服务器配置文件中定义$fireDir = \"$RootDir/bb/s2.txt\";或者采用相对路径“../../../bb/s2.txt”，表示向上返回到b再向上到a再向上到根目录然后再到bb下找到s2.txt。绝对路径绝对路径是指目录下的绝对位置，直接到达目标位置。例如：d:/www/index.html。只要页面中的目标文件位置不变你的链接还是指向正确的URL。在Web开发的时候一般很少使用绝对路径，因为你本地的环境和服务器上的路径可能不一样。优点： 使用绝对路径可以防止网站被恶意抄袭，抄袭默认的链接还是指向自己的网站。相对路径相对路径，就是相对于当前文件的目标文件位置。例如：Web服务器文件夹a下面有index.html和image.jpg两个文件。index.html文件里引入image.jpg，只要这两个文件的相对位置没有变(也就是说还是在文件夹a下面)，那么无论上传到Web服务器的哪个位置，这个路径都是正确的。在相对路径里面，./表示同级目录，../表示上级目录。优点： 当你整个项目移动时，你项目内文件之间的相对关系没有改变，之前设置的路径任然是准确的相对路径四种类型：案例目录上级对下级的引用（简称上级引用）先看案例图，在图中项目下分别有aa、bb、 ee三个同级目录和一个index.php文件，在bb下又有cc目录，cc下又有dd目录和cc.php,ccc.php两个文件，同样dd下也包含一个dd.php文件。凡是上层对下层均属上级引用。123index.php对于所有文件的引用 cc.php对dd.php的引用ee.php对dd.php的引用从属上级引用类如cc.php对dd.php,因为这两个文件同属于cc目录）1require('dd/dd.php');​非从属上级引用类如index.php对于所有文件的引用和ee.php对dd.php的引用都属于这种情况，因为它们与被引用的文件并没有一个共同的父目录，都相对于站点根目录。以下是在ee.php中对cc.php的引用。1require('../bb/cc/cc.php');​下级对上级的引用（简称下级引用）从属下级引用相对路径以它们的父目录为根目录ttt.php对bbff.php的引用就属于这种情况：1require('../bb/cc/cc.php');​非从属的下级引用却是以网站的根目录为准的ccc.php对ee.php的引用：1require('../../ee/ee.php');​平级引用或叫同级引用从属同级引用即在同一个目录下的两个文件的引用，在dd.php中引用ttt.php1require('ttt.php');​非从属同级引用即不在同一个目录下（没有共同的父目录，只有以网站目站为父目录的情况），但是级别是相同的两个文件的引用，在aa.php在引用ee.php1require('../ee/ee.php');​涉及到嵌套的引用例如ff.php引用dd.php,而dd.php又引用的gf.php,这种情况，本来dd.php 引用gf.php属于下级引用中的非从属引用，写法是这样的：1require('../../../ee/gf.php');而ff.php引用dd.php属于上级引用中的从属引用，写法是这样的：1require('./cc/dd/dd.php');可是你会发现在ff.php中无法找到gf.php文件，那该如何写呢？应该在dd.php中这样写：1require('../ee/gf.php');只有这样写就正确了，为什么呢？因为在涉及到嵌套引用的时候被引用文件的相对路径要以最终的引用文件为准!简而言之：其实很简单的，你用你的web根目录做根目录.不管你怎么定，你文件肯定有一个全部都要包含的文件的，比如有的是global.php，有的是common.php假如这个文件放在根目录1wwwroot/global.php里面第一行加个chdir(dirname(FILE)); 切换到global.php所在目录就是根目录其他文件使用123require \"../../../global.php\"; require \"aa/aa.php\"; require \"bb/bb/cc.php\";这样就行了，因为你的global.php已经把路径切换到wwwroot，不用像其他方式那么麻烦了12define('ROOT_PATH',dirname(__FILE__)); require ROOT_PATH.....chdir(dirname(FILE)); 的确很好使，相对位置引入这个文件其他引入文件只要以他为基准就好了。","categories":[{"name":"php","slug":"php","permalink":"http://www.JiShuXuePai.com/categories/php/"}],"tags":[]},{"title":"call与apply的用法","slug":"js/call与apply用法","date":"2018-05-11T08:14:14.230Z","updated":"2018-05-11T08:14:14.230Z","comments":true,"path":"blog/js/js/call与apply用法/","link":"","permalink":"http://www.JiShuXuePai.com/blog/js/js/call与apply用法/","excerpt":"","text":"call的用法call的作用是将函数绑定到另外一个对象上去运行。1someFun.call( thisArg，arg1，arg2，… );通俗的解释就是：把someFun函数调用一下，其调用参数分别是arg1、arg2……，并且someFun函数中的this等于thisArg。如果someFun函数不需要参数可以不给arg1，arg2，…参数。这个调用完全等效于：123thisArg.m = someFun;thisArg.m(arg1, arg2);delete(thisArg.m);apply的用法apply的作用和call一样，只是调用参数用一个数组表示。1someFun.apply( thisArg, [arg1，arg2，… ] );this的作用要理解call和apply的用法，先得理解this的作用。this表示当前对象。可以把this简单的理解为调用者。为了保证函数的灵活性，我们经常在函数中使用this。123456789101112// 定义一个Hero的构造函数function Hero(n) &#123; this.name = n; // this代表当前实例&#125;// 定义两个实例var lk = new Hero(\"likang\");var dt = new Hero(\"dongtao\");// 测试console.log(lk.name); // 输出：likangconsole.log(dt.name); // 输出：dongtao如果一个函数调用没有指明调用者，那么这个调用者就是指当前平台的全局根对象，比如在浏览器上全局根对象是window。123var name = \"likang\";console.log(name); // 输出：likangconsole.log(window.name); // 这是上一句的完整写法call的使用案例1234567891011121314151617181920212223242526272829&lt;!doctype html&gt;&lt;html&gt; &lt;head&gt; &lt;title&gt; call与apply的用法 &lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;input type=\"text\" id=\"txt\" name=\"input text\"&gt; &lt;script&gt; // 定义一个全局变量name var name = \"global\"; // 定义成员变量name function Hero(n) &#123; this.name = n; &#125; var lk = new Hero(\"likang\"); // 定义一个使用了this的测试函数 function fun() &#123; console.log(this.name); &#125; // 测试 fun.call(lk); // 输出：likang，这时fun函数中的this等于lk。 fun.call(window); // 输出：global，这时fun函数中的this等于window。 fun.call(document.getElementById('txt')); // 输出：input text，这时fun函数中的this等于Dom对象txt。 &lt;/script&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"js","slug":"js","permalink":"http://www.JiShuXuePai.com/categories/js/"}],"tags":[]},{"title":"Javascript中的数据类型","slug":"js/javascript中的数据类型","date":"2018-05-11T08:14:14.230Z","updated":"2018-05-11T08:14:14.231Z","comments":true,"path":"blog/js/js/javascript中的数据类型/","link":"","permalink":"http://www.JiShuXuePai.com/blog/js/js/javascript中的数据类型/","excerpt":"","text":"typeof能获取的数据类型numberstringbooleanobjectfunctionundefined几种特殊数据undefined：未定义类型因为JS是一个弱类型语言12var a = 1;a = \"likang\"; // 数据类型发生了改变123var a; // undefineda = 1; // number类型a = &quot;likang&quot;; // string类型undefined类型只有一个数值，也叫undefined.boolean类型有两个数值, true, false.1var a = undefined;NaN : Not A Number1console.log(&quot;1&quot;/&quot;xx&quot;);一定是算数运算才会出现NaN。NaN的类型是number。NaN 什么也不是，所以说NaN等于什么都是false12345console.log(NaN == 1); // falseconsole.log(NaN == NaN); // falseconsole.log(NaN == &#123;&#125;); // falseconsole.log(NaN != 1); // truenull：不是一个对象/空对象null是object类型。12345var a = new Object(); // a 是一个对象，有数据，有类型；var a = &#123;&#125;; // a 是一个对象，有数据，有类型；var a = &quot;&quot;; // a 是一个空字符串，字符串类型，数据为空。var a; // undefined类型，没有数据，相当于没有类型；var a = null; // 没有数据， 有类型；","categories":[{"name":"js","slug":"js","permalink":"http://www.JiShuXuePai.com/categories/js/"}],"tags":[]},{"title":"css高级技巧2","slug":"css高级技巧2","date":"2018-05-11T08:14:14.226Z","updated":"2018-05-11T08:14:14.226Z","comments":true,"path":"blog/html/css高级技巧2/","link":"","permalink":"http://www.JiShuXuePai.com/blog/html/css高级技巧2/","excerpt":"","text":"css高级技巧二平常页面经常看到的一些效果，感觉实现起来很麻烦；其实使用某些技巧会变得容易很多1.Color + Border = Border-Color定义了一个元素的文字颜色，这个元素的边框颜色可以省略到1234567891011&lt;style type=\"text/css\"&gt;h1&#123; color:red; border: 10px solid;&#125;h1:hover&#123; color:green;&#125;&lt;/style&gt;&lt;h1&gt;边框模式&lt;/h1&gt;2.文字选中修饰修改文字被选中时的效果123456789*::selection &#123; color: #f00; background: yellowgreen;&#125;*::-moz-selection &#123; /*Only Firefox still needs a prefix*/ color: #f00; background: yellowgreen;&#125;3.visibility: visible可能会认为两个元素都不显示——然而事实上整个父元素都被隐藏了，而子元素不会1234567891011.hidden &#123; visibility: hidden;&#125;.hidden .button &#123; visibility: visible;&#125;&lt;div class=\"wrapper hidden\"&gt; &lt;button class=\"button\" id=\"button\"&gt;子元素不会Hide&lt;/button&gt; &lt;p&gt;整个父元素都被隐藏了，而子元素不会&lt;/p&gt;&lt;/div&gt;4.position: sticky运行效果和fixed相同，但不会挡住任何元素，只有Mozilla和Safari浏览器支持这一属性1234567//支持的浏览器中得到一个sticky属性的元素，而在不支持的浏览器中它将会是一个普通的元素。这在你需要建立一个不可替代的，可以移动的元素的移动端页面的时候非常实用.sticky &#123; position: static; position: sticky; top: 0px;&#125;5.不使用图片的菜单图标123&lt;a class=\"shadow-icon\" href=\"#\"&gt;&lt;/a&gt;&lt;a class=\"gradient-icon\" href=\"#\"&gt;&lt;/a&gt;&lt;a class=\"utf-8\" href=\"#\"&gt;☰&lt;/a&gt;123456789101112131415161718192021222324252627282930a &#123; color: black; text-decoration: none; float: left; width: 50px; height: 50px;&#125;.shadow-icon &#123; position: relative; margin: 0 5px 0 0;&#125;.shadow-icon:after &#123; content: \"\"; position: absolute; left: 0; top: -50px; height: 100%; width: 100%; box-shadow: 0 6px 0 #000, 0 18px 0 #fff, 0 25px 0 #000, 0 37px 0 #fff, 0 44px 0 #000;&#125;.gradient-icon &#123; background:linear-gradient(to bottom, #000 0%, #000 13%, transparent 13%, transparent 43%, #000 43%, #000 57%, transparent 57%, transparent 85%, #000 85%, #000 98%, transparent 98%); height: 44px; width: 48px;&#125;.utf-8 &#123; font-size: 60px; font-weight: bold; line-height: 45px;&#125;6.高级CSS计数器纯css实现选中个数，CSS中是可以使用计数器的：123456789101112131415&lt;ol class=\"list\"&gt; &lt;li&gt;AA&lt;/li&gt; &lt;li&gt;BB&lt;/li&gt; &lt;li&gt;CC&lt;/li&gt;&lt;/ol&gt;.list &#123; counter-reset: i; //重置&#125;.list &gt; li &#123; counter-increment: i; //计数&#125;.list li:after &#123; content: \"[\" counter(i) \"]\"; //打印结果&#125;案例效果应用实例参考：12345678910111213141516&lt;!-- html --&gt;&lt;div class=\"languages\"&gt; &lt;input id=\"c\" type=\"checkbox\"&gt;&lt;label for=\"c\"&gt;C&lt;/label&gt; &lt;input id=\"C++\" type=\"checkbox\"&gt;&lt;label for=\"C++\"&gt;C++&lt;/label&gt; &lt;input id=\"C#\" type=\"checkbox\"&gt;&lt;label for=\"C#\"&gt;C#&lt;/label&gt; &lt;input id=\"Java\" type=\"checkbox\"&gt;&lt;label for=\"Java\"&gt;Java&lt;/label&gt; &lt;input id=\"JavaScript\" type=\"checkbox\"&gt;&lt;label for=\"JavaScript\"&gt;JavaScript&lt;/label&gt; &lt;input id=\"PHP\" type=\"checkbox\"&gt;&lt;label for=\"PHP\"&gt;PHP&lt;/label&gt; &lt;input id=\"Python\" type=\"checkbox\"&gt;&lt;label for=\"Python\"&gt;Python&lt;/label&gt; &lt;input id=\"Ruby\" type=\"checkbox\"&gt;&lt;label for=\"Ruby\"&gt;Ruby&lt;/label&gt;&lt;/div&gt; &lt;p class=\"total\"&gt; 总计:&lt;/p&gt;123456789.languages &#123; counter-reset: characters;&#125;input:checked &#123; counter-increment: characters;&#125;.total:after &#123; content: counter(characters);&#125;7.object-fitobject-fit类似background-size,但是稍微有些差异123456//具体有5个值如下.fill &#123; object-fit: fill; &#125;.contain &#123; object-fit: contain; &#125;.cover &#123; object-fit: cover; &#125;.none &#123; object-fit: none; &#125;.scale-down &#123; object-fit: scale-down; &#125;fill:默认值。填充，可替换元素填满整个内容区域，可能会改变长宽比，导致拉伸contain:包含，保持原始的尺寸比例，保证可替换元素完整显示，宽度或高度至少有一个和内容区域的宽度或高度一致，部分内容会空白cover: 覆盖，保持原始的尺寸比例，保证内容区域被填满。因此，可替换元素可能会被切掉一部分，从而不能完整展示none:保持可替换元素原尺寸和比例scale-down:等比缩小依次设置了none或contain, 最终呈现的是尺寸比较小的那个8.currentColorcurrentColor是 color 属性的值，具体意思是指：currentColor关键字的使用值是 color 属性值的计算值任意替换性需要使用颜色值的地方，都可以使用currentColor替换，比方说背景色 – background-color, 渐变色 – gradient, 盒阴影 – box-shadow, SVG的填充色 – fill等等1234.link &#123; display: inline-block; background-color: currentColor; /* 控制颜色 */&#125;svg效果举例123456789101112131415161718/*a 标签*/.button &#123; color: #01B19A; font-size: 1.4em;&#125;.button:hover, .button:focus &#123; color: #117B6F;&#125;.button:active &#123; color: #89027B;&#125;/*svg 标签*/.button svg &#123; height: 17px; width: 17px; fill: currentColor;&#125;9.z-index的过渡z-index同样支持过渡效果12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152&lt;style type=\"text/css\"&gt;section &#123; display: block; position: relative;&#125;div &#123; position: absolute; width: 100px; height: 200px;&#125;.one &#123; z-index: 1; top: 0; left: 0; width: 800px; background: hsla(1,70%,50%,.5); -moz-transition:all 3s; -webkit-transition:all 3s; transition:all 3s;&#125;.one:hover &#123; z-index: 6; background: hsla(1,100%,10%,1); -moz-transition:all 3s; -webkit-transition:all 3s; transition:all 3s;&#125;.two &#123; z-index: 2; top: 120px; left: 0; background: hsla(50,70%,50%,.5);&#125;.three &#123; z-index: 3; top: 120px; left: 160px; background: hsla(120,70%,50%,.5);&#125;.four &#123; z-index: 4; top: 120px; left: 320px; background: hsla(220,70%,50%,.5);&#125;.five &#123; z-index: 5; top: 120px; left: 480px; background: hsla(300,70%,50%,.5);&#125;&lt;/style&gt;1234567&lt;section&gt; &lt;div class=\"one\"&gt;One&lt;/div&gt; &lt;div class=\"two\"&gt;Two&lt;/div&gt; &lt;div class=\"three\"&gt;Three&lt;/div&gt; &lt;div class=\"four\"&gt;Four&lt;/div&gt; &lt;div class=\"five\"&gt;Five&lt;/div&gt;&lt;/section&gt;10.Blend modes（合成模式）在CSS中有16种可用的混合模式。normal (默认的混合模式), multiply, screen, overlay, darken, lighten, color-dodge, color-burn, hard-light, soft-light, difference, exclusion, hue, saturation, color 和 luminosity123456.box &#123; background: #fff;&#125;.box img &#123; mix-blend-mode: darken; &#125;合成背景图层：background-blend-mode属性12345div&#123; background-image: url(image.png); background-color: orange; background-blend-mode: screen; &#125;normal：默认的混合模式，混合色的像素会透过所用的颜色显示出来。multiply：正片叠底模式。查看么诶个通道的颜色信息，选择基色或混合色复合。结果的颜色通常都比源或目标的颜色要暗。任何颜色和黑色相乘都得到黑色，任何颜色和白色相乘都会保留原来的颜色。screen：滤色模式。查看每个通道的颜色信息，并将混合色的互补色和技术复合。结果总是较亮的颜色。任何颜色和白色进行滤色都得到白色，任何颜色和黑色进行滤色都会保留原来的颜色。overlay：叠加模式。复合或过滤颜色，取决于基色（backdrop）的值。图像或颜色在现有的像素上叠加，同时保留基色的明暗度。darken：变暗模式。查看每个通道的颜色信息，并选择基色或混合色中较暗的颜色作为结果色。比混合色亮的像素被替换，比混合色暗的像素保存不变。lighten：变亮模式。选择基色或混合色中较亮的颜色作为结果色。比混合色暗的像素被替换，比混合色亮的像素保存不变。color-dodge：颜色减淡模式。查看每个通道中的颜色信息，并通过减小对比度使基色变亮以反映混合色。与黑色混合不发生任何变化。color-burn：颜色加深模式。查看每个通道中的颜色信息，并通过增加对比度使基色变暗以及反映混合色。与白色混合不会发生变化。hard-light强光模式。符合或过滤颜色，具体取决于混合色。此效果与耀眼的聚光灯照在图像上相似。如果混合色比50%的灰度色亮，则图像变亮。如果混合色比50%的灰度色暗，则图像变暗soft-light：柔光模式。使颜色变亮或变暗，具体取决于混合色。此效果与发散的聚光灯照在图像上的效果类似。如果混合色比50%的灰度色亮，则图像变亮，就像被减淡一样。如果混合色比50%的灰度色暗，则图像变暗，就像被加深了一样。difference：差值模式。查看每个通道的颜色信息，并从基色中减去混合色，或从混合色中减去基色。具体取决于哪一个颜色的亮度值更大。与白色混合将反转基色值，与黑色混合则不产生变化。exclusion：排除模式。插件一种与“差值”模式相似但对比度更低的效果。与白色混合将反转基色值，与黑色混合不发生变化。hue：色相模式。“色相”模式只用“混合色”颜色的色相值进行着色，而使饱和度和亮度值保持不变。saturation：饱和度模式。“饱和度”模式的作用方式与“色相”模式相似，它只用“混合色”颜色的饱和度值进行着色，而使色相值和亮度值保持不变。color：颜色模式。“颜色”模式能够使用“混合色”颜色的饱和度值和色相值同时进行着色，而使“基色”颜色的亮度值保持不变。“颜色”模式模式可以看成是“饱合度”模式和“色相”模式的综合效果。luminosity：亮度模式。“亮度”模式能够使用“混合色”颜色的亮度值进行着色，而保持“基色”颜色的饱和度和色相数值不变。其实就是用“基色”中的“色相”和“饱和度”以及“混合色”的亮度创建“结果色”","categories":[{"name":"html","slug":"html","permalink":"http://www.JiShuXuePai.com/categories/html/"}],"tags":[]},{"title":"css高级技巧","slug":"css高级技巧","date":"2018-05-11T08:14:14.210Z","updated":"2018-05-11T09:55:13.000Z","comments":true,"path":"blog/uncategorized/css高级技巧/","link":"","permalink":"http://www.JiShuXuePai.com/blog/uncategorized/css高级技巧/","excerpt":"","text":"HTML与CSS网站开发css高级技巧一平常页面经常看到的一些效果，感觉实现起来很麻烦；其实使用某些技巧会变得容易很多1.实现黑白图像无需ps修改图片，一段代码立即彩色图片显示为黑白图片12345678910.desaturate&#123; -webkit-filter:grayscale(100%); -moz-filter:grayscale(100%); -ms-filter:grayscale(100%); -o-filter:grayscale(100%); filter:grayscale(100%);&#125;改变前：&lt;img src=\"1.jpg\"&gt;改变后：&lt;img class=\"desaturate\" src=\"1.jpg\"&gt;2.菜单上应用/取消最后一个元素样式12345678910111213141516&lt;style type=\"text/css\"&gt; // 默认写法 .nav li &#123;border-right: 1px solid #c00;&#125; .nav li:last-child &#123;border-right: none;&#125; // 直接使用:not()写法 .nav li:not(:last-child)&#123;border-right: 1px solid #c00;&#125;&lt;style&gt;&lt;ul class=\"nav\"&gt; &lt;li&gt;菜单一&lt;/li&gt; &lt;li&gt;菜单二&lt;/li&gt; &lt;li&gt;菜单三&lt;/li&gt; &lt;li&gt;菜单四&lt;/li&gt; &lt;li&gt;菜单五&lt;/li&gt;&lt;/ul&gt;3.分隔列表1ul &gt; li:not(:last-child)::after &#123; content: \";\";&#125; //最后一个列表项使用 :not() 伪类,“;”分格列表2,3效果同时展示:4.text-shadow模糊文本12345678&lt;style type=\"text/css\"&gt; .blur&#123; color:transparent; text-shadow:0 0 6px rgba(255,0,0,.3); &#125;&lt;/style&gt;&lt;h1 class=\"blur\"&gt;模糊文本&lt;/h1&gt;5.禁用鼠标事件CSS3 pointer-events:none的作用可以禁用链接、hover、点击事件1234//CSS3 新增属性.disabled&#123; pointer-event:none;&#125;&lt;a style=\"pointer-events:none;\"&gt;禁用&lt;/a&gt;6.文本渐变利用Css遮罩（CSS Masks）实现（CSS Masks）可以实现图片遮罩，只需要给一个图片运用一个-webkit-mask-image的css属性。例如：-webkit-mask-image: url(图片.png);从图片遮罩里读出图片的透明度，白色意味着不透明，黑色意味着透明，介于黑白之间的灰色表示半透明。12345678910111213141516&lt;style type=\"text/css\"&gt; h2[data-text] &#123; position: relative; &#125; h2[data-text]::after &#123; content: attr(data-text); z-index: 10; color: #e3e3e3; position: absolute; top: 0; left: 0; -webkit-mask-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0,0,0,0)), color-stop(50%, rgba(0,0,0,1)), to(rgba(0,0,0,0))); &#125;&lt;/style&gt; &lt;h2 data-text=\"文本渐变\"&gt;文本渐变&lt;/h2&gt;7.鼠标双击生效123456789101112131415161718192021222324252627282930&lt;style type=\"text/css\"&gt; .test span &#123; position: relative; &#125; .test span a &#123; position: relative; z-index: 2; &#125; .test span a:hover, .test span a:active &#123; z-index: 4; &#125; .test span input &#123; background: transparent; border: 0; cursor: pointer; position: absolute; top: -1px; left: 0; width: 100%; height:300%; z-index: 3; &#125; .test span input:focus &#123; background: transparent; border: 0; z-index: 1; &#125;&lt;/style&gt;&lt;div class=\"test\"&gt;&lt;span&gt;&lt;input type=\"text\" value=\" \" readonly=\"true\" /&gt;&lt;a href=\"http://baidu.com\"&gt;双击&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;8.利用属性选择器让空链接显示12345&lt;a href=\"http://edu.hxsd.com\"&gt;&lt;/a&gt; // a没有内容&lt;style type=\"text/css\"&gt; a[href^=\"http\"]:empty::before &#123; content: attr(href);&#125; &lt;/style&gt;9.继承 box-sizing123456html &#123; box-sizing: border-box;&#125;*, *:before, *:after &#123; box-sizing: inherit;&#125;10.优化最佳显示文本12345html &#123; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; text-rendering: optimizeLegibility; &#125;","categories":[],"tags":[]},{"title":"CSS Hack","slug":"cssHack","date":"2018-05-11T08:14:14.210Z","updated":"2018-05-11T08:14:14.210Z","comments":true,"path":"blog/html/cssHack/","link":"","permalink":"http://www.JiShuXuePai.com/blog/html/cssHack/","excerpt":"","text":"什么是CSS Hack？​ CSS hack由于不同厂商的浏览器，比如Internet Explorer,Safari,Mozilla Firefox,Chrome等，或者是同一厂商的浏览器的不同版本，如IE6和IE7，对CSS的解析认识不完全一样，因此会导致生成的页面效果不一样，得不到我们所需要的页面效果。 这个时候我们就需要针对不同的浏览器去写不同的CSS，让它能够同时兼容不同的浏览器，能在不同的浏览器中也能得到我们想要的页面效果，这些不同写法的小技巧就是CSS Hack。​ 简单的说，CSS hack的目的就是使你的CSS代码兼容不同的浏览器。当然，我们也可以反过来利用CSS hack为不同版本的浏览器定制编写不同的CSS效果。怎么使用CSS Hack？​ CSS Hack大致有3种表现形式，CSS类内部Hack、选择器Hack以及HTML头部引用(if IE)Hack。​ HTML头部引用(if IE)Hack：针对所有IE：&lt;![endif]–&gt;，针对IE6及以下版本：&lt;![endif]–&gt;，这类Hack不仅对CSS生效，对写在判断语句里面的所有代码都会生效。​ 选择器Hack：比如 IE6能识别html .class{}，IE7能识别+html .class{}或者*:first-child+html .class{}。等等​ CSS Hack主要针对类内部Hack：比如 IE6能识别下划线”“和星号” “，IE7能识别星号” “，但不能识别下划线”“，而firefox两个都不能认识。等等​ 书写顺序：一般是将能被广泛识别的CSS写在前面，只能被个别浏览器识别的CSS写在后面；否则针对个别浏览器写的CSS样式会被覆盖掉。方式一：头部引用（又称条件注释法）​ 头部引用的方式主要针对于IE浏览器(IE9及以下)的兼容，以注释的形式写到页面里（一般写在&lt;head&gt; 内部），只有满足if条件时才生效，其它浏览器会忽略掉这段代码。用法：12345&lt;!--[if IE]&gt; &lt;style type=\"text/css\"&gt; /*此部分内容只在IE9及以下的浏览器内起作用*/ body&#123;background-color: red;&#125; &lt;/style&gt;&lt;![endif]--&gt;1234&lt;!--[if IE 6]&gt; 这段文字只在IE6浏览器显示; if IE 之后的数字为浏览器版本；&lt;![endif]--&gt;1234&lt;!--[if gte IE 6]&gt; 这段文字只在IE6及以上浏览器显示; gte:就是Greater than or equal to的简写，也就是大于或等于的意思。&lt;![endif]--&gt;1234&lt;!--[if gt IE 6]&gt; 这段文字只在IE6以上浏览器显示(不包括IE6); gt:就是Greater than的简写，也就是大于的意思。&lt;![endif]--&gt;1234&lt;!--[if lte IE 8]&gt; 这段文字只在IE8及以下浏览器显示; lte:就是Less than or equal to的简写，也就是小于或等于的意思。&lt;![endif]--&gt;1234&lt;!--[if lt IE 8]&gt; 这段文字只在IE8以下浏览器显示(不包括IE8); lt:就是Less than的简写，也就是小于的意思。&lt;![endif]--&gt;1234&lt;!--[if ! IE 8]&gt; 这段文字只在IE8以外的IE浏览器显示; !:就是非意思。&lt;![endif]--&gt;注：以上浏览器均不包含IE10及以上 IE浏览器方式二：选择器前缀法​ 选择器前缀法是在原有CSS选择器的前面加一些特定的符号来让相应的浏览器识别，从而实现与普通写法不同的效果。常用的选择器前缀法如下：1234body&#123;background-color: green;&#125; /*所有现代浏览器识别为绿色背景*/*body&#123;background-color: red;&#125; /*IE6/7识别为红色背景 '*':为IE6/7所拥有的特殊选择器前缀*/*+html body&#123;background-color: red;&#125; /*IE7识别为红色背景 '*+html':为IE7所独有的特殊选择器前缀*/:root body&#123;background-color: red;&#125; /*IE9及以上、Opera10及以上和其它现代浏览器均识别为红色背景 ':root':为IE9以下和Opera10以下浏览器所不识别的特殊选择器前缀*/方式三：类内属性标记法​ 也有人称为类内属性前缀法，但是个人认为类内属性前缀法并不准确，因为有些标记方式并不是将特殊标记放在属性的前面，而是放于属性值的后面，所以我们更应当称其为类内属性标记法。常用的类内属性标记法有：12345678910111213141516171819body&#123; background-color: red; /*所有浏览器均可识别，解析为红色*/ background-color:blue\\9; /*IE10及以下浏览器识别，解析为蓝色*/ background-color:yellow\\0; /*IE8/IE9/10及新版opera识别，解析为黄色*/ +background-color:pink; /*IE6/7识别，解析为粉色*/ _background-color:orange; /*IE6独有，解析为橙色*/&#125;@media screen and (min-width:0)&#123; body&#123;background-color:black\\0;&#125; /*opera识别，解析为黑色*/&#125; @media screen and (min-width:0) &#123; body&#123; background-color:purple\\9; &#125;/* IE9/10识别，解析为紫色 */&#125;@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) &#123; body&#123; background-color:green; &#125; /* IE10及以上IE浏览器识别，解析为绿色 */&#125;@media screen and (-webkit-min-device-pixel-ratio:0)&#123; body&#123;background-color:gray;&#125; /*Chrome/Safari识别，解析为灰色*/&#125;注：当类内属性标记法与’+html’，‘:root’等选择器前缀法相互配合时，由于后者多了一层选择器，优先级会高于前者，此时一般会在属性值后加‘!important’解决。​ 通过以上的CSS Hack方法介绍可以看出，绝大部分的方法都是针对于IE浏览器的，为什么IE浏览器这么特殊呢，因为IE10的之前的各版本浏览器的解析标准都不一样。为什么IE浏览器这不不合群却没有落没反而占有了很大的市场份额呢，因为IE浏览器是微软的产品，背靠Windows系统这棵大树，将浏览器植入到系统内，装Windows系统就自带了IE浏览器。​ 我个人只有两种情况下会用到IE浏览器，一是：调试前端页面，二是：初装下载其它浏览器。O(∩_∩)O哈哈~。希望尽快淘汰掉IE的低版本浏览器，让我们前端程序猿宝宝们能更轻松的工作。附：CSS Hack大全表格","categories":[{"name":"html","slug":"html","permalink":"http://www.JiShuXuePai.com/categories/html/"}],"tags":[]},{"title":"黑板效果","slug":"animate/黑板效果","date":"2018-05-11T08:14:14.206Z","updated":"2018-05-11T08:14:14.206Z","comments":true,"path":"blog/animate/animate/黑板效果/","link":"","permalink":"http://www.JiShuXuePai.com/blog/animate/animate/黑板效果/","excerpt":"","text":"实现原理思路可以移动的画笔 线条是连贯的使用鼠标左键能够在黑板上写字使用鼠标右键能够擦除已写的字画笔和橡皮擦切换关键步骤绘制从固定点放射出来的直线123456789101112131415161718window.onload = function ()&#123; var cvs = document.getElementById(\"cvs\"); var ctx = cvs.getContext(\"2d\"); var lastX = 250; var lastY = 250; cvs.onmousedown = function(e)&#123; paint(e); &#125;&#125;// 绘制function paint(e)&#123; // e是鼠标事件参数 ctx.beginPath(); ctx.moveTo(lastX, lastY); ctx.lineTo(e.offsetX, e.offsetY); ctx.stroke();&#125;绘制折线12345678910111213141516171819// 绘制function paint(e)&#123; // e是鼠标事件参数 // 第一次绘制时初始化lastX,lastY的值 if (lastX === undefined) &#123; lastX = e.offsetX; lastY = e.offsetY; return; &#125; // 绘制线段 ctx.beginPath(); ctx.moveTo(lastX, lastY); ctx.lineTo(e.offsetX, e.offsetY); ctx.stroke(); // 记录上次的结束点 lastX = e.offsetX; lastY = e.offsetY;&#125;自由绘制123cvs.onmousemove = function(e)&#123; paint(e);&#125;鼠标按下才绘图12345678910111213141516var state = 0; // 0: 什么都不做 1: 绘制cvs.onmousedown = function(e)&#123; state = 1;&#125;cvs.onmouseup = function ()&#123; // 重置状态 state = 0;&#125;cvs.onmousemove = function(e) &#123; if (state === 1) &#123; paint(e); &#125; &#125;擦除12345678910111213141516171819202122232425262728293031var state = 0; // 0: 什么都不做 1: 绘制 2: 擦除cvs.onmousedown = function(e)&#123; if(e.button == 0) state = 1; else if (e.button == 2) state = 2;&#125;cvs.onmouseup = function ()&#123; // 重置状态 state = 0; lastX = lastY = undefined; &#125;cvs.onmousemove = function(e) &#123; if (state === 1) &#123; paint(e); &#125; else if (state === 2)&#123; eraser(e); &#125;&#125;// 擦除function eraser(e)&#123; var w = 50; var h = 50; var x = e.offsetX - w/2 var y = e.offsetY - h/2; ctx.clearRect(x, y , w, h);&#125;设置样式1234ctx.lineWidth = 7;ctx.lineCap = \"round\";ctx.lineJoin = \"round\";ctx.strokeStyle = \"royalblue\";完整代码1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;&lt;/title&gt; &lt;script type=\"text/javascript\"&gt; window.onload = function() &#123; var cvs = document.getElementById(\"cvs\"); var ctx = cvs.getContext(\"2d\"); // 上次画线时的结束点坐标 var lastX; var lastY; var state = 0; // 0: 什么都不做 1: 绘制 2: 擦除 ctx.lineWidth = 7; ctx.lineCap = \"round\"; ctx.lineJoin = \"round\"; ctx.strokeStyle = \"royalblue\"; cvs.onmousedown = function(e)&#123; console.log(e.button); if(e.button == 0) state = 1; else if (e.button == 2) state = 2; &#125; cvs.onmouseup = function ()&#123; // 重置状态 state = 0; lastX = lastY = undefined; &#125; cvs.onmousemove = function(e) &#123; if (state === 1) &#123; paint(e); &#125; else if (state === 2)&#123; eraser(e); &#125; &#125; // 绘制 function paint(e)&#123; // e是鼠标事件参数 // 第一次绘制时初始化lastX,lastY的值 if(lastX === undefined) &#123; lastX = e.offsetX; lastY = e.offsetY; return; &#125; // 绘制线段 ctx.beginPath(); ctx.moveTo(lastX, lastY); ctx.lineTo(e.offsetX, e.offsetY); ctx.stroke(); // 记录上次的结束点 lastX = e.offsetX; lastY = e.offsetY; &#125; // 擦除 function eraser(e)&#123; var w = 50; var h = 50; var x = e.offsetX - w/2 var y = e.offsetY - h/2; ctx.clearRect(x, y , w, h); &#125; &#125; &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;canvas id=\"cvs\" width=\"500\" height=\"500\"&gt;&lt;/canvas&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"animate","slug":"animate","permalink":"http://www.JiShuXuePai.com/categories/animate/"}],"tags":[]},{"title":"闪烁的离子","slug":"animate/闪烁的离子","date":"2018-05-11T08:14:14.165Z","updated":"2018-05-11T08:14:14.165Z","comments":true,"path":"blog/animate/animate/闪烁的离子/","link":"","permalink":"http://www.JiShuXuePai.com/blog/animate/animate/闪烁的离子/","excerpt":"","text":"实现原理思路分析随机颜色使用随机数定义很多大小不同的粒子的尺寸,数量等绘制一帧的函数使用定时器不停的重绘绘制时修改某些变量让画面动起来关键步骤定义对象123456789101112131415function Star(x, y, r, max, c, s)&#123; this.x = x; this.y = y; this.color = c; this.radius = r; this.max = max; this.speed = s; this.draw = function(ctx)&#123; ctx.beginPath(); ctx.arc(this.x, this.y, this.radius, 0, Math.PI*2); ctx.fillStyle = this.color; ctx.fill(); &#125;&#125;产生一个随机颜色123456function randomColor()&#123; var r = Math.floor(Math.random()*255); var g = Math.floor(Math.random()*255); var b = Math.floor(Math.random()*255); return \"rgb(\"+r+\", \"+g+\",\"+b+\")\";&#125;创建很多星星1234567891011121314151617var stars = []; // 存放所有星星的实例function init(cvs)&#123; // 创建很多星星 for(var i=0; i&lt;100; i++)&#123; // 随机产生参数 var x = Math.random()*cvs.width; var y = Math.random()*cvs.height; var r = Math.random()*100 +5; var m = r * 1.5; var c = randomColor(); var s = Math.random()*3 + 1; // 实例化星星 var star = new Star(x, y, r, m, c, s); // 放入到数组集合 stars.push(star); &#125;&#125;绘制所有的星星1234567891011// 绘制一帧function draw(cvs)&#123; var ctx = cvs.getContext(\"2d\"); // 绘制一帧前先清除画布 ctx.clearRect(0, 0, cvs.width, cvs.height); // 绘制所有的星星 for(var i = 0; i &lt; stars.length; i++)&#123; stars[i].draw(ctx); &#125;&#125;不停的重绘形成动画12345window.onload = function()&#123; var cvs = document.getElementById(\"cvs\"); init(cvs); setInterval(draw, 50, cvs); // 定时重绘&#125;;完整代码12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset=\"utf-8\" /&gt; &lt;title&gt;&lt;/title&gt; &lt;script type=\"text/javascript\"&gt; function Star(x, y, r, m, c, s)&#123; this.x = x; this.y = y; this.color = c; this.radius = r; this.max = m; this.speed = s; this._state = true; this.draw = function(ctx)&#123; ctx.beginPath(); ctx.arc(this.x, this.y, this.radius, 0, Math.PI*2); ctx.fillStyle = this.color; ctx.fill(); if (this.radius &gt;= this.max)&#123; this._state = false; &#125; else if (this.radius &lt;= 0)&#123; this._state = true; &#125; if (this._state)&#123; this.radius += this.speed; &#125; else &#123; this.radius -= this.speed; if(this.radius &lt; 0) this.radius = 0; &#125; &#125; &#125; function randomColor()&#123; var r = Math.floor(Math.random()*255); var g = Math.floor(Math.random()*255); var b = Math.floor(Math.random()*255); return \"rgb(\"+r+\", \"+g+\",\"+b+\")\"; &#125; var stars = []; // 存放所有星星的实例 function init(cvs)&#123; // 创建很多星星 for(var i=0; i&lt;100; i++)&#123; // 随机产生参数 var x = Math.random()*cvs.width; var y = Math.random()*cvs.height; var r = Math.random()*100 +5; var m = r * 1.5; var c = randomColor(); var s = Math.random()*3 + 1; // 实例化星星 var star = new Star(x, y, r, m, c, s); // 放入到数组集合 stars.push(star); &#125; &#125; // 绘制一帧 function draw(cvs)&#123; var ctx = cvs.getContext(\"2d\"); // 绘制一帧前先清除画布 ctx.clearRect(0, 0, cvs.width, cvs.height); // 绘制所有的星星 for(var i = 0; i &lt; stars.length; i++)&#123; stars[i].draw(ctx); &#125; &#125; window.onload = function()&#123; var cvs = document.getElementById(\"cvs\"); init(cvs); setInterval(draw, 50, cvs); // 定时重绘 &#125;; &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;canvas id=\"cvs\" width=\"500\" height=\"500\"&gt;&lt;/canvas&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"animate","slug":"animate","permalink":"http://www.JiShuXuePai.com/categories/animate/"}],"tags":[]},{"title":"过渡动画 transition","slug":"animate/过渡动画","date":"2018-05-11T08:14:14.164Z","updated":"2018-05-11T08:14:14.164Z","comments":true,"path":"blog/animate/animate/过渡动画/","link":"","permalink":"http://www.JiShuXuePai.com/blog/animate/animate/过渡动画/","excerpt":"","text":"动画过渡效果可以制作淡入淡出, 由大变小, 改变色彩等动画.1. 过渡相关属性transition-property：要过渡的CSS属性如果是all表示应用到所有CSS属性transition-duration：过渡持续的时间, 单元是秒transition-timing-function：过渡速度的变化方式，值有：12345#div1 &#123;transition-timing-function: linear;&#125; /*匀速*/#div2 &#123;transition-timing-function: ease;&#125; /*缓慢*/#div3 &#123;transition-timing-function: ease-in;&#125; /*慢入*/#div4 &#123;transition-timing-function: ease-out;&#125; /*慢出速*/#div5 &#123;transition-timing-function: ease-in-out;&#125; /*开始和结束缓慢*/transition-delay：延迟时间, 单元是秒.如果为负数，过渡动画将会在半路结束多个属性组合使用:1div &#123;-webkit-transition: width 2s, height 2s, -webkit-transform 2s;&#125;2. 注意事项不同时间段内过渡不同属性解决主流浏览器的兼容问题，添加前缀可以正常使用1234567891011// 谷歌 苹果Safari-webkit-transition: width 2s, height 4s; // IE9-ms-transition: width 2s, height 4s; // 火狐-moz-transition: width 2s, height 4s;// 欧朋-o-transition: width 2s, height 4s;谁要做动画就给谁加transition3. 过渡动画Demo给按钮添加样式给按钮添加一个悬停样式添加过渡动画","categories":[{"name":"animate","slug":"animate","permalink":"http://www.JiShuXuePai.com/categories/animate/"}],"tags":[]},{"title":"粒子堆积成图片","slug":"animate/粒子堆积成图片","date":"2018-05-11T08:14:13.952Z","updated":"2018-05-11T08:14:13.952Z","comments":true,"path":"blog/animate/animate/粒子堆积成图片/","link":"","permalink":"http://www.JiShuXuePai.com/blog/animate/animate/粒子堆积成图片/","excerpt":"","text":"原理让一张大图的每一部分都能独立运动。实现准备一个容器12345678910111213141516171819202122232425&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset=\"utf-8\" /&gt; &lt;title&gt;&lt;/title&gt; &lt;style&gt; .center &#123; position: absolute; left:0px; right: 0px; top:0px; bottom: 0px; margin: auto; &#125; .box&#123; width: 980px; height: 500px; background-color: red; &#125; &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=\"box center\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;确定在XY轴上将图片分割为多少份12var X = 40; // 总列数var Y = 30; // 总行数添加子项1234567891011function init()&#123; var box = $(\".box\"); // 遍历每个item for(var y=0; y &lt; Y; y++)&#123; for(var x = 0; x &lt; X; x++)&#123; $(\"&lt;div class='item'&gt;&lt;/div&gt;\") .appendTo(box); &#125; &#125;&#125;设置每个子项的大小和位置123456789101112131415161718192021function init()&#123; var box = $(\".box\"); var w = 980/X; // 每个item的宽度 var h = 500/Y; // 每个item的高度 // 遍历每个item for(var y=0; y &lt; Y; y++)&#123; for(var x = 0; x &lt; X; x++)&#123; $(\"&lt;div class='item'&gt;&lt;/div&gt;\") .width(w) .height(h) .css(&#123; \"left\": x*w, \"top\": y*h, \"background-position\": (-x*w)+\"px \"+ (-y*h)+\"px\" // 每个子项显示图片中的一部分 &#125;) .appendTo(box); &#125; &#125;&#125;分散12345678910111213141516171819202122232425262728function init()&#123; var box = $(\".box\"); var w = 980/X; // 每个item的宽度 var h = 500/Y; // 每个item的高度 // 遍历每个item for(var y=0; y &lt; Y; y++)&#123; for(var x = 0; x &lt; X; x++)&#123; // 产生一个随机的(rx,ry)坐标 var range = 3000; var rx = Math.random()*range*2 - range; // [-3000, 3000) var ry = Math.random()*range*2 - range; // [-3000, 3000) $(\"&lt;div class='item'&gt;&lt;/div&gt;\") .width(w) .height(h) .css(&#123; \"left\": x*w, \"top\": y*h, \"background-position\": (-x*w)+\"px \"+ (-y*h)+\"px\", \"opacity\": 0, // 分散时子项是透明的 \"transform\": \"translate(\"+rx+\"px, \"+ry+\"px)\" // 将每个子项放在一个随机的偏移位置 &#125;) .appendTo(box); &#125; &#125;&#125;合拢123456function togather()&#123; $(\".box .item\").css(&#123; \"transform\": \"translate(0px, 0px)\", \"opacity\": \"1\" &#125;);&#125;点击时合拢12345init();$(\"body\").click(function()&#123; togather();&#125;);加入动画12345.box .item&#123; position: absolute; background-image: url(img/20.jpg); transition: transform 3s linear, opacity 3s linear;&#125;非同步到达的动画123456function togather()&#123; $(\".box .item\").css(&#123;\"transform\": \"translate(0px, 0px)\", \"opacity\": \"1\"&#125;).each(function()&#123; var duration = Math.random()*3+2; //随机产生动画持续时间 $(this).css(&#123;\"transition\": \"transform \"+duration+\"s linear, opacity \"+duration+\"s linear\"&#125;); &#125;);&#125;完整代码1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset=\"utf-8\" /&gt; &lt;title&gt;&lt;/title&gt; &lt;style&gt; .center &#123; position: absolute; left:0px; right: 0px; top:0px; bottom: 0px; margin: auto; &#125; .box&#123; width: 980px; height: 500px; background-color: gray; &#125; .box .item&#123; position: absolute; background-image: url(img/20.jpg); /*transition: transform 3s linear;*/ &#125; &lt;/style&gt; &lt;script type=\"text/javascript\" src=\"js/jquery-3.1.0.min.js\" &gt;&lt;/script&gt; &lt;script type=\"text/javascript\"&gt; $(function()&#123; var X = 40; // 总列数 var Y = 30; // 总行数 init();// togather();// setTimeout(togather, 0); $(\"body\").click(function()&#123; togather(); &#125;); function init()&#123; var box = $(\".box\"); var w = 980/X; // 每个item的宽度 var h = 500/Y; // 每个item的高度 // 遍历每个item for(var y=0; y &lt; Y; y++)&#123; for(var x = 0; x &lt; X; x++)&#123; // 产生一个随机的(rx,ry)坐标 var range = 3000; var rx = Math.random()*range*2 - range; // [-3000, 3000) var ry = Math.random()*range*2 - range; // [-3000, 3000) $(\"&lt;div class='item'&gt;&lt;/div&gt;\") .width(w) .height(h) .css(&#123; \"left\": x*w, \"top\": y*h, \"background-position\": (-x*w)+\"px \"+ (-y*h)+\"px\", // 每个子项显示图片中的一部分 \"opacity\": \"0\", // 分散时子项是透明的 \"transform\": \"translate(\"+rx+\"px, \"+ry+\"px)\" // 将每个子项放在一个随机的偏移位置 &#125;) .appendTo(box); &#125; &#125; &#125; function togather()&#123; $(\".box .item\").css(&#123;\"transform\": \"translate(0px, 0px)\", \"opacity\": \"1\"&#125;).each(function()&#123; var duration = Math.random()*3+2; //随机产生动画持续时间 $(this).css(&#123;\"transition\": \"transform \"+duration+\"s linear, opacity \"+duration+\"s linear\"&#125;); &#125;); &#125; &#125;) &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=\"box center\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;案例素材1张980px*500px的图片","categories":[{"name":"animate","slug":"animate","permalink":"http://www.JiShuXuePai.com/categories/animate/"}],"tags":[]},{"title":"立方体轮播","slug":"animate/立方体轮播","date":"2018-05-11T08:14:13.811Z","updated":"2018-05-11T08:14:13.811Z","comments":true,"path":"blog/animate/animate/立方体轮播/","link":"","permalink":"http://www.JiShuXuePai.com/blog/animate/animate/立方体轮播/","excerpt":"","text":"实现立方体12345678910111213141516171819202122232425262728293031323334353637383940414243444546&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset=\"utf-8\" /&gt; &lt;title&gt;&lt;/title&gt; &lt;style&gt; .box&#123; width: 980px; height: 500px; position: absolute; transform-style: preserve-3d; perspective: 600px; /*transform: rotateX(10deg) rotateY(10deg);*/ &#125; .item&#123; width: 100%; height: 100%; position: absolute; &#125; .item:nth-child(1)&#123; background: red; transform: rotateX(0deg) translateZ(250px); &#125; .item:nth-child(2)&#123; background: yellow; transform: rotateX(90deg) translateZ(250px); &#125; .item:nth-child(3)&#123; background: purple; transform: rotateX(180deg) translateZ(250px); &#125; .item:nth-child(4)&#123; background: coral; transform: rotateX(270deg) translateZ(250px); &#125; &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=\"box\"&gt; &lt;div class=\"item\"&gt;1&lt;/div&gt; &lt;div class=\"item\"&gt;2&lt;/div&gt; &lt;div class=\"item\"&gt;3&lt;/div&gt; &lt;div class=\"item\"&gt;4&lt;/div&gt; &lt;/div&gt; &lt;/body&gt;&lt;/html&gt;旋转123456789101112131415$(function()&#123; var count = 0; function rotate()&#123; count++; $(\".item\").each(function(i)&#123; var deg = 90 * i - count * 90; $(this).css(\"transform\", \"rotateX(\"+ deg +\"deg) translateZ(250px)\"); &#125;); &#125; $(\"body\").click(rotate);&#125;);动画123456.item&#123; width: 100%; height: 100%; position: absolute; transition: transform 1s;&#125;","categories":[{"name":"animate","slug":"animate","permalink":"http://www.JiShuXuePai.com/categories/animate/"}],"tags":[]},{"title":"照片墙","slug":"animate/照片墙","date":"2018-05-11T08:14:13.443Z","updated":"2018-05-11T08:14:13.443Z","comments":true,"path":"blog/animate/animate/照片墙/","link":"","permalink":"http://www.JiShuXuePai.com/blog/animate/animate/照片墙/","excerpt":"","text":"原理让一张大图的每一部分都能独立运动。HTML结构展示123&lt;body&gt; &lt;div class=\"wrap\"&gt;&lt;/div&gt;&lt;/body&gt;第一步 先创建25个div友情提示：不要忘记引入&lt;script src=&quot;js/jquery-3.1.0.js&quot;&gt;&lt;/script&gt;123456789101112var $wrap = $(\".wrap\"); //在$wrap中创建25个div for(var i=0;i&lt;25;i++)&#123; var x = i%5; var y = parseInt(i/5); $(\"&lt;div&gt;&lt;div class='pic'&gt;&lt;/div&gt;&lt;/div&gt;\") .css(&#123; left:x * 196 + \"px\", top:y * 100 + \"px\" &#125;) .appendTo($wrap) &#125;第二步 分别给每个div添加背景图每个div添加背景图并做好相应的背景定位123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051&lt;style&gt; body&#123; background-color: #000; &#125; .wrap&#123; width:980px; height: 500px; position: relative; margin: 0 auto; margin-top:150px; &#125; .wrap&gt;div&#123; width:196px; height: 100px; position: absolute; background-color: #fff; transition:transform 1s; &#125; .wrap&gt;div&gt;.pic&#123; width:100%; height:100% ; transition: all 2s; &#125;&lt;/style&gt;&lt;script&gt;var $wrap = $(\".wrap\"); //在$wrap中创建25个div for(var i=0;i&lt;25;i++)&#123; var x = i%5; var y = parseInt(i/5); $(\"&lt;div&gt;&lt;div class='pic'&gt;&lt;/div&gt;&lt;/div&gt;\") .css(&#123; left:x * 196 + \"px\", top:y * 100 + \"px\" &#125;) .appendTo($wrap) &#125; function showSmall()&#123; $(\".wrap&gt;div\").each(function(index)&#123; $(this).find(\".pic\") .css(&#123; \"background-image\":\"url(img/\"+ index +\".jpg)\", \"background-size\":\"cover\" &#125;) &#125;) &#125; showSmall(); //先执行一次&lt;/script&gt;第三步 显示单张大图通过定位显示完整的图片, 用background-position可以定位显示图片中的一部分。12345678910111213141516function showBig(index)&#123; $(\".pic\").css(&#123; \"background-image\":\"url(img/\"+ index +\".jpg)\", \"background-size\":\"auto\", \"transform\":\"scale(1)\" &#125;) $(\".pic\").each(function(i)&#123; var x = i % 5; var y = parseInt(i/5); $(this).css(&#123; \"background-position\":-196 * x +\"px \" + -100 * y +\"px\" //用background-position可以定位显示图片中的一部分。 &#125;) &#125;)&#125;第四步 大图和小图的相互切换12345678910var isSmall=true; // 是小图吗?$(\".wrap&gt;div\").click(function()&#123; var index = $(this).index(); if(isSmall)&#123; showBig(index); &#125;else&#123; showSmall(); &#125; isSmall = !isSmall; //开关&#125;)完整代码展示123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;&lt;/title&gt; &lt;script src=\"js/jquery-3.1.0.min.js\"&gt;&lt;/script&gt; &lt;style&gt; body&#123; background-color: #000; &#125; .wrap&#123; width:980px; height: 500px; position: relative; margin: 0 auto; margin-top:150px; &#125; .wrap&gt;div&#123; width:196px; height: 100px; position: absolute; background-color: #fff; transition: transform 1s; &#125; .wrap&gt;div&gt;.pic&#123; width:100%; height:100% ; transition: all 2s; &#125; &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=\"wrap\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;&lt;script&gt; // 1 初始化25个小div var $wrap = $(\".wrap\"); for(var i=0;i&lt;25;i++)&#123; var x = i%5; var y = parseInt(i/5); $(\"&lt;div&gt;&lt;div class='pic'&gt;&lt;/div&gt;&lt;/div&gt;\") .css(&#123; left:x * 196 + \"px\", top:y * 100 + \"px\" &#125;) .appendTo($wrap) &#125; // 2 显示25张小图 function showSmall()&#123; $(\".wrap&gt;div\").each(function(index)&#123; $(\".pic\").css(&#123; \"transform\":\"scale(0.95,0.9)\" &#125;); var x = index % 5; var y = parseInt(index/5); var disX = (x-2)*50; var disY = (y-2)*50; var deg = Math.random()*60-30 // [-30deg,30deg) $(this).css(&#123; \"transform\":\"translate(\"+disX+\"px,\"+disY+\"px) rotate(\"+deg+\"deg)\", &#125;); $(this).find(\".pic\") .css(&#123; \"background-image\":\"url(img/\"+index+\".jpg)\", \"background-size\":\"cover\" &#125;) &#125;) &#125; showSmall(); // 3 显示单张大图 function showBig(index)&#123; $(\".wrap&gt;div\").css(&#123; transform:\"translate(0,0)\" &#125;) $(\".pic\").css(&#123; \"background-image\":\"url(img/\"+index+\".jpg)\", \"transform\":\"scale(1)\" &#125;) $(\".pic\").each(function(i)&#123; var x = i%5; var y = parseInt(i/5); $(this).css(&#123; \"background-position\":(-1)*196*x+\"px \" +(-1)*100*y+\"px\" &#125;) &#125;) &#125; // 4 大图和小图切换 var isSmall=true; // 是小图吗? $(\".wrap&gt;div\").click(function()&#123; var index = $(this).index(); if(isSmall)&#123; showBig(index); &#125;else&#123; showSmall(); &#125; isSmall = !isSmall; &#125;) &lt;/script&gt;","categories":[{"name":"animate","slug":"animate","permalink":"http://www.JiShuXuePai.com/categories/animate/"}],"tags":[]},{"title":"帧动画 @keyframes","slug":"animate/帧动画","date":"2018-05-11T08:14:13.442Z","updated":"2018-05-11T08:14:13.442Z","comments":true,"path":"blog/animate/animate/帧动画/","link":"","permalink":"http://www.JiShuXuePai.com/blog/animate/animate/帧动画/","excerpt":"","text":"使用 @keyframs 作为定义动画的关键词, 可以设置多个关键帧, 动画将会按顺序执行帧动画使用步骤定义关键帧, 并为每个关键帧设置样式123456/*定义帧动画的名称为myAnimation*/ @keyframes myAnimation&#123; 0% &#123;background-color: red;&#125; /* 0% 代表时间节点 */ 50% &#123; background-color:green&#125; /* 50% 代表时间节点 */ 100%&#123;background-color: yellow;&#125; &#125;添加动画将定义的帧动画与要使用帧动画的div的class设置为相同的名称1234567/*css里设置div的宽度和高度*/ .myAnimation &#123; width: 100px; height: 100px; &#125; /*html里设置class为myAnimation*/&lt;div class=\"myAnimation\"&gt;&lt;/div&gt;百分比定义帧动画(案例一说明)使用百分比定义帧动画, 可以设置多个关键帧, 从1%到100%之间自定义区间的数值.动画常用属性在css文件中, 选择需要做帧动画的div, 将以下属性放在div里进行设置1234567animation: example 4s 2s /*多个动画一起设置, 等同于以下三个设置*/animation-name: example; /*可设置动画的名称*/animation-duration: 4s; /*设置动画的持续时间*/animation-delay: 2s; /*设置动画延迟时间,如2秒后执行*/帧动画( @keyframe ) 和补间动画( transition )的区别?帧动画可以自定义起始关键帧和结束的关键帧, 而补间动画只能设置结束时的动画样式。帧动画更加灵活，可以制作复杂的动画.案例一使用百分比定义关键帧123456789101112@keyframes up&#123; 0%&#123;transform: rotateX(180deg); opacity: 0;&#125; 40%&#123;transform: rotateX(-40deg); opacity: 1;&#125; 60%&#123;transform: rotateX(30deg); opacity: 1;&#125; 80%&#123;transform: rotateX(-20deg); opacity: 1;&#125; 90%&#123;transform: rotateX(10deg); opacity: 1;&#125; 100%&#123;transform: rotateX(0deg); opacity: 1;&#125;&#125;.up &#123; animation: up 1s forwards;&#125;添加动画1&lt;div class=&quot;up&quot;&gt;&lt;/div&gt;案例二123456789101112131415161718/* 定义动画关键帧 */@keyframes example &#123; 0% &#123;background-color:red; left:0px; top:0px;&#125; 25% &#123;background-color:yellow; left:200px; top:0px;&#125; 50% &#123;background-color:blue; left:200px; top:200px;&#125; 75% &#123;background-color:green; left:0px; top:200px;&#125; 100% &#123;background-color:red; left:0px; top:0px;&#125;&#125;/* div元素申请使用名称为example的动画关键帧*/div &#123; width: 100px; height: 100px; position: relative; background-color: red; animation-name: example; /*设置动画名称*/ animation-duration: 4s; /*动画持续时间*/&#125;触发时机起始值","categories":[{"name":"animate","slug":"animate","permalink":"http://www.JiShuXuePai.com/categories/animate/"}],"tags":[]},{"title":"css3动画优化","slug":"animate/css3动画优化","date":"2018-05-11T08:14:13.434Z","updated":"2018-05-11T08:14:13.434Z","comments":true,"path":"blog/animate/animate/css3动画优化/","link":"","permalink":"http://www.JiShuXuePai.com/blog/animate/animate/css3动画优化/","excerpt":"","text":"1. css3动画兼容情况怎么样?查询Can I use网站, 搜索CSS3动画属性名, 查询浏览器支持情况.2. 解决浏览器兼容问题和私有前缀的方法有哪些?添加私有前缀及几种方法:使用sublime编辑器插件autoprefixer;前端构建工具自动生成前缀;使用sass/lass简化前缀;手动添加前缀代码如下:12345transform: rotate(30deg); /*一般把无前缀的样式写在第一行*/-ms-transform: rotate(30deg); /* IE 9 */-webkit-transform: rotate(30deg); /* Safari and Chrome */-o-transform: rotate(30deg); /* Opera */-moz-transform: rotate(30deg); /*火狐*/使用最新版本的主流浏览器, 如谷歌, 火狐, IE10.3. CSS3动画卡顿怎么办?使用will-change 属性, 优化动画的流畅度123456789.example &#123; will-change: transform; /*表示需要浏览器优化transform*/&#125;/*优化其它属性*/ will-change: scroll-position will-change: contentswill-change: opacity /*需要浏览器优化透明度*/will-change: left, top点击查看will-change的更多内容","categories":[{"name":"animate","slug":"animate","permalink":"http://www.JiShuXuePai.com/categories/animate/"}],"tags":[]},{"title":"圆环进度条","slug":"animate/圆环进度条","date":"2018-05-11T08:14:13.434Z","updated":"2018-05-11T08:14:13.434Z","comments":true,"path":"blog/animate/animate/圆环进度条/","link":"","permalink":"http://www.JiShuXuePai.com/blog/animate/animate/圆环进度条/","excerpt":"","text":"绘制背景圆环123456789101112131415161718// 绘制一帧function draw()&#123; // 清除画布 ctx.clearRect(0,0,cvs.width, cvs.height); // 计算绘制参数 var x = cvs.width/2; // 中心坐标 var y = cvs.height/2; ctx.lineWidth = 16; // 圆环的宽度 ctx.lineCap = \"round\"; // 进度条两端的样式 var r = Math.min(x, y) - ctx.lineWidth/2; // 圆的半径 // 绘制背景圆环 ctx.beginPath(); ctx.arc(x, y, r, 0, Math.PI*2); ctx.strokeStyle = \"purple\"; ctx.stroke();&#125;绘制进度条123456789101112131415161718192021222324252627282930window.onload = function ()&#123; var cvs = document.getElementById(\"cvs\"); var ctx = cvs.getContext(\"2d\"); var target = 0.4; // 进度值 // 绘制一帧 function draw()&#123; // 清除画布 ctx.clearRect(0,0,cvs.width, cvs.height); // 计算绘制参数 var x = cvs.width/2; // 中心坐标 var y = cvs.height/2; ctx.lineWidth = 16; // 圆环的宽度 ctx.lineCap = \"round\"; // 进度条两端的样式 var r = Math.min(x, y) - ctx.lineWidth/2; // 圆的半径 // 绘制背景圆环 // ... // 绘制进度条 ctx.beginPath(); var start = 0; var end = Math.PI*2*target; ctx.arc(x, y, r, start, end); ctx.strokeStyle = \"purple\"; ctx.stroke(); &#125;&#125;将开始点移动到12点位置12var start = Math.PI*3/2;var end = Math.PI*2*target + start;终点延长动效12345678910111213141516171819202122232425262728293031323334353637383940window.onload = function ()&#123; var cvs = document.getElementById(\"cvs\"); var ctx = cvs.getContext(\"2d\"); var total = 13; // 用多少帧完成动画 var progress = 0; // 当前是第多少帧 var target = 0.4; // 目标进度值 // 绘制一帧 function draw()&#123; if (progress &gt; total) return; // 清除画布 ctx.clearRect(0,0,cvs.width, cvs.height); // 计算绘制参数 var x = cvs.width/2; // 中心坐标 var y = cvs.height/2; ctx.lineWidth = 16; // 圆环的宽度 ctx.lineCap = \"round\"; // 进度条两端的样式 var r = Math.min(x, y) - ctx.lineWidth/2; // 圆的半径 // 绘制背景圆环 // ... // 绘制进度条 ctx.beginPath(); var start = Math.PI*3/2; var p = target*progress/total; // 进度值 var end = Math.PI*2*p + start; ctx.arc(x, y, r, start, end); ctx.strokeStyle = \"purple\"; ctx.stroke(); progress++; // 绘制完一帧 &#125; setInterval(draw, 100); // 定时重绘&#125;起点旋转动效1var start = Math.PI*3/2*progress/total;绘制文字123456789101112131415// 绘制一帧function draw()&#123; // 绘制进度条 // ... var p = target*progress/total; // 绘制文字 var text = (p*100).toFixed(2)+\"%\"; // 计算进度对应的文字 ctx.font = \"25px Arial\"; // 文字字体 ctx.fillStyle = \"orange\"; // 文字颜色 ctx.textAlign = \"center\"; // 文字水平居中 ctx.textBaseline = \"middle\"; // 文字垂直居中 // ctx.measureText(text).width; // 度量文字的宽度 ctx.fillText(text, cvs.width/2, cvs.height/2);&#125;完整代码1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;&lt;/title&gt; &lt;script type=\"text/javascript\"&gt; window.onload = function ()&#123; var cvs = document.getElementById(\"cvs\"); var ctx = cvs.getContext(\"2d\"); var total = 13; // 用多少帧完成动画 var progress = 0; // 当前是第多少帧 var target = 0.4; // 目标进度值 // 绘制一帧 function draw()&#123; if (progress &gt; total) return; // 清除画布 ctx.clearRect(0,0,cvs.width, cvs.height); // 计算绘制参数 var x = cvs.width/2; // 中心坐标 var y = cvs.height/2; ctx.lineWidth = 16; // 圆环的宽度 ctx.lineCap = \"round\"; // 进度条两端的样式 var r = Math.min(x, y) - ctx.lineWidth/2; // 圆的半径 // 绘制背景圆环 ctx.beginPath(); ctx.arc(x, y, r, 0, Math.PI*2); ctx.strokeStyle = \"#87CEEB\"; ctx.stroke(); // 绘制进度条 ctx.beginPath(); var start = Math.PI*3/2*progress/total; var p = target*progress/total; // 进度值 var end = Math.PI*2*p + start; ctx.arc(x, y, r, start, end); ctx.strokeStyle = \"purple\"; ctx.stroke(); // 绘制文字 var text = (p*100).toFixed(2)+\"%\"; // 计算进度对应的文字 ctx.font = \"25px Arial\"; // 文字字体 ctx.fillStyle = \"orange\"; // 文字颜色 ctx.textAlign = \"center\"; // 文字水平居中 ctx.textBaseline = \"middle\"; // 文字垂直居中// ctx.measureText(text).width; // 度量文字的宽度 ctx.fillText(text, cvs.width/2, cvs.height/2); progress++; // 绘制完一帧 &#125; setInterval(draw, 100); // 定时重绘 &#125; &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;canvas id=\"cvs\" width=\"200\" height=\"200\"&gt;&lt;/canvas&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"animate","slug":"animate","permalink":"http://www.JiShuXuePai.com/categories/animate/"}],"tags":[]},{"title":"Canvas 贪吃蛇游戏","slug":"animate/Canvas贪吃蛇游戏","date":"2018-05-11T08:14:13.432Z","updated":"2018-05-11T08:14:13.432Z","comments":true,"path":"blog/animate/animate/Canvas贪吃蛇游戏/","link":"","permalink":"http://www.JiShuXuePai.com/blog/animate/animate/Canvas贪吃蛇游戏/","excerpt":"","text":"450*450实现原理思路分析蛇的移动改变蛇的方向产生苹果吃苹果蛇会增长咬到自己就结束游戏关键步骤:1. 准备画布和做动画需要的变量1234567891011121314151617181920212223window.onload = function()&#123; var cvs = document.getElementById(\"cvs\"); var ctx = cvs.getContext(\"2d\"); function draw()&#123; // 声明需要的变量 var sceneSize = 30; // 场景大小 var size = 20; // 格子的大小 var snake = [&#123;x:10, y:12&#125;, &#123;x:10, y:13&#125;, &#123;x:10, y:14&#125;]; // 蛇的身体 var direction = 1;// 蛇的方向 0: 左 1： 上 2：右 3：下 var apples = []; // 所有的苹果 var countFrame = 0; // 清除画布 ctx.clearRect(0, 0, cvs.width, cvs.height);&#125; setInterval(draw, 500); &#125;2. 绘制场景123456789101112131415161718var sceneSize = 30; // 场景大小var size = 20; // 格子的大小function draw()&#123;// 清除画布ctx.clearRect(0, 0, cvs.width, cvs.height);// 绘制场景 drawScene(); drawSnake(); &#125; // 绘制场景 function drawScene()&#123; ctx.strokeStyle = \"blue\"; for(var x = 0; x &lt; sceneSize; x++)&#123; for(var y = 0; y &lt; sceneSize; y++)&#123; ctx.strokeRect(x*size, y*size, size, size); &#125; &#125; &#125;3. 绘制蛇1234567// 蛇的身体是由很多的正方形组成的, 考虑蛇的长度是多少个正方形, 每个正方形的宽和高function drawSnake()&#123; ctx.fillStyle = \"purple\"; for (var i = 0; i &lt; snake.length; i++) &#123; ctx.fillRect(snake[i].x*size, snake[i].y*size, size, size); &#125; &#125;4. 蛇头的移动1234567891011121314151617// 绘制一帧 function draw()&#123;// 清除画布 ctx.clearRect(0, 0, cvs.width, cvs.height);// 绘制场景 drawScene();// 绘制蛇 drawSnake();// 每一帧更新数据 update();&#125;// 每一帧更新数据 function update()&#123; snake[0].y--; &#125;5. 移动方向控制123456789101112131415// 每一帧更新数据 function update()&#123;// 移动 move();&#125;// 移动 function move()&#123; switch(direction)&#123; case 0: snake[0].x--; break; case 1: snake[0].y--; break; case 2: snake[0].x++; break; case 3: snake[0].y++; break; &#125; &#125;6. 身体的移动1234567891011121314151617// 在move方法里// 移动function move()&#123;// 蛇的身体的移动 for(var i=snake.length-1; i &gt;= 1; i--)&#123;// 把当前身体移动上一节身体所在的位置 snake[i].x = snake[i-1].x; snake[i].y = snake[i-1].y; &#125;// 蛇头的移动 switch(direction)&#123; case 0: snake[0].x--; break; case 1: snake[0].y--; break; case 2: snake[0].x++; break; case 3: snake[0].y++; break; &#125; &#125;7. 产生苹果123456789101112131415var apples = []; // 所有的苹果// 绘制苹果function drawApples()&#123;ctx.fillStyle = \"orange\"; for (var i = 0; i &lt; apples.length; i++) &#123; ctx.fillRect(apples[i].x*size, apples[i].y*size, size, size); &#125; &#125;// 产生苹果function generateApple()&#123; var x = parseInt(Math.random()*sceneSize); var y = parseInt(Math.random()*sceneSize); apples.push(&#123;x:x, y:y&#125;); &#125;8. 吃苹果1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950function draw()&#123;// 清除画布 ctx.clearRect(0, 0, cvs.width, cvs.height);// 绘制场景 drawScene();// 绘制苹果 drawApples();// 绘制蛇 drawSnake();// 每一帧更新数据 update(); &#125;// 每一帧更新数据function update()&#123;// 移动 move(); if (countFrame % 20 == 0) generateApple(); countFrame++; &#125; // 移动function move()&#123; // 蛇的身体的移动 for(var i=snake.length-1 ; i &gt;= 1; i--)&#123;// 把当前身体移动上一节身体所在的位置 snake[i].x = snake[i-1].x; snake[i].y = snake[i-1].y; &#125;// 蛇头的移动 switch(direction)&#123; case 0: snake[0].x--; break; case 1: snake[0].y--; break; case 2: snake[0].x++; break; case 3: snake[0].y++; break; &#125;// 吃苹果 for (var i = 0; i &lt; apples.length; i++) &#123; if (apples[i].x === snake[0].x &amp;&amp; apples[i].y === snake[0].y) &#123; apples.splice(i, 1); &#125; &#125; &#125;9. 身体增长123456789101112131415161718// 身体增长方法 function grow()&#123; var body = &#123; x: snake[snake.length-1].x, y: snake[snake.length-1].y &#125;; snake.push(body); &#125;// 在move方法里的吃苹果里,调用grow() for (var i = 0; i &lt; apples.length; i++) &#123; if (apples[i].x === snake[0].x &amp;&amp; apples[i].y === snake[0].y) &#123; // 吃到苹果了 apples.splice(i, 1); grow(); &#125; &#125;10. 穿墙123456// 在move方法里做实现穿墙的功能 // 判断蛇头和场景大小的关系, 蛇头到达边缘会返回到当前边缘的另一边 if(snake[0].x &gt;= sceneSize) snake[0].x = 0; if(snake[0].x &lt; 0) snake[0].x = sceneSize-1; if(snake[0].y &gt;= sceneSize) snake[0].y = 0; if(snake[0].y &lt; 0) snake[0].y = sceneSize-1;11. 蛇头咬到自己 游戏结束12345678// 咬到自己 for (var i=1; i &lt; snake.length; i++)&#123; if (snake[i].x === snake[0].x &amp;&amp; snake[i].y === snake[0].y) &#123; clearInterval(handle); alert(\"aaaaaaaaaaaaaa\"); &#125; &#125;12. 全部源代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset=\"utf-8\" /&gt; &lt;title&gt;&lt;/title&gt; &lt;style type=\"text/css\"&gt; body&#123; overflow: hidden; &#125; &lt;/style&gt; &lt;script type=\"text/javascript\"&gt; window.onload = function()&#123; var cvs = document.getElementById(\"cvs\"); var ctx = cvs.getContext(\"2d\"); var sceneSize = 30; // 场景大小 var size = 20; // 格子的大小 var snake = [&#123;x:10, y:12&#125;, &#123;x:10, y:13&#125;, &#123;x:10, y:14&#125;]; // 蛇的身体 var direction = 1;// 蛇的方向 0: 左 1： 上 2：右 3：下 var apples = []; // 所有的苹果 var countFrame = 0; // 绘制一帧 function draw()&#123; // 清除画布 ctx.clearRect(0, 0, cvs.width, cvs.height); // 绘制场景 drawScene(); // 绘制苹果 drawApples(); // 绘制蛇 drawSnake(); // 每一帧更新数据 update(); &#125; // 每一帧更新数据 function update()&#123; // 移动 move(); if (countFrame % 20 == 0) generateApple(); countFrame++; &#125; // 移动 function move()&#123; // 蛇的身体的移动 for(var i=snake.length-1 ; i &gt;= 1; i--)&#123; // 把当前身体移动上一节身体所在的位置 snake[i].x = snake[i-1].x; snake[i].y = snake[i-1].y; &#125; // 蛇头的移动 switch(direction)&#123; case 0: snake[0].x--; break; case 1: snake[0].y--; break; case 2: snake[0].x++; break; case 3: snake[0].y++; break; &#125; // 穿墙 if(snake[0].x &gt;= sceneSize) snake[0].x = 0; if(snake[0].x &lt; 0) snake[0].x = sceneSize-1; if(snake[0].y &gt;= sceneSize) snake[0].y = 0; if(snake[0].y &lt; 0) snake[0].y = sceneSize-1; // 吃苹果 for (var i = 0; i &lt; apples.length; i++) &#123; if (apples[i].x === snake[0].x &amp;&amp; apples[i].y === snake[0].y) &#123; // 吃到苹果了 apples.splice(i, 1); grow(); &#125; &#125; // 咬到自己 for (var i=1; i &lt; snake.length; i++)&#123; if (snake[i].x === snake[0].x &amp;&amp; snake[i].y === snake[0].y) &#123; clearInterval(handle); alert(\"aaaaaaaaaaaaaa\"); &#125; &#125; &#125; // 绘制场景 function drawScene()&#123; ctx.strokeStyle = \"gray\"; for(var x = 0; x &lt; sceneSize; x++)&#123; for(var y = 0; y &lt; sceneSize; y++)&#123; ctx.strokeRect(x*size, y*size, size, size); &#125; &#125; &#125; // 绘制蛇 function drawSnake()&#123; ctx.fillStyle = \"purple\"; for (var i = 0; i &lt; snake.length; i++) &#123; ctx.fillRect(snake[i].x*size, snake[i].y*size, size, size); &#125; &#125; // 绘制苹果 function drawApples()&#123; ctx.fillStyle = \"orange\"; for (var i = 0; i &lt; apples.length; i++) &#123; ctx.fillRect(apples[i].x*size, apples[i].y*size, size, size); &#125; &#125; // 产生苹果 function generateApple()&#123; var x = parseInt(Math.random()*sceneSize); var y = parseInt(Math.random()*sceneSize); apples.push(&#123;x:x, y:y&#125;); &#125; // 身体增长 function grow()&#123; var body = &#123; x: snake[snake.length-1].x, y: snake[snake.length-1].y &#125;; snake.push(body); &#125; generateApple(); generateApple(); generateApple(); var handle = setInterval(draw, 50); window.onkeydown=function(e)&#123; switch(e.keyCode)&#123; case 37: if (direction != 2) direction=0; break; case 38: if (direction != 3) direction=1; break; case 39: if (direction != 0) direction=2; break; case 40: if (direction != 1) direction=3; break; &#125; &#125; &#125; &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;canvas id=\"cvs\" width=\"800\" height=\"800\"&gt;您的浏览器不支持Canvas&lt;/canvas&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"animate","slug":"animate","permalink":"http://www.JiShuXuePai.com/categories/animate/"}],"tags":[]},{"title":"Canvas绘制直线","slug":"animate/Canvas绘制直线","date":"2018-05-11T08:14:13.431Z","updated":"2018-05-11T08:14:13.431Z","comments":true,"path":"blog/animate/animate/Canvas绘制直线/","link":"","permalink":"http://www.JiShuXuePai.com/blog/animate/animate/Canvas绘制直线/","excerpt":"","text":"常用绘制路径方法：1234567891011beginPath() //新建一条路径closePath() //结束一条路径moveTo(x, y) // 画线的开始坐标点lineTo(x, y) // 绘制直线stroke() //描边fill() //填充绘制线段123456789window.onload = function()&#123; var cvs = document.getElementById(\"cvs\"); var ctx = cvs.getContext(\"2d\"); ctx.beginPath(); /*开始新的路径*/ ctx.moveTo(250, 250); /*线的起点*/ ctx.lineTo(300, 300); /*线的终点*/ ctx.stroke(); /*渲染*/&#125;;绘制折线12345678910window.onload = function()&#123; var cvs = document.getElementById(\"cvs\"); var ctx = cvs.getContext(\"2d\"); ctx.beginPath(); ctx.moveTo(250, 250); ctx.lineTo(300, 300); ctx.lineTo(100, 200); ctx.stroke();&#125;;闭合路径12345678910window.onload = function()&#123; var cvs = document.getElementById(\"cvs\"); var ctx = cvs ctx.beginPath(); ctx.moveTo(250, 250); ctx.lineTo(300, 300); ctx.lineTo(100, 200); ctx.closePath(); ctx.stroke();&#125;;绘制扇形123456789window.onload = function()&#123; var cvs = document.getElementById(\"cvs\"); var ctx = cvs.getContext(\"2d\"); ctx.beginPath(); ctx.moveTo(250, 250); ctx.arc(250, 250, 100, 0, Math.PI/4); /*绘制圆弧*/ ctx.fill(); /*填充*/&#125;;绘制曲线12345678910window.onload = function() &#123; var ctx = document.getElementById('canvas').getContext('2d'); ctx.beginPath(); ctx.moveTo(30,96); ctx.lineTo(70,66); ctx.lineTo(103,76); ctx.lineTo(170,15); ctx.stroke(); &#125;;绘制连接线1234567891011121314151617181920window.onload = function() &#123; var ctx = document.getElementById('canvas').getContext('2d'); var lastX = 200; var lastY = 200; ctx.onmousedown = function(ev)&#123; paint(ev.offsetX, ev.offsetY); &#125; function paint() &#123; ctx.beginPath(); ctx.moveTo(lastX,lastY); ctx.lineTo(x,y); ctx.stroke(); // 记录x和y上一次的值 lastX = x; lastY = y; &#125; &#125;;线条样式属性描述lineCap设置或返回线条的结束端点样式lineJoin设置或返回两条线相交时，所创建的拐角类型lineWidth设置或返回当前的线条宽度miterLimit设置或返回最大斜接长度","categories":[{"name":"animate","slug":"animate","permalink":"http://www.JiShuXuePai.com/categories/animate/"}],"tags":[]},{"title":"Canvas标签","slug":"animate/Canvas绘图流程","date":"2018-05-11T08:14:13.431Z","updated":"2018-05-11T08:14:13.431Z","comments":true,"path":"blog/animate/animate/Canvas绘图流程/","link":"","permalink":"http://www.JiShuXuePai.com/blog/animate/animate/Canvas绘图流程/","excerpt":"","text":"H5新标签Canvas对象封装了很多绘图功能, 使用JavaScript绘制.Canvas绘图流程:绘制内容显示Canvas画布里12 /*画布*/&lt;canvas id=\"canvas\"&gt;&lt;/canvas&gt;使用Canvas内置对象context来画图123var canvas = document.getElementById(\"canvas\"); // 获取画布var ctx = canvas.getContext(\"2d\"); //获取画布的对象// 使用js操作ctx对象来绘制图像绘制矩形绘图有两种基本方式：空心描边Strike, 实心填充Fill。123456var canvas = document.getElementById(\"myCanvas\");var context = canvas.getContext('2d');// 绘制一个空心矩形，左上角是（0,0）宽度是200px，高度是100px。context.strokeRect(0, 0, 200, 100);// 绘制一个实心矩形context.fillRect(0, 150, 200, 100);Canvas样式123context.fillStyle = \"purple\"; // 填充颜色context.strokeStyle = \"green\"; // 描边颜色context.lineWidth = 2; // 线的宽度案例像素图1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;&lt;/title&gt; &lt;script type=\"text/javascript\"&gt; window.onload = function()&#123; var cvs = document.getElementById(\"cvs\") var context = cvs.getContext(\"2d\"); var size = 20; var matrx = [ [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0] ]; for(var y=0; y&lt;matrx.length; y++)&#123; for(var x=0; x&lt;matrx[y].length; x++)&#123; if(matrx[y][x] == 1)&#123; context.fillRect(x*size, y*size, size, size); &#125; else &#123; context.strokeRect(x*size, y*size, size, size); &#125; &#125; &#125; &#125;; &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;canvas id=\"cvs\" width=\"500\" height=\"300\"&gt;您的浏览器不支持Canvas。&lt;/canvas&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"animate","slug":"animate","permalink":"http://www.JiShuXuePai.com/categories/animate/"}],"tags":[]},{"title":"Canvas绘制图片","slug":"animate/Canvas绘制图片","date":"2018-05-11T08:14:13.430Z","updated":"2018-05-11T08:14:13.431Z","comments":true,"path":"blog/animate/animate/Canvas绘制图片/","link":"","permalink":"http://www.JiShuXuePai.com/blog/animate/animate/Canvas绘制图片/","excerpt":"","text":"在Canvas画布中, 可以使用图片(jpg, gif, png等格式).常用图片方法123drawImage(); // 绘制图片getImageData(); // 返回一个矩形 copy原图putImageData(); // 指定位置放置图片绘制图片步骤drawImage(image, x, y)image 是 image 或者 canvas 对象，x 和 y 是其在目标 canvas 里的起始坐标。12345var img = new Image(); // 创建img元素img.onload = function()&#123; // 图片加载完才会执行drawImage() drawImage(img, 0, 0);&#125;img.src = 'myImage.png'; // 设置图片源地址##在背景图片上绘制曲线1234567891011121314function draw() &#123; var ctx = document.getElementById('canvas').getContext('2d'); var img = new Image(); img.onload = function()&#123; ctx.drawImage(img,0,0); ctx.beginPath(); ctx.moveTo(30,96); ctx.lineTo(70,66); ctx.lineTo(103,76); ctx.lineTo(170,15); ctx.stroke(); &#125; img.src = 'images/img.png'; // 这里放背景图片 &#125;翻转颜色123456789101112131415161718window.onload = function() &#123; var c=document.getElementById(\"myCanvas\"); var ctx=c.getContext(\"2d\"); var img=document.getElementById(\"tulip\"); ctx.drawImage(img,0,0); // 获取矩形 var imgData=ctx.getImageData(0,0,c.width,c.height); // 反转颜色 for (var i=0;i&lt;imgData.data.length;i+=4)&#123; imgData.data[i]=255-imgData.data[i]; imgData.data[i+1]=255-imgData.data[i+1]; imgData.data[i+2]=255-imgData.data[i+2]; imgData.data[i+3]=255; &#125; ctx.putImageData(imgData,0,0); &#125;","categories":[{"name":"animate","slug":"animate","permalink":"http://www.JiShuXuePai.com/categories/animate/"}],"tags":[]},{"title":"动画的基本步骤","slug":"animate/Canvas动画的基本步骤","date":"2018-05-11T08:14:13.429Z","updated":"2018-05-11T08:14:13.429Z","comments":true,"path":"blog/animate/animate/Canvas动画的基本步骤/","link":"","permalink":"http://www.JiShuXuePai.com/blog/animate/animate/Canvas动画的基本步骤/","excerpt":"","text":"Canvas动画实现思路:清空 canvas每一次绘制都要把上一个图形清空, 用 clearRect()方法清空。保存 canvas 状态如果你要改变一些会改变 canvas 状态的设置（样式，变形之类的），又要在每画一帧之时都是原始状态的话，你需要先保存一下。绘制动画图形重绘动画帧, 一般使用定时器setInterval 和 setTimeout 方法设置动画帧率.恢复 canvas 状态先恢复它，然后重绘下一帧。清除方法clearRect()详解语法123// x: 矩形起点的x坐标 y: 矩形起点的y坐标// width: 矩形宽度 height: 高度ctx.clearRect(x, y, width, height);作用清除指定矩形区域内（以 点 (x, y) 为起点，范围是(width, height) ）所有绘制内容, 可以当做橡皮擦工具.示例: 清除三角形12345678910111213141516 var canvas = document.getElementById(\"canvas\"); var ctx = canvas.getContext(\"2d\");// 绘制三角形 ctx.beginPath(); ctx.moveTo(20,20); ctx.lineTo(200,20); ctx.lineTo(120,120);![](/assets/screenshot-developer.mozilla.org-2017-04-14-14-09-19.png) ctx.closePath(); // 最后一条线要闭合才能形成三角形 ctx.stroke(); // 创建一个100*100大小的橡皮擦, 橡皮擦的左上角在三角形的x:10 y:10 ctx.clearRect(10, 10, 100, 100); // 擦除所有Canvas的内容 // ctx.clearRect(0, 0, canvas.width, canvas.height);","categories":[{"name":"animate","slug":"animate","permalink":"http://www.JiShuXuePai.com/categories/animate/"}],"tags":[]},{"title":"3D动画变换","slug":"animate/3D变换","date":"2018-05-11T08:14:13.424Z","updated":"2018-05-11T08:14:13.424Z","comments":true,"path":"blog/animate/animate/3D变换/","link":"","permalink":"http://www.JiShuXuePai.com/blog/animate/animate/3D变换/","excerpt":"","text":"在2D transform的基础上, 可以使用X, Y, Z坐标来控制物体的运动方向及大小.3D立体的概念常用3D变换的方法123456789101112/*从左一起介绍*/rotateX(45deg) /*沿X轴(水平方向)旋转45° 默认在物体的中心位置*/rotateY(45deg) /*沿Y轴(垂直方向)旋转45° 默认在物体的中心位置*/rotateZ(45deg) /*沿Y轴(垂直方向)旋转45° 默认在物体的中心位置*/translateX(30px) /*沿X轴(水平方向)移动30px*/translateY(30px) /*沿X轴(垂直方向)移动30px*/translateZ(30px) /*沿X轴(纵向)移动30px 正数为放大, 负数为缩小*/3D变换的常用属性属性描述transform-style向元素应用 2D 或 3D 转换transform-origin允许你改变被转换元素的位置perspective规定 3D 元素的透视效果perspective-origin规定 3D 元素的底部位置透视 perspective所有的3D物体在环境中是有景深的, 遵照近大远小的原理实现景深的基本步骤在父级元素上设置透视12transform-style: preserve-3d;perspective: 250px;透视值表示视点与3D场景之间的景深。透视值越小3D效果越明显。perspective-origin物体面朝某个方向, 可以将面朝方向当做自己的视线添加前缀解决浏览器兼容问题12345-webkit-perspective: 1000px;-moz-perspective: 1000px;-ms-perspective: 1000px;-o-perspective: 1000px;perspective: 1000px;","categories":[{"name":"animate","slug":"animate","permalink":"http://www.JiShuXuePai.com/categories/animate/"}],"tags":[]},{"title":"3D切割轮播图","slug":"animate/3D切割轮播图","date":"2018-05-11T08:14:13.295Z","updated":"2018-05-11T08:14:13.298Z","comments":true,"path":"blog/animate/animate/3D切割轮播图/","link":"","permalink":"http://www.JiShuXuePai.com/blog/animate/animate/3D切割轮播图/","excerpt":"","text":"基础HMTL结构12345678910111213141516171819202122232425&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset=\"utf-8\" /&gt; &lt;title&gt;&lt;/title&gt; &lt;style&gt; .center &#123; position: absolute; left:0px; right: 0px; top:0px; bottom: 0px; margin: auto; &#125; .box&#123; width: 980px; height: 500px; &#125; &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=\"box center\"&gt; &lt;/div&gt; &lt;/body&gt;&lt;/html&gt;初始化Dom结构1234567891011121314var itemCount = 5; // 每张图片分割的列数function init()&#123; var box = $(\".box\"); // 添加4个面 for(var i = 0; i &lt; 4; i++)&#123; var slide = $(\"&lt;div class='slide'&gt;&lt;/div&gt;\").appendTo(box); // 将一张大图切割成itemCount块 for(var j=0; j&lt;itemCount; j++)&#123; $(\"&lt;div class='item'&gt;&lt;/div&gt;\").appendTo(slide); &#125; &#125;&#125;设置图片1234.item&#123; height: 100%; position: absolute;&#125;1234567891011121314151617181920function init()&#123; var box = $(\".box\"); // 添加4个面 for(var i = 0; i &lt; 4; i++)&#123; // slide的索引 var slide = $(\"&lt;div class='slide'&gt;&lt;/div&gt;\").appendTo(box); // 将一张大图切割成itemCount块 for(var j=0; j&lt;itemCount; j++)&#123; // item的索引 $(\"&lt;div class='item'&gt;&lt;/div&gt;\") .width() .css(&#123; \"width\": 100/itemCount+\"%\", \"left\": (100/itemCount*j)+\"px\", \"background-image\": \"url(img/\"+i+\".jpg)\", \"background-position\": (100/(itemCount-1)*j)+\"% 0%\" &#125;).appendTo(slide); &#125; &#125;&#125;通过3D变化组成立方体12345.box&#123; /*...*/ transform-style: preserve-3d; perspective: 3000px;&#125;1234567891011121314151617function init()&#123; // ... // 添加4个面 for(var i = 0; i &lt; 4; i++)&#123; // slide的索引 // ... for(var j=0; j&lt;itemCount; j++)&#123; // item的索引 var degree = i*90; $(\"&lt;div class='item'&gt;&lt;/div&gt;\") .css(&#123; // ... \"transform\": \"rotateX(\"+degree+\"deg) translateZ(250px)\" // 通过3D变化组成立方体 &#125;).appendTo(slide); &#125; &#125;&#125;旋转切换面123456789var countRotate = 0; // 旋转的次数function rotate()&#123; countRotate++; $(\".slide\").each(function(indexSlide)&#123; var degree = indexSlide * 90 - 90*countRotate; $(this).find(\".item\").css(\"transform\", \"rotateX(\"+degree+\"deg) translateZ(250px)\"); &#125;);&#125;旋转动画12345.item&#123; height: 100%; position: absolute; transition: transform .4s;&#125;延迟旋转动画123456789function init()&#123; //... $(\"&lt;div class='item'&gt;&lt;/div&gt;\") .css(&#123; // ... \"transition\": \"transform .4s \"+j*0.1+\"s\" // 每一列使用不同的延迟 &#125;)&#125;完整代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset=\"utf-8\" /&gt; &lt;title&gt;&lt;/title&gt; &lt;style&gt; .center &#123; position: absolute; left:0px; right: 0px; top:0px; bottom: 0px; margin: auto; &#125; .box&#123; width: 980px; height: 500px; position: absolute; transform-style: preserve-3d; perspective: 3000px; /*transform: rotateX(10deg) rotateY(10deg);*/ &#125; .item&#123; height: 100%; position: absolute; transition: transform .4s; &#125; &lt;/style&gt; &lt;script type=\"text/javascript\" src=\"js/jquery-3.1.0.js\" &gt;&lt;/script&gt; &lt;script type=\"text/javascript\"&gt; $(function()&#123; var itemCount = 5; // 每张图片分割的列数 // 初始化Dom结构 function init()&#123; var box = $(\".box\"); // 添加4个面 for(var i = 0; i &lt; 4; i++)&#123; // slide的索引 var slide = $(\"&lt;div class='slide'&gt;&lt;/div&gt;\").appendTo(box); // 将一张大图切割成itemCount块 for(var j=0; j&lt;itemCount; j++)&#123; // item的索引 var degree = i*90; $(\"&lt;div class='item'&gt;&lt;/div&gt;\") .css(&#123; \"width\": 100/itemCount+\"%\", \"left\": (100/itemCount*j)+\"px\", \"background-image\": \"url(img/\"+i+\".jpg)\", \"background-position\": (100/(itemCount-1)*j)+\"% 0%\" \"transform\": \"rotateX(\"+degree+\"deg) translateZ(250px)\", // 通过3D变化组成立方体 \"transition\": \"transform .4s \"+j*0.1+\"s\" // 每一列使用不同的延迟 &#125;).appendTo(slide); &#125; &#125; &#125; var countRotate = 0; // 旋转的次数 function rotate()&#123; countRotate++; $(\".slide\").each(function(indexSlide)&#123; var degree = indexSlide * 90 - 90*countRotate; $(this).find(\".item\").css(\"transform\", \"rotateX(\"+degree+\"deg) translateZ(250px)\"); &#125;); &#125; init(); $(\"body\").click(rotate); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=\"box center\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"animate","slug":"animate","permalink":"http://www.JiShuXuePai.com/categories/animate/"}],"tags":[]},{"title":"PHP连接数据库新方法phpPDO","slug":"PHP连接数据库新方法phpPDO","date":"2018-05-11T08:14:13.289Z","updated":"2018-05-11T08:14:13.289Z","comments":true,"path":"blog/php/PHP连接数据库新方法phpPDO/","link":"","permalink":"http://www.JiShuXuePai.com/blog/php/PHP连接数据库新方法phpPDO/","excerpt":"","text":"随着php的发展，PHP开始摒弃一些东西，mysql扩展库就是其一，当然一些东西的摒弃意味着新东西的到来，那么今后连接数据库；除了用mysqli扩展库之外，可以用PDO连接数据库。​PDO数据库的配置PDO(PHP Data Object) 是PHP 5 中新加入的内容，在PHP5.1发行，在PHP5.0的PECL扩展中也可以使用。因此，PHP5.1之后不支持mysql扩展库，而是由PDO代替。PDO_MYSQL：PDO_MYSQL是PDO接口能够完成连接mysql数据库的驱动。PDO的配置：在Apache的安装目录中找到php.ini,去掉”extension=php_pdo.dll”前面的”;”号；若要连接数据库，还需要去掉与PDO相关的数据库扩展如：extension=php_pdo_mysql.dll 等前面的”;”号；重启Apache服务器即可。​PDO操作数据库实例12345678910111213141516171819202122232425262728293031323334&lt;?php $dbh = new PDO('mysql:host=localhost;dbname=access_control', 'root', ''); $dbh-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION); $dbh-&gt;exec('set names utf8'); /*添加*/ $sql = \"INSERT INTO `user` (`login` ,`password`) VALUES (:login, :password)\"; $stmt = $dbh-&gt;prepare($sql); $stmt-&gt;execute(array(':login'=&gt;'kevin2',':password'=&gt;'')); echo $dbh-&gt;lastinsertid(); /*修改*/ $sql = \"UPDATE `user` SET `password`=:password WHERE `user_id`=:userId\"; $stmt = $dbh-&gt;prepare($sql); $stmt-&gt;execute(array(':userId'=&gt;'7', ':password'=&gt;'4607e782c4d86fd5364d7e4508bb10d9')); echo $stmt-&gt;rowCount(); /*删除*/ $sql = \"DELETE FROM `user` WHERE `login` LIKE 'kevin_'\"; //kevin% $stmt = $dbh-&gt;prepare($sql); $stmt-&gt;execute(); echo $stmt-&gt;rowCount(); /*查询*/ $login = 'kevin%'; $sql = \"SELECT * FROM `user` WHERE `login` LIKE :login\"; $stmt = $dbh-&gt;prepare($sql); $stmt-&gt;execute(array(':login'=&gt;$login)); while($row = $stmt-&gt;fetch(PDO::FETCH_ASSOC))&#123; print_r($row); &#125; print_r( $stmt-&gt;fetchAll(PDO::FETCH_ASSOC)); ?&gt;建立连接1234&lt;?php $dbh=newPDO('mysql:host=localhost;port=3306; dbname=test',$user,$pass,array( PDO::ATTR_PERSISTENT=&gt;true));?&gt;持久性链接PDO::ATTR_PERSISTENT=&gt;true​捕捉错误1234567891011&lt;?php try&#123; $dbh=new PDO('mysql:host=localhost;dbname=test',$user,$pass); $dbh-&gt;setAttribute(PDO::ATTR_ERRMODE,PDO::ERRMODE_EXCEPTION); $dbh-&gt;exec(\"SET CHARACTER SET utf8\"); $dbh=null; //断开连接 &#125;catch(PDOException $e)&#123; print\"Error!:\".$e-&gt;getMessage().\"&lt;br/&gt;\"; die(); &#125;?&gt;事务操作123456789101112&lt;?php try&#123; //如果抛出了一个异常，try语句中的脚本将会停止执行，然后马上转向执行catch语句中的脚本 $dbh-&gt;setAttribute(PDO::ATTR_ERRMODE,PDO::ERRMODE_EXCEPTION); $dbh-&gt;beginTransaction();//开启事务 $dbh-&gt;exec(\"insert into staff(id,first,last) values (23,'Joe','Bloggs')\"); $dbh-&gt;exec(\"insert into salarychange(id,amount,changedate) values (23,50000,NOW())\"); $dbh-&gt;commit();//提交事务 &#125;catch(Exception $e)&#123; //处理可能抛出的异常 $dbh-&gt;rollBack();//错误回滚 echo\"Failed:\".$e-&gt;getMessage(); &#125;?&gt;​PDO中常用的方法上面就是一个简单的利用PDO连接数据库的示例，其实和mysql扩展库类似，很容易理解。下面是PDO中常用的方法：PDO::query() 主要用于有记录结果返回的操作，特别是select操作。PDO::exec()主要是针对没有结果集合返回的操作。如insert,update,delete等操作。返回影响行数。PDO::lastInsertId()返回上次插入操作最后一条ID，但要注意：如果用insert into tb(col1,col2) values (v1,v2), (v11,v22)..的方式一次插入多条记录，lastinsertid()返回的只是第一条(v1,v2)插入时的ID,而不是最后一条记录插入的记录ID。PDOStatement::fetch()是用来获取一条记录。配合while来遍历。PDOStatement::fetchAll()是获取所有记录集到一个中。PDOStatement::fetchcolumn([intcolumn_indexnum])用于直接访问列，参数column_indexnum是该列在行中的从0开始索引值，但是，这个方法一次只能取得同一行的一列，只要执行一次，就跳到下一行。因此，用于直接访问某一列时较好用，但要遍历多列就用不上。PDOStatement::rowcount()适用于当用query(“select…”)方法时，获取记录的条数。也可以用于预处理中。PDOStatement::columncount()适用于当用query(“select…”)方法时，获取记录的列数。​注解：1、选fetch还是fetchall？小记录集时，用fetchall效率高，减少从数据库检索次数，但对于大结果集，用fetchall则给系统带来很大负担。数据库要向WEB前端传输量太大反而效率低。​2、fetch()或fetchall()有几个参数：12mixed pdostatement::fetch([int fetch_style [,int cursor_orientation [,int cursor_offset]]])array pdostatement::fetchAll(int fetch_style)​fetch_style参数:1234$row=$rs-&gt;fetchAll(PDO::FETCH_BOTH); //FETCH_BOTH是默认的，可省，返回关联和索引。$row=$rs-&gt;fetchAll(PDO::FETCH_ASSOC); //FETCH_ASSOC参数决定返回的只有关联数组。$row=$rs-&gt;fetchAll(PDO::FETCH_NUM); //返回索引数组$row=$rs-&gt;fetchAll(PDO::FETCH_OBJ); //如果fetch()则返回对象，如果是fetchall(),返回由对象组成的二维数组","categories":[{"name":"php","slug":"php","permalink":"http://www.JiShuXuePai.com/categories/php/"}],"tags":[]},{"title":"2D变换","slug":"animate/2D变换","date":"2018-05-11T08:14:13.289Z","updated":"2018-05-11T08:14:13.289Z","comments":true,"path":"blog/animate/animate/2D变换/","link":"","permalink":"http://www.JiShuXuePai.com/blog/animate/animate/2D变换/","excerpt":"","text":"使用transform来设置对象的2d变形， 是静态，非动画效果， 可以制作斜切的导航栏， 改变对象的大小和宽高, 位移等.例如1div&#123; transform: rotate(180deg); &#125; /*设置div的旋转角度为180度*/1. 常用2D变形方法和属性平面图像的变形, 非3D.属性描述transform-style向元素应用 2D 或 3D 转换。transform-origin允许你改变被转换元素的位置。函数描述translateX(n)定义 2D 转换，沿着 X 轴移动元素。translateY(n)定义 2D 转换，沿着 Y 轴移动元素。scale(x,y)定义 2D缩放转化scaleX(n)定义 2D 缩放转换，改变元素的宽度。scaleY(n)定义 2D 缩放转换，改变元素的高度。rotate(angle)定义 2D 旋转，在参数中规定角度。skewX(angle)定义 2D 倾斜转换，沿着 X 轴。skewY(angle)定义 2D 倾斜转换，沿着 Y 轴。2. 使用前缀解决兼容性问题12345transform: rotate(30deg);-ms-transform: rotate(30deg); /* IE 9 */-webkit-transform: rotate(30deg); /* Safari and Chrome */-o-transform: rotate(30deg); /* Opera */-moz-transform: rotate(30deg); /*火狐*/","categories":[{"name":"animate","slug":"animate","permalink":"http://www.JiShuXuePai.com/categories/animate/"}],"tags":[]},{"title":"JavaScript中的堆与栈 、浅拷贝与深拷贝","slug":"JavaScript中的堆与栈 、浅拷贝与深拷贝 ","date":"2018-05-11T08:14:13.278Z","updated":"2018-05-11T08:14:13.278Z","comments":true,"path":"blog/js/JavaScript中的堆与栈 、浅拷贝与深拷贝 /","link":"","permalink":"http://www.JiShuXuePai.com/blog/js/JavaScript中的堆与栈 、浅拷贝与深拷贝 /","excerpt":"","text":"JavaScript中的堆与栈 、浅拷贝与深拷贝栈（stack）和堆（heap）堆栈是一个在计算机科学中经常使用的抽象数据类型。堆栈中的物体具有一个特性： 最后一个放入堆栈中的物体总是被最先拿出来， 这个特性通常称为后进先出(LIFO)队列。 堆栈中定义了一些操作。 两个最重要的是PUSH和POP。 PUSH操作在堆栈的顶部加入一 个元素。POP操作相反， 在堆栈顶部移去一个元素， 并将堆栈的大小减一。堆（数据结构）：堆可以被看成是一棵树，如：堆排序。栈（数据结构）：一种后进先出的的数据结构。计算机的内存管理机制，也借鉴了堆栈这种数据结构来进行管理。基本类型和引用类型###基本类型存放在栈内存中的简单数据段，数据大小确定，内存空间大小可以分配。js中5种基本数据类型有Undefined、Null、Boolean、Number 和 String，它们是直接按值存放的，所以可以直接访问。基本类型是不可更改的：任何方法都无法更改，对数字和布尔值来说显然如此，而对字符串来说就不那么明显了，因为字符串看起来像是由字符组成的数组，我们期望可以通过指定索引来修改字符串中的字符。实际上，js是禁止这样做的。字符串中所有的方法看上去像是返回了一个修改后的字符串，实际上返回的是一个新的字符串值。例如：123var s='hello'; //定义一个由小写字母组成的文本s.toUpperCase();//返回“HELLO”，但是并没有改变s的值s //=&gt;\"hello\":原始字符串的值并未改变基本类型的比较是值的比较：只有在它们的值相等时它们才相等。如果比较两个单独的字符串，当且仅当它们的长度相等且每个索引的字符都相等时，js才认为它们相等。###引用类型我们通常将对象称为引用类型，存放在堆内存中，变量实际保存的是一个指针（地址），这个指针指向另一个位置。每个空间大小不一样，要根据情况开进行特定的分配。当我们需要访问引用类型（如对象，数组，函数等）的值时，首先从栈中获得该对象的地址指针，然后再从堆内存中取得所需的数据。引用类型的值是可以修改的：1234567var o=&#123;x:1&#125;; //定义一个对象o.x=2; //通过修改对象的属性值来更改对象o.y=3; //再次更改这个对象，给它增加一个新的属性var a=[1,2,3]; //数组也是可修改的a[0]=0; //更改数组的一个元素a[3]=4; //给数组增加一个新元素对象的比较并非值的比较：即使两个对象包含同样的属性及相同的值，它们也是不相等的。各个索引元素完全相等的两个数组也不相等。1234var o=&#123;x:1&#125;,p=&#123;x:1&#125;; //具有相同属性的两个对象o===p //=&gt;false:两个单独的对象永不相等var a=[],b=[]; //两个单独的空数组a===b //=&gt;false:两个单独的数组永不相等对象的值都是引用，对象的比较均是引用的比较：当且仅当它们的引用指向同一个基对象时，它们才相等。12345var a=[]; //定义一个引用空数组的变量avar b=a; //变量b引用同一个数组b[0]=1; //通过变量b来修改引用的数组a[0] //=&gt;1; 变量a也会修改a===b //=&gt;true;a和b引用指向同一个数组，因此它们相等思考题结合上面所讲，思考一下为什么改变b.name的时候，obj1.name也被改变了？而改变c的时候，obj1.age并没有被改变？1234567891011var obj1 = &#123;name:'bangbang',age:18&#125;;var b = obj1; //为变量b的赋值var c = obj1.age; //为变量c的赋值console.log(b.name); //=&gt;bangbangconsole.log(c); //=&gt;18b.name = 'yanniu'; //改变b的值c = 22; //改变c的值console.log(obj1.name); //=&gt;yanniuconsole.log(obj1.age); //=&gt;18##浅拷贝和深拷贝根据上面的陈述，基本类型拷贝的时候只是在内存中又开辟了新的空间，和它的父元素（再次我们称被拷贝的对象为父元素）属于 互不相干的东西，因此深浅拷贝是相对于引用类型的，以便于我们对引用类型父对象的保存。浅拷贝前面已经提到，在定义一个对象或数组时，变量存放的往往只是一个地址。当我们使用对象拷贝时，如果属性是对象或数组时，这时候我们传递的也只是一个地址。因此子对象在访问该属性时，会根据地址回溯到父对象指向的堆内存中，即父子对象发生了关联，两者的属性值会指向同一内存空间。1234var a=[1,2,3]; //定义一个引用空数组的变量avar b=a; //变量b引用同一个数组b[0]=5; //通过变量b来修改引用的数组a[0] //=&gt;5; 变量a也会修改复制一份如上代码，将对象（或数组）赋值给一个变量，仅仅是赋值的引用值：对象本身并没有复制移除。如果你想得到一个对象或数组的副本，则必须显示复制对象的每个属性或数组的每个元素。12345var a=[1,2,3]; //待复制的数组var b=[]; //目标空数组for(var i=0;i&lt;a.length;i++)&#123; //遍历a[]中的每个元素 b[i]=a[i]; //将元素复制到b中&#125;不完全的深拷贝123456789101112131415161718var a = &#123;name:'jone',age:1000,job:['teacher','cook']&#125;;//深拷贝对象function copy(obj)&#123; var copyObj = &#123;&#125;; for(var key in obj)&#123; copyObj[key] = obj[key]; &#125; return copyObj;&#125;var b = copy(a); //b为a的副本b.name = 'cally'; //b对象的name属性console.log(a.name); //=&gt;'jone'发现a对象的name没有影响//那么到此我们的深拷贝完美了么？b.job.push('programer'); //改变b对象的job属性也就是改变数组,console.log(b.job); //=&gt;[ 'teacher', 'cook', 'programer' ]console.log(a.job); //=&gt;[ 'teacher', 'cook', 'programer' ]发现a对象的job被改变了由上面可分析：浅拷贝的时候，当我们改变子对象的数组的时候，父对象竟然也跟着改变，也就是说：子对象和父对象在浅拷贝的时候他们指向同一个内存的数组。深拷贝或许以上并不是我们在实际编码中想要的结果，我们不希望父子对象之间产生关联，那么这时候可以用到深拷贝。既然属性值类型是数组和或象时只会传址，那么我们就用递归来解决这个问题，把父对象中所有属于对象的属性类型都遍历赋给子对象即可。方法一：1234567891011121314151617181920212223242526272829function deepCopy(obj)&#123; var o; switch(typeof obj)&#123; case 'undefined': break; case 'string' : o = obj + '';break; case 'number' : o = obj - 0;break; case 'boolean' : o = obj;break; case 'object' : if(obj === null)&#123; o = null; &#125;else&#123; if(obj instanceof Array)&#123; o = []; for(var i = 0, len = obj.length; i &lt; len; i++)&#123; o.push(deepCopy(obj[i])); &#125; &#125;else&#123; o = &#123;&#125;; for(var k in obj)&#123; o[k] = deepCopy(obj[k]); &#125; &#125; &#125; break; default: o = obj;break; &#125; return o; &#125;方法二：123function deepCopy(obj) &#123; return JSON.parse(JSON.stringify(obj)); &#125;方法三：123456789101112131415161718192021function deepCopy(obj)&#123; var newobj, obj; if (obj.constructor == Object)&#123; newobj = new obj.constructor(); &#125;else&#123; newobj = new obj.constructor(obj.valueOf()); //valueOf()方法返回 Array 对象的原始值 &#125; for(var key in obj)&#123; if ( newobj[key] != obj[key] )&#123; if ( typeof(obj[key]) == 'object' )&#123; newobj[key] = deepCopy(obj[key]); &#125;else&#123; newobj[key] = obj[key]; &#125; &#125; &#125; newobj.toString = obj.toString; newobj.valueOf = obj.valueOf; return newobj; &#125;方法四：123456789101112131415var cloneObj = function(obj)&#123; var str, newobj = obj.constructor === Array ? [] : &#123;&#125;; if(typeof obj !== 'object')&#123; return; &#125; else if(window.JSON)&#123; str = JSON.stringify(obj), //系列化对象 newobj = JSON.parse(str); //还原 &#125; else &#123; for(var i in obj)&#123; newobj[i] = typeof obj[i] === 'object' ? cloneObj(obj[i]) : obj[i]; &#125; &#125; return newobj;&#125;;方法五：1234567891011121314function deepCopy(p,c)&#123; c = c || &#123;&#125;; for (var i in p)&#123; if(p.hasOwnProperty(i))&#123; if(typeof p[i] === 'object')&#123; c[i] = Array.isArray(p[i]) ? [] : &#123;&#125;; deepCopy(p[i],c[i]); &#125;else&#123; c[i] = p[i]; &#125; &#125; &#125; return c; &#125;总结理解深拷贝的递归你就能理解全部的拷贝精髓了。","categories":[{"name":"js","slug":"js","permalink":"http://www.JiShuXuePai.com/categories/js/"}],"tags":[]},{"title":"JavaScript中的内存管理","slug":"JavaScript中的内存管理","date":"2018-05-11T08:14:13.266Z","updated":"2018-05-11T08:14:13.266Z","comments":true,"path":"blog/js/JavaScript中的内存管理/","link":"","permalink":"http://www.JiShuXuePai.com/blog/js/JavaScript中的内存管理/","excerpt":"","text":"JavaScript中的内存管理参考资料：https://developer.mozilla.org/en-US/docs/Web/JavaScript/Memory_Management本文将会讨论内存及JavaScript中的内存管理方式，方便大家在使用JavaScript编码时，更好的应对内存泄漏带来的问题。什么是内存？内存(Memory)也被称为内存储器，其作用是用于暂时存放CPU中的运算数据，以及与硬盘等外部存储器交换的数据。只要计算机在运行中，CPU就会把需要运算的数据调到内存中进行运算，当运算完成后CPU再将结果传送出来，内存的运行也决定了计算机的稳定运行。因此从概念上讲，我们可以把整个计算机内存看作是我们可以读写的一大块空间。很多东西都存储在内存中：程序使用的所有变量和其他数据。程序的代码，包括操作系统的代码。内存的生命周期无论你使用的是什么编程语言，内存生命周期几乎都是一样的：以下是对内存生命周期中每个步骤发生的情况的概述：申请内存（内存分配）内存由操作系统分配，允许程序使用它。在简单的编程语言中，这个过程是开发人员应该处理的一个显式操作。然而，在高级编程语言中，系统会帮助你完成这个操作。根据内存分配的方式分为了静态内存和动态内存，下表总结了静态和动态内存分配之间的区别：静态内存分配在编译时完成，不占用CPU资源; 动态内存分配在运行时，分配与释放都占用CPU资源。静态内存在栈(stack)上分配; 动态内存在堆(heap)上分配。动态内存分配需要指针和引用类型支持，静态不需要。静态内存分配是按计划分配，由编译器负责; 动态内存分配是按需分配，由程序员负责。​使用内存这是程序使用之前申请内存的时间段，你的代码会通过使用分配的变量来对内存进行读取和写入操作。栈内存：在函数中定义的一些基本类型的变量和对象的引用变量都是在函数的栈内存中分配。当在一段代码块中定义一个变量时，系统就在栈中为这个变量分配内存空间，当超过变量的作用域后，系统会自动释放掉为该变量分配的内存空间，该内存空间可以立刻被另作他用。堆内存：堆内存用于存放由new创建的对象和数组。在堆中分配的内存，由虚拟机自动垃圾回收器来管理。在堆中产生了一个数组或者对象后，还可以在栈中定义一个特殊的变量，这个变量的取值等于数组或者对象在堆内存中的首地址，在栈中的这个特殊的变量就变成了数组或者对象的引用变量，以后就可以在程序中使用栈内存中的引用变量来访问堆中的数组或者对象，引用变量相当于为数组或者对象起的一个别名，或者代号。引用变量是普通变量，定义时在栈中分配内存，引用变量在程序运行到作用域外释放。而数组＆对象本身在堆中分配，即使程序运行到使用new产生数组和对象的语句所在地代码块之外，数组和对象本身占用的堆内存也不会被释放，数组和对象在没有引用变量指向它的时候，才变成垃圾，不能再被使用，但是仍然占着内存，在随后的一个不确定的时间被垃圾回收器释放掉。释放内存对于不再需要的内存进行释放的操作，以便确保其变成空闲状态并且可以被再次使用。与分配内存操作一样，这个操作在简单的编程语言中是需要显示操作的。JavaScript的内存管理JavaScript是所谓的垃圾回收语言之一。垃圾回收语言，通过定期检查哪些事先被分配的内存块仍然可以被应用的其他部分“访问”到，来帮助开发者管理内存。换句话说，垃圾回收语言从“哪些内存是仍然被需要的？”到“哪些内存是仍然可以被应用的其他部分访问到的”减少了管理内存的问题。差异很微妙，但是很重要：当只有开发者知道一块分配了的内存将来会被需要，访问不到的内存可以在算法上被决策并标记为系统回收内存。以Google的V8引擎为例，在V8引擎中所有的JavaScript对象都是通过堆来进行内存分配的。当我们在代码中声明变量并赋值时，V8引擎就会在堆内存中分配一部分给这个变量。如果已申请的内存不足以存储这个变量时，V8引擎就会继续申请内存，直到堆的大小达到了V8引擎的内存上限为止（默认情况下，V8引擎的堆内存的大小上限在64位系统中为1464MB，在32位系统中则为732MB）。另外，V8引擎对堆内存中的JAVASCRIPT对象进行分代管理。新生代：新生代即存活周期较短的JavaScript对象，如临时变量、字符串等；老生代：老生代则为经过多次垃圾回收仍然存活，存活周期较长的对象，如主控制器、服务器对象等。在JavaScript中分配内存值的初始化:在为变量赋值的时候，javascript会完成内存的分配工作。123456789101112131415161718var n = 254; // 为数字分配内存var s = 'sessionstack'; // 为字符串分配内存var o = &#123; a: 12, b: null&#125;; // 为对象及其包含的值分配内存var a = [1, null, 'str']; //（类似对象）为数组及其包含的值分配内存。 function f(a) &#123; return a + 3;&#125;// 为函数分配内存（函数是可调用的对象）someElement.addEventListener('click', function()&#123; someElement.style.backgroundColor = 'blue';&#125;, false);// 函数表达式同样也是对象，存在分配内存的情况通过函数调用完成分配:一些函数调用也会导致对象分配：12var d = new Date(); // 分配日期对象var e = document.createElement('div'); // 分配DOM元素一些方法会分配新值或者对象：12345678var s1 = 'sessionstack';var s2 = s1.substr(0, 3); // S2是一个新字符串，因为字符串是不可变的，javascript会为[0, 3]范围的内容创建一个新的字符串。 var a1 = ['str1', 'str2'];var a2 = ['str3', 'str4'];var a3 = a1.concat(a2);//a3是具有4个元素的新数组是a1和a2元素的合并在JavaScript中使用内存基本上在JavaScript中使用分配的内存，意味着在其中读写。这可以通过读取或写入变量或对象属性的值，或者甚至将参数传递给函数来完成。在JavaScript中释放内存大部分内存泄漏问题都是在这个阶段产生的，这个阶段最难的问题就是确定何时不再需要已分配的内存。它通常需要开发人员确定程序中的哪个部分不再需要这些内存，并将其释放。高级语言嵌入了一个名为垃圾收集器的功能，其工作是跟踪内存分配和使用情况，以便在不再需要分配内存的情况下自动释放内存。不幸的是，这个过程无法做到那么准确，因为像某些内存不再需要的问题是不能由算法来解决的。大多数垃圾收集器通过收集不能被访问的内存来工作，例如指向它的变量超出范围的这种情况。然而，这种方式只能收集内存空间的近似值，因为在内存的某些位置可能仍然有指向它的变量，但它却不会被再次访问。由于确定一些内存是否“不再需要”，是不可判定的，所以垃圾收集机制就有一定的局限性。下面将解释主要垃圾收集算法及其局限性的概念。内存引用垃圾收集算法所依赖的主要概念之一就是内存引用。在内存管理情况下，如果一个对象访问变量（可以是隐含的或显式的），则称该对象引用另一个对象。例如，JavaScript对象具有对其原对象（隐式引用）及其属性值（显式引用）的引用。在这种情况下，“对象”的概念超出了javascript传统意义上对象的概念，他还包括函数作用域和全局作用域。使用引用计数算法的垃圾回收这是最简单的垃圾收集算法。引入了 “对象不再需要” 和 “没有其他对象引用该对象” 的概念。当该对象的引用指针变为0的时候，就认为他可以被回收。看看下面的代码：12345678910111213141516var o1 = &#123; o2: &#123; x: 1 &#125;&#125;; // 两个对象被创建，'o1'包含'o2'对象的引用，没有垃圾可以收集。 var o3 = o1; //'o3'为'o1'对象的引用 o1 = 1; //现在'o1'已经不是对象的引用，对象只有'o3'一个引用。var o4 = o3.o2; // 引用指向了对象的属性'o2' o3 = '374'; // 现在对象有零个引用指向它，可以认为是“垃圾收集”， 然而，它的属性'o2'依然被'o4'指向，所以不能被释放。 o4 = null; // 原本'o2'的引用已经取消，'o1' 对象有零个引用指向它，可以被回收。循环引起对象无法释放:该算法有其局限性，当一个对象引用另外一个对象，当形成循环引用时，即时他们不再被需要了，垃圾收集器也不会回收他们。。例如下面的例子，创建两个对象并相互引用，这样会创建一个循环引用。在函数调用之后，它们将超出范围，所以它们实际上是无用的，可以被释放。然而，引用计数算法认为，由于两个对象中的每一个都被引用至少一次，所以两者都不能被垃圾收集机制收回。12345678function f() &#123; var o1 = &#123;&#125;; var o2 = &#123;&#125;; o1.p = o2; // o1 引用 o2 o2.p = o1; // o2 引用 o1，这创造了一个循环。&#125;f();现实中的例子:ie6、7中，在dom对象上使用引用计数的算法，这里会存在内存泄露的问题。12345var div = document.createElement(\"div\");div.onclick = function()&#123; doSomething();&#125;; // div 通过 click 属性引用了事件处理程序// 当事件处理函数中访问了div变量的时候，会形成循环引用，将导致两个对象都不会被回收，造成内存泄露标记和扫描算法为了决定是否需要对象，标记和扫描算法会确定对象是否是活动的。标记和扫描算法经过以下3个步骤：roots：通常，root是代码中引用的全局变量。例如，在JavaScript中，可以充当root的全局变量是“窗口”对象。Node.js中的相同对象称为“全局”。所有root的完整列表由垃圾收集器构建。然后算法会检查所有root和他们的子对象并且标记它们是活动的（即它们不是垃圾）。任何root不能达到的，将被标记为垃圾。最后，垃圾回收器释放所有未标记为活动的内存块，并将该内存返回给操作系统。这个算法比引用计数垃圾收集算法更好。JavaScript垃圾收集（代码/增量/并发/并行垃圾收集）领域中所做的所有改进都是对这种标记和扫描算法的实现改进，但不是对垃圾收集算法本身的改进。在上面的相互引用例子中，在函数调用返回之后，两个对象不再被全局对象可访问的对象引用。因此，它们将被垃圾收集器发现，从而进行收回。即使在对象之间有引用，它们也不能从root目录中访问，从而会被认为是垃圾而收集。优点:周期将不再是一个问题。在“循环引起对象无法释放”的例子中，函数调用结束之后，这两个对象不会被全局对象引用，也不会被全局对象引用的对象引用。因此，他们会被javascript垃圾回收器标记为不可访问对象。这种事情同样也发生在“现实中的例子”中，当div和事件处理函数被垃圾回收器标记为不可访问，他们就会被释放掉。局限:对象需要明确的标记为不可访问，这种标记的方法存在局限，但是我们在编程中被没有接触到他，所以我们很少关心垃圾回收相关的内容。。抵制垃圾收集器的直观行为尽管垃圾收集器使用起来很方便，但它们也有自己的一套标准，其中之一是非决定论。换句话说，垃圾收集是不可预测的。你不能真正知道什么时候进行收集，这意味着在某些情况下，程序会使用更多的内存，虽然这是实际需要的。在其它情况下，在特别敏感的应用程序中，短暂暂停是很可能出现的。尽管非确定性意味着不能确定何时进行集合，但大多数垃圾收集实现了共享在分配期间进行收集的通用模式。如果没有执行分配，大多数垃圾收集会保持空闲状态。如以下情况：大量的分配被执行。大多数这些元素（或所有这些元素）被标记为无法访问（假设我们将一个引用指向不再需要的缓存）。没有进一步的分配执行。在这种情况下，大多数垃圾收集不会做出任何的收集工作。换句话说，即使有不可用的引用需要收集，但是收集器不会进行收集。虽然这并不是严格的泄漏，但仍会导致内存使用率高于平时。总结我们在学习了JavaScript的内存管理后，在js编程时应尽量避免全局变量的使用和减少不必要的引用，防止内存泄漏。在下一篇文章中我们将学习JavaScript的内存泄漏以及处理方法。","categories":[{"name":"js","slug":"js","permalink":"http://www.JiShuXuePai.com/categories/js/"}],"tags":[]},{"title":"git 教学讲义","slug":"Git/git基础知识","date":"2018-05-11T08:14:13.252Z","updated":"2018-05-11T08:14:13.252Z","comments":true,"path":"blog/git/Git/git基础知识/","link":"","permalink":"http://www.JiShuXuePai.com/blog/git/Git/git基础知识/","excerpt":"","text":"第一章 git基础知识第一节 git 简介1. 版本管理当我们在编辑word文档时，可能会在每次修改后会保存一个副本，并注明本次修改了哪些内容，可能会是如下的情况:有时，这个文件可能还需要你的同事帮你继续修改，这样你将一个版本的word文档发给同事修改，与此同时，你又在原版本上做了新的修改，当你同事将修改好的内容发给你时，你会发现将两个版本的word文档整理为一个新版本并不是件轻松的事儿。在团队项目开发时，上述情况非常普遍，这样就出现了类似于svn或git这样的版本工具，这些工具可以帮助我们轻松的实现文件的版本管理以及多人协作的问题。2. 什么是git最优秀的版本控制管理工具高端 大气上档次3. git 特点项目版本管理大型项目多人协作分布式版本工具当项目需要多人协作时，需要git服务器，但是在我们学习或进行项目研究时，如果搭建专门的git服务器显然成本太高，这样就出现了免费的git服务器，可以帮助我们进行代码托管，版本控制以及多人协作，国外比较知名的网站有 github.com ，国内的有 codding.net ，二者在使用上也很类似。第二节 git安装与配置1. git的安装windows 下安装步骤官网下载 ：https://git-scm.com/1 use git from the windows command prompt // 选择默认项2 checkout windows-style,commit unix-style line endings // 使用默认项安装完成后，在命令提示符下输入git , 提示信息为可选参数帮助信息即为安装成功;2. git的配置因为Git是分布式版本控制系统，所以，每个机器都必须自报家门：你的名字和Email地址。否则版本库不知道是哪位程序员进行的版本更新。123$ git config --global user.name \"Your Name\" // 配置用户名$ git config --global user.email \"email@example.com\" // 配置邮箱$ git config --global --list // 查看当前git的配置信息第三节 git的基本概念1.创建版本库什么是版本库呢？版本库又名仓库，英文名repository，你可以简单理解成一个目录，这个目录里面的所有文件都可以被Git管理起来，每个文件的修改、删除，Git都能跟踪，以便任何时刻都可以追踪历史，或者在将来某个时刻可以“还原”。1$ d:/git-test&gt; git init ; // git初始化, 会创建隐藏目录.git 即为git仓库;2.工作区、暂存区、版本库的概念工作区：就是电脑里所创建的目录,这里存放的是项目中所有文件;暂存区: 我们需将工作区文件提交到版本库，才能实现对文件的版本控制，而暂存区时文件从工作区提交到版本库的一个临时存储区域;版本库：工作区有一个隐藏目录.git，就是Git的版本库, 提交到版本库的文件可以被git管理;12345// 1 将文件提交到暂存区$ git add fileName// 2 将文件提交到版本库$ git commit -m '提交注释信息'","categories":[{"name":"git","slug":"git","permalink":"http://www.JiShuXuePai.com/categories/git/"}],"tags":[]},{"title":"我的天，小学生都已经开始学Python了！十年后你还有工作么？","slug":"学习答疑/我的天，小学生都已经开始学Python了！十年后你还有工作么？","date":"2018-05-09T15:10:09.765Z","updated":"2018-05-14T03:26:11.000Z","comments":true,"path":"blog/学习答疑/学习答疑/我的天，小学生都已经开始学Python了！十年后你还有工作么？/","link":"","permalink":"http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/我的天，小学生都已经开始学Python了！十年后你还有工作么？/","excerpt":"","text":"大家听到小学生学Python？这是在开玩笑的吧？小学生学Python干啥用？实际上，山东省最新出版的小学信息技术六年级教材已经加入了Python内容！真是教育从娃娃抓起啊，以后出去都不敢说自己不会Python了….除去给小学生的基础知识普及，高考居然也要考python！浙江省信息技术课程改革方案出台，Python确定进入浙江省信息技术高考，从2018年起浙江省信息技术教材编程语言将会从vb更换为Python。对于在校大学生来说，教育部考试中心于2017年10月11日发布了“关于全国计算机等级考试（NCRE）体系调整”的通知，决定自2018年3月起，在计算机二级考试加入了“Python语言程序设计”科目。可以看出，Python已成为最流行的语言之一。那Python语言为什么如此火爆呢？Python到底是何方神圣呢？Python是一种计算机程序设计语言，又被称为胶水语言，可以用混合编译的方式使用c/c++/java等语言的库。你可能已经听说过很多种流行的编程语言，比如在大学里感觉非常难学的C语言，进入社会非常流行的Java语言，以及适合初学者的Basic语言，非常适合网页编程的Java语言等，Python是他们其中的一种。Python易于阅读和编写，所以经常被称为实用主义，就算是非程序员或开发人员也很容易上手。除此之外，Python还能够满足各种开发需求，为程序员提供了各种选择，如果你习惯了使用python，很容易从一个行业跳到另外一个行业，Python被广泛地用于系统运维、图形处理、数学处理、文本处理、数据库编程、网络编程、web编程、多媒体应用、pymo引擎、爬虫编写、人工智能等，加上人工智能（AI）的持续火热，Python作为通用开发语言，地位也是水涨船高。了解更多","categories":[{"name":"学习答疑","slug":"学习答疑","permalink":"http://www.JiShuXuePai.com/categories/学习答疑/"}],"tags":[]},{"title":"吐槽大会(程序猿版)","slug":"学习答疑/吐槽大会程序员版","date":"2018-05-09T15:09:10.626Z","updated":"2018-05-14T03:26:29.000Z","comments":true,"path":"blog/学习答疑/学习答疑/吐槽大会程序员版/","link":"","permalink":"http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/吐槽大会程序员版/","excerpt":"","text":"来自程序猿心里的呐喊当你有个不懂电脑的老板，长期对我说，加这个功能，加那个功能。我认为挺简单的啊，我会说这个需要时间，他总会说出那句：这技术不行啊，我要会学过1个月程序你就没饭碗了，我的心里一万只羊驼奔腾而过。老板总认为今天提的需求明天就能实现，不就是晚上加会儿班么。槽点：不懂技术老板，宝宝心里苦啊需求变动真是深恶痛绝，尤其是涉及业务逻辑上的更改，牵一发而动全身啊，每改一次，全部系统都要过一遍，改的次数越多，BUG的风险越大。不是不愿意改，很多时候都是用户在朝三暮四折腾而已，答应一次，就会有两次，三次。千万不能让用户形成随意更改需求的习惯，不然一个项目很可能滴滴答答永远做不完。所以我对用户要进行需求更改的时候，要求特别严格，一定要写正式文档说清楚为什么原需求不适应，为什么要改新需求，具体界面、逻辑更改内容是什么。在这里也给接私活的宝宝们，不要在写说明文档环节嫌麻烦，如果说明文档过于简单，那么..宝宝要做好心理准备了。槽点：无穷尽的更改需求,老天赐我一个天使客户吧！以前公司，做了个b2b平台，老板想让我自己利用业余时间把搜索做成百度那样,我要做一个打车软件，嗯，就滴滴打车那样，抄你都不会嘛？槽点：没文化真可怕了解更多","categories":[{"name":"学习答疑","slug":"学习答疑","permalink":"http://www.JiShuXuePai.com/categories/学习答疑/"}],"tags":[]},{"title":"有四类人永远学不会编程？","slug":"学习答疑/有四类人永远学不会编程？","date":"2018-05-09T14:59:22.617Z","updated":"2018-05-14T03:26:15.000Z","comments":true,"path":"blog/学习答疑/学习答疑/有四类人永远学不会编程？/","link":"","permalink":"http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/有四类人永远学不会编程？/","excerpt":"","text":"现在才开始学习编程是不是太晚了当今社会，尤其是在一线城市很多人都觉得全民都在学编程了，编程没有用武之地了，殊不知中国在软件层面才发展多少年，中国的软件产业只是处于开始阶段，有人说现在开始学习编程都找不到工作了，真的是真样嘛？毕竟现代产业都在优化，安卓、IOS刚开始盛行的时候，培训几个月先不管水平高低基本上都能找到还不错的工资，轻松拿上万工资，现在市场逐渐完善，水平可以的才能找到不错的岗位，这才是真正的市场行情物以稀为贵嘛。毕竟实力不行还能轻松找到工作属于市场前期，绝大部分还是要靠自身强大的技术实力。在这给大家传授一些心得，目前市面上培训公司宣传最火热的语言或者行业一定是目前比较好就业的工作，培训公司一般是选择一些短平快的行业或者语言来作为市场的切入点。作为初学者把握住这点，就能明白很多理。为啥很多人喊着C语言不行了，是真的不行了嘛，C语言几乎是所有语言的祖师爷，你能说老祖宗不行了？肯定不是。C语言相对来说入门不是那么轻松，而且达到就业的水准需要真懂这门语言，这种语言其实对于零基础的小白来说，确实在学习上有一定的难度，目前市面上也很少有培训机构喜欢做，废了很多劲把人培训出来还很有可能找不到工作，出力不讨好的事情没有人愿意做，所以直接培训C语言并不是一个明智的选择。所以学习编程要懂得体味市场行情。有四类人永远学不会编程？1.专注力不够，没有一颗持之以恒的心有很多人开始学编程热度很强，刚刚入门时候相对比较简单觉得写代码这就是这么回事，慢慢就会有点小浮躁了，到了后边学到难理解的，又开始怀疑人生。基本上来回几下就被弄得焦头烂额了，其实编程的过程就是折腾的过程，没有折腾学不到的真本事。如果一个人做什么事情都是3分钟热度，那么你会发现他永远在不断的找工作、不断的更换行业。建议：学习编程一定要有相对的耐心和定力，正在自学的或者想学编程的准备好这份耐心了没。2.没有一个良好的学习习惯的人大多数想学习编程的同学，最初的学习方式基本上都是去下载很多的学习资料，大量的视频和电子书，很多很多个G。然后搞一个视频就开始了自己编程学习之路，看了一段时间有点听不懂了，换个视频继续，又遇到不懂得，开始电子书的学习之路。这样下去基本上几个月过去了，弄得自己思维都乱了方寸。其实，对一个初学者来说，学习资料用处并不是最大的，而是需要有一个懂行的人帮你梳理思路，并引导你在学习的过程中可以主动去思考问题的过程。建议：学习编程基本上需要制定一个学习大纲，这个学习大纲需要规划好时间和目标，以书本为主线，视频为辅助，并且有一个懂行的人在旁辅导，这样更容易养成良好的学习方法和学习习惯。3.只说不做的人编程是一个熟能生巧的工种，不动手去写代码啥也搞不定，每天只是通过看文章和视频就想学会一门编程语言是不可能的，更别异想天开的想做属于自己的产品了，实践不是对着视频把代码在电脑上敲上一遍就搞定了，而是需要自己独立去完成书本上或者视频上的代码，还要学会举一反三。这只是完成了最基本的一些实践，等最基本的实践完成后还可以玩的再高深一点，要知道从哪里搞到实践项目，在学习过程中搞点实际项目也不是很现实，但是可以拿一些真正项目实践过的代码去分析去研究，最适合这种的就是开源社区中的代码了，初次做开源可能很多人觉得要学的东西太多了，感觉自己像是白痴，这属于正常现象，谁不是从白痴开始的呐，要懂得善假于物。先去尝试看懂代码然后再去尝试修改代码，一步一个脚印编程功底就这样慢慢积累出来了。建议：一定要去实践，还要知道如何实践，找到身边从事相关行业的朋友多要些真实项目去分析，我相信每个同学身边都会有那么几个程序猿的朋友。4.总给自己找理由的人在学习编程的过程中难免会有些枯燥乏味，所以要讲究点策略，或者找点什么能够激励下自己。其实我们可以找点榜样得力量，这就是为什么要找个带自己的，起码在心理有个期盼会觉得什么时候能达到像谁一样厉害，有时候榜样的力量是很强大的，所以在学习过程中要设置一个这样的榜样，很多人说了茫茫人海去哪找自己的榜样。现在这么多写技术博客的大牛或者做自媒体的高手，总能找到热心并且愿意帮助你的人，只要你真的用心去做就一定可以做到，而不是一味的要去寻找不去做的理由。建议：找到自己学习的标杆，打造属于自己的知识体系，编程细节繁多，如何把这些零散的东西穿插起来需要一个体系开支撑，这就是常说的知识体系。很多人会问如果按照你的建议去做不止是编程能学会，别的也一样可以学会了，答案是：是的。如果真能做到我建议中提到的几点，那么编程一定能够学的很好。最后送给大家一碗鸡汤：生命太过短暂，今天放弃了明天不一定能得到，学习新东西就需要有只争朝夕的魄力。了解更多","categories":[{"name":"学习答疑","slug":"学习答疑","permalink":"http://www.JiShuXuePai.com/categories/学习答疑/"}],"tags":[]},{"title":"零基础入门学习什么编程语言比较合适？","slug":"学习答疑/零基础入门学习什么编程语言比较合适？","date":"2018-05-09T14:13:21.476Z","updated":"2018-05-14T03:26:42.000Z","comments":true,"path":"blog/学习答疑/学习答疑/零基础入门学习什么编程语言比较合适？/","link":"","permalink":"http://www.JiShuXuePai.com/blog/学习答疑/学习答疑/零基础入门学习什么编程语言比较合适？/","excerpt":"","text":"首先，我们普及一下编程语言的基础知识。用任何编程语言来开发程序，都是为了让计算机干活，比如编写一篇文章，下载一首MP3等，而计算机干活的CPU只认识机器的指令，所以，尽管不同的编程语言差异极大，最后都得“翻译”成CPU可以执行的机器指令。而不同的编程语言，干同一个活，编写的代码量，差距也很大。比如，当我们想完成同一个任务，用C语言要写1000行代码，用Java只需要写100行代码，而Python可能只要20行代码。在这姑且分析下，选择用什么语言决定性的因素太多了，每个人的情况各不一样，所以做出的决定也各不相同。如果选择的出发点不一样选择的结果也是不相同的。代码是我的信仰，希望在编程界做出一番事业有自己的信仰和梦想，自己早就做好了未来的规划，那最初选择的语言一定是最基础的语言，选择的是能够都对未来的编程之路有很大帮助的编程语言，反应到现实中的编程语言C语言最为典型，在学习C语言之前一定是有意识的把计算机相关的理论知识研究一遍。了解计算机基本的构成以及各个部件是如何协调工作的，了解事件如何触发，比如中断原理等，还有常见的进制之间的转化这些计算机的运算基础。完全出于自己的兴趣爱好有很多人在内心深处都打着自己的小算盘，将来我一定要做个什么样子的产品，所以在选择的时候基本上是围绕产品的基本属性因子有选择性的学习，这类人相比第一类人人数上已经少了许多，算是情怀主义编程者。这类人选择的编程语言就不带有规则性了，基本上一人一种，基本上属于带着感情学习的入门者，兴趣占据很大份。这类人在工作过程中更加容易转到别的岗位，因为一旦自己的目标已经达成，那么很快调整自己的战略方向切换到下一个主题。从语言覆盖范围来看，学习java占据数目会多一点。从零开始转行做IT，快速找到一份工作现实很残酷如果生活都是问题了，那么时间是主要的制约因素，所以在选择的时候速成方面的编程语言就比较容易受到欢迎。在这方面前端语言以及python都是不错的选择，只要进入编程思维状态能很快学到东西。目前大部分学习编程的入口都集中在这个区域，毕竟大家直接学习编程直接源动力就是能够挣点钱填饱肚子，而且相对来讲写代码在中国来说起码是高工资了，目前人工智能（AI）、大数据的崛起，而这些都是用Python语言来编写的，对于零基础的同学来说Python是一个不错的选择。所以同样是零基础入门学习，自身的情况不一样选择也会不一样，先认清楚自己想要什么样的结果，然后客观的分析做出相对合理的规划，选择自然就不那么纠结了。了解更多","categories":[{"name":"学习答疑","slug":"学习答疑","permalink":"http://www.JiShuXuePai.com/categories/学习答疑/"}],"tags":[]}]}